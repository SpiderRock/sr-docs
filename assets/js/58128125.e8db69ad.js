"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([["37072"],{8050:function(e,r,t){t.r(r),t.d(r,{default:()=>h,frontMatter:()=>i,metadata:()=>s,assets:()=>l,toc:()=>o,contentTitle:()=>c});var s=JSON.parse('{"id":"MessageSchemas/Schema/SRSE Products/SRTrade/SRPairLeggerLegState/SRPairLeggerLegState","title":"SRPairLeggerLegState","description":"V8 Message Definiton","source":"@site/versioned_docs/version-8.5.9.4/MessageSchemas/Schema/SRSE Products/SRTrade/SRPairLeggerLegState/SRPairLeggerLegState.md","sourceDirName":"MessageSchemas/Schema/SRSE Products/SRTrade/SRPairLeggerLegState","slug":"/MessageSchemas/Schema/SRSE Products/SRTrade/SRPairLeggerLegState/","permalink":"/docs/8.5.9.4/MessageSchemas/Schema/SRSE Products/SRTrade/SRPairLeggerLegState/","draft":false,"unlisted":false,"tags":[],"version":"8.5.9.4","frontMatter":{},"sidebar":"messageSchemasSidebar","previous":{"title":"SROmniOrder","permalink":"/docs/8.5.9.4/MessageSchemas/Schema/SRSE Products/SRTrade/SROmniOrder/"},"next":{"title":"SRPairLeggerOrder","permalink":"/docs/8.5.9.4/MessageSchemas/Schema/SRSE Products/SRTrade/SRPairLeggerOrder/"}}'),n=t("52676"),d=t("91503");let i={},c=void 0,l={},o=[{value:"METADATA",id:"metadata",level:3},{value:"Table Definition",id:"table-definition",level:3},{value:"PRIMARY KEY DEFINITION (Unique)",id:"primary-key-definition-unique",level:3},{value:"CREATE TABLE EXAMPLE QUERY",id:"create-table-example-query",level:3},{value:"SELECT TABLE EXAMPLE QUERY",id:"select-table-example-query",level:3},{value:"Doc Columns Query",id:"doc-columns-query",level:3}];function a(e){let r={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.p,{children:(0,n.jsx)(r.a,{href:"../../../Topics/strategy-legger/SpdrPairLeggerLegState",children:"V8 Message Definiton"})}),"\n",(0,n.jsx)(r.h3,{id:"metadata",children:"METADATA"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Attribute"}),(0,n.jsx)(r.th,{children:"Value"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Topic"}),(0,n.jsx)(r.td,{children:"5355-strategy-legger"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"MLink Token"}),(0,n.jsx)(r.td,{children:"Internal"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Product"}),(0,n.jsx)(r.td,{children:"SRTrade"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"accessType"}),(0,n.jsx)(r.td,{children:"SELECT"})]})]})]}),"\n",(0,n.jsx)(r.h3,{id:"table-definition",children:"Table Definition"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Field"}),(0,n.jsx)(r.th,{children:"Type"}),(0,n.jsx)(r.th,{children:"Key"}),(0,n.jsx)(r.th,{children:"Default Value"}),(0,n.jsx)(r.th,{children:"Comment"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"orderNumber"}),(0,n.jsx)(r.td,{children:"BIGINT"}),(0,n.jsx)(r.td,{children:"PRI"}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"PairLegger order number"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"side"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum - BuySell"})}),(0,n.jsx)(r.td,{children:"PRI"}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"spdrSource"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/SpdrSource",children:"enum - SpdrSource"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"accnt"}),(0,n.jsx)(r.td,{children:"VARCHAR(16)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"SR trading account"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"clientFirm"}),(0,n.jsx)(r.td,{children:"VARCHAR(16)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"SR client firm"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"secKey_at"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"leg Security can be a stock future optExpiry or option must be the same for all legs cp can be call put or both if secType  optExpiry"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"secKey_ts"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"leg Security can be a stock future optExpiry or option must be the same for all legs cp can be call put or both if secType  optExpiry"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"secKey_tk"}),(0,n.jsx)(r.td,{children:"VARCHAR(12)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"leg Security can be a stock future optExpiry or option must be the same for all legs cp can be call put or both if secType  optExpiry"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"secKey_yr"}),(0,n.jsx)(r.td,{children:"SMALLINT UNSIGNED"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"leg Security can be a stock future optExpiry or option must be the same for all legs cp can be call put or both if secType  optExpiry"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"secKey_mn"}),(0,n.jsx)(r.td,{children:"TINYINT UNSIGNED"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"leg Security can be a stock future optExpiry or option must be the same for all legs cp can be call put or both if secType  optExpiry"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"secKey_dy"}),(0,n.jsx)(r.td,{children:"TINYINT UNSIGNED"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"leg Security can be a stock future optExpiry or option must be the same for all legs cp can be call put or both if secType  optExpiry"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"secKey_xx"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"leg Security can be a stock future optExpiry or option must be the same for all legs cp can be call put or both if secType  optExpiry"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"secKey_cp"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/CallPut",children:"enum - CallPut"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'Call'"}),(0,n.jsx)(r.td,{children:"leg Security can be a stock future optExpiry or option must be the same for all legs cp can be call put or both if secType  optExpiry"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"secType"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/LeggerSecType",children:"enum - LeggerSecType"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"note stockstock stockfuture futurefuture optExpiryoptExpiry or optionoption are allowed"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"ratio"}),(0,n.jsx)(r.td,{children:"SMALLINT UNSIGNED"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"leg ratio note can be in shares contracts vega wvega tvega or wtvega terms optExpiry must be in one of the xVega choices"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"ratioType"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/LegRatioType",children:"enum - LegRatioType"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"legPriority"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/LegPriority",children:"enum - LegPriority"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"Lead legs fill first note if there are no lead legs the first leg in the list will be treated as the lead leg"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"legLimitType"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/LeggerLimitType",children:"enum - LeggerLimitType"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"leg limit type stock Price future Price optExpiry AtmVol only option Price or StrikeVol"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"posType"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/PositionType",children:"enum - PositionType"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"note must be Auto for optExpiry not required for stock"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"ssaleFlag"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum - ShortSaleFlag"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"only for stock legs and autohedging"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"hedgeInstrument"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/HedgeInst",children:"enum - HedgeInst"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"hedgeSecKey_at"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"autohedge instrument can be a TickerKey stock or ExpiryKey future required for Stock and Future"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"hedgeSecKey_ts"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"autohedge instrument can be a TickerKey stock or ExpiryKey future required for Stock and Future"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"hedgeSecKey_tk"}),(0,n.jsx)(r.td,{children:"VARCHAR(12)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"autohedge instrument can be a TickerKey stock or ExpiryKey future required for Stock and Future"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"hedgeSecKey_yr"}),(0,n.jsx)(r.td,{children:"SMALLINT UNSIGNED"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"autohedge instrument can be a TickerKey stock or ExpiryKey future required for Stock and Future"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"hedgeSecKey_mn"}),(0,n.jsx)(r.td,{children:"TINYINT UNSIGNED"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"autohedge instrument can be a TickerKey stock or ExpiryKey future required for Stock and Future"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"hedgeSecKey_dy"}),(0,n.jsx)(r.td,{children:"TINYINT UNSIGNED"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"autohedge instrument can be a TickerKey stock or ExpiryKey future required for Stock and Future"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"orderSize"}),(0,n.jsx)(r.td,{children:"INT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"working size from parentBrkrStateorderSize sum of all individual orders in cnshare terms"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"orderActiveSize"}),(0,n.jsx)(r.td,{children:"INT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"order active size from parentBrkrStateorderActiveSize sum of all individual orders in cnshare terms"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"numActiveBrkrs"}),(0,n.jsx)(r.td,{children:"SMALLINT UNSIGNED"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"number of parent order legs with legactiveSize  legcumFillQty"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"numAvailLegBrkrs"}),(0,n.jsx)(r.td,{children:"SMALLINT UNSIGNED"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"number of parent order legs created"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"cumFillQty"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"in LeggerLimitType terms"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"avgFillPrc"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"activeSprdSize"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"active size sum of all individual orders in ratio type terms"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"legStatus"}),(0,n.jsx)(r.td,{children:"TINYTEXT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"targetState"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/LeggerTargetState",children:"enum - LeggerTargetState"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"targetSprdSize"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"targetLimitPrice"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"bestBidPrc"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"leg best bid price in terms of limit type"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"bestAskPrc"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"leg best ask price"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"bestBidSize"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"leg best bid size in terms of ratio type"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"bestAskSize"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"leg best ask size"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"numNewOrders"}),(0,n.jsx)(r.td,{children:"INT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"number of parent orders published"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"numLimitUpdates"}),(0,n.jsx)(r.td,{children:"INT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"number of parent limit messages published"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"timestamp"}),(0,n.jsx)(r.td,{children:"DATETIME(6)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'1900-01-01 00:00:00.000000'"}),(0,n.jsx)(r.td,{})]})]})]}),"\n",(0,n.jsx)(r.h3,{id:"primary-key-definition-unique",children:"PRIMARY KEY DEFINITION (Unique)"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Field"}),(0,n.jsx)(r.th,{children:"Sequence"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"orderNumber"}),(0,n.jsx)(r.td,{children:"1"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"side"}),(0,n.jsx)(r.td,{children:"2"})]})]})]}),"\n",(0,n.jsx)(r.h3,{id:"create-table-example-query",children:"CREATE TABLE EXAMPLE QUERY"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-sql",children:"CREATE TABLE `SRTrade`.`MsgSRPairLeggerLegState` (\n    `orderNumber` BIGINT NOT NULL DEFAULT 0 COMMENT 'PairLegger order number',\n    `side` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'None',\n    `spdrSource` ENUM('None','SpdrTicket','SpdrSingle','SRSE','FIX','HedgeTool','TradeHedge','OpenHedge','AutoHedge','Orphan','RiskManager','OrderManager','ManagedOrder','RFQRespSrvr','Legger','SRSEDrop','FixDrop','TicketDrop','SysTest','RFRResponse','AllocOmni','AllocClient','CertGateway','MLegResponse','LeggerX','DropManager','AutoHedgeSrvr','AuctionStrategySrvr','AllocBlockFace','AllocBlockCust','IceChatGateway','EXS2SRC','MLinkResponse','AutoResponderVD','AutoResponderRC','AutoResponderSN','AutoResponderBX','MLink','SymChatGateway') NOT NULL DEFAULT 'None',\n    `accnt` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'SR trading account',\n    `clientFirm` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'SR client firm',\n    `secKey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'leg Security (can be a stock, future, optExpiry, or option) [must be the same for all legs] [cp can be call, put, or both if secType = optExpiry]',\n    `secKey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'leg Security (can be a stock, future, optExpiry, or option) [must be the same for all legs] [cp can be call, put, or both if secType = optExpiry]',\n    `secKey_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'leg Security (can be a stock, future, optExpiry, or option) [must be the same for all legs] [cp can be call, put, or both if secType = optExpiry]',\n    `secKey_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'leg Security (can be a stock, future, optExpiry, or option) [must be the same for all legs] [cp can be call, put, or both if secType = optExpiry]',\n    `secKey_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'leg Security (can be a stock, future, optExpiry, or option) [must be the same for all legs] [cp can be call, put, or both if secType = optExpiry]',\n    `secKey_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'leg Security (can be a stock, future, optExpiry, or option) [must be the same for all legs] [cp can be call, put, or both if secType = optExpiry]',\n    `secKey_xx` DOUBLE NOT NULL DEFAULT 0 COMMENT 'leg Security (can be a stock, future, optExpiry, or option) [must be the same for all legs] [cp can be call, put, or both if secType = optExpiry]',\n    `secKey_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call' COMMENT 'leg Security (can be a stock, future, optExpiry, or option) [must be the same for all legs] [cp can be call, put, or both if secType = optExpiry]',\n    `secType` ENUM('None','Stock','Future','OptExpiry','Option') NOT NULL DEFAULT 'None' COMMENT 'note: stock/stock, stock/future, future/future, optExpiry/optExpiry or option/option are allowed',\n    `ratio` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'leg ratio (note: can be in shares, contracts, vega, wvega, tvega, or wtvega terms) (optExpiry must be in one of the xVega choices)',\n    `ratioType` ENUM('None','Qty','Vega','WVega','TVega','WtVega') NOT NULL DEFAULT 'None',\n    `legPriority` ENUM('None','Lead') NOT NULL DEFAULT 'None' COMMENT 'Lead leg(s) fill first (note: if there are no lead legs the first leg in the list will be treated as the lead leg)',\n    `legLimitType` ENUM('None','Prc','StrikeVol','AtmVol') NOT NULL DEFAULT 'None' COMMENT 'leg limit type (stock: Price, future: Price, optExpiry: AtmVol only, option: Price or StrikeVol)',\n    `posType` ENUM('None','Opening','Closing','Auto') NOT NULL DEFAULT 'None' COMMENT 'note: must be Auto for optExpiry (not required for stock)',\n    `ssaleFlag` ENUM('None','Long','Short','Exempt','Auto','Open','Close','Cover','NA') NOT NULL DEFAULT 'None' COMMENT 'only for stock legs (and autohedging)',\n    `hedgeInstrument` ENUM('None','Default','FrontMonth','Stock','Future') NOT NULL DEFAULT 'None',\n    `hedgeSecKey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'autohedge instrument (can be a TickerKey (stock) or ExpiryKey (future)) [required for Stock and Future]',\n    `hedgeSecKey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'autohedge instrument (can be a TickerKey (stock) or ExpiryKey (future)) [required for Stock and Future]',\n    `hedgeSecKey_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'autohedge instrument (can be a TickerKey (stock) or ExpiryKey (future)) [required for Stock and Future]',\n    `hedgeSecKey_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'autohedge instrument (can be a TickerKey (stock) or ExpiryKey (future)) [required for Stock and Future]',\n    `hedgeSecKey_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'autohedge instrument (can be a TickerKey (stock) or ExpiryKey (future)) [required for Stock and Future]',\n    `hedgeSecKey_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'autohedge instrument (can be a TickerKey (stock) or ExpiryKey (future)) [required for Stock and Future]',\n    `orderSize` INT NOT NULL DEFAULT 0 COMMENT 'working size (from parentBrkrState.orderSize) (sum of all individual orders; in cn/share terms)',\n    `orderActiveSize` INT NOT NULL DEFAULT 0 COMMENT 'order active size (from parentBrkrState.orderActiveSize) (sum of all individual orders; in cn/share terms)',\n    `numActiveBrkrs` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'number of parent order legs with leg.activeSize > leg.cumFillQty',\n    `numAvailLegBrkrs` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'number of parent order legs created',\n    `cumFillQty` DOUBLE NOT NULL DEFAULT 0 COMMENT 'in LeggerLimitType terms',\n    `avgFillPrc` DOUBLE NOT NULL DEFAULT 0,\n    `activeSprdSize` DOUBLE NOT NULL DEFAULT 0 COMMENT 'active size (sum of all individual orders; in ratio type terms)',\n    `legStatus` TINYTEXT NOT NULL DEFAULT '',\n    `targetState` ENUM('None','Take','Post') NOT NULL DEFAULT 'None',\n    `targetSprdSize` FLOAT NOT NULL DEFAULT 0,\n    `targetLimitPrice` FLOAT NOT NULL DEFAULT 0,\n    `bestBidPrc` FLOAT NOT NULL DEFAULT 0 COMMENT 'leg best bid price (in terms of limit type)',\n    `bestAskPrc` FLOAT NOT NULL DEFAULT 0 COMMENT 'leg best ask price',\n    `bestBidSize` FLOAT NOT NULL DEFAULT 0 COMMENT 'leg best bid size (in terms of ratio type)',\n    `bestAskSize` FLOAT NOT NULL DEFAULT 0 COMMENT 'leg best ask size',\n    `numNewOrders` INT NOT NULL DEFAULT 0 COMMENT 'number of parent orders published',\n    `numLimitUpdates` INT NOT NULL DEFAULT 0 COMMENT 'number of parent limit messages published',\n    `timestamp` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000',\n    PRIMARY KEY USING HASH (`orderNumber`,`side`)\n) ENGINE=SRSE DEFAULT CHARSET=LATIN1 COMMENT='';\n\n"})}),"\n",(0,n.jsx)(r.h3,{id:"select-table-example-query",children:"SELECT TABLE EXAMPLE QUERY"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-sql",children:"SELECT\n    `orderNumber`,\n    `side`,\n    `spdrSource`,\n    `accnt`,\n    `clientFirm`,\n    `secKey_at`,\n    `secKey_ts`,\n    `secKey_tk`,\n    `secKey_yr`,\n    `secKey_mn`,\n    `secKey_dy`,\n    `secKey_xx`,\n    `secKey_cp`,\n    `secType`,\n    `ratio`,\n    `ratioType`,\n    `legPriority`,\n    `legLimitType`,\n    `posType`,\n    `ssaleFlag`,\n    `hedgeInstrument`,\n    `hedgeSecKey_at`,\n    `hedgeSecKey_ts`,\n    `hedgeSecKey_tk`,\n    `hedgeSecKey_yr`,\n    `hedgeSecKey_mn`,\n    `hedgeSecKey_dy`,\n    `orderSize`,\n    `orderActiveSize`,\n    `numActiveBrkrs`,\n    `numAvailLegBrkrs`,\n    `cumFillQty`,\n    `avgFillPrc`,\n    `activeSprdSize`,\n    `legStatus`,\n    `targetState`,\n    `targetSprdSize`,\n    `targetLimitPrice`,\n    `bestBidPrc`,\n    `bestAskPrc`,\n    `bestBidSize`,\n    `bestAskSize`,\n    `numNewOrders`,\n    `numLimitUpdates`,\n    `timestamp`\nFROM `SRTrade`.`MsgSRPairLeggerLegState`\nWHERE \n    /* Replace with a BIGINT */ \n    `orderNumber` = 1234567890\n  AND\n    /* Replace with a ENUM('None','Buy','Sell') */ \n    `side` = 'None';\n"})}),"\n",(0,n.jsx)(r.h3,{id:"doc-columns-query",children:"Doc Columns Query"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-sql",children:"SELECT * FROM SRTrade.doccolumns WHERE TABLE_NAME='SRPairLeggerLegState' ORDER BY ordinal_position ASC;\n"})})]})}function h(e={}){let{wrapper:r}={...(0,d.a)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},91503:function(e,r,t){t.d(r,{Z:function(){return c},a:function(){return i}});var s=t(75271);let n={},d=s.createContext(n);function i(e){let r=s.useContext(d);return s.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),s.createElement(d.Provider,{value:r},e.children)}}}]);