"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([["94689"],{94646:function(e,t,s){s.r(t),s.d(t,{default:()=>x,frontMatter:()=>l,metadata:()=>n,assets:()=>o,toc:()=>h,contentTitle:()=>a});var n=JSON.parse('{"id":"MessageSchemas/Schema/Topics/liquidity-notice/AuctionNotice","title":"AuctionNotice","description":"METADATA","source":"@site/versioned_docs/version-8.5.9.4/MessageSchemas/Schema/Topics/2450-liquidity-notice/AuctionNotice.md","sourceDirName":"MessageSchemas/Schema/Topics/2450-liquidity-notice","slug":"/MessageSchemas/Schema/Topics/liquidity-notice/AuctionNotice","permalink":"/docs/8.5.9.4/MessageSchemas/Schema/Topics/liquidity-notice/AuctionNotice","draft":false,"unlisted":false,"tags":[],"version":"8.5.9.4","frontMatter":{"title":"AuctionNotice"},"sidebar":"messageSchemasSidebar","previous":{"title":"2450-liquidity-notice","permalink":"/docs/8.5.9.4/MessageSchemas/Schema/Topics/liquidity-notice/"},"next":{"title":"AuctionNoticeBX","permalink":"/docs/8.5.9.4/MessageSchemas/Schema/Topics/liquidity-notice/AuctionNoticeBX"}}'),r=s("52676"),i=s("91503"),d=s("71386"),c=s("9641");let l={title:"AuctionNotice"},a="Schema: AuctionNotice (ID: 2465)",o={},h=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"REPEATING FIELDS",id:"repeating-fields",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3}];function u(e){let t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsxs)(t.h1,{id:"schema-auctionnotice-id-2465",children:["Schema: AuctionNotice ",(0,r.jsx)("span",{className:"small-text",children:"(ID: 2465)"})]})}),"\n",(0,r.jsx)(t.h3,{id:"metadata",children:"METADATA"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Attribute"}),(0,r.jsx)(t.th,{children:"Value"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Topic"}),(0,r.jsx)(t.td,{children:"2450-liquidity-notice"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"MLink Token"}),(0,r.jsx)(t.td,{children:"SRATS"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"SRSE Product"}),(0,r.jsx)(t.td,{children:"SRTrade"})]})]})]}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Note:"})," The symbol ",(0,r.jsx)(t.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"body",children:"BODY"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"#"}),(0,r.jsx)(t.th,{children:"Field"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Default Value"}),(0,r.jsx)(t.th,{children:"Comment"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"11="}),(0,r.jsx)(t.td,{children:"noticeNumber"}),(0,r.jsx)(t.td,{children:"long"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"107"}),(0,r.jsx)(t.td,{children:"ticker"}),(0,r.jsx)(t.td,{children:"TickerKey"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"underlier ticker"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"106"}),(0,r.jsx)(t.td,{children:"tradeDate"}),(0,r.jsx)(t.td,{children:"DateKey"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"104"}),(0,r.jsx)(t.td,{children:"isTestAuction"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"if yes, auction is a test auction (not a prod/live auction)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"186"}),(0,r.jsx)(t.td,{children:"shortCode"}),(0,r.jsx)(t.td,{children:"string(10)"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"auction short code (unique per day) (block auctions only) (can be used to find auctions on SR tools)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"100"}),(0,r.jsx)(t.td,{children:"auctionType"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../../../Enums/AuctionType",children:"enum : AuctionType"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"101"}),(0,r.jsx)(t.td,{children:"auctionEvent"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../../../Enums/AuctionEvent",children:"enum : AuctionEvent"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"169"}),(0,r.jsx)(t.td,{children:"srcAuctionID"}),(0,r.jsx)(t.td,{children:"string(20)"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"auction ID as known by the auction source (empty for SRC)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"170"}),(0,r.jsx)(t.td,{children:"srcAuctionType"}),(0,r.jsx)(t.td,{children:"string(4)"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"103"}),(0,r.jsx)(t.td,{children:"auctionSource"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../../../Enums/AuctionSource",children:"enum : AuctionSource"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"source of the auction notice (eg. SRC, MIAX, etc.)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"108"}),(0,r.jsx)(t.td,{children:"industry"}),(0,r.jsx)(t.td,{children:"text1"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"industry string"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"109"}),(0,r.jsx)(t.td,{children:"symbolType"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../../../Enums/SymbolType",children:"enum : SymbolType"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"110"}),(0,r.jsx)(t.td,{children:"uAvgDailyVlm"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"underlier average daily trading volume"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"111"}),(0,r.jsx)(t.td,{children:"custSide"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"if available"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"112"}),(0,r.jsx)(t.td,{children:"custQty"}),(0,r.jsx)(t.td,{children:"int"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"113"}),(0,r.jsx)(t.td,{children:"custPrc"}),(0,r.jsx)(t.td,{children:"double"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"public cust price"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"114"}),(0,r.jsx)(t.td,{children:"hasCustPrc"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"187"}),(0,r.jsx)(t.td,{children:"custNbboCap"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../../../Enums/NbboCap",children:"enum : NbboCap"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"indicates if cust price is capped at NBBO (or 1, 5, 10 pennies through)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"162"}),(0,r.jsx)(t.td,{children:"custFirmType"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../../../Enums/FirmType",children:"enum : FirmType"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"cust firm type (if disclosed)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"163"}),(0,r.jsx)(t.td,{children:"custAgentMPID"}),(0,r.jsx)(t.td,{children:"string(6)"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"cust agent exchange member initiating the auction (if disclosed)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"115"}),(0,r.jsx)(t.td,{children:"custClientFirm"}),(0,r.jsx)(t.td,{children:"string(16)"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"cust client firm (if disclosed)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"195"}),(0,r.jsx)(t.td,{children:"noticeCommission"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"198"}),(0,r.jsx)(t.td,{children:"hasNoticeComm"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"noticeCommision contains responder auction commission; otherwise, notice commission is as agreed previously."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"117"}),(0,r.jsx)(t.td,{children:"custCommPaying"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"client is commission paying (to the responder)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"118"}),(0,r.jsx)(t.td,{children:"custQtyCond"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../../../Enums/CustQtyCond",children:"enum : CustQtyCond"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"UpToQty, AllOrNone, QtyOrMore"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"119"}),(0,r.jsx)(t.td,{children:"auctionDuration"}),(0,r.jsx)(t.td,{children:"int"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"[expected] auction duration (in milliseconds)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"120"}),(0,r.jsx)(t.td,{children:"numOptLegs"}),(0,r.jsx)(t.td,{children:"byte"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"MLEG Only"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"188"}),(0,r.jsx)(t.td,{children:"spreadClass"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../../../Enums/SpreadClass",children:"enum : SpreadClass"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"171"}),(0,r.jsx)(t.td,{children:"limitType"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../../../Enums/SpdrLimitType",children:"enum : SpdrLimitType"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"122"}),(0,r.jsx)(t.td,{children:"spreadFlavor"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../../../Enums/SpreadFlavor",children:"enum : SpreadFlavor"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"MLEG Only"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"123"}),(0,r.jsx)(t.td,{children:"containsHedge"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"MLEG Only"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"164"}),(0,r.jsx)(t.td,{children:"containsFlex"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"contains at least one FLEX option"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"199"}),(0,r.jsx)(t.td,{children:"flexType"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../../../Enums/FlexType",children:"enum : FlexType"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"all legs are of this flex type"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"165"}),(0,r.jsx)(t.td,{children:"containsMultiHedge"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"contains MultiHedge (corp action adjusted) options"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"124"}),(0,r.jsx)(t.td,{children:"uBid"}),(0,r.jsx)(t.td,{children:"double"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"125"}),(0,r.jsx)(t.td,{children:"uAsk"}),(0,r.jsx)(t.td,{children:"double"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"184"}),(0,r.jsx)(t.td,{children:"refUPrc"}),(0,r.jsx)(t.td,{children:"double"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"172"}),(0,r.jsx)(t.td,{children:"netDe"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"173"}),(0,r.jsx)(t.td,{children:"netGa"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"174"}),(0,r.jsx)(t.td,{children:"netTh"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"175"}),(0,r.jsx)(t.td,{children:"netVe"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"176"}),(0,r.jsx)(t.td,{children:"pkgSurfPrc"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"SR Surface Price (entire package)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"182"}),(0,r.jsx)(t.td,{children:"pkgTheoPrc"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"Client Theo Price (entire package) (if client surfaces uploaded to SR)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"177"}),(0,r.jsx)(t.td,{children:"pkgBidPrc"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"leg market best way price (pkg bid)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"178"}),(0,r.jsx)(t.td,{children:"pkgAskPrc"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"leg market worst way price (pkg ask)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"200"}),(0,r.jsx)(t.td,{children:"pkgRefPremPct"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"package premium as a % of underlier closing price (fixed by initiator)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"201"}),(0,r.jsx)(t.td,{children:"hasFixedPremPct"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"if yes package has a fixed premium as a % of underlier closing price; all responses should be in terms of strike pct for the leg with a variable strike."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"179"}),(0,r.jsx)(t.td,{children:"pointValue"}),(0,r.jsx)(t.td,{children:"double"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"money settlement value of one (1.0) point of option premium/strike"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"185"}),(0,r.jsx)(t.td,{children:"pointCurrency"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../../../Enums/Currency",children:"enum : Currency"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"180"}),(0,r.jsx)(t.td,{children:"srcTimestamp"}),(0,r.jsx)(t.td,{children:"long"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"181"}),(0,r.jsx)(t.td,{children:"netTimestamp"}),(0,r.jsx)(t.td,{children:"long"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"166"}),(0,r.jsx)(t.td,{children:"timestamp"}),(0,r.jsx)(t.td,{children:"DateTime"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"from ats / exchange net timestamp if possible"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"157"}),(0,r.jsx)(t.td,{children:"includeSRNetwork"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../../../Enums/InclExclDisclose",children:"enum : InclExclDisclose"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"repeating-fields",children:"REPEATING FIELDS"}),"\n",(0,r.jsx)(t.p,{children:"OrderLegs"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"#"}),(0,r.jsx)(t.th,{children:"Field"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Default Value"}),(0,r.jsx)(t.th,{children:"Comment"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"132"}),(0,r.jsx)(t.td,{children:"secKey"}),(0,r.jsx)(t.td,{children:"OptionKey"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"133"}),(0,r.jsx)(t.td,{children:"secType"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../../../Enums/SpdrKeyType",children:"enum : SpdrKeyType"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"134"}),(0,r.jsx)(t.td,{children:"side"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"135"}),(0,r.jsx)(t.td,{children:"ratio"}),(0,r.jsx)(t.td,{children:"ushort"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"202"}),(0,r.jsx)(t.td,{children:"strikeType"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../../../Enums/StrikeType",children:"enum : StrikeType"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"Percent or PctVariable; if PctVariable responses should be in terms this strike for this leg as a pct of the underlier close"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"136"}),(0,r.jsx)(t.td,{children:"undPerCn"}),(0,r.jsx)(t.td,{children:"int"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"138"}),(0,r.jsx)(t.td,{children:"expType"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../../../Enums/ExpiryType",children:"enum : ExpiryType"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"ZDte,Daily,Weekly,Regular,Quarterly,LongTerm,OtherExp"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"139"}),(0,r.jsx)(t.td,{children:"years"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"SR volatility years to expiry"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"140"}),(0,r.jsx)(t.td,{children:"rate"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"SR global (discount) rate to expiry"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"141"}),(0,r.jsx)(t.td,{children:"atmVol"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"ATM (fwd uPrc) SR surface volatility"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"142"}),(0,r.jsx)(t.td,{children:"ddivPv"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"SR present value of ddiv stream"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"143"}),(0,r.jsx)(t.td,{children:"tVol"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"client theo surface volatility (if client surfaces uploaded to SR)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"183"}),(0,r.jsx)(t.td,{children:"tPrc"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"client theo price (if client surfaces uploaded to SR)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"144"}),(0,r.jsx)(t.td,{children:"sVol"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"SR Surface Volatility"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"145"}),(0,r.jsx)(t.td,{children:"sDiv"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"SR Surface SDiv"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"146"}),(0,r.jsx)(t.td,{children:"sPrc"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"SR Surface Price"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"147"}),(0,r.jsx)(t.td,{children:"de"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"fixed ref delta for BlockAuctionDAC orders"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"148"}),(0,r.jsx)(t.td,{children:"ga"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"149"}),(0,r.jsx)(t.td,{children:"th"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"150"}),(0,r.jsx)(t.td,{children:"ve"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"168"}),(0,r.jsx)(t.td,{children:"sVolOk"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"Yes if live market and sVol are tracking as expected"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"189"}),(0,r.jsx)(t.td,{children:"bid"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"leg bid price"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"190"}),(0,r.jsx)(t.td,{children:"bidSz"}),(0,r.jsx)(t.td,{children:"int"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"cumulative leg bid size"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"196"}),(0,r.jsx)(t.td,{children:"bidMask"}),(0,r.jsx)(t.td,{children:"long"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"bit-mask of participating leg exchanges"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"192"}),(0,r.jsx)(t.td,{children:"ask"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"leg ask price"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"193"}),(0,r.jsx)(t.td,{children:"askSz"}),(0,r.jsx)(t.td,{children:"int"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"cumulative leg ask size"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"197"}),(0,r.jsx)(t.td,{children:"askMask"}),(0,r.jsx)(t.td,{children:"long"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"bit-mask of participating leg exchanges"})]})]})]}),"\n",(0,r.jsx)(t.p,{children:"DirectedCounterParty"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"#"}),(0,r.jsx)(t.th,{children:"Field"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Default Value"}),(0,r.jsx)(t.th,{children:"Comment"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"159"}),(0,r.jsx)(t.td,{children:"clientFirm"}),(0,r.jsx)(t.td,{children:"string(16)"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"160"}),(0,r.jsx)(t.td,{children:"inclExcl"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../../../Enums/InclExclDisclose",children:"enum : InclExclDisclose"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"161"}),(0,r.jsx)(t.td,{children:"isCommPaying"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,r.jsxs)(d.Z,{children:[(0,r.jsx)(c.Z,{value:"Python",label:"Python",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'AuctionNotice'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n    # Required Parameters\n    \"apiKey\": API_KEY,\n    \"cmd\": 'getschema',\n    \"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,r.jsx)(c.Z,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=AuctionNotice'\n\n"})})})]}),"\n",(0,r.jsx)(t.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,r.jsxs)(d.Z,{children:[(0,r.jsx)(c.Z,{value:"Python",label:"Python",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'AuctionNotice\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'ticker|tradeDate|isTestAuction|shortCode|auctionType|auctionEvent|srcAuctionID|srcAuctionType|auctionSource|industry|symbolType|uAvgDailyVlm|custSide|custQty|custPrc|hasCustPrc|custNbboCap|custFirmType|custAgentMPID|custClientFirm|noticeCommission|hasNoticeComm|custCommPaying|custQtyCond|auctionDuration|numOptLegs|spreadClass|limitType|spreadFlavor|containsHedge|containsFlex|flexType|containsMultiHedge|uBid|uAsk|refUPrc|netDe|netGa|netTh|netVe|pkgSurfPrc|pkgTheoPrc|pkgBidPrc|pkgAskPrc|pkgRefPremPct|hasFixedPremPct|pointValue|pointCurrency|srcTimestamp|netTimestamp|timestamp|includeSRNetwork\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'shortCode:eq:ExampleString\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,r.jsx)(c.Z,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=AuctionNotice' \\\n--data-urlencode 'view=ticker|tradeDate|isTestAuction|shortCode|auctionType|auctionEvent|srcAuctionID|srcAuctionType|auctionSource|industry|symbolType|uAvgDailyVlm|custSide|custQty|custPrc|hasCustPrc|custNbboCap|custFirmType|custAgentMPID|custClientFirm|noticeCommission|hasNoticeComm|custCommPaying|custQtyCond|auctionDuration|numOptLegs|spreadClass|limitType|spreadFlavor|containsHedge|containsFlex|flexType|containsMultiHedge|uBid|uAsk|refUPrc|netDe|netGa|netTh|netVe|pkgSurfPrc|pkgTheoPrc|pkgBidPrc|pkgAskPrc|pkgRefPremPct|hasFixedPremPct|pointValue|pointCurrency|srcTimestamp|netTimestamp|timestamp|includeSRNetwork' \\\n--data-urlencode 'where=shortCode:eq:ExampleString'\n"})})})]}),"\n",(0,r.jsx)(t.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,r.jsxs)(d.Z,{children:[(0,r.jsx)(c.Z,{value:"Python",label:"Python",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'AuctionNotice\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'ticker|tradeDate|isTestAuction|shortCode|auctionType|auctionEvent|srcAuctionID|srcAuctionType|auctionSource|industry|symbolType|uAvgDailyVlm|custSide|custQty|custPrc|hasCustPrc|custNbboCap|custFirmType|custAgentMPID|custClientFirm|noticeCommission|hasNoticeComm|custCommPaying|custQtyCond|auctionDuration|numOptLegs|spreadClass|limitType|spreadFlavor|containsHedge|containsFlex|flexType|containsMultiHedge|uBid|uAsk|refUPrc|netDe|netGa|netTh|netVe|pkgSurfPrc|pkgTheoPrc|pkgBidPrc|pkgAskPrc|pkgRefPremPct|hasFixedPremPct|pointValue|pointCurrency|srcTimestamp|netTimestamp|timestamp|includeSRNetwork\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'shortCode:eq:ExampleString\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'ticker:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,r.jsx)(c.Z,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=AuctionNotice' \\\n--data-urlencode 'view=ticker|tradeDate|isTestAuction|shortCode|auctionType|auctionEvent|srcAuctionID|srcAuctionType|auctionSource|industry|symbolType|uAvgDailyVlm|custSide|custQty|custPrc|hasCustPrc|custNbboCap|custFirmType|custAgentMPID|custClientFirm|noticeCommission|hasNoticeComm|custCommPaying|custQtyCond|auctionDuration|numOptLegs|spreadClass|limitType|spreadFlavor|containsHedge|containsFlex|flexType|containsMultiHedge|uBid|uAsk|refUPrc|netDe|netGa|netTh|netVe|pkgSurfPrc|pkgTheoPrc|pkgBidPrc|pkgAskPrc|pkgRefPremPct|hasFixedPremPct|pointValue|pointCurrency|srcTimestamp|netTimestamp|timestamp|includeSRNetwork' \\\n--data-urlencode 'where=shortCode:eq:ExampleString' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=ticker:ASC'\n"})})})]}),"\n",(0,r.jsx)(t.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,r.jsxs)(d.Z,{children:[(0,r.jsx)(c.Z,{value:"Python",label:"Python",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'AuctionNotice\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'ticker|tradeDate|isTestAuction|shortCode|auctionType|auctionEvent|srcAuctionID|srcAuctionType|auctionSource|industry|symbolType|uAvgDailyVlm|custSide|custQty|custPrc|hasCustPrc|custNbboCap|custFirmType|custAgentMPID|custClientFirm|noticeCommission|hasNoticeComm|custCommPaying|custQtyCond|auctionDuration|numOptLegs|spreadClass|limitType|spreadFlavor|containsHedge|containsFlex|flexType|containsMultiHedge|uBid|uAsk|refUPrc|netDe|netGa|netTh|netVe|pkgSurfPrc|pkgTheoPrc|pkgBidPrc|pkgAskPrc|pkgRefPremPct|hasFixedPremPct|pointValue|pointCurrency|srcTimestamp|netTimestamp|timestamp|includeSRNetwork\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'isTestAuction|auctionType|auctionEvent|auctionSource|symbolType|custSide|hasCustPrc|custNbboCap|custFirmType|hasNoticeComm|custCommPaying|custQtyCond|spreadClass|limitType|spreadFlavor|containsHedge|containsFlex|flexType|containsMultiHedge|hasFixedPremPct|pointCurrency|includeSRNetwork\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'shortCode:eq:ExampleString\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getaggregate\',\n    "msgType": MSG_TYPE,\n    "measure": MEASURE,\n    "group": GROUP,\n    # Optional Parameters\n    "where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,r.jsx)(c.Z,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=AuctionNotice' \\\n--data-urlencode 'measure=ticker|tradeDate|isTestAuction|shortCode|auctionType|auctionEvent|srcAuctionID|srcAuctionType|auctionSource|industry|symbolType|uAvgDailyVlm|custSide|custQty|custPrc|hasCustPrc|custNbboCap|custFirmType|custAgentMPID|custClientFirm|noticeCommission|hasNoticeComm|custCommPaying|custQtyCond|auctionDuration|numOptLegs|spreadClass|limitType|spreadFlavor|containsHedge|containsFlex|flexType|containsMultiHedge|uBid|uAsk|refUPrc|netDe|netGa|netTh|netVe|pkgSurfPrc|pkgTheoPrc|pkgBidPrc|pkgAskPrc|pkgRefPremPct|hasFixedPremPct|pointValue|pointCurrency|srcTimestamp|netTimestamp|timestamp|includeSRNetwork' \\\n--data-urlencode 'group=isTestAuction|auctionType|auctionEvent|auctionSource|symbolType|custSide|hasCustPrc|custNbboCap|custFirmType|hasNoticeComm|custCommPaying|custQtyCond|spreadClass|limitType|spreadFlavor|containsHedge|containsFlex|flexType|containsMultiHedge|hasFixedPremPct|pointCurrency|includeSRNetwork' \\\n--data-urlencode 'where=shortCode:eq:ExampleString'\n"})})})]}),"\n",(0,r.jsx)(t.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,r.jsxs)(d.Z,{children:[(0,r.jsx)(c.Z,{value:"Python",label:"Python",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'AuctionNotice\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'shortCode:eq:ExampleString\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,r.jsx)(c.Z,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=AuctionNotice' \\\n--data-urlencode 'where=shortCode:eq:ExampleString'\n"})})})]})]})}function x(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},9641:function(e,t,s){s.d(t,{Z:()=>i});var n=s("52676");s("75271");var r=s("54461");function i(e){let{children:t,hidden:s,className:i}=e;return(0,n.jsx)("div",{role:"tabpanel",className:(0,r.Z)("tabItem_SSzl",i),hidden:s,children:t})}},71386:function(e,t,s){s.d(t,{Z:()=>y});var n=s("52676"),r=s("75271"),i=s("54461"),d=s("52289"),c=s("3225"),l=s("42834"),a=s("40578"),o=s("35834"),h=s("79616");function u(e){return r.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||r.isValidElement(e)&&function(e){let{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function x(e){let{value:t,tabValues:s}=e;return s.some(e=>e.value===t)}var j=s("44537");function m(e){let{className:t,block:s,selectedValue:r,selectValue:c,tabValues:l}=e,a=[],{blockElementScrollPositionUntilNextRender:o}=(0,d.o5)(),h=e=>{let t=e.currentTarget,s=l[a.indexOf(t)].value;s!==r&&(o(t),c(s))},u=e=>{let t=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{let s=a.indexOf(e.currentTarget)+1;t=a[s]??a[0];break}case"ArrowLeft":{let s=a.indexOf(e.currentTarget)-1;t=a[s]??a[a.length-1]}}t?.focus()};return(0,n.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":s},t),children:l.map(e=>{let{value:t,label:s,attributes:d}=e;return(0,n.jsx)("li",{role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,ref:e=>a.push(e),onKeyDown:u,onClick:h,...d,className:(0,i.Z)("tabs__item","tabItem_aitt",d?.className,{"tabs__item--active":r===t}),children:s??t},t)})})}function p(e){let{lazy:t,children:s,selectedValue:d}=e,c=(Array.isArray(s)?s:[s]).filter(Boolean);if(t){let e=c.find(e=>e.props.value===d);return e?(0,r.cloneElement)(e,{className:(0,i.Z)("margin-top--md",e.props.className)}):null}return(0,n.jsx)("div",{className:"margin-top--md",children:c.map((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==d}))})}function g(e){let t=function(e){let{defaultValue:t,queryString:s=!1,groupId:n}=e,i=function(e){let{values:t,children:s}=e;return(0,r.useMemo)(()=>{let e=t??u(s).map(e=>{let{props:{value:t,label:s,attributes:n,default:r}}=e;return{value:t,label:s,attributes:n,default:r}});return!function(e){let t=(0,o.lx)(e,(e,t)=>e.value===t.value);if(t.length>0)throw Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[t,s])}(e),[d,j]=(0,r.useState)(()=>(function(e){let{defaultValue:t,tabValues:s}=e;if(0===s.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!x({value:t,tabValues:s}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${s.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}let n=s.find(e=>e.default)??s[0];if(!n)throw Error("Unexpected error: 0 tabValues");return n.value})({defaultValue:t,tabValues:i})),[m,p]=function(e){let{queryString:t=!1,groupId:s}=e,n=(0,c.k6)(),i=function(e){let{queryString:t=!1,groupId:s}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!s)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return s??null}({queryString:t,groupId:s});return[(0,a._X)(i),(0,r.useCallback)(e=>{if(!i)return;let t=new URLSearchParams(n.location.search);t.set(i,e),n.replace({...n.location,search:t.toString()})},[i,n])]}({queryString:s,groupId:n}),[g,y]=function(e){let{groupId:t}=e,s=t?`docusaurus.tab.${t}`:null,[n,i]=(0,h.Nk)(s);return[n,(0,r.useCallback)(e=>{s&&i.set(e)},[s,i])]}({groupId:n}),f=(()=>{let e=m??g;return x({value:e,tabValues:i})?e:null})();return(0,l.Z)(()=>{f&&j(f)},[f]),{selectedValue:d,selectValue:(0,r.useCallback)(e=>{if(!x({value:e,tabValues:i}))throw Error(`Can't select invalid tab value=${e}`);j(e),p(e),y(e)},[p,y,i]),tabValues:i}}(e);return(0,n.jsxs)("div",{className:(0,i.Z)("tabs-container","tabList_ArS0"),children:[(0,n.jsx)(m,{...t,...e}),(0,n.jsx)(p,{...t,...e})]})}function y(e){let t=(0,j.Z)();return(0,n.jsx)(g,{...e,children:u(e.children)},String(t))}},91503:function(e,t,s){s.d(t,{Z:function(){return c},a:function(){return d}});var n=s(75271);let r={},i=n.createContext(r);function d(e){let t=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);