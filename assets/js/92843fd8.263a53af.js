"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[67029],{97946:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>T,contentTitle:()=>o,default:()=>M,frontMatter:()=>N,metadata:()=>a,toc:()=>L});var n=t(74848),i=t(28453);const N={title:"ToolCompositeExecution"},o=void 0,a={id:"MessageSchemas/Schema/SRSE Products/SRTrade/ToolCompositeExecution/ToolCompositeExecution",title:"ToolCompositeExecution",description:"V8 Message Definition",source:"@site/docs/MessageSchemas/Schema/SRSE Products/SRTrade/ToolCompositeExecution/ToolCompositeExecution.md",sourceDirName:"MessageSchemas/Schema/SRSE Products/SRTrade/ToolCompositeExecution",slug:"/MessageSchemas/Schema/SRSE Products/SRTrade/ToolCompositeExecution/",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRTrade/ToolCompositeExecution/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"ToolCompositeExecution"},sidebar:"messageSchemasSidebar",previous:{title:"StkOrderGateway",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRTrade/StkOrderGateway/"},next:{title:"UserAuctionFilter",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRTrade/UserAuctionFilter/"}},T={},L=[];function l(e){const r={a:"a",code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.p,{children:(0,n.jsx)(r.a,{href:"../../../Topics/mlink-custom/ToolCompositeExecution",children:"V8 Message Definition"})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-sql",children:"CREATE TABLE `SRTrade`.`MsgToolCompositeExecution` (\n    `fillNumber` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'SpiderRock execution number (globally unique over trailing 10 days)',\n    `tradeDate` DATE NOT NULL DEFAULT '1900-01-01' COMMENT 'trade date',\n    `accnt` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'SpiderRock Accnt Code',\n    `clientFirm` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'SpiderRock ClientFirm Code',\n    `secKey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'Security Key [can be partially filled in (look at secType)]',\n    `secKey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'Security Key [can be partially filled in (look at secType)]',\n    `secKey_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'Security Key [can be partially filled in (look at secType)]',\n    `secKey_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Security Key [can be partially filled in (look at secType)]',\n    `secKey_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Security Key [can be partially filled in (look at secType)]',\n    `secKey_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Security Key [can be partially filled in (look at secType)]',\n    `secKey_xx` DOUBLE NOT NULL DEFAULT 0 COMMENT 'Security Key [can be partially filled in (look at secType)]',\n    `secKey_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call' COMMENT 'Security Key [can be partially filled in (look at secType)]',\n    `secType` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None' COMMENT 'Security Type [Stock, Future, Option]',\n    `side` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'None' COMMENT 'order / execution side',\n    `version` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'record version number; starts at zero and goes up every time an execution record is re-published (eg, bust, +1m marks, +10m marks, etc)',\n    `parentNumber` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'SpiderRock parent number',\n    `baseParentNumber` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'SpiderRock base parent number',\n    `spdrSource` ENUM('None','SpdrTicket','SpdrSingle','SRSE','FIX','HedgeTool','TradeHedge','OpenHedge','AutoHedge','Orphan','RiskManager','OrderManager','ManagedOrder','RFQRespSrvr','Legger','SRSEDrop','FixDrop','TicketDrop','SysTest','RFRResponse','AllocOmni','AllocClient','CertGateway','MLegResponse','LeggerX','DropManager','AutoHedgeSrvr','AuctionStrategySrvr','AllocBlockFace','AllocBlockCust','IceChatGateway','EXS2SRC','MLinkResponse','AutoResponderVD','AutoResponderRC','AutoResponderSN','AutoResponderBX') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock parent order source code [broker pkey]',\n    `groupingCode` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'SpiderRock parent broker number [broker pkey]',\n    `riskGroupId` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'riskGroupId (parent order group ID) for this execution report',\n    `altOrderId` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'alternate order ID (usually clOrdId from client)',\n    `srcRoutingCode` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'inbound FIX routing code, if any',\n    `userName` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'SpiderRock user name associated with the parent order',\n    `server` VARCHAR(20) NOT NULL DEFAULT '' COMMENT 'SpiderRock execution engine that handled the parent order',\n    `ticker_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock underlier ticker key [synthetic for futures]',\n    `ticker_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock underlier ticker key [synthetic for futures]',\n    `ticker_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'SpiderRock underlier ticker key [synthetic for futures]',\n    `sector` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'user supplied sector code (from SymbolControl record)',\n    `clientTags` VARCHAR(255) NOT NULL DEFAULT '',\n    `indNum` INT NOT NULL DEFAULT 0 COMMENT 'ind code (00)',\n    `subNum` INT NOT NULL DEFAULT 0 COMMENT 'sub code (0000)',\n    `grpNum` INT NOT NULL DEFAULT 0 COMMENT 'grp code (000000)',\n    `nbrNum` INT NOT NULL DEFAULT 0 COMMENT 'nbr code (00000000)',\n    `expCode` ENUM('None','W1','W2','M1','M2','M34','M56','M7C','Y1','Y2') NOT NULL DEFAULT 'None' COMMENT 'expiration tenor code',\n    `skewCode` ENUM('None','DD','DN','AT','UP','DU') NOT NULL DEFAULT 'None' COMMENT 'strike skew code (@ parent order arrival)',\n    `widthCode` ENUM('None','Pv1','Pv2','Pv3','Pv5','Pv10','Pv15','Pv20','Pv25','Wide') NOT NULL DEFAULT 'None' COMMENT 'market width code',\n    `priceFormat` ENUM('None','N0','N1','N2','N3','N4','N5','N6','N7','F4','F8','Q8','F16','F32','H32','Q32','F64','H64','FullPenny','PartPenny','PartNickle','EQT','V1','V2','V3','V4','V5','V6','V7','V8','V9','V10','V11','V12','V13','V14','V15','A0','A1','A2','A3','A4','A5','A6','A7','E32') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock price display format code',\n    `uPriceFormat` ENUM('None','N0','N1','N2','N3','N4','N5','N6','N7','F4','F8','Q8','F16','F32','H32','Q32','F64','H64','FullPenny','PartPenny','PartNickle','EQT','V1','V2','V3','V4','V5','V6','V7','V8','V9','V10','V11','V12','V13','V14','V15','A0','A1','A2','A3','A4','A5','A6','A7','E32') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock underlier price display code',\n    `years` FLOAT NOT NULL DEFAULT 0 COMMENT 'years to expiration (@ parent order arrival)',\n    `underlierType` ENUM('None','Equity','Other','FX') NOT NULL DEFAULT 'None' COMMENT 'underlier type (affects $greek calcs)',\n    `minTickSize` FLOAT NOT NULL DEFAULT 0 COMMENT '$NLV value of a single tick change in display premium\t(pointValue = tickValue / tickSize)',\n    `pointValue` FLOAT NOT NULL DEFAULT 0 COMMENT '$NLV value of a point',\n    `pointCurrency` ENUM('None','AUD','BRL','CAD','CHF','CNH','CNY','EUR','GBP','JPY','KRW','MXN','MYR','NOK','NZD','SEK','TRY','USD','USDCents','CZK','ZAR','HUF','USX','GBX') NOT NULL DEFAULT 'None',\n    `underliersPerCn` INT NOT NULL DEFAULT 0 COMMENT 'underliers per contract (futures and options)',\n    `parentShape` ENUM('None','Single','Cross','MLeg','MLegCross') NOT NULL DEFAULT 'None' COMMENT 'parent order shape [Single, MLeg, etc]',\n    `parentLimitType` ENUM('None','Market','MarketArrival','Prc','PrcDe','PrcDeX','PrcDeT','PrcDeP','PrcDeXT','PrcDeXP','Vol','VolX','PrcV','PrcVX','NoLimit','RelMid','RelJoin','RelCross','SmrtFast','SmrtNorm','RelTurn','PrcDeEm','VolEm','Aux','UPrcPct','PkgNeutral','RcPrem','SynthLimitMM','SynthLimitBW','SynthLimitWW') NOT NULL DEFAULT 'None' COMMENT 'parent order limit type [Vol, VolX, PrcDe, PrcDeX, etc]',\n    `parentLimitClass` ENUM('Simple','Surface','Probability','SurfProb') NOT NULL DEFAULT 'Simple' COMMENT 'parent order limit class (makeLimitClass if fill was from making; takeLimitClass if fill was from taking)',\n    `parentOrderHandling` ENUM('None','ActiveTaker','PostOnly','DMA','MktOnOpn','MktOnCls','Facilitate','Matrix','Legger','Seeker','SeekerLegger','CrossResponse','AuctionResponse','MLegAuctionResp','RFQRequest','AwayAlgo','ExchPing','BlockAuction','BlockResponse','SweepTake','CobMaker','FaceOmni','TestParent') NOT NULL DEFAULT 'None' COMMENT 'base parent order algo [take style algo]',\n    `parentBalanceHandling` ENUM('None','PostWith','PostTurn','PostImprove','PostLimit','MaxIntern','PostWthF','PostImprvR','PostFlash','PostFlashW','PostPeg','PostFlashI') NOT NULL DEFAULT 'None' COMMENT 'base parent order balance handling [make style algo]',\n    `parentOrderSize` INT NOT NULL DEFAULT 0 COMMENT 'parent order size',\n    `parentDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'Date/time of parent order arrival',\n    `parentUMark` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier mid mark @ parent order arrival (options only)',\n    `parentBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'market bid @ parent order arrival',\n    `parentAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'market ask @ parent order arrival',\n    `parentFairPrc` FLOAT NOT NULL DEFAULT 0 COMMENT 'SpiderRock fair price @ parent order arrival',\n    `parentFairWidth` FLOAT NOT NULL DEFAULT 0 COMMENT 'SpiderRock fair width @ parent order arrival',\n    `parentLimitPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'parent order limit price @ parent order arrival',\n    `parentLimitRefUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'limit reference underlier price @ parent order arrival (options only)',\n    `parentSSaleFlag` ENUM('None','Long','Short','Exempt','Auto','Open','Close','Cover','NA') NOT NULL DEFAULT 'None' COMMENT 'parent order short sale flag (can be Auto)',\n    `parentPositionType` ENUM('None','Opening','Closing','Auto') NOT NULL DEFAULT 'None' COMMENT 'parent order position type (can be Auto)',\n    `parentStrategy` VARCHAR(36) NOT NULL DEFAULT '' COMMENT 'parent strategy [usually client supplied]',\n    `parentAutoHedge` ENUM('None','Static','AutoMid','AutoCrx','AutoTrn','SpdrAuto','Spdr10S','Spdr30S','Spdr90S','Spdr5M','Spdr30M','SpdrDay','SmartFast','SmartNorm','FastCrx','FastDark','SlowDark','AlphaVwap1pct','AlphaVwap2pct','AlphaVwap5pct','AlphaVwap25pct','Custom','AwayAlgo') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock auto-hedge algorithm (if any)',\n    `childDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'child order send date/time (if any)',\n    `childClOrdId` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'child order clOrdId resulting in fill (if any)',\n    `childRoutingCode` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'SpiderRock child order routing code (if any)',\n    `childSize` INT NOT NULL DEFAULT 0 COMMENT 'child order size',\n    `childPrice` DOUBLE NOT NULL DEFAULT 0 COMMENT 'child order price',\n    `childExch` VARCHAR(6) NOT NULL DEFAULT '' COMMENT 'child order exchange code (SpiderRock)',\n    `childExDest` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'child order exchange code (downstream)',\n    `childUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier market price @ child order send time',\n    `childBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'market bid @ child order send time',\n    `childAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'market ask @ child order send time',\n    `childFairPrc` FLOAT NOT NULL DEFAULT 0 COMMENT 'SpiderRock fair price @ child order send time',\n    `childFairWidth` FLOAT NOT NULL DEFAULT 0 COMMENT 'SpiderRock fair width @ child order send time',\n    `childVol` FLOAT NOT NULL DEFAULT 0 COMMENT 'child order volatilty (options only)',\n    `childProb` FLOAT NOT NULL DEFAULT 0 COMMENT 'child order probability (T+x)',\n    `childLimitPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'parent order limit price @ child order send time',\n    `childLimitRefUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'limit reference underlier price @ child order send time (options only)',\n    `childAlgoHandler` ENUM('None','ActiveTaker','ActiveMaker','Auction','Responder','Matrix','Cross','Face','Extern','MLegHandler','AutoHedge','Sprayer','Legger','Restart','Orphan','UDefSpread','RFQRequest','MLegResponder','LeggerX','ExchPing','BrkrReview','AuctionResponder','TakeSweep','TestChild') NOT NULL DEFAULT 'None' COMMENT 'algo that generated the child order responsible for this fill',\n    `childOrderHandling` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'algo handler detail string',\n    `childCreateReason` ENUM('None','CheckAddExch','DarkCross','DmaExtern','DmaSmart','MakeJoin','MakeNbboImpr','MakePostLimit','MakeSelfImpr','MarketAuction','MatrixImpr','MatrixJoin','MatrixLvlSweep','MatrixMaxSweep','MLegSeeker','OptAuctionResp','OptFaceHandler','RelWaitTrigger','SprdDma','SprdFace','SprdSeeker','TakeBrkr','TakeExch','TakeNbbo','RFQRequest','MLegResponse','BrkrCross','PostFlash','MakeOff','MakeFlashImprv','AwayExtern','MatrixCross','ExchPing','BrkrReview','AuctionResponse','SweepTake','TestChild') NOT NULL DEFAULT 'None' COMMENT 'child order create code',\n    `childCancelReason` ENUM('None','MakeException','MakeMaxRiskSize','MakeLimitError','MakeCxlImpr','MakeLmtPrc','MakeSelfImpr','MakeJoinImprv','MakeReJoin','MakeBhnd','MakeAlone','MakeAloneF','MakeOffMkt','MakeMaxExpose','MakeJoinImpr','ContLmtPrc','ChildCxlAll','ChildFlashCxl','ChildIOCTimeout','ForceRetry','StkCxlAll','FutCxlAll','OptCxlAll','FastCxlUBid','FastCxlUAsk','FastCxlUMin','FastCxlUMax','MktMiss','CxlClear','CxlRplDMA','CxlRplTurn','CxlRplSize','CxlRplPrc','CxlRplMake','CxlRplExch','MLegSeekSwitch','MLegSeekChange','MLegSeekND','MLegSeekLimit','MLegDMA','MLegSprdLimit','ParentRplRej','ParentReject','ParentClose','LeggerSwitch','AccelTake','EnginePreOpen','LegLmtPrcRng','MakeLmtPrcErr','ProgTerminate','TickSzErr','ContBrkrTerm','ContCancelHold','ContLimitErr','ContMaxUPrc','ContMinUPrc','ContMktData','ContMktHalt','ContRiskHold','ContSecType','ContStkData','ContStkState','ContFutData','ContFutState','ContOptData','ContOptState','ContUFutData','ContUFutState','ContUMktData','ContUMktState','LegExposeSize','LegLimitErr','LegMarketPrc','MLegCobLmtPrc','MLegLeggerChange','MLegLeggerSwitch','MLegSprdLmtPrc','SprdMktPrc','ContUMktPrc','ContUMktQte','SGContCxl','SGSysCxl','CxlRplPart','CxlRplAlgo','ContingentCancel','SwitchMOC','CxlRplReview','CxlRplAltR','SurfPrcErr','UserHold','DayClose','PendNewTimeout','ActiveHold') NOT NULL DEFAULT 'None' COMMENT 'child order cancel code (if any)',\n    `childMktStance` ENUM('None','ExchMrkt','NbboMrkt','ExchImpr','NbboImpr','ExchJoin','NbboJoin','Away') NOT NULL DEFAULT 'None' COMMENT 'child order was expected to be marketable @ child send time',\n    `childCxlAttempted` ENUM('None','Yes','No') NOT NULL DEFAULT 'None' COMMENT 'cancel attempt was made on the child order prior to receiving this fill',\n    `childSSaleFlag` ENUM('None','Long','Short','Exempt','Auto','Open','Close','Cover','NA') NOT NULL DEFAULT 'None' COMMENT 'child order short sale flag',\n    `childPositionType` ENUM('None','Opening','Closing','Auto') NOT NULL DEFAULT 'None' COMMENT 'child order position type',\n    `childFirmType` ENUM('None','Customer','Firm','MarketMaker','ProCustomer','BrokerDealer','AwayMM','FirmJBO','BrkrDlrCust') NOT NULL DEFAULT 'None' COMMENT 'chld order firm type [Customer, ProCust, Firm, MM, etc]',\n    `childCapacity` ENUM('None','Agency','Principal','Individual','Proprietary','AgentOtherMember','RisklessPrincipal') NOT NULL DEFAULT 'None' COMMENT 'child order capacity',\n    `fillExch` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'ExDest code from child order execution report (lastMkt)',\n    `fillPrice` DOUBLE NOT NULL DEFAULT 0 COMMENT 'fill price',\n    `fillDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'Date/time of fill arrival',\n    `fillSize` INT NOT NULL DEFAULT 0 COMMENT 'fill quantity',\n    `fillPointValue` INT NOT NULL DEFAULT 0 COMMENT 'fill size x pointValue',\n    `fillVol` FLOAT NOT NULL DEFAULT 0 COMMENT 'fill volatilty (options only)',\n    `fillProb` FLOAT NOT NULL DEFAULT 0 COMMENT 'fill order probability (T+x)',\n    `fillLimitPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'parent order limit price @ fill arrival time',\n    `fillLimitRefUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'limit reference underlier price @ fill arrival time (options only)',\n    `fillUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'fill underlier mid-market',\n    `fillBeta` FLOAT NOT NULL DEFAULT 0 COMMENT 'SpiderRock estimate of beta to SPX',\n    `fillTv` FLOAT NOT NULL DEFAULT 0 COMMENT 'theo vol (user supplied)',\n    `fillTp` FLOAT NOT NULL DEFAULT 0 COMMENT 'theo price',\n    `fillBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'option market bid @ fill arrival',\n    `fillAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'option market ask @ fill arrival',\n    `fillFairPrc` FLOAT NOT NULL DEFAULT 0 COMMENT 'SpiderRock fair price @ fill arrival',\n    `fillFairWidth` FLOAT NOT NULL DEFAULT 0 COMMENT 'SpiderRock fair width @ fill arrival',\n    `fillBrkrRate` FLOAT NOT NULL DEFAULT 0 COMMENT 'billing brokerage rate (tier 1)',\n    `fillRoutingRate` FLOAT NOT NULL DEFAULT 0 COMMENT 'billing routing rate (tier 1)',\n    `fillOrigExecID` VARCHAR(20) NOT NULL DEFAULT '' COMMENT 'original execution ID string (child order)',\n    `fillLastExecID` VARCHAR(20) NOT NULL DEFAULT '' COMMENT 'most recent execution ID (same as origExecID unless CANCEL/CORRECTION has been processed)',\n    `fillExecStatus` ENUM('None','Fill','Bust','Correct','Reject','SysRej') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock execution status (Fill,Bust,Correct,Reject,SysRej)',\n    `fillRemoteText` VARCHAR(64) NOT NULL DEFAULT '' COMMENT 'text comment from endpoint (if any)',\n    `fillTransactDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'transaction date/time as reported by exchange or down stream broker',\n    `fillLiquidityTag` VARCHAR(2) NOT NULL DEFAULT '' COMMENT 'SpiderRock normalized exch liquidity tag',\n    `fillExchFee` FLOAT NOT NULL DEFAULT 0 COMMENT 'SpiderRock exchange fee estimate',\n    `fillDe` FLOAT NOT NULL DEFAULT 0,\n    `fillGa` FLOAT NOT NULL DEFAULT 0,\n    `fillVe` FLOAT NOT NULL DEFAULT 0,\n    `execRole` ENUM('None','DirectAccnt','AwayGiveup','RiskDrop','AwayDrop','PullDrop') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock relationship to this execution record (Direct, Drop, etc)',\n    `execBrkrCode` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'exec broker acronym (usually an MPID)',\n    `execBrkrAccnt` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'account at executing broker (if any)',\n    `execBrkrClFirm` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'client/firm at executing broker (if any)',\n    `execBrkrUserName` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'user executing broker (if any)',\n    `clearingFlipType` ENUM('None','CMTA','Giveup','QSR','NSCC_Flip','DVP','BrkrAccnt') NOT NULL DEFAULT 'None' COMMENT 'type of clearing corp delivery',\n    `clearingFlipFirm` VARCHAR(6) NOT NULL DEFAULT '' COMMENT 'deliverTo clearing member (eg. OCC#, NSCC#, MPID, or InstitutionID)',\n    `clearingFlipAccnt` VARCHAR(10) NOT NULL DEFAULT '' COMMENT 'deliverTo client account (eg. OCC AID# or a DVP FBO code)',\n    `clearingAgent` VARCHAR(10) NOT NULL DEFAULT '' COMMENT 'deliverTo agent (eg. DVP Agent Bank ID)',\n    `clearingTaxID` VARCHAR(10) NOT NULL DEFAULT '' COMMENT 'deliverTo taxID (eg. DVP TaxID)',\n    `billingSecType` ENUM('None','Equity','Future','EqtOption','FutOption') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock billing security type',\n    `billingCategory` ENUM('None','Alpha','AlphaTop50','TiedMaker','TiedTaker','SOR','DMA','AuctionResponse','Facilitate','AlphaFacilitate','AwayTrade','SymOverride','Extern','NonBillable','Seeker','Legger','Drop','AwayAlgo','IsoSweep','SpdrSweep','GTH','AlphaGTH','BlockAuction','BlockResponse') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock billing category',\n    `priAggGroup` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'primary aggregation group',\n    `secAggGroup` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'secondary aggregation group',\n    `trdDelta` FLOAT NOT NULL DEFAULT 0 COMMENT 'trade delta',\n    `trdDDelta` FLOAT NOT NULL DEFAULT 0 COMMENT 'trade $delta',\n    `trdGamma` FLOAT NOT NULL DEFAULT 0 COMMENT 'trade gamma',\n    `trdDGamma` FLOAT NOT NULL DEFAULT 0 COMMENT 'trade dollar gamma',\n    `trdVega` FLOAT NOT NULL DEFAULT 0 COMMENT 'trade vega',\n    `trdWtVega` FLOAT NOT NULL DEFAULT 0 COMMENT 'trade wtVega: (vega * vol / sqrt(max(0.1, years * 4))',\n    `trdTheta` FLOAT NOT NULL DEFAULT 0 COMMENT 'trade theta',\n    `trdBeta` FLOAT NOT NULL DEFAULT 0 COMMENT 'trade beta',\n    `trdDBeta` FLOAT NOT NULL DEFAULT 0 COMMENT 'trade $beta',\n    `trdNotionalValue` FLOAT NOT NULL DEFAULT 0 COMMENT 'cn * pointValue * uPrc',\n    `trdMarketValue` FLOAT NOT NULL DEFAULT 0 COMMENT 'cn * pointValue * fillPrice',\n    `marginUDnVDn` FLOAT NOT NULL DEFAULT 0 COMMENT 'Aggregate RiskSlide: uPrc dn, vol dn',\n    `marginUDnVUp` FLOAT NOT NULL DEFAULT 0 COMMENT 'Aggregate RiskSlide: uPrc dn, vol up',\n    `marginUUpVDn` FLOAT NOT NULL DEFAULT 0 COMMENT 'Aggregate RiskSlide: uPrc up, vol dn',\n    `marginUUpVUp` FLOAT NOT NULL DEFAULT 0 COMMENT 'Aggregate RiskSlide: uPrc up, vol up',\n    `trdFairEdge` FLOAT NOT NULL DEFAULT 0 COMMENT 'SR trade edge (fill price to SR fair price)',\n    `trdFairEdgeUnit` FLOAT NOT NULL DEFAULT 0 COMMENT 'SR trade edge normalized to $100 underlier',\n    `trdTheoEdge` FLOAT NOT NULL DEFAULT 0 COMMENT 'theo edge (user supplied theo vol/prc to SpiderRock surface price) (if any)',\n    `trdTheoEdgeUnit` FLOAT NOT NULL DEFAULT 0 COMMENT 'theo edge normalized to $100 underlier',\n    `clArrivePnL` FLOAT NOT NULL DEFAULT 0 COMMENT 'arrival PnL (client arrival mark to fill mark) [from clArriveMark on parent order if any]',\n    `arrivePnL` FLOAT NOT NULL DEFAULT 0 COMMENT 'arrival PnL (parent arrival mark to fill mark)',\n    `arriveDnPnL` FLOAT NOT NULL DEFAULT 0 COMMENT 'arrival Dn PnL (arrivalPnL - uDriftArrivalPnL)',\n    `uDriftArrivePnL` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier delta drift PnL (arrival uMark to fill uMark)',\n    `childLimitSlip` FLOAT NOT NULL DEFAULT 0 COMMENT 'Fill Slippage (ChildLimitPrice to FillPrice)',\n    `halfWidthPnL` FLOAT NOT NULL DEFAULT 0 COMMENT 'estimated half-width PnL',\n    `dayDnPnL` FLOAT NOT NULL DEFAULT 0 COMMENT 'delta neutral PnL (to EOD)',\n    `dayM1PnL` FLOAT NOT NULL DEFAULT 0 COMMENT 'delta neutral PnL (Fill + 1M)',\n    `dayM10PnL` FLOAT NOT NULL DEFAULT 0 COMMENT 'delta neutral PnL (Fill + 10M)',\n    `uDriftDayPnL` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier delta drift PnL (to EOD)',\n    `uDriftM1PnL` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier delta drift PnL (Fill + 1M)',\n    `uDriftM10PnL` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier delta drift PnL (Fill + 10M)',\n    `dayPnL` FLOAT NOT NULL DEFAULT 0 COMMENT 'actual PnL to EOD (fillMark to liveMark)',\n    `m1Mark` DOUBLE NOT NULL DEFAULT 0 COMMENT 'T+1min',\n    `m1UPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'T+1min',\n    `m10Mark` DOUBLE NOT NULL DEFAULT 0 COMMENT 'T+10min',\n    `m10UPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'T+10min',\n    `liveMark` DOUBLE NOT NULL DEFAULT 0 COMMENT 'Live @ Record Query',\n    `liveUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'Live @ Record Query',\n    `trdMarkError` VARCHAR(8) NOT NULL DEFAULT '' COMMENT 'trade mark error code',\n    `dayMarkError` VARCHAR(8) NOT NULL DEFAULT '' COMMENT 'day mark error code',\n    `timestamp` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'SR system timestamp',\n    CONSTRAINT nonnegative_fillNumber CHECK(ASCII(fillNumber) < 56),\n    CONSTRAINT nonnegative_parentNumber CHECK(ASCII(parentNumber) < 56),\n    CONSTRAINT nonnegative_baseParentNumber CHECK(ASCII(baseParentNumber) < 56),\n    CONSTRAINT nonnegative_groupingCode CHECK(ASCII(groupingCode) < 56),\n    CONSTRAINT nonnegative_riskGroupId CHECK(ASCII(riskGroupId) < 56),\n    PRIMARY KEY USING HASH (`fillNumber`),\n    KEY `AccntIndex` (`accnt`) USING HASH,\n    KEY `ClientFirmIndex` (`clientFirm`) USING HASH\n) ENGINE=SRSE DEFAULT CHARSET=LATIN1 COMMENT='';\n\n"})})]})}function M(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,r,t)=>{t.d(r,{R:()=>o,x:()=>a});var n=t(96540);const i={},N=n.createContext(i);function o(e){const r=n.useContext(N);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(N.Provider,{value:r},e.children)}}}]);