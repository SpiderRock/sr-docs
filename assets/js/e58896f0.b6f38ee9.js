"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([["46718"],{22503:function(e,r,t){t.r(r),t.d(r,{default:()=>m,frontMatter:()=>l,metadata:()=>i,assets:()=>o,toc:()=>h,contentTitle:()=>c});var i=JSON.parse('{"id":"MessageSchemas/Schema/Topics/srse-gateway/MLegOrderGateway","title":"MLegOrderGateway","description":"Records inserted, updated, or replaced into the MLegOrderGateway table are validated and then converted to SpdrParentOrder records and forwarded to the appropriate execution engine for futher processing.  Parent orders can be inserted as either active/ready or in a wait start mode that requires subsequent release.See the SpiderRock Execution Engine concept guide for more details.","source":"@site/versioned_docs/version-8.5.5.1/MessageSchemas/Schema/Topics/5120-srse-gateway/MLegOrderGateway.md","sourceDirName":"MessageSchemas/Schema/Topics/5120-srse-gateway","slug":"/MessageSchemas/Schema/Topics/srse-gateway/MLegOrderGateway","permalink":"/docs/8.5.5.1/MessageSchemas/Schema/Topics/srse-gateway/MLegOrderGateway","draft":false,"unlisted":false,"tags":[],"version":"8.5.5.1","frontMatter":{"title":"MLegOrderGateway"},"sidebar":"messageSchemasSidebar","previous":{"title":"FutOrderGateway","permalink":"/docs/8.5.5.1/MessageSchemas/Schema/Topics/srse-gateway/FutOrderGateway"},"next":{"title":"OptAwayTktGateway","permalink":"/docs/8.5.5.1/MessageSchemas/Schema/Topics/srse-gateway/OptAwayTktGateway"}}'),s=t("52676"),n=t("91503"),a=t("71386"),d=t("9641");let l={title:"MLegOrderGateway"},c="Schema: MLegOrderGateway (ID: 5155)",o={},h=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3}];function x(e){let r={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsxs)(r.h1,{id:"schema-mlegordergateway-id-5155",children:["Schema: MLegOrderGateway ",(0,s.jsx)("span",{className:"small-text",children:"(ID: 5155)"})]})}),"\n",(0,s.jsxs)(r.p,{children:["Records inserted, updated, or replaced into the MLegOrderGateway table are validated and then converted to SpdrParentOrder records and forwarded to the appropriate execution engine for futher processing.  Parent orders can be inserted as either active/ready or in a wait start mode that requires subsequent release.",(0,s.jsx)("br",{}),(0,s.jsx)("br",{}),"See the SpiderRock Execution Engine concept guide for more details."]}),"\n",(0,s.jsx)(r.h3,{id:"metadata",children:"METADATA"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Attribute"}),(0,s.jsx)(r.th,{children:"Value"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Topic"}),(0,s.jsx)(r.td,{children:"5120-srse-gateway"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"MLink Token"}),(0,s.jsx)(r.td,{children:"Internal"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SRSE Product"}),(0,s.jsx)(r.td,{children:"SRTrade"})]})]})]}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Note:"})," The symbol ",(0,s.jsx)(r.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"body",children:"BODY"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"#"}),(0,s.jsx)(r.th,{children:"Field"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Comment"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"10="}),(0,s.jsx)(r.td,{children:"ticker"}),(0,s.jsx)(r.td,{children:"TickerKey"}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"11="}),(0,s.jsx)(r.td,{children:"accnt"}),(0,s.jsx)(r.td,{children:"string(16)"}),(0,s.jsx)(r.td,{children:"Will automatically be set to the account associated with DB login"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"12="}),(0,s.jsx)(r.td,{children:"groupingCode"}),(0,s.jsx)(r.td,{children:"long"}),(0,s.jsx)(r.td,{children:"Client supplied order"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"13="}),(0,s.jsx)(r.td,{children:"orderSide"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"14="}),(0,s.jsx)(r.td,{children:"clientFirm"}),(0,s.jsx)(r.td,{children:"string(16)"}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"103"}),(0,s.jsx)(r.td,{children:"spdrActionType"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/SpdrActionType",children:"enum : SpdrActionType"})}),(0,s.jsx)(r.td,{children:"[Add (new order), AddReplace (add or replace order), Cancel (cxl existing), Replace (update existing only), Release (modify order active size)]"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"106"}),(0,s.jsx)(r.td,{children:"altOrderId"}),(0,s.jsx)(r.td,{children:"string(24)"}),(0,s.jsx)(r.td,{children:"Alternate client order ID.  This order ID will be copied to all execution reports."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"109"}),(0,s.jsx)(r.td,{children:"altAutoHedgeId"}),(0,s.jsx)(r.td,{children:"string(24)"}),(0,s.jsx)(r.td,{children:"alternate order ID for child autohedge orders (if any)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"112"}),(0,s.jsx)(r.td,{children:"altAccnt"}),(0,s.jsx)(r.td,{children:"string(32)"}),(0,s.jsx)(r.td,{children:'alternate (client assigned) "long" account string (optional) [used to map between client and SR account strings]'})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"115"}),(0,s.jsx)(r.td,{children:"altUserName"}),(0,s.jsx)(r.td,{children:"string(24)"}),(0,s.jsx)(r.td,{children:"alternate (client assigned) user name (optional) [used to map between client and SR account strings]"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"607"}),(0,s.jsx)(r.td,{children:"execBrkrCode"}),(0,s.jsx)(r.td,{children:"string(16)"}),(0,s.jsx)(r.td,{children:"(optional) override the default execBrkrCode for this order"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"121"}),(0,s.jsx)(r.td,{children:"strategy"}),(0,s.jsx)(r.td,{children:"string(36)"}),(0,s.jsx)(r.td,{children:"Client strategy string.  This value will appear on the SR Trade Monitor and in execution reports."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"127"}),(0,s.jsx)(r.td,{children:"orderDttm"}),(0,s.jsx)(r.td,{children:"DateTime"}),(0,s.jsx)(r.td,{children:"order entry time (from client;if any)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"130"}),(0,s.jsx)(r.td,{children:"orderSize"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"parent order size (contracts) [-1 = no change;used when spdrActionType=Release]"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"133"}),(0,s.jsx)(r.td,{children:"orderActiveSize"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"total activated size (total size released for execution) (-1 = all available size)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"136"}),(0,s.jsx)(r.td,{children:"addCumFillQuantity"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(r.td,{children:"If Yes then OrderSize is calculated @ order arrival as requested OrderSize + existing 'CumFillQuantity'."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"139"}),(0,s.jsx)(r.td,{children:"exchMask"}),(0,s.jsx)(r.td,{children:"uint"}),(0,s.jsx)(r.td,{children:"eligible exchanges (0 = all)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"142"}),(0,s.jsx)(r.td,{children:"maxExposureSize"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"maximum simultaneous cumulative child order public size exposure (-1 = orderActiveSize) [order can overfill if > orderActiveSize and numMakeExchanges > 1]"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"145"}),(0,s.jsx)(r.td,{children:"numMakeExchanges"}),(0,s.jsx)(r.td,{children:"byte"}),(0,s.jsx)(r.td,{children:"number of exchanges (1 - 4) on which to publish public making orders.  Effective number might be less than requested number if sufficient exchanges are not available."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"148"}),(0,s.jsx)(r.td,{children:"publicSize"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/PublicSizeHandling",children:"enum : PublicSizeHandling"})}),(0,s.jsx)(r.td,{children:"public order size handling: None=use default size handling (usually limits public size to 'typical' market size); Randomize=randomize public size; MktSize=expose only 'typical' market size; FullSize=expose entire order size where possible"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"151"}),(0,s.jsx)(r.td,{children:"randomizeSize"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(r.td,{children:"randomize public order size"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"154"}),(0,s.jsx)(r.td,{children:"canOverlapCxlRepl"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(r.td,{children:"can execution engines overlap cancel/replace operations [order can overfill if YES] (at most one active overlapping cxl/replace operation for each parent order)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"157"}),(0,s.jsx)(r.td,{children:"progressRule"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/ProgressRule",children:"enum : ProgressRule"})}),(0,s.jsx)(r.td,{children:"None = all size immediately available;TWAP = size released in time intervals;VWAP = size released in volume intervals;"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"160"}),(0,s.jsx)(r.td,{children:"twapSliceCnt"}),(0,s.jsx)(r.td,{children:"byte"}),(0,s.jsx)(r.td,{children:"[ProgressSliceCnt] number of progress slices to use (default = 4 or 8) [max 20]"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"163"}),(0,s.jsx)(r.td,{children:"progressExposeTime"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"minimum time (secs) to expose order (0 = no minimum; used to guarantee that the order is exposed at mid-market for some time before actively taking)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"166"}),(0,s.jsx)(r.td,{children:"auctionResponder"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/AuctionResponder",children:"enum : AuctionResponder"})}),(0,s.jsx)(r.td,{children:"if set, parent order can be an auction responder"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"169"}),(0,s.jsx)(r.td,{children:"autoHedge"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/AutoHedge",children:"enum : AutoHedge"})}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"172"}),(0,s.jsx)(r.td,{children:"hedgeInstrument"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/HedgeInst",children:"enum : HedgeInst"})}),(0,s.jsx)(r.td,{children:"Default=underlier (EQT or FUT) [Index Options use ETF]; FrontMonth=underlier (EQT) or front month (FUT) [Index Options use FM Fut]; Stock=hedgeSecKey; Future=hedgeSecKey"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"175"}),(0,s.jsx)(r.td,{children:"hedgeSecKey"}),(0,s.jsx)(r.td,{children:"ExpiryKey"}),(0,s.jsx)(r.td,{children:"auto-hedge instrument (either TickerKey or ExpiryKey)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"178"}),(0,s.jsx)(r.td,{children:"hedgeBetaRatio"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"Portion of executed $money to auto-hedge (can be 1.0 / Beta for beta hedging) [-4.0 to +4.0]"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"181"}),(0,s.jsx)(r.td,{children:"hedgeScope"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/HedgeScope",children:"enum : HedgeScope"})}),(0,s.jsx)(r.td,{children:"Auto-hedge at the RiskGroup or Accnt level"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"596"}),(0,s.jsx)(r.td,{children:"hedgeSession"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/MarketSession",children:"enum : MarketSession"})}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"187"}),(0,s.jsx)(r.td,{children:"cxlUPrcRange"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/UPrcCxl",children:"enum : UPrcCxl"})}),(0,s.jsx)(r.td,{children:"cancel parent order if/when outside min/max uPrc range [_Halt = also cancel if the security/underlier has been halted]"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"190"}),(0,s.jsx)(r.td,{children:"minUBid"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"[optional]"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"193"}),(0,s.jsx)(r.td,{children:"maxUAsk"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"[optional] (< $0.01 = none)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"196"}),(0,s.jsx)(r.td,{children:"minMaxType"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/MinMaxType",children:"enum : MinMaxType"})}),(0,s.jsx)(r.td,{children:"if Prc minUBid/maxUAsk are expressed as prices; if Pct then they are expresses as pct change since parent order arrival"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"199"}),(0,s.jsx)(r.td,{children:"maxChildOrders"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"maximum number of child orders that can be generated by this parent order [order will terminate if/when this cap is reached;zero or neg = unlimited]"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"202"}),(0,s.jsx)(r.td,{children:"spdrStageType"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/SpdrStageType",children:"enum : SpdrStageType"})}),(0,s.jsx)(r.td,{children:"SizeLock = stage pending modification (can reduce size); SizeModify = stage pending modification (can increase/reduce size)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"597"}),(0,s.jsx)(r.td,{children:"marketSession"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/MarketSession",children:"enum : MarketSession"})}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"208"}),(0,s.jsx)(r.td,{children:"startDttm"}),(0,s.jsx)(r.td,{children:"DateTime"}),(0,s.jsx)(r.td,{children:"[optional] (parent order start time)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"211"}),(0,s.jsx)(r.td,{children:"orderDuration"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"[optional] (number of seconds)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"598"}),(0,s.jsx)(r.td,{children:"activeDuration"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"214"}),(0,s.jsx)(r.td,{children:"goodTillDttm"}),(0,s.jsx)(r.td,{children:"DateTime"}),(0,s.jsx)(r.td,{children:"[optional] (default: 2000-01-01)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"217"}),(0,s.jsx)(r.td,{children:"startType"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/StartType",children:"enum : StartType"})}),(0,s.jsx)(r.td,{children:"[WaitTrigger]"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"223"}),(0,s.jsx)(r.td,{children:"parentOrderHandling"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/ParentOrderHandling",children:"enum : ParentOrderHandling"})}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"226"}),(0,s.jsx)(r.td,{children:"parentBalanceHandling"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/ParentBalanceHandling",children:"enum : ParentBalanceHandling"})}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"229"}),(0,s.jsx)(r.td,{children:"orderLimitType"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/SpdrLimitType",children:"enum : SpdrLimitType"})}),(0,s.jsx)(r.td,{children:"Various (Prc, PrcDe, Rel, Market);establishes the primary LimitPrice for a parent order"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"232"}),(0,s.jsx)(r.td,{children:"takeLimitClass"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/SpdrLimitClass",children:"enum : SpdrLimitClass"})}),(0,s.jsx)(r.td,{children:"Simple = LimitPrice, Surface = BEST(LimitPrice, SurfLimit), Probability = BEST(LimitPrice, ProbLimit)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"235"}),(0,s.jsx)(r.td,{children:"makeLimitClass"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/SpdrLimitClass",children:"enum : SpdrLimitClass"})}),(0,s.jsx)(r.td,{children:"Simple = LimitPrice, Surface = BEST(LimitPrice, SurfLimit), Probability = BEST(LimitPrice, ProbLimit)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"238"}),(0,s.jsx)(r.td,{children:"takeReachRule"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/ReachRule",children:"enum : ReachRule"})}),(0,s.jsx)(r.td,{children:"None = reach room immediately available; Delayed = available after [1-3] seconds; Passive = available if contra side aggresses; WeakOnly = only take if available size < avgMarketSize; ISOSweep = Intermarket Sweep [requires WaitTrigger]"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"241"}),(0,s.jsx)(r.td,{children:"leadSide"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,s.jsx)(r.td,{children:"for legged orders, which side to lead with.  (optional, None ok)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"244"}),(0,s.jsx)(r.td,{children:"maxCompletionSlippage"}),(0,s.jsx)(r.td,{children:"double"}),(0,s.jsx)(r.td,{children:"Maximum price slippage to complete an open basket or a cross auction (face side slippage)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"247"}),(0,s.jsx)(r.td,{children:"orderPrcLimit"}),(0,s.jsx)(r.td,{children:"double"}),(0,s.jsx)(r.td,{children:"Applies if LimitType = Prc[]"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"250"}),(0,s.jsx)(r.td,{children:"takeSurfPrcOffset"}),(0,s.jsx)(r.td,{children:"double"}),(0,s.jsx)(r.td,{children:"default=0"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"253"}),(0,s.jsx)(r.td,{children:"takeSurfVolOffset"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"default=0"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"256"}),(0,s.jsx)(r.td,{children:"orderPrcOffset"}),(0,s.jsx)(r.td,{children:"double"}),(0,s.jsx)(r.td,{children:"default=0"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"259"}),(0,s.jsx)(r.td,{children:"takeAlphaType"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/AlphaType",children:"enum : AlphaType"})}),(0,s.jsx)(r.td,{children:"Applies if takeLimitClass = Probability"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"262"}),(0,s.jsx)(r.td,{children:"makeAlphaType"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/AlphaType",children:"enum : AlphaType"})}),(0,s.jsx)(r.td,{children:"Applies if makeLimitClass = Probability"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"265"}),(0,s.jsx)(r.td,{children:"takeAlphaFactor"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"[-2,+2] takeProbLimit = MAX(takeProbability, takeProbAvg + takeAlphaFactor * takeProbStd) [if takeAlphaType = Relative]"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"268"}),(0,s.jsx)(r.td,{children:"makeAlphaFactor"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"[-2,+2] makeProbLimit = MAX(makeProbability, makeProbAvg + makeAlphaFactor * makeProbStd) [if takeAlphaType = Relative]"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"271"}),(0,s.jsx)(r.td,{children:"takeProbability"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"takeProbLimit = takeProbability [if takeAlphaType = Static]"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"274"}),(0,s.jsx)(r.td,{children:"makeProbability"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"makeProbLimit = makeProbability [if makeAlphaType = Static]"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"277"}),(0,s.jsx)(r.td,{children:"firmType"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/FirmType",children:"enum : FirmType"})}),(0,s.jsx)(r.td,{children:"Used to override firmType in account config. Default: None (use SpiderRock account configuration)."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"280"}),(0,s.jsx)(r.td,{children:"stockSide"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,s.jsx)(r.td,{children:"Stock Orde Side (if any)."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"283"}),(0,s.jsx)(r.td,{children:"ssaleFlag"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum : ShortSaleFlag"})}),(0,s.jsx)(r.td,{children:"Used to determine stock auto-hedge flags."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"608"}),(0,s.jsx)(r.td,{children:"locateFirm"}),(0,s.jsx)(r.td,{children:"string(6)"}),(0,s.jsx)(r.td,{children:"firm granting the locate if using an away locate source for this order"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"609"}),(0,s.jsx)(r.td,{children:"locatePool"}),(0,s.jsx)(r.td,{children:"string(16)"}),(0,s.jsx)(r.td,{children:"locate pool @ firm granting the locate"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"286"}),(0,s.jsx)(r.td,{children:"stockShares"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"Number of shares in spread package.  Default: 0 (none)."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"289"}),(0,s.jsx)(r.td,{children:"altStkLegID"}),(0,s.jsx)(r.td,{children:"string(24)"}),(0,s.jsx)(r.td,{children:"Optional stock leg ID."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"292"}),(0,s.jsx)(r.td,{children:"numOptionLegs"}),(0,s.jsx)(r.td,{children:"byte"}),(0,s.jsxs)(r.td,{children:["The number of valid legs below.  The first leg is required and the rest are optional.  For each optional leg ",(0,s.jsx)(r.code,{children:"okey_"})," and ",(0,s.jsx)(r.code,{children:"mult_"})," must be valid values whereas ",(0,s.jsx)(r.code,{children:"side_"}),", ",(0,s.jsx)(r.code,{children:"positionType_"}),", and ",(0,s.jsx)(r.code,{children:"legID_"})," will be assigned default values."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"295"}),(0,s.jsx)(r.td,{children:"multihedge"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/Multihedge",children:"enum : Multihedge"})}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"298"}),(0,s.jsx)(r.td,{children:"optionType"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/OptionType",children:"enum : OptionType"})}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"301"}),(0,s.jsx)(r.td,{children:"underliersPerCn"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"Default: 100."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"304"}),(0,s.jsx)(r.td,{children:"okey1"}),(0,s.jsx)(r.td,{children:"OptionKey"}),(0,s.jsx)(r.td,{children:"Option symbol for leg #1.  Must be a valid option symbol."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"307"}),(0,s.jsx)(r.td,{children:"mult1"}),(0,s.jsx)(r.td,{children:"ushort"}),(0,s.jsx)(r.td,{children:"Multiplier for leg #1.  Must be greater than zero."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"310"}),(0,s.jsx)(r.td,{children:"side1"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,s.jsx)(r.td,{children:"Order side for leg #1."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"313"}),(0,s.jsx)(r.td,{children:"positionType1"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/PositionType",children:"enum : PositionType"})}),(0,s.jsx)(r.td,{children:"Position type for leg #1."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"316"}),(0,s.jsx)(r.td,{children:"altLegID1"}),(0,s.jsx)(r.td,{children:"string(24)"}),(0,s.jsx)(r.td,{children:"ID for leg #1.  If left blank will be assigned an auto-generated ID."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"319"}),(0,s.jsx)(r.td,{children:"okey2"}),(0,s.jsx)(r.td,{children:"OptionKey"}),(0,s.jsx)(r.td,{children:"Option symbol for leg #2.  Must be a valid option symbol."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"322"}),(0,s.jsx)(r.td,{children:"mult2"}),(0,s.jsx)(r.td,{children:"ushort"}),(0,s.jsx)(r.td,{children:"Multiplier for leg #2.  Must be greater than zero."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"325"}),(0,s.jsx)(r.td,{children:"side2"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,s.jsx)(r.td,{children:"Order side for leg #2."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"328"}),(0,s.jsx)(r.td,{children:"positionType2"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/PositionType",children:"enum : PositionType"})}),(0,s.jsx)(r.td,{children:"Position type for leg #2."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"331"}),(0,s.jsx)(r.td,{children:"altLegID2"}),(0,s.jsx)(r.td,{children:"string(24)"}),(0,s.jsx)(r.td,{children:"ID for leg #2.  If left blank will be assigned an auto-generated ID."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"334"}),(0,s.jsx)(r.td,{children:"okey3"}),(0,s.jsx)(r.td,{children:"OptionKey"}),(0,s.jsx)(r.td,{children:"Option symbol for leg #3.  Must be a valid option symbol."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"337"}),(0,s.jsx)(r.td,{children:"mult3"}),(0,s.jsx)(r.td,{children:"ushort"}),(0,s.jsx)(r.td,{children:"Multiplier for leg #3.  Must be greater than zero."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"340"}),(0,s.jsx)(r.td,{children:"side3"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,s.jsx)(r.td,{children:"Order side for leg #3."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"343"}),(0,s.jsx)(r.td,{children:"positionType3"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/PositionType",children:"enum : PositionType"})}),(0,s.jsx)(r.td,{children:"Position type for leg #3."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"346"}),(0,s.jsx)(r.td,{children:"altLegID3"}),(0,s.jsx)(r.td,{children:"string(24)"}),(0,s.jsx)(r.td,{children:"ID for leg #3.  If left blank will be assigned an auto-generated ID."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"349"}),(0,s.jsx)(r.td,{children:"okey4"}),(0,s.jsx)(r.td,{children:"OptionKey"}),(0,s.jsx)(r.td,{children:"Option symbol for leg #4.  Must be a valid option symbol."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"352"}),(0,s.jsx)(r.td,{children:"mult4"}),(0,s.jsx)(r.td,{children:"ushort"}),(0,s.jsx)(r.td,{children:"Multiplier for leg #4.  Must be greater than zero."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"355"}),(0,s.jsx)(r.td,{children:"side4"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,s.jsx)(r.td,{children:"Order side for leg #4."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"358"}),(0,s.jsx)(r.td,{children:"positionType4"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/PositionType",children:"enum : PositionType"})}),(0,s.jsx)(r.td,{children:"Position type for leg #4."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"361"}),(0,s.jsx)(r.td,{children:"altLegID4"}),(0,s.jsx)(r.td,{children:"string(24)"}),(0,s.jsx)(r.td,{children:"ID for leg #4.  If left blank will be assigned an auto-generated ID."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"364"}),(0,s.jsx)(r.td,{children:"okey5"}),(0,s.jsx)(r.td,{children:"OptionKey"}),(0,s.jsx)(r.td,{children:"Option symbol for leg #5.  Must be a valid option symbol."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"367"}),(0,s.jsx)(r.td,{children:"mult5"}),(0,s.jsx)(r.td,{children:"ushort"}),(0,s.jsx)(r.td,{children:"Multiplier for leg #5.  Must be greater than zero."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"370"}),(0,s.jsx)(r.td,{children:"side5"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,s.jsx)(r.td,{children:"Order side for leg #5."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"373"}),(0,s.jsx)(r.td,{children:"positionType5"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/PositionType",children:"enum : PositionType"})}),(0,s.jsx)(r.td,{children:"Position type for leg #5."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"376"}),(0,s.jsx)(r.td,{children:"altLegID5"}),(0,s.jsx)(r.td,{children:"string(24)"}),(0,s.jsx)(r.td,{children:"ID for leg #5.  If left blank will be assigned an auto-generated ID."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"379"}),(0,s.jsx)(r.td,{children:"okey6"}),(0,s.jsx)(r.td,{children:"OptionKey"}),(0,s.jsx)(r.td,{children:"Option symbol for leg #6.  Must be a valid option symbol."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"382"}),(0,s.jsx)(r.td,{children:"mult6"}),(0,s.jsx)(r.td,{children:"ushort"}),(0,s.jsx)(r.td,{children:"Multiplier for leg #6.  Must be greater than zero."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"385"}),(0,s.jsx)(r.td,{children:"side6"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,s.jsx)(r.td,{children:"Order side for leg #6."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"388"}),(0,s.jsx)(r.td,{children:"positionType6"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/PositionType",children:"enum : PositionType"})}),(0,s.jsx)(r.td,{children:"Position type for leg #6."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"391"}),(0,s.jsx)(r.td,{children:"altLegID6"}),(0,s.jsx)(r.td,{children:"string(24)"}),(0,s.jsx)(r.td,{children:"ID for leg #6.  If left blank will be assigned an auto-generated ID."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"394"}),(0,s.jsx)(r.td,{children:"optPremium"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"The premium for the option legs, a contribution to the order premium.  Valid range is  [-9999.0, 9999.0].  Default: 0."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"397"}),(0,s.jsx)(r.td,{children:"orderRefUPrc"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"The stock reference price, a contribution to the order premium.  Default: 0."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"400"}),(0,s.jsx)(r.td,{children:"riskGroupId"}),(0,s.jsx)(r.td,{children:"long"}),(0,s.jsxs)(r.td,{children:["Default: 0 (none).  Required to be non-zero if ",(0,s.jsx)(r.code,{children:"autoHedge"})," is something other than None."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"599"}),(0,s.jsx)(r.td,{children:"reqAuxRiskGroupCtrl"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"403"}),(0,s.jsx)(r.td,{children:"refRMetric1Src"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/RMetricSource",children:"enum : RMetricSource"})}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"406"}),(0,s.jsx)(r.td,{children:"refRMetric2Src"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/RMetricSource",children:"enum : RMetricSource"})}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"409"}),(0,s.jsx)(r.td,{children:"refRMetric3Src"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/RMetricSource",children:"enum : RMetricSource"})}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"412"}),(0,s.jsx)(r.td,{children:"refRMetric4Src"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/RMetricSource",children:"enum : RMetricSource"})}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"415"}),(0,s.jsx)(r.td,{children:"refRMetric5Src"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/RMetricSource",children:"enum : RMetricSource"})}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"600"}),(0,s.jsx)(r.td,{children:"refRMetric6Src"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/RMetricSource",children:"enum : RMetricSource"})}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"418"}),(0,s.jsx)(r.td,{children:"refRMetric7Src"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/RMetricSource",children:"enum : RMetricSource"})}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"421"}),(0,s.jsx)(r.td,{children:"orderRefRMetric1"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"user supplied RMetric1 value (used in RiskGroupID risk controls) [netRMetric1 = sum(fillQty * orderRefRMetric1 * underlierPerCn)]"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"424"}),(0,s.jsx)(r.td,{children:"orderRefRMetric2"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"user supplied RMetric2 value (used in RiskGroupID risk controls) [netRMetric2 = sum(fillQty * orderRefRMetric2 * underlierPerCn)]"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"427"}),(0,s.jsx)(r.td,{children:"orderRefRMetric3"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"user supplied RMetric3 value (used in RiskGroupID risk controls) [netRMetric3 = sum(fillQty * orderRefRMetric3 * underlierPerCn)]"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"430"}),(0,s.jsx)(r.td,{children:"orderRefRMetric4"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"user supplied RMetric4 value (used in RiskGroupID risk controls) [netRMetric4 = sum(fillQty * orderRefRMetric4 * underlierPerCn)]"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"433"}),(0,s.jsx)(r.td,{children:"orderRefRMetric5"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"user supplied RMetric5 value (used in RiskGroupID risk controls) [netRMetric5 = sum(fillQty * orderRefRMetric5 * underlierPerCn)]"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"601"}),(0,s.jsx)(r.td,{children:"orderRefRMetric6"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"user supplied RMetric6 value (used in ExpDay risk controls) [netRMetric6 = sum(fillQty * orderRefRMetric6 * underlierPerCn)]"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"436"}),(0,s.jsx)(r.td,{children:"orderRefRMetric7"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"user supplied RMetric7 value (used in SymDay risk controls) [netRMetric7 = sum(fillQty * orderRefRMetric7 * underlierPerCn)]"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"602"}),(0,s.jsx)(r.td,{children:"expDayWtVegaOffset"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max acct+symbol day wtVega offset (target)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"603"}),(0,s.jsx)(r.td,{children:"maxExpDayWtVegaLn"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max accnt+expiration day (time weighted) vega long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"604"}),(0,s.jsx)(r.td,{children:"maxExpDayWtVegaSh"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max accnt+expiration day (time weighted) vega short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"605"}),(0,s.jsx)(r.td,{children:"maxExpDayRMetric6Ln"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max acct+expiration day rMetric6 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"606"}),(0,s.jsx)(r.td,{children:"maxExpDayRMetric6Sh"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max acct+expiration day rMetric6 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"481"}),(0,s.jsx)(r.td,{children:"symDayDDeltaOffset"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max acct+symbol day $delta offset (target)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"475"}),(0,s.jsx)(r.td,{children:"maxSymDayDDeltaLn"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max acct+symbol day $delta long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"478"}),(0,s.jsx)(r.td,{children:"maxSymDayDDeltaSh"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max acct+symbol day $delta short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"463"}),(0,s.jsx)(r.td,{children:"symDayVegaOffset"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max acct+symbol day vega offset (target)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"457"}),(0,s.jsx)(r.td,{children:"maxSymDayVegaLn"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max acct+symbol day vega long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"460"}),(0,s.jsx)(r.td,{children:"maxSymDayVegaSh"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max acct+symbol day vega short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"472"}),(0,s.jsx)(r.td,{children:"symDayWtVegaOffset"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max acct+symbol day wtVega offset (target)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"466"}),(0,s.jsx)(r.td,{children:"maxSymDayWtVegaLn"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max acct+symbol day (time weighted) vega long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"469"}),(0,s.jsx)(r.td,{children:"maxSymDayWtVegaSh"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max acct+symbol day (time weighted) vega short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"484"}),(0,s.jsx)(r.td,{children:"maxSymDayRMetric7Ln"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max acct+symbol day rMetric7 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"487"}),(0,s.jsx)(r.td,{children:"maxSymDayRMetric7Sh"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max acct+symbol day rMetric7 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"493"}),(0,s.jsx)(r.td,{children:"maxGrpDayDDeltaLn"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max acct+riskGroup day $delta long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"496"}),(0,s.jsx)(r.td,{children:"maxGrpDayDDeltaSh"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max acct+riskGroup day $delta short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"502"}),(0,s.jsx)(r.td,{children:"maxGrpDayVegaLn"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max acct+riskGroup day vega long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"505"}),(0,s.jsx)(r.td,{children:"maxGrpDayVegaSh"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max acct+riskGroup day vega short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"508"}),(0,s.jsx)(r.td,{children:"maxGrpDayVegaAbs"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max acct+riskGroup day vega abs (positive number;-1=no limit);risk limit = max limit - abs(current net counter)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"511"}),(0,s.jsx)(r.td,{children:"grpDayVegaRatio"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"target bot / sld ratio (eg ratio=2.0 means that neutral is bot vega = 2x sld vega)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"562"}),(0,s.jsx)(r.td,{children:"maxGrpDayContractsLn"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"max acct+riskGroup day opt contracts long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"565"}),(0,s.jsx)(r.td,{children:"maxGrpDayContractsSh"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"max acct+riskGroup day opt contracts short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"568"}),(0,s.jsx)(r.td,{children:"maxGrpDayContractsAbs"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"max acct+riskGroup day opt contracts abs (positive number;-1=no limit);risk limit = max limit - abs(current net counter)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"526"}),(0,s.jsx)(r.td,{children:"maxGrpDayRMetric1Ln"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max acct+riskGroup day rMetric1 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"529"}),(0,s.jsx)(r.td,{children:"maxGrpDayRMetric1Sh"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max acct+riskGroup day rMetric1 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"532"}),(0,s.jsx)(r.td,{children:"maxGrpDayRMetric1Abs"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max acct+riskGroup day rMetric1 abs (positive number;-1=no limit);risk limit = max limit - abs(current net counter)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"535"}),(0,s.jsx)(r.td,{children:"grpDayRMetric1Ratio"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"target bot / sld ratio (eg ratio=0.5 means that neutral is bot rMetric1 = 0.5x sld rMetric1)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"538"}),(0,s.jsx)(r.td,{children:"maxGrpDayRMetric2Ln"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max acct+riskGroup day rMetric2 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"541"}),(0,s.jsx)(r.td,{children:"maxGrpDayRMetric2Sh"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max acct+riskGroup day rMetric2 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"544"}),(0,s.jsx)(r.td,{children:"maxGrpDayRMetric3Ln"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max acct+riskGroup day rMetric3 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"547"}),(0,s.jsx)(r.td,{children:"maxGrpDayRMetric3Sh"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max acct+riskGroup day rMetric3 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"550"}),(0,s.jsx)(r.td,{children:"maxGrpDayRMetric4Ln"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max acct+riskGroup day rMetric4 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"553"}),(0,s.jsx)(r.td,{children:"maxGrpDayRMetric4Sh"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max acct+riskGroup day rMetric4 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"556"}),(0,s.jsx)(r.td,{children:"maxGrpDayRMetric5Ln"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max acct+riskGroup day rMetric5 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"559"}),(0,s.jsx)(r.td,{children:"maxGrpDayRMetric5Sh"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max acct+riskGroup day rMetric5 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"571"}),(0,s.jsx)(r.td,{children:"symEmaCxlDDeltaLn"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max acct+symbol 60s EMA $delta long (positive number; <= 0 is no limit) [will immediately cxl all option orders in a symbol if any order in the symbol breaches]"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"574"}),(0,s.jsx)(r.td,{children:"symEmaCxlDDeltaSh"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max acct+symbol 60s EMA $delta short (positive number; <= 0 is no limit)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"577"}),(0,s.jsx)(r.td,{children:"symEmaCxlWtVegaLn"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max acct+symbol 60s EMA wtVega long (positive number; <= 0 is no limit) [will immediately cxl all option orders in a symbol if any order in the symbol breaches]"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"580"}),(0,s.jsx)(r.td,{children:"symEmaCxlWtVegaSh"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max acct+symbol 60s EMA wtVega short (positive number; <= 0 is no limit)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"583"}),(0,s.jsx)(r.td,{children:"traderName"}),(0,s.jsx)(r.td,{children:"string(32)"}),(0,s.jsx)(r.td,{children:"Name of the trader associated with the order"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"586"}),(0,s.jsx)(r.td,{children:"userData1"}),(0,s.jsx)(r.td,{children:"text1"}),(0,s.jsx)(r.td,{children:"client supplied data field; passes through to parent and child executions and reports as well as FIX drops"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"589"}),(0,s.jsx)(r.td,{children:"userData2"}),(0,s.jsx)(r.td,{children:"text1"}),(0,s.jsx)(r.td,{children:"client supplied data field; passes through to parent and child executions and reports as well as FIX drops"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"592"}),(0,s.jsx)(r.td,{children:"childData"}),(0,s.jsx)(r.td,{children:"text1"}),(0,s.jsx)(r.td,{children:"client supplied data field; passes through to down stream child orders"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"595"}),(0,s.jsx)(r.td,{children:"checksum"}),(0,s.jsx)(r.td,{children:"byte"}),(0,s.jsx)(r.td,{children:"Must be set to 13.  This helps detect some column/value misalignments."})]})]})]}),"\n",(0,s.jsx)(r.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,s.jsxs)(a.Z,{children:[(0,s.jsx)(d.Z,{value:"Python",label:"Python",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'MLegOrderGateway'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n#Required Parameters\n\"apiKey\": API_KEY,\n\"cmd\": 'getschema',\n\"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,s.jsx)(d.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=MLegOrderGateway'\n\n"})})})]}),"\n",(0,s.jsx)(r.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,s.jsxs)(a.Z,{children:[(0,s.jsx)(d.Z,{value:"Python",label:"Python",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'MLegOrderGateway\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'spdrActionType|altOrderId|altAutoHedgeId|altAccnt|altUserName|execBrkrCode|strategy|orderDttm|orderSize|orderActiveSize|addCumFillQuantity|exchMask|maxExposureSize|numMakeExchanges|publicSize|randomizeSize|canOverlapCxlRepl|progressRule|twapSliceCnt|progressExposeTime|auctionResponder|autoHedge|hedgeInstrument|hedgeSecKey|hedgeBetaRatio|hedgeScope|hedgeSession|cxlUPrcRange|minUBid|maxUAsk|minMaxType|maxChildOrders|spdrStageType|marketSession|startDttm|orderDuration|activeDuration|goodTillDttm|startType|parentOrderHandling|parentBalanceHandling|orderLimitType|takeLimitClass|makeLimitClass|takeReachRule|leadSide|maxCompletionSlippage|orderPrcLimit|takeSurfPrcOffset|takeSurfVolOffset|orderPrcOffset|takeAlphaType|makeAlphaType|takeAlphaFactor|makeAlphaFactor|takeProbability|makeProbability|firmType|stockSide|ssaleFlag|locateFirm|locatePool|stockShares|altStkLegID|numOptionLegs|multihedge|optionType|underliersPerCn|okey1|mult1|side1|positionType1|altLegID1|okey2|mult2|side2|positionType2|altLegID2|okey3|mult3|side3|positionType3|altLegID3|okey4|mult4|side4|positionType4|altLegID4|okey5|mult5|side5|positionType5|altLegID5|okey6|mult6|side6|positionType6|altLegID6|optPremium|orderRefUPrc|riskGroupId|reqAuxRiskGroupCtrl|refRMetric1Src|refRMetric2Src|refRMetric3Src|refRMetric4Src|refRMetric5Src|refRMetric6Src|refRMetric7Src|orderRefRMetric1|orderRefRMetric2|orderRefRMetric3|orderRefRMetric4|orderRefRMetric5|orderRefRMetric6|orderRefRMetric7|expDayWtVegaOffset|maxExpDayWtVegaLn|maxExpDayWtVegaSh|maxExpDayRMetric6Ln|maxExpDayRMetric6Sh|symDayDDeltaOffset|maxSymDayDDeltaLn|maxSymDayDDeltaSh|symDayVegaOffset|maxSymDayVegaLn|maxSymDayVegaSh|symDayWtVegaOffset|maxSymDayWtVegaLn|maxSymDayWtVegaSh|maxSymDayRMetric7Ln|maxSymDayRMetric7Sh|maxGrpDayDDeltaLn|maxGrpDayDDeltaSh|maxGrpDayVegaLn|maxGrpDayVegaSh|maxGrpDayVegaAbs|grpDayVegaRatio|maxGrpDayContractsLn|maxGrpDayContractsSh|maxGrpDayContractsAbs|maxGrpDayRMetric1Ln|maxGrpDayRMetric1Sh|maxGrpDayRMetric1Abs|grpDayRMetric1Ratio|maxGrpDayRMetric2Ln|maxGrpDayRMetric2Sh|maxGrpDayRMetric3Ln|maxGrpDayRMetric3Sh|maxGrpDayRMetric4Ln|maxGrpDayRMetric4Sh|maxGrpDayRMetric5Ln|maxGrpDayRMetric5Sh|symEmaCxlDDeltaLn|symEmaCxlDDeltaSh|symEmaCxlWtVegaLn|symEmaCxlWtVegaSh|traderName|userData1|userData2|childData|checksum\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(d.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=MLegOrderGateway' \\\n--data-urlencode 'view=spdrActionType|altOrderId|altAutoHedgeId|altAccnt|altUserName|execBrkrCode|strategy|orderDttm|orderSize|orderActiveSize|addCumFillQuantity|exchMask|maxExposureSize|numMakeExchanges|publicSize|randomizeSize|canOverlapCxlRepl|progressRule|twapSliceCnt|progressExposeTime|auctionResponder|autoHedge|hedgeInstrument|hedgeSecKey|hedgeBetaRatio|hedgeScope|hedgeSession|cxlUPrcRange|minUBid|maxUAsk|minMaxType|maxChildOrders|spdrStageType|marketSession|startDttm|orderDuration|activeDuration|goodTillDttm|startType|parentOrderHandling|parentBalanceHandling|orderLimitType|takeLimitClass|makeLimitClass|takeReachRule|leadSide|maxCompletionSlippage|orderPrcLimit|takeSurfPrcOffset|takeSurfVolOffset|orderPrcOffset|takeAlphaType|makeAlphaType|takeAlphaFactor|makeAlphaFactor|takeProbability|makeProbability|firmType|stockSide|ssaleFlag|locateFirm|locatePool|stockShares|altStkLegID|numOptionLegs|multihedge|optionType|underliersPerCn|okey1|mult1|side1|positionType1|altLegID1|okey2|mult2|side2|positionType2|altLegID2|okey3|mult3|side3|positionType3|altLegID3|okey4|mult4|side4|positionType4|altLegID4|okey5|mult5|side5|positionType5|altLegID5|okey6|mult6|side6|positionType6|altLegID6|optPremium|orderRefUPrc|riskGroupId|reqAuxRiskGroupCtrl|refRMetric1Src|refRMetric2Src|refRMetric3Src|refRMetric4Src|refRMetric5Src|refRMetric6Src|refRMetric7Src|orderRefRMetric1|orderRefRMetric2|orderRefRMetric3|orderRefRMetric4|orderRefRMetric5|orderRefRMetric6|orderRefRMetric7|expDayWtVegaOffset|maxExpDayWtVegaLn|maxExpDayWtVegaSh|maxExpDayRMetric6Ln|maxExpDayRMetric6Sh|symDayDDeltaOffset|maxSymDayDDeltaLn|maxSymDayDDeltaSh|symDayVegaOffset|maxSymDayVegaLn|maxSymDayVegaSh|symDayWtVegaOffset|maxSymDayWtVegaLn|maxSymDayWtVegaSh|maxSymDayRMetric7Ln|maxSymDayRMetric7Sh|maxGrpDayDDeltaLn|maxGrpDayDDeltaSh|maxGrpDayVegaLn|maxGrpDayVegaSh|maxGrpDayVegaAbs|grpDayVegaRatio|maxGrpDayContractsLn|maxGrpDayContractsSh|maxGrpDayContractsAbs|maxGrpDayRMetric1Ln|maxGrpDayRMetric1Sh|maxGrpDayRMetric1Abs|grpDayRMetric1Ratio|maxGrpDayRMetric2Ln|maxGrpDayRMetric2Sh|maxGrpDayRMetric3Ln|maxGrpDayRMetric3Sh|maxGrpDayRMetric4Ln|maxGrpDayRMetric4Sh|maxGrpDayRMetric5Ln|maxGrpDayRMetric5Sh|symEmaCxlDDeltaLn|symEmaCxlDDeltaSh|symEmaCxlWtVegaLn|symEmaCxlWtVegaSh|traderName|userData1|userData2|childData|checksum' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,s.jsx)(r.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,s.jsxs)(a.Z,{children:[(0,s.jsx)(d.Z,{value:"Python",label:"Python",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'MLegOrderGateway\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'spdrActionType|altOrderId|altAutoHedgeId|altAccnt|altUserName|execBrkrCode|strategy|orderDttm|orderSize|orderActiveSize|addCumFillQuantity|exchMask|maxExposureSize|numMakeExchanges|publicSize|randomizeSize|canOverlapCxlRepl|progressRule|twapSliceCnt|progressExposeTime|auctionResponder|autoHedge|hedgeInstrument|hedgeSecKey|hedgeBetaRatio|hedgeScope|hedgeSession|cxlUPrcRange|minUBid|maxUAsk|minMaxType|maxChildOrders|spdrStageType|marketSession|startDttm|orderDuration|activeDuration|goodTillDttm|startType|parentOrderHandling|parentBalanceHandling|orderLimitType|takeLimitClass|makeLimitClass|takeReachRule|leadSide|maxCompletionSlippage|orderPrcLimit|takeSurfPrcOffset|takeSurfVolOffset|orderPrcOffset|takeAlphaType|makeAlphaType|takeAlphaFactor|makeAlphaFactor|takeProbability|makeProbability|firmType|stockSide|ssaleFlag|locateFirm|locatePool|stockShares|altStkLegID|numOptionLegs|multihedge|optionType|underliersPerCn|okey1|mult1|side1|positionType1|altLegID1|okey2|mult2|side2|positionType2|altLegID2|okey3|mult3|side3|positionType3|altLegID3|okey4|mult4|side4|positionType4|altLegID4|okey5|mult5|side5|positionType5|altLegID5|okey6|mult6|side6|positionType6|altLegID6|optPremium|orderRefUPrc|riskGroupId|reqAuxRiskGroupCtrl|refRMetric1Src|refRMetric2Src|refRMetric3Src|refRMetric4Src|refRMetric5Src|refRMetric6Src|refRMetric7Src|orderRefRMetric1|orderRefRMetric2|orderRefRMetric3|orderRefRMetric4|orderRefRMetric5|orderRefRMetric6|orderRefRMetric7|expDayWtVegaOffset|maxExpDayWtVegaLn|maxExpDayWtVegaSh|maxExpDayRMetric6Ln|maxExpDayRMetric6Sh|symDayDDeltaOffset|maxSymDayDDeltaLn|maxSymDayDDeltaSh|symDayVegaOffset|maxSymDayVegaLn|maxSymDayVegaSh|symDayWtVegaOffset|maxSymDayWtVegaLn|maxSymDayWtVegaSh|maxSymDayRMetric7Ln|maxSymDayRMetric7Sh|maxGrpDayDDeltaLn|maxGrpDayDDeltaSh|maxGrpDayVegaLn|maxGrpDayVegaSh|maxGrpDayVegaAbs|grpDayVegaRatio|maxGrpDayContractsLn|maxGrpDayContractsSh|maxGrpDayContractsAbs|maxGrpDayRMetric1Ln|maxGrpDayRMetric1Sh|maxGrpDayRMetric1Abs|grpDayRMetric1Ratio|maxGrpDayRMetric2Ln|maxGrpDayRMetric2Sh|maxGrpDayRMetric3Ln|maxGrpDayRMetric3Sh|maxGrpDayRMetric4Ln|maxGrpDayRMetric4Sh|maxGrpDayRMetric5Ln|maxGrpDayRMetric5Sh|symEmaCxlDDeltaLn|symEmaCxlDDeltaSh|symEmaCxlWtVegaLn|symEmaCxlWtVegaSh|traderName|userData1|userData2|childData|checksum\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'spdrActionType:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(d.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=MLegOrderGateway' \\\n--data-urlencode 'view=spdrActionType|altOrderId|altAutoHedgeId|altAccnt|altUserName|execBrkrCode|strategy|orderDttm|orderSize|orderActiveSize|addCumFillQuantity|exchMask|maxExposureSize|numMakeExchanges|publicSize|randomizeSize|canOverlapCxlRepl|progressRule|twapSliceCnt|progressExposeTime|auctionResponder|autoHedge|hedgeInstrument|hedgeSecKey|hedgeBetaRatio|hedgeScope|hedgeSession|cxlUPrcRange|minUBid|maxUAsk|minMaxType|maxChildOrders|spdrStageType|marketSession|startDttm|orderDuration|activeDuration|goodTillDttm|startType|parentOrderHandling|parentBalanceHandling|orderLimitType|takeLimitClass|makeLimitClass|takeReachRule|leadSide|maxCompletionSlippage|orderPrcLimit|takeSurfPrcOffset|takeSurfVolOffset|orderPrcOffset|takeAlphaType|makeAlphaType|takeAlphaFactor|makeAlphaFactor|takeProbability|makeProbability|firmType|stockSide|ssaleFlag|locateFirm|locatePool|stockShares|altStkLegID|numOptionLegs|multihedge|optionType|underliersPerCn|okey1|mult1|side1|positionType1|altLegID1|okey2|mult2|side2|positionType2|altLegID2|okey3|mult3|side3|positionType3|altLegID3|okey4|mult4|side4|positionType4|altLegID4|okey5|mult5|side5|positionType5|altLegID5|okey6|mult6|side6|positionType6|altLegID6|optPremium|orderRefUPrc|riskGroupId|reqAuxRiskGroupCtrl|refRMetric1Src|refRMetric2Src|refRMetric3Src|refRMetric4Src|refRMetric5Src|refRMetric6Src|refRMetric7Src|orderRefRMetric1|orderRefRMetric2|orderRefRMetric3|orderRefRMetric4|orderRefRMetric5|orderRefRMetric6|orderRefRMetric7|expDayWtVegaOffset|maxExpDayWtVegaLn|maxExpDayWtVegaSh|maxExpDayRMetric6Ln|maxExpDayRMetric6Sh|symDayDDeltaOffset|maxSymDayDDeltaLn|maxSymDayDDeltaSh|symDayVegaOffset|maxSymDayVegaLn|maxSymDayVegaSh|symDayWtVegaOffset|maxSymDayWtVegaLn|maxSymDayWtVegaSh|maxSymDayRMetric7Ln|maxSymDayRMetric7Sh|maxGrpDayDDeltaLn|maxGrpDayDDeltaSh|maxGrpDayVegaLn|maxGrpDayVegaSh|maxGrpDayVegaAbs|grpDayVegaRatio|maxGrpDayContractsLn|maxGrpDayContractsSh|maxGrpDayContractsAbs|maxGrpDayRMetric1Ln|maxGrpDayRMetric1Sh|maxGrpDayRMetric1Abs|grpDayRMetric1Ratio|maxGrpDayRMetric2Ln|maxGrpDayRMetric2Sh|maxGrpDayRMetric3Ln|maxGrpDayRMetric3Sh|maxGrpDayRMetric4Ln|maxGrpDayRMetric4Sh|maxGrpDayRMetric5Ln|maxGrpDayRMetric5Sh|symEmaCxlDDeltaLn|symEmaCxlDDeltaSh|symEmaCxlWtVegaLn|symEmaCxlWtVegaSh|traderName|userData1|userData2|childData|checksum' \\\n--data-urlencode 'where=accnt:eq:ExampleString' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=spdrActionType:ASC'\n"})})})]}),"\n",(0,s.jsx)(r.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,s.jsxs)(a.Z,{children:[(0,s.jsx)(d.Z,{value:"Python",label:"Python",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'MLegOrderGateway\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'spdrActionType|altOrderId|altAutoHedgeId|altAccnt|altUserName|execBrkrCode|strategy|orderDttm|orderSize|orderActiveSize|addCumFillQuantity|exchMask|maxExposureSize|numMakeExchanges|publicSize|randomizeSize|canOverlapCxlRepl|progressRule|twapSliceCnt|progressExposeTime|auctionResponder|autoHedge|hedgeInstrument|hedgeSecKey|hedgeBetaRatio|hedgeScope|hedgeSession|cxlUPrcRange|minUBid|maxUAsk|minMaxType|maxChildOrders|spdrStageType|marketSession|startDttm|orderDuration|activeDuration|goodTillDttm|startType|parentOrderHandling|parentBalanceHandling|orderLimitType|takeLimitClass|makeLimitClass|takeReachRule|leadSide|maxCompletionSlippage|orderPrcLimit|takeSurfPrcOffset|takeSurfVolOffset|orderPrcOffset|takeAlphaType|makeAlphaType|takeAlphaFactor|makeAlphaFactor|takeProbability|makeProbability|firmType|stockSide|ssaleFlag|locateFirm|locatePool|stockShares|altStkLegID|numOptionLegs|multihedge|optionType|underliersPerCn|okey1|mult1|side1|positionType1|altLegID1|okey2|mult2|side2|positionType2|altLegID2|okey3|mult3|side3|positionType3|altLegID3|okey4|mult4|side4|positionType4|altLegID4|okey5|mult5|side5|positionType5|altLegID5|okey6|mult6|side6|positionType6|altLegID6|optPremium|orderRefUPrc|riskGroupId|reqAuxRiskGroupCtrl|refRMetric1Src|refRMetric2Src|refRMetric3Src|refRMetric4Src|refRMetric5Src|refRMetric6Src|refRMetric7Src|orderRefRMetric1|orderRefRMetric2|orderRefRMetric3|orderRefRMetric4|orderRefRMetric5|orderRefRMetric6|orderRefRMetric7|expDayWtVegaOffset|maxExpDayWtVegaLn|maxExpDayWtVegaSh|maxExpDayRMetric6Ln|maxExpDayRMetric6Sh|symDayDDeltaOffset|maxSymDayDDeltaLn|maxSymDayDDeltaSh|symDayVegaOffset|maxSymDayVegaLn|maxSymDayVegaSh|symDayWtVegaOffset|maxSymDayWtVegaLn|maxSymDayWtVegaSh|maxSymDayRMetric7Ln|maxSymDayRMetric7Sh|maxGrpDayDDeltaLn|maxGrpDayDDeltaSh|maxGrpDayVegaLn|maxGrpDayVegaSh|maxGrpDayVegaAbs|grpDayVegaRatio|maxGrpDayContractsLn|maxGrpDayContractsSh|maxGrpDayContractsAbs|maxGrpDayRMetric1Ln|maxGrpDayRMetric1Sh|maxGrpDayRMetric1Abs|grpDayRMetric1Ratio|maxGrpDayRMetric2Ln|maxGrpDayRMetric2Sh|maxGrpDayRMetric3Ln|maxGrpDayRMetric3Sh|maxGrpDayRMetric4Ln|maxGrpDayRMetric4Sh|maxGrpDayRMetric5Ln|maxGrpDayRMetric5Sh|symEmaCxlDDeltaLn|symEmaCxlDDeltaSh|symEmaCxlWtVegaLn|symEmaCxlWtVegaSh|traderName|userData1|userData2|childData|checksum\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'spdrActionType|addCumFillQuantity|publicSize|randomizeSize|canOverlapCxlRepl|progressRule|auctionResponder|autoHedge|hedgeInstrument|hedgeScope|hedgeSession|cxlUPrcRange|minMaxType|spdrStageType|marketSession|startType|parentOrderHandling|parentBalanceHandling|orderLimitType|takeLimitClass|makeLimitClass|takeReachRule|leadSide|takeAlphaType|makeAlphaType|firmType|stockSide|ssaleFlag|multihedge|optionType|side1|positionType1|side2|positionType2|side3|positionType3|side4|positionType4|side5|positionType5|side6|positionType6|reqAuxRiskGroupCtrl|refRMetric1Src|refRMetric2Src|refRMetric3Src|refRMetric4Src|refRMetric5Src|refRMetric6Src|refRMetric7Src\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getaggregate\',\n"msgType": MSG_TYPE,\n"measure": MEASURE,\n"group": GROUP,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(d.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=MLegOrderGateway' \\\n--data-urlencode 'measure=spdrActionType|altOrderId|altAutoHedgeId|altAccnt|altUserName|execBrkrCode|strategy|orderDttm|orderSize|orderActiveSize|addCumFillQuantity|exchMask|maxExposureSize|numMakeExchanges|publicSize|randomizeSize|canOverlapCxlRepl|progressRule|twapSliceCnt|progressExposeTime|auctionResponder|autoHedge|hedgeInstrument|hedgeSecKey|hedgeBetaRatio|hedgeScope|hedgeSession|cxlUPrcRange|minUBid|maxUAsk|minMaxType|maxChildOrders|spdrStageType|marketSession|startDttm|orderDuration|activeDuration|goodTillDttm|startType|parentOrderHandling|parentBalanceHandling|orderLimitType|takeLimitClass|makeLimitClass|takeReachRule|leadSide|maxCompletionSlippage|orderPrcLimit|takeSurfPrcOffset|takeSurfVolOffset|orderPrcOffset|takeAlphaType|makeAlphaType|takeAlphaFactor|makeAlphaFactor|takeProbability|makeProbability|firmType|stockSide|ssaleFlag|locateFirm|locatePool|stockShares|altStkLegID|numOptionLegs|multihedge|optionType|underliersPerCn|okey1|mult1|side1|positionType1|altLegID1|okey2|mult2|side2|positionType2|altLegID2|okey3|mult3|side3|positionType3|altLegID3|okey4|mult4|side4|positionType4|altLegID4|okey5|mult5|side5|positionType5|altLegID5|okey6|mult6|side6|positionType6|altLegID6|optPremium|orderRefUPrc|riskGroupId|reqAuxRiskGroupCtrl|refRMetric1Src|refRMetric2Src|refRMetric3Src|refRMetric4Src|refRMetric5Src|refRMetric6Src|refRMetric7Src|orderRefRMetric1|orderRefRMetric2|orderRefRMetric3|orderRefRMetric4|orderRefRMetric5|orderRefRMetric6|orderRefRMetric7|expDayWtVegaOffset|maxExpDayWtVegaLn|maxExpDayWtVegaSh|maxExpDayRMetric6Ln|maxExpDayRMetric6Sh|symDayDDeltaOffset|maxSymDayDDeltaLn|maxSymDayDDeltaSh|symDayVegaOffset|maxSymDayVegaLn|maxSymDayVegaSh|symDayWtVegaOffset|maxSymDayWtVegaLn|maxSymDayWtVegaSh|maxSymDayRMetric7Ln|maxSymDayRMetric7Sh|maxGrpDayDDeltaLn|maxGrpDayDDeltaSh|maxGrpDayVegaLn|maxGrpDayVegaSh|maxGrpDayVegaAbs|grpDayVegaRatio|maxGrpDayContractsLn|maxGrpDayContractsSh|maxGrpDayContractsAbs|maxGrpDayRMetric1Ln|maxGrpDayRMetric1Sh|maxGrpDayRMetric1Abs|grpDayRMetric1Ratio|maxGrpDayRMetric2Ln|maxGrpDayRMetric2Sh|maxGrpDayRMetric3Ln|maxGrpDayRMetric3Sh|maxGrpDayRMetric4Ln|maxGrpDayRMetric4Sh|maxGrpDayRMetric5Ln|maxGrpDayRMetric5Sh|symEmaCxlDDeltaLn|symEmaCxlDDeltaSh|symEmaCxlWtVegaLn|symEmaCxlWtVegaSh|traderName|userData1|userData2|childData|checksum' \\\n--data-urlencode 'group=spdrActionType|addCumFillQuantity|publicSize|randomizeSize|canOverlapCxlRepl|progressRule|auctionResponder|autoHedge|hedgeInstrument|hedgeScope|hedgeSession|cxlUPrcRange|minMaxType|spdrStageType|marketSession|startType|parentOrderHandling|parentBalanceHandling|orderLimitType|takeLimitClass|makeLimitClass|takeReachRule|leadSide|takeAlphaType|makeAlphaType|firmType|stockSide|ssaleFlag|multihedge|optionType|side1|positionType1|side2|positionType2|side3|positionType3|side4|positionType4|side5|positionType5|side6|positionType6|reqAuxRiskGroupCtrl|refRMetric1Src|refRMetric2Src|refRMetric3Src|refRMetric4Src|refRMetric5Src|refRMetric6Src|refRMetric7Src' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,s.jsx)(r.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,s.jsxs)(a.Z,{children:[(0,s.jsx)(d.Z,{value:"Python",label:"Python",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'MLegOrderGateway\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(d.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=MLegOrderGateway' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]})]})}function m(e={}){let{wrapper:r}={...(0,n.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}},9641:function(e,r,t){t.d(r,{Z:()=>n});var i=t("52676");t("75271");var s=t("54461");function n(e){let{children:r,hidden:t,className:n}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,s.Z)("tabItem_SSzl",n),hidden:t,children:r})}},71386:function(e,r,t){t.d(r,{Z:()=>g});var i=t("52676"),s=t("75271"),n=t("54461"),a=t("52289"),d=t("3225"),l=t("42834"),c=t("40578"),o=t("35834"),h=t("79616");function x(e){return s.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||s.isValidElement(e)&&function(e){let{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function m(e){let{value:r,tabValues:t}=e;return t.some(e=>e.value===r)}var p=t("44537");function u(e){let{className:r,block:t,selectedValue:s,selectValue:d,tabValues:l}=e,c=[],{blockElementScrollPositionUntilNextRender:o}=(0,a.o5)(),h=e=>{let r=e.currentTarget,t=l[c.indexOf(r)].value;t!==s&&(o(r),d(t))},x=e=>{let r=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{let t=c.indexOf(e.currentTarget)+1;r=c[t]??c[0];break}case"ArrowLeft":{let t=c.indexOf(e.currentTarget)-1;r=c[t]??c[c.length-1]}}r?.focus()};return(0,i.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.Z)("tabs",{"tabs--block":t},r),children:l.map(e=>{let{value:r,label:t,attributes:a}=e;return(0,i.jsx)("li",{role:"tab",tabIndex:s===r?0:-1,"aria-selected":s===r,ref:e=>c.push(e),onKeyDown:x,onClick:h,...a,className:(0,n.Z)("tabs__item","tabItem_aitt",a?.className,{"tabs__item--active":s===r}),children:t??r},r)})})}function j(e){let{lazy:r,children:t,selectedValue:a}=e,d=(Array.isArray(t)?t:[t]).filter(Boolean);if(r){let e=d.find(e=>e.props.value===a);return e?(0,s.cloneElement)(e,{className:(0,n.Z)("margin-top--md",e.props.className)}):null}return(0,i.jsx)("div",{className:"margin-top--md",children:d.map((e,r)=>(0,s.cloneElement)(e,{key:r,hidden:e.props.value!==a}))})}function y(e){let r=function(e){let{defaultValue:r,queryString:t=!1,groupId:i}=e,n=function(e){let{values:r,children:t}=e;return(0,s.useMemo)(()=>{let e=r??x(t).map(e=>{let{props:{value:r,label:t,attributes:i,default:s}}=e;return{value:r,label:t,attributes:i,default:s}});return!function(e){let r=(0,o.lx)(e,(e,r)=>e.value===r.value);if(r.length>0)throw Error(`Docusaurus error: Duplicate values "${r.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[r,t])}(e),[a,p]=(0,s.useState)(()=>(function(e){let{defaultValue:r,tabValues:t}=e;if(0===t.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!m({value:r,tabValues:t}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${r}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return r}let i=t.find(e=>e.default)??t[0];if(!i)throw Error("Unexpected error: 0 tabValues");return i.value})({defaultValue:r,tabValues:n})),[u,j]=function(e){let{queryString:r=!1,groupId:t}=e,i=(0,d.k6)(),n=function(e){let{queryString:r=!1,groupId:t}=e;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!t)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:r,groupId:t});return[(0,c._X)(n),(0,s.useCallback)(e=>{if(!n)return;let r=new URLSearchParams(i.location.search);r.set(n,e),i.replace({...i.location,search:r.toString()})},[n,i])]}({queryString:t,groupId:i}),[y,g]=function(e){let{groupId:r}=e,t=r?`docusaurus.tab.${r}`:null,[i,n]=(0,h.Nk)(t);return[i,(0,s.useCallback)(e=>{t&&n.set(e)},[t,n])]}({groupId:i}),f=(()=>{let e=u??y;return m({value:e,tabValues:n})?e:null})();return(0,l.Z)(()=>{f&&p(f)},[f]),{selectedValue:a,selectValue:(0,s.useCallback)(e=>{if(!m({value:e,tabValues:n}))throw Error(`Can't select invalid tab value=${e}`);p(e),j(e),g(e)},[j,g,n]),tabValues:n}}(e);return(0,i.jsxs)("div",{className:(0,n.Z)("tabs-container","tabList_ArS0"),children:[(0,i.jsx)(u,{...r,...e}),(0,i.jsx)(j,{...r,...e})]})}function g(e){let r=(0,p.Z)();return(0,i.jsx)(y,{...e,children:x(e.children)},String(r))}},91503:function(e,r,t){t.d(r,{Z:function(){return d},a:function(){return a}});var i=t(75271);let s={},n=i.createContext(s);function a(e){let r=i.useContext(n);return i.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(n.Provider,{value:r},e.children)}}}]);