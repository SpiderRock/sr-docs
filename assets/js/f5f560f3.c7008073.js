"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[24496],{22360:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>n,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var r=s(74848),i=s(28453);const a={title:"SRSE",sidebar_position:4},n=void 0,o={id:"Documentation/PlatformAPIs/SRSE/SRSE",title:"SRSE",description:"The purpose of this guide is to describe the SpiderRock live MySQL database product called SRSE (SpiderRock Storage Engine) and to illustrate use cases with practical examples so that users can be proficient in using SRSE as quickly as possible. More detailed spec documents can be provided upon request.",source:"@site/docs/Documentation/PlatformAPIs/SRSE/SRSE.md",sourceDirName:"Documentation/PlatformAPIs/SRSE",slug:"/Documentation/PlatformAPIs/SRSE/",permalink:"/docs/Documentation/PlatformAPIs/SRSE/",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"SRSE",sidebar_position:4},sidebar:"documentationSidebar",previous:{title:"MLink Websocket API",permalink:"/docs/Documentation/PlatformAPIs/MLink/WebSocket"},next:{title:"FIX",permalink:"/docs/Documentation/PlatformAPIs/FIX/"}},l={},d=[{value:"How to Connect to SRSE",id:"how-to-connect-to-srse",level:2},{value:"SRSE Databases Summary",id:"srse-databases-summary",level:2},{value:"DocTables and DocColumns",id:"doctables-and-doccolumns",level:2},{value:"Query Example",id:"query-example",level:4},{value:"Workflow Example: Implementation of a Systematic Strategy",id:"workflow-example-implementation-of-a-systematic-strategy",level:4}];function c(e){const t={a:"a",h2:"h2",h4:"h4",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"The purpose of this guide is to describe the SpiderRock live MySQL database product called SRSE (SpiderRock Storage Engine) and to illustrate use cases with practical examples so that users can be proficient in using SRSE as quickly as possible. More detailed spec documents can be provided upon request."}),"\n",(0,r.jsx)(t.p,{children:"The SpiderRock Database is a MySQL 5.5 server with a proprietary in-memory storage engine SRSE (\u201cSAR-see\u201d) that interfaces with the SpiderRock Live Messaging Platform and is hosted in the SpiderRock datacenters."}),"\n",(0,r.jsx)(t.p,{children:"Records selected from SRSE tables are the current (most recent) version of corresponding live data records broadcast within the SpiderRock environment. Records inserted into SRSE tables are typically published as live data records and consumed elsewhere in the environment."}),"\n",(0,r.jsx)(t.p,{children:"SRSE listens to all live records traveling through the SpiderRock message bus and makes the current leading edge data available using MySQL bulk SELECT syntax. For example, users can easily do bulk downloads of live equity, options and futures NBBO prices, implied volatilities, Greeks, prints, other risk records and much more. SRSE is also a high throughput gateway via which users can easily upload parent orders that are tightly integrated with the SpiderRock execution algorithms and the SpiderRock GUI tools."}),"\n",(0,r.jsx)(t.p,{children:"All MySQL/SRSE database servers are located in SpiderRock datacenters and managed by SpiderRock.  These servers can be accessed using SQL console tools or database drivers capable of connecting to MySQL 5.5 or later."}),"\n",(0,r.jsx)(t.p,{children:"SRSE is a consortium of eight databases, conveniently organized by theme or task:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"SR Analytics"}),"\n",(0,r.jsx)(t.li,{children:"SR Trade"}),"\n",(0,r.jsx)(t.li,{children:"SR Live"}),"\n",(0,r.jsx)(t.li,{children:"SR Spread"}),"\n",(0,r.jsx)(t.li,{children:"SR Auction"}),"\n",(0,r.jsx)(t.li,{children:"SR Risk"}),"\n",(0,r.jsx)(t.li,{children:"SR Control"}),"\n",(0,r.jsx)(t.li,{children:"SR Theo"}),"\n"]}),"\n",(0,r.jsxs)("ol",{children:[" ",(0,r.jsx)("strong",{children:" Note: "})," Many of the live multicast streams that feed data to SRSE servers can be accessed directly from the wire using SpiderRock multicast packet handling libraries or by integrating our packet layouts directly into your multicast gateway(s). Contact SpiderRock customer support for more details. "]}),"\n",(0,r.jsx)(t.h2,{id:"how-to-connect-to-srse",children:"How to Connect to SRSE"}),"\n",(0,r.jsx)(t.p,{children:"Access to SRSE is available via a MySQL TCP connection using an assigned address/port combination. SRSE servers are available in our NY4 (Secaucus, New Jersey) or CH2 (Chicago, Illinois) datacenters and can be accessed by cross connect or via any suitable network connection, including over the public internet. Encrypted SSL connectivity is also available."}),"\n",(0,r.jsx)(t.p,{children:"Clients connect using MySQL drivers (v5.5orlater) from an environment of their choice and are free to make unlimited data requests to build data driven analytics, monitor risk or systematize algorithmic trading. SRSE is optimized for high throughput operations."}),"\n",(0,r.jsx)(t.h2,{id:"srse-databases-summary",children:"SRSE Databases Summary"}),"\n",(0,r.jsx)(t.p,{children:"SRSE is a custom in-memory storage engine built on SQL to access all live records passing through the SpiderRock Message Bus. It allows our clients to interact with all aspects of the system in real-time."}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"SRSE Database"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"/docs/MessageSchemas/Schema/SRSE%20Products/SRAnalytics/",children:(0,r.jsx)(t.strong,{children:"SR Analytics"})})}),(0,r.jsxs)(t.td,{children:["- Live and prior day SpiderRock live surfaces ",(0,r.jsx)("br",{})," - Live and prior day implied volatilities and greeks ",(0,r.jsx)("br",{})," - Rate curve, dividend, and earning estimates ",(0,r.jsx)("br",{})," - Historical underlying volatility tables"]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"/docs/MessageSchemas/Schema/SRSE%20Products/SRTrade/",children:(0,r.jsx)(t.strong,{children:"SR Trade"})})}),(0,r.jsxs)(t.td,{children:["- SpiderRock equity, option, and future parent order management ",(0,r.jsx)("br",{})," - Parent order executions and parent order reports ",(0,r.jsx)("br",{})," - Multi-leg parent order management ",(0,r.jsx)("br",{})," - Upload away executions (drops)"]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"/docs/MessageSchemas/Schema/SRSE%20Products/SRLive/",children:(0,r.jsx)(t.strong,{children:"SR Live"})})}),(0,r.jsxs)(t.td,{children:["- U.S. equitiy, option, and future live quotes and prints ",(0,r.jsx)("br",{})," - Product definition tables (OCC, CME, ICE, & Equity NMS) ",(0,r.jsx)("br",{})," - Complex order book quotes and exchange imbalances ",(0,r.jsx)("br",{})," - High throughout bulk access to full market data universe"]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"/docs/MessageSchemas/Schema/SRSE%20Products/SRSpread/",children:(0,r.jsx)(t.strong,{children:"SR Spread"})})}),(0,r.jsxs)(t.td,{children:["- U.S. equity options live quotes ",(0,r.jsx)("br",{})," - U.S. options on futures live quotes and prints ",(0,r.jsx)("br",{})," - Futures spread market tables"]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"/docs/MessageSchemas/Schema/SRSE%20Products/SRAuction/",children:(0,r.jsx)(t.strong,{children:"SR Auction"})})}),(0,r.jsxs)(t.td,{children:["- Normalized equity option single leg and complex auction feeds ",(0,r.jsx)("br",{})," - Auction result analytics"]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"/docs/MessageSchemas/Schema/SRSE%20Products/SRRisk/",children:(0,r.jsx)(t.strong,{children:"SR Risk"})})}),(0,r.jsxs)(t.td,{children:["- Prior day SpiderRock archived positions and marks ",(0,r.jsx)("br",{})," - Start-of-period clearing firm positions and marks ",(0,r.jsx)("br",{})," - SpiderRock executions and inbound away drops ",(0,r.jsx)("br",{})," - Live position greeks and slide risk across entire portfolio"]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"/docs/MessageSchemas/Schema/SRSE%20Products/SRControl/",children:(0,r.jsx)(t.strong,{children:"SR Control"})})}),(0,r.jsxs)(t.td,{children:["- View and manage symbol and user supervisory trade risk controls ",(0,r.jsx)("br",{})," - Manage borrow rates, locates, and restricted trading lists ",(0,r.jsx)("br",{})," - Dynamically control algo configuration and delivery instructions ",(0,r.jsx)("br",{})," - Integrated with SpiderRock GUI tools"]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"/docs/MessageSchemas/Schema/SRSE%20Products/SRTheo/",children:(0,r.jsx)(t.strong,{children:"SR Theo"})})}),(0,r.jsxs)(t.td,{children:["- Upload parameterized or splined theoretical volatility surfaces ",(0,r.jsx)("br",{})," - Download per-strike theoretical volatilities, price, and greeks ",(0,r.jsx)("br",{})," - Manage buy/sell/volatility levels for idea generation and position evaluation ",(0,r.jsx)("br",{})," -  Integrated with SpiderRock GUIs and other SRSE tables"]})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"doctables-and-doccolumns",children:"DocTables and DocColumns"}),"\n",(0,r.jsx)(t.p,{children:"The docTables table can be used to view all tables available in a database within SRSE. SELECT * FROM SRLive009.doctables;\n[image to be inserted here]"}),"\n",(0,r.jsx)(t.p,{children:"The docColumns table contains column/field descriptions along with other useful column metadata normally found in MySQL when using the DESC command."}),"\n",(0,r.jsx)(t.p,{children:"This is also helpful to find out which fields are required in a query. If the column default field is blank, the field must be set."}),"\n",(0,r.jsx)(t.h4,{id:"query-example",children:"Query Example"}),"\n",(0,r.jsx)(t.p,{children:"SELECT * FROM SRTrade009.docColumns WHERE table_name = 'msgoptordergateway';"}),"\n",(0,r.jsx)(t.p,{children:"[image to be inserted here]"}),"\n",(0,r.jsx)(t.h4,{id:"workflow-example-implementation-of-a-systematic-strategy",children:"Workflow Example: Implementation of a Systematic Strategy"}),"\n",(0,r.jsx)(t.p,{children:"A typical approach to implement a systematic trading strategy via SRSE can be summarized with the following steps using the coding language of the client\u2019s choice:"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsx)(t.li,{children:"Select the target strike greeks from the msgOptionImpliedQuote table (SRAnalytics)."}),"\n",(0,r.jsx)(t.li,{children:"Select current risk tallies for all associated executions so far today (SRRisk)."}),"\n",(0,r.jsx)(t.li,{children:"Compose a parent order basket based on the results from the above queries and any additional risk or order handling parameters and insert back into the msgOptOrderGateway table, usually using \u201cLOAD DATA INFILE\u201d syntax. (SRTrade)"}),"\n",(0,r.jsx)(t.li,{children:"Monitor working parent orders by repeatedly selecting from the msgsroptbrkrstate table (SRTrade) and/or watching the Order Manager tool."}),"\n",(0,r.jsx)(t.li,{children:"Monitor any resulting fills by either repeatedly selecting from the msgsrparentexecution table (SRTrade) and/or watching the Order Manager tool."}),"\n",(0,r.jsx)(t.li,{children:"Clients typically iterate through the same process to achieve objectives."}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Note:"})," If necessary, SpiderRock can drop orders and fills back to client via FIX, even if the orders were originally up-loaded via SRSE."]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>n,x:()=>o});var r=s(96540);const i={},a=r.createContext(i);function n(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:n(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);