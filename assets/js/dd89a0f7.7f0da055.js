"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[17352],{67847:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>n,default:()=>h,frontMatter:()=>c,metadata:()=>o,toc:()=>d});var r=s(74848),i=s(28453);const c={sidebar_position:1,title:"1945-client-theos"},n=void 0,o={id:"MessageSchemas/Schema/Topics/client-theos/client-theos",title:"1945-client-theos",description:"| # | Message Name | Description |",source:"@site/docs/MessageSchemas/Schema/Topics/1945-client-theos/1945-client-theos.md",sourceDirName:"MessageSchemas/Schema/Topics/1945-client-theos",slug:"/MessageSchemas/Schema/Topics/client-theos/",permalink:"/docs/MessageSchemas/Schema/Topics/client-theos/",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"1945-client-theos"},sidebar:"messageSchemasSidebar",previous:{title:"UserMessage",permalink:"/docs/MessageSchemas/Schema/Topics/client-config/UserMessage"},next:{title:"ClientBeta",permalink:"/docs/MessageSchemas/Schema/Topics/client-theos/ClientBeta"}},a={},d=[];function l(e){const t={a:"a",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"#"}),(0,r.jsx)(t.th,{children:"Message Name"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"1945"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"ClientBeta",children:"ClientBeta"})}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"1950"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"SpdrOptTheoRecord",children:"SpdrOptTheoRecord"})}),(0,r.jsx)(t.td,{children:"SpdrOptTheoRecords can be used to override theoretical volatilities for specific strikes when using SpdrTheoExpSurface records."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"1955"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"SpdrTheoExp2PtCurve",children:"SpdrTheoExp2PtCurve"})}),(0,r.jsx)(t.td,{children:"SpdrTheoExp2PtCurve records are used along side SpdrTheoExpSurface records to provide a complete x/y specification of a theoretical skew curve. Spline interpolation is used for values between x/y points"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"1960"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"SpdrTheoExpSurface",children:"SpdrTheoExpSurface"})}),(0,r.jsxs)(t.td,{children:["SpdrTheoExpSurface records reprent a client theoretical volatility surface for a ExpiryKey (ticker + expiration).  These records can either directly specify parameters to be used in a parameterized surface function or can link to a record (eg. SpdrTheoExp2PtCurve) containing x/y points sampling a client constructed curve.  Alternatively, they can specify that a SpiderRock implied skew curve should be used along with client supplied atm volatilities.",(0,r.jsx)("br",{}),(0,r.jsx)("br",{}),"Surface dynamics can be specified in multiple ways with these records and a number of pricing parameter overrides are also available.",(0,r.jsx)("br",{}),(0,r.jsx)("br",{}),"See the technical note on client supplied theoretical surfaces for more details."]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>n,x:()=>o});var r=s(96540);const i={},c=r.createContext(i);function n(e){const t=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:n(e.components),r.createElement(c.Provider,{value:t},e.children)}}}]);