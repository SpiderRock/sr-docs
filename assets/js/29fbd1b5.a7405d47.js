"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([["54239"],{54993:function(e,t,n){n.r(t),n.d(t,{default:()=>x,frontMatter:()=>d,metadata:()=>i,assets:()=>c,toc:()=>h,contentTitle:()=>o});var i=JSON.parse('{"id":"MessageSchemas/Schema/Topics/wts-trade-tool/OptionAtmMinuteBarData","title":"OptionAtmMinuteBarData","description":"METADATA","source":"@site/versioned_docs/version-8.5.4.2/MessageSchemas/Schema/Topics/6760-wts-trade-tool/OptionAtmMinuteBarData.md","sourceDirName":"MessageSchemas/Schema/Topics/6760-wts-trade-tool","slug":"/MessageSchemas/Schema/Topics/wts-trade-tool/OptionAtmMinuteBarData","permalink":"/docs/8.5.4.2/MessageSchemas/Schema/Topics/wts-trade-tool/OptionAtmMinuteBarData","draft":false,"unlisted":false,"tags":[],"version":"8.5.4.2","frontMatter":{"title":"OptionAtmMinuteBarData"},"sidebar":"messageSchemasSidebar","previous":{"title":"6760-wts-trade-tool","permalink":"/docs/8.5.4.2/MessageSchemas/Schema/Topics/wts-trade-tool/"},"next":{"title":"7600-wsh-corporate-event","permalink":"/docs/8.5.4.2/MessageSchemas/Schema/Topics/wsh-corporate-event/"}}'),r=n("52676"),s=n("91503"),a=n("71386"),l=n("9641");let d={title:"OptionAtmMinuteBarData"},o="Schema: OptionAtmMinuteBarData (ID: 6820)",c={},h=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3}];function u(e){let t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsxs)(t.h1,{id:"schema-optionatmminutebardata-id-6820",children:["Schema: OptionAtmMinuteBarData ",(0,r.jsx)("span",{className:"small-text",children:"(ID: 6820)"})]})}),"\n",(0,r.jsx)(t.h3,{id:"metadata",children:"METADATA"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Attribute"}),(0,r.jsx)(t.th,{children:"Value"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Topic"}),(0,r.jsx)(t.td,{children:"6760-wts-trade-tool"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"MLink Token"}),(0,r.jsx)(t.td,{children:"OptSurface"})]})]})]}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Note:"})," The symbol ",(0,r.jsx)(t.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"body",children:"BODY"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"#"}),(0,r.jsx)(t.th,{children:"Field"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Comment"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"10="}),(0,r.jsx)(t.td,{children:"ekey"}),(0,r.jsx)(t.td,{children:"ExpiryKey"}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"11="}),(0,r.jsx)(t.td,{children:"tradingDate"}),(0,r.jsx)(t.td,{children:"DateTime"}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"12="}),(0,r.jsx)(t.td,{children:"minute"}),(0,r.jsx)(t.td,{children:"int"}),(0,r.jsx)(t.td,{children:"minutes since 2000-01-01"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"100"}),(0,r.jsx)(t.td,{children:"ticker"}),(0,r.jsx)(t.td,{children:"TickerKey"}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"103"}),(0,r.jsx)(t.td,{children:"startTime"}),(0,r.jsx)(t.td,{children:"DateTime"}),(0,r.jsx)(t.td,{children:"Start of trading period for this product (note: this field will only be populated in the first message sent)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"106"}),(0,r.jsx)(t.td,{children:"startTimeMinute"}),(0,r.jsx)(t.td,{children:"string(8)"}),(0,r.jsx)(t.td,{children:"Minute representation of startTime (note: this field will only be populated in the first message sent)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"109"}),(0,r.jsx)(t.td,{children:"endTime"}),(0,r.jsx)(t.td,{children:"DateTime"}),(0,r.jsx)(t.td,{children:"End of trading period for this product (note: this field will only be populated in the first message sent)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"112"}),(0,r.jsx)(t.td,{children:"endTimeMinute"}),(0,r.jsx)(t.td,{children:"string(8)"}),(0,r.jsx)(t.td,{children:"Minute representation of endTime (note: this field will only be populated in the first message sent)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"115"}),(0,r.jsx)(t.td,{children:"uPrc"}),(0,r.jsx)(t.td,{children:"double"}),(0,r.jsx)(t.td,{children:"Underlying price"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"118"}),(0,r.jsx)(t.td,{children:"years"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{children:"Years to expiry"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"121"}),(0,r.jsx)(t.td,{children:"rate"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{children:"Interest rate"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"124"}),(0,r.jsx)(t.td,{children:"sdiv"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{children:"Continuous stock dividend"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"127"}),(0,r.jsx)(t.td,{children:"ddiv"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{children:"Discrete stock dividend value"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"130"}),(0,r.jsx)(t.td,{children:"uPrcRatio"}),(0,r.jsx)(t.td,{children:"double"}),(0,r.jsx)(t.td,{children:"Implied underlying price offset. For options with futures underlyings, this is like sDiv for futures."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"133"}),(0,r.jsx)(t.td,{children:"ivol"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{children:"atm ivol (atm: strike = fUPrc)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"136"}),(0,r.jsx)(t.td,{children:"ivxx"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{children:"fixed strike ivol (ivol @ refStrike)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"139"}),(0,r.jsx)(t.td,{children:"ivCen"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{children:"atm ivol (atm: strike = fUPrc) [eMove/earnings censored]"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"142"}),(0,r.jsx)(t.td,{children:"slope"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{children:"dVol / dXAxis"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"145"}),(0,r.jsx)(t.td,{children:"vWidth"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{children:"implied volatility width (best market)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"148"}),(0,r.jsx)(t.td,{children:"refStrike"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{children:"reference strike (usually prior day closing uPrc)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"151"}),(0,r.jsx)(t.td,{children:"ivolHi"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{children:"Implied Volatility high value (during bar)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"154"}),(0,r.jsx)(t.td,{children:"ivolLo"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{children:"Implied Volatility low value (during bar)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"157"}),(0,r.jsx)(t.td,{children:"ivxxHi"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{children:"Implied Volatility of Previous Day's ATM strike, high value (during bar)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"160"}),(0,r.jsx)(t.td,{children:"ivxxLo"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{children:"Implied Volatility of Previous Day's ATM strike, low value (during bar)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"163"}),(0,r.jsx)(t.td,{children:"ivCenHi"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{children:"Censored implied volatility high value (during bar)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"166"}),(0,r.jsx)(t.td,{children:"ivCenLo"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{children:"Censored implied volatility low value (during bar)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"169"}),(0,r.jsx)(t.td,{children:"sdivHi"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{children:"Continuous carry rate, high value (during bar)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"172"}),(0,r.jsx)(t.td,{children:"sdivLo"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{children:"Continuous carry rate, low value (during bar)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"175"}),(0,r.jsx)(t.td,{children:"uPrcRatioHi"}),(0,r.jsx)(t.td,{children:"double"}),(0,r.jsx)(t.td,{children:"Underlying price offset value, high value (during bar)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"178"}),(0,r.jsx)(t.td,{children:"uPrcRatioLo"}),(0,r.jsx)(t.td,{children:"double"}),(0,r.jsx)(t.td,{children:"Underlying price offset value, low value (during bar)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"181"}),(0,r.jsx)(t.td,{children:"slopeHi"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{children:"Slope high value (during bar).  The difference between the put and call at 1/2 standard deviation from the ATM point."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"184"}),(0,r.jsx)(t.td,{children:"slopeLo"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{children:"Slope low value (during bar).  The difference between the put and call at 1/2 standard deviation from the ATM point."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"187"}),(0,r.jsx)(t.td,{children:"varSwapFV"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{children:"variance swap fair value (estimated by numerical integration over OTM price surface)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"190"}),(0,r.jsx)(t.td,{children:"maxDIVol"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{children:"maximum change in IVol (between LSA rec publishes)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"193"}),(0,r.jsx)(t.td,{children:"maxDSDiv"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{children:"maximum change is SDiv (between LSA rec publishes)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"196"}),(0,r.jsx)(t.td,{children:"uPrcSPY"}),(0,r.jsx)(t.td,{children:"double"}),(0,r.jsx)(t.td,{children:"SPY underlying price"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"199"}),(0,r.jsx)(t.td,{children:"ivolSPY"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{children:"SPY atm ivol"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"202"}),(0,r.jsx)(t.td,{children:"ivxxSPY"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{children:"SPY fixed strike ivol"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"205"}),(0,r.jsx)(t.td,{children:"marketSegment"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../../../Enums/MarketSegment",children:"enum : MarketSegment"})}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"208"}),(0,r.jsx)(t.td,{children:"ts"}),(0,r.jsx)(t.td,{children:"DateTime"}),(0,r.jsx)(t.td,{children:"last update time (Date)"})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,r.jsxs)(a.Z,{children:[(0,r.jsx)(l.Z,{value:"Python",label:"Python",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'OptionAtmMinuteBarData'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n    # Required Parameters\n    \"apiKey\": API_KEY,\n    \"cmd\": 'getschema',\n    \"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,r.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=OptionAtmMinuteBarData'\n\n"})})})]}),"\n",(0,r.jsx)(t.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,r.jsxs)(a.Z,{children:[(0,r.jsx)(l.Z,{value:"Python",label:"Python",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'OptionAtmMinuteBarData\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'ticker|startTime|startTimeMinute|endTime|endTimeMinute|uPrc|years|rate|sdiv|ddiv|uPrcRatio|ivol|ivxx|ivCen|slope|vWidth|refStrike|ivolHi|ivolLo|ivxxHi|ivxxLo|ivCenHi|ivCenLo|sdivHi|sdivLo|uPrcRatioHi|uPrcRatioLo|slopeHi|slopeLo|varSwapFV|maxDIVol|maxDSDiv|uPrcSPY|ivolSPY|ivxxSPY|marketSegment|ts\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'startTimeMinute:eq:ExampleString\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,r.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=OptionAtmMinuteBarData' \\\n--data-urlencode 'view=ticker|startTime|startTimeMinute|endTime|endTimeMinute|uPrc|years|rate|sdiv|ddiv|uPrcRatio|ivol|ivxx|ivCen|slope|vWidth|refStrike|ivolHi|ivolLo|ivxxHi|ivxxLo|ivCenHi|ivCenLo|sdivHi|sdivLo|uPrcRatioHi|uPrcRatioLo|slopeHi|slopeLo|varSwapFV|maxDIVol|maxDSDiv|uPrcSPY|ivolSPY|ivxxSPY|marketSegment|ts' \\\n--data-urlencode 'where=startTimeMinute:eq:ExampleString'\n"})})})]}),"\n",(0,r.jsx)(t.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,r.jsxs)(a.Z,{children:[(0,r.jsx)(l.Z,{value:"Python",label:"Python",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'OptionAtmMinuteBarData\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'ticker|startTime|startTimeMinute|endTime|endTimeMinute|uPrc|years|rate|sdiv|ddiv|uPrcRatio|ivol|ivxx|ivCen|slope|vWidth|refStrike|ivolHi|ivolLo|ivxxHi|ivxxLo|ivCenHi|ivCenLo|sdivHi|sdivLo|uPrcRatioHi|uPrcRatioLo|slopeHi|slopeLo|varSwapFV|maxDIVol|maxDSDiv|uPrcSPY|ivolSPY|ivxxSPY|marketSegment|ts\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'startTimeMinute:eq:ExampleString\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'ticker:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,r.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=OptionAtmMinuteBarData' \\\n--data-urlencode 'view=ticker|startTime|startTimeMinute|endTime|endTimeMinute|uPrc|years|rate|sdiv|ddiv|uPrcRatio|ivol|ivxx|ivCen|slope|vWidth|refStrike|ivolHi|ivolLo|ivxxHi|ivxxLo|ivCenHi|ivCenLo|sdivHi|sdivLo|uPrcRatioHi|uPrcRatioLo|slopeHi|slopeLo|varSwapFV|maxDIVol|maxDSDiv|uPrcSPY|ivolSPY|ivxxSPY|marketSegment|ts' \\\n--data-urlencode 'where=startTimeMinute:eq:ExampleString' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=ticker:ASC'\n"})})})]}),"\n",(0,r.jsx)(t.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,r.jsxs)(a.Z,{children:[(0,r.jsx)(l.Z,{value:"Python",label:"Python",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'OptionAtmMinuteBarData\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'ticker|startTime|startTimeMinute|endTime|endTimeMinute|uPrc|years|rate|sdiv|ddiv|uPrcRatio|ivol|ivxx|ivCen|slope|vWidth|refStrike|ivolHi|ivolLo|ivxxHi|ivxxLo|ivCenHi|ivCenLo|sdivHi|sdivLo|uPrcRatioHi|uPrcRatioLo|slopeHi|slopeLo|varSwapFV|maxDIVol|maxDSDiv|uPrcSPY|ivolSPY|ivxxSPY|marketSegment|ts\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'marketSegment\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'startTimeMinute:eq:ExampleString\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getaggregate\',\n    "msgType": MSG_TYPE,\n    "measure": MEASURE,\n    "group": GROUP,\n    # Optional Parameters\n    "where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,r.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=OptionAtmMinuteBarData' \\\n--data-urlencode 'measure=ticker|startTime|startTimeMinute|endTime|endTimeMinute|uPrc|years|rate|sdiv|ddiv|uPrcRatio|ivol|ivxx|ivCen|slope|vWidth|refStrike|ivolHi|ivolLo|ivxxHi|ivxxLo|ivCenHi|ivCenLo|sdivHi|sdivLo|uPrcRatioHi|uPrcRatioLo|slopeHi|slopeLo|varSwapFV|maxDIVol|maxDSDiv|uPrcSPY|ivolSPY|ivxxSPY|marketSegment|ts' \\\n--data-urlencode 'group=marketSegment' \\\n--data-urlencode 'where=startTimeMinute:eq:ExampleString'\n"})})})]}),"\n",(0,r.jsx)(t.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,r.jsxs)(a.Z,{children:[(0,r.jsx)(l.Z,{value:"Python",label:"Python",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'OptionAtmMinuteBarData\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'startTimeMinute:eq:ExampleString\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,r.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=OptionAtmMinuteBarData' \\\n--data-urlencode 'where=startTimeMinute:eq:ExampleString'\n"})})})]})]})}function x(e={}){let{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},9641:function(e,t,n){n.d(t,{Z:()=>s});var i=n("52676");n("75271");var r=n("54461");function s(e){let{children:t,hidden:n,className:s}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,r.Z)("tabItem_SSzl",s),hidden:n,children:t})}},71386:function(e,t,n){n.d(t,{Z:()=>g});var i=n("52676"),r=n("75271"),s=n("54461"),a=n("52289"),l=n("3225"),d=n("42834"),o=n("40578"),c=n("35834"),h=n("79616");function u(e){return r.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||r.isValidElement(e)&&function(e){let{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function x(e){let{value:t,tabValues:n}=e;return n.some(e=>e.value===t)}var m=n("44537");function p(e){let{className:t,block:n,selectedValue:r,selectValue:l,tabValues:d}=e,o=[],{blockElementScrollPositionUntilNextRender:c}=(0,a.o5)(),h=e=>{let t=e.currentTarget,n=d[o.indexOf(t)].value;n!==r&&(c(t),l(n))},u=e=>{let t=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{let n=o.indexOf(e.currentTarget)+1;t=o[n]??o[0];break}case"ArrowLeft":{let n=o.indexOf(e.currentTarget)-1;t=o[n]??o[o.length-1]}}t?.focus()};return(0,i.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":n},t),children:d.map(e=>{let{value:t,label:n,attributes:a}=e;return(0,i.jsx)("li",{role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,ref:e=>o.push(e),onKeyDown:u,onClick:h,...a,className:(0,s.Z)("tabs__item","tabItem_aitt",a?.className,{"tabs__item--active":r===t}),children:n??t},t)})})}function j(e){let{lazy:t,children:n,selectedValue:a}=e,l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){let e=l.find(e=>e.props.value===a);return e?(0,r.cloneElement)(e,{className:(0,s.Z)("margin-top--md",e.props.className)}):null}return(0,i.jsx)("div",{className:"margin-top--md",children:l.map((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))})}function v(e){let t=function(e){let{defaultValue:t,queryString:n=!1,groupId:i}=e,s=function(e){let{values:t,children:n}=e;return(0,r.useMemo)(()=>{let e=t??u(n).map(e=>{let{props:{value:t,label:n,attributes:i,default:r}}=e;return{value:t,label:n,attributes:i,default:r}});return!function(e){let t=(0,c.lx)(e,(e,t)=>e.value===t.value);if(t.length>0)throw Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[t,n])}(e),[a,m]=(0,r.useState)(()=>(function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!x({value:t,tabValues:n}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}let i=n.find(e=>e.default)??n[0];if(!i)throw Error("Unexpected error: 0 tabValues");return i.value})({defaultValue:t,tabValues:s})),[p,j]=function(e){let{queryString:t=!1,groupId:n}=e,i=(0,l.k6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,o._X)(s),(0,r.useCallback)(e=>{if(!s)return;let t=new URLSearchParams(i.location.search);t.set(s,e),i.replace({...i.location,search:t.toString()})},[s,i])]}({queryString:n,groupId:i}),[v,g]=function(e){let{groupId:t}=e,n=t?`docusaurus.tab.${t}`:null,[i,s]=(0,h.Nk)(n);return[i,(0,r.useCallback)(e=>{n&&s.set(e)},[n,s])]}({groupId:i}),f=(()=>{let e=p??v;return x({value:e,tabValues:s})?e:null})();return(0,d.Z)(()=>{f&&m(f)},[f]),{selectedValue:a,selectValue:(0,r.useCallback)(e=>{if(!x({value:e,tabValues:s}))throw Error(`Can't select invalid tab value=${e}`);m(e),j(e),g(e)},[j,g,s]),tabValues:s}}(e);return(0,i.jsxs)("div",{className:(0,s.Z)("tabs-container","tabList_ArS0"),children:[(0,i.jsx)(p,{...t,...e}),(0,i.jsx)(j,{...t,...e})]})}function g(e){let t=(0,m.Z)();return(0,i.jsx)(v,{...e,children:u(e.children)},String(t))}},91503:function(e,t,n){n.d(t,{Z:function(){return l},a:function(){return a}});var i=n(75271);let r={},s=i.createContext(r);function a(e){let t=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);