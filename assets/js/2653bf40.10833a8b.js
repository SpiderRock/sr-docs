"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[81823],{95562:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>n,metadata:()=>a,toc:()=>c});var i=r(74848),d=r(28453);const n={},s=void 0,a={id:"MessageSchemas/Schema/SRSE Products/SRTrade/FutOrderGateway/FutOrderGateway",title:"FutOrderGateway",description:"V8 Message Definiton",source:"@site/docs/MessageSchemas/Schema/SRSE Products/SRTrade/FutOrderGateway/FutOrderGateway.md",sourceDirName:"MessageSchemas/Schema/SRSE Products/SRTrade/FutOrderGateway",slug:"/MessageSchemas/Schema/SRSE Products/SRTrade/FutOrderGateway/",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRTrade/FutOrderGateway/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"messageSchemasSidebar",previous:{title:"FutAwayTktGateway",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRTrade/FutAwayTktGateway/"},next:{title:"MLegOrderGateway",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRTrade/MLegOrderGateway/"}},l={},c=[{value:"METADATA",id:"metadata",level:3},{value:"Table Definition",id:"table-definition",level:3},{value:"PRIMARY KEY DEFINITION (Unique)",id:"primary-key-definition-unique",level:3},{value:"CREATE TABLE QUERY",id:"create-table-query",level:3}];function o(e){const t={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"../../../Topics/srse-gateway/FutOrderGateway",children:"V8 Message Definiton"})}),"\n",(0,i.jsx)(t.p,{children:"Records inserted, updated, or replaced into the FutureOrderGateway table are validated and then converted to SpdrParentOrder records and forwarded to the appropriate execution engine for futher processing.  Parent orders can be inserted as either active/ready or in a wait start mode that requires subsequent release.\\nSee the SpiderRock Execution Engine concept guide for more details."}),"\n",(0,i.jsx)(t.h3,{id:"metadata",children:"METADATA"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Attribute"}),(0,i.jsx)(t.th,{children:"Value"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Topic"}),(0,i.jsx)(t.td,{children:"5120-srse-gateway"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"MLink Token"}),(0,i.jsx)(t.td,{children:"SystemData"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Product"}),(0,i.jsx)(t.td,{children:"SRTrade"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"accessType"}),(0,i.jsx)(t.td,{children:"SELECT,UPDATE(spdrActionType),INSERT,DELETE"})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"table-definition",children:"Table Definition"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Field"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Key"}),(0,i.jsx)(t.th,{children:"Default Value"}),(0,i.jsx)(t.th,{children:"Comment"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"fkey_at"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,i.jsx)(t.td,{children:"PRI"}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"fkey_ts"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,i.jsx)(t.td,{children:"PRI"}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"fkey_tk"}),(0,i.jsx)(t.td,{children:"VARCHAR(12)"}),(0,i.jsx)(t.td,{children:"PRI"}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"fkey_yr"}),(0,i.jsx)(t.td,{children:"SMALLINT UNSIGNED"}),(0,i.jsx)(t.td,{children:"PRI"}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"fkey_mn"}),(0,i.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,i.jsx)(t.td,{children:"PRI"}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"fkey_dy"}),(0,i.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,i.jsx)(t.td,{children:"PRI"}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"accnt"}),(0,i.jsx)(t.td,{children:"VARCHAR(16)"}),(0,i.jsx)(t.td,{children:"PRI"}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"SR Account default  primary account associated with SRSE login"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderSide"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/BuySell",children:"enum - BuySell"})}),(0,i.jsx)(t.td,{children:"PRI"}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{children:"Order side  Values BuySell"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"groupingCode"}),(0,i.jsx)(t.td,{children:"CHAR(19)"}),(0,i.jsx)(t.td,{children:"PRI"}),(0,i.jsx)(t.td,{children:"'0000-0000-0000-0000'"}),(0,i.jsx)(t.td,{children:"Client supplied order"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"clientFirm"}),(0,i.jsx)(t.td,{children:"VARCHAR(16)"}),(0,i.jsx)(t.td,{children:"PRI"}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"spdrActionType"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/SpdrActionType",children:"enum - SpdrActionType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'Add'"}),(0,i.jsx)(t.td,{children:"Add new order AddReplace add or replace order Cancel cxl existing Replace update existing only Release modify order active size"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"altOrderId"}),(0,i.jsx)(t.td,{children:"VARCHAR(24)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"Alternate client order ID  This order ID will be copied to all execution reports"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"altAccnt"}),(0,i.jsx)(t.td,{children:"VARCHAR(32)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"alternate client assigned long account string optional used to map between client and SR account strings"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"altUserName"}),(0,i.jsx)(t.td,{children:"VARCHAR(24)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"alternate client assigned user name optional used to map between client and SR account strings"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"execBrkrCode"}),(0,i.jsx)(t.td,{children:"VARCHAR(16)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"optional override the default execBrkrCode for this order"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"externExDest"}),(0,i.jsx)(t.td,{children:"VARCHAR(16)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"routing code for orders directed to an external order router default  null should match FixRoutingTabledestination in SR accnt config"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"externParams"}),(0,i.jsx)(t.td,{children:"TINYTEXT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"external algo namesparameters usually just an algo name"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"strategy"}),(0,i.jsx)(t.td,{children:"VARCHAR(36)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"Client strategy string  This value will appear on the SR Trade Monitor and in execution reports"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderDttm"}),(0,i.jsx)(t.td,{children:"DATETIME(6)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'1900-01-01 00:00:00.000000'"}),(0,i.jsx)(t.td,{children:"order entry time from clientif any"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderSize"}),(0,i.jsx)(t.td,{children:"INT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"parent order size contracts 1  no changeused when spdrActionTypeRelease"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderActiveSize"}),(0,i.jsx)(t.td,{children:"INT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"total activated size total size released for execution 1  all size available 0  stagedlocked order"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"addCumFillQuantity"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum - YesNo"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'No'"}),(0,i.jsx)(t.td,{children:"If Yes then OrderSize is calculated  order arrival as requested OrderSize  existing CumFillQuantity"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxExposureSize"}),(0,i.jsx)(t.td,{children:"INT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"maximum simultaneous cumulative child order public size exposure 1  orderActiveSize order can overfill if  orderActiveSize and numMakeExchanges  1"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"numMakeExchanges"}),(0,i.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"1"}),(0,i.jsx)(t.td,{children:"number of exchanges 1  4 on which to publish public making orders  Effective number might be less than requested number if sufficient exchanges are not available"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"publicSize"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/PublicSizeHandling",children:"enum - PublicSizeHandling"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{children:"public order size handling Noneuse default size handling usually limits public size to typical market size Randomizerandomize public size MktSizeexpose only typical market size FullSizeexpose entire order size where possible"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"randomizeSize"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum - YesNo"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'Yes'"}),(0,i.jsx)(t.td,{children:"randomize public order size"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"canOverlapCxlRepl"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum - YesNo"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'No'"}),(0,i.jsx)(t.td,{children:"can execution engines overlap cancelreplace operations order can overfill if YES at most one active overlapping cxlreplace operation for each parent order"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"progressRule"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/ProgressRule",children:"enum - ProgressRule"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{children:"None  all size immediately availableTWAP  size released in time intervalsVWAP  size released in volume intervals"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"twapSliceCnt"}),(0,i.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"4"}),(0,i.jsx)(t.td,{children:"ProgressSliceCnt number of progress slices to use default  4 or 8 max 20"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"progressExposeTime"}),(0,i.jsx)(t.td,{children:"INT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"minimum time secs to expose order 0  no minimum used to guarantee that the order is exposed at midmarket for some time before actively taking"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"vwapParticipation"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0.10"}),(0,i.jsx)(t.td,{children:"target vwap participation rate target  of trade activity"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"auctionResponder"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/AuctionResponder",children:"enum - AuctionResponder"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{children:"if set parent order can be an auction responder"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"triggerType"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/TriggerType",children:"enum - TriggerType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{children:"type of trigger PrintVolSurfVol only for options print  print or actionable quote"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"triggerLevel"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"stoptrigger price for parent order to go active"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"cxlUPrcRange"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/UPrcCxl",children:"enum - UPrcCxl"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{children:"cancel parent order ifwhen outside minmax uPrc range Halt  also cancel if the securityunderlier has been halted"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"minUBid"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"optional"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxUAsk"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"optional  001  none"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"minMaxType"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/MinMaxType",children:"enum - MinMaxType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'Prc'"}),(0,i.jsx)(t.td,{children:"if Prc minUBidmaxUAsk are expressed as prices if Pct then they are expresses as pct change since parent order arrival"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxChildOrders"}),(0,i.jsx)(t.td,{children:"INT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"1000"}),(0,i.jsx)(t.td,{children:"maximum number of child orders that can be generated by this parent order order will terminate ifwhen this cap is reachedzero or neg  unlimited"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"spdrStageType"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/SpdrStageType",children:"enum - SpdrStageType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{children:"SizeLock  stage pending modification can reduce size SizeModify  stage pending modification can increasereduce size"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"marketSession"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/MarketSession",children:"enum - MarketSession"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'RegMkt'"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"startDttm"}),(0,i.jsx)(t.td,{children:"DATETIME(6)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'2000-01-01'"}),(0,i.jsx)(t.td,{children:"optional parent order start time"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderDuration"}),(0,i.jsx)(t.td,{children:"INT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"optional number of seconds"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"activeDuration"}),(0,i.jsx)(t.td,{children:"INT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"goodTillDttm"}),(0,i.jsx)(t.td,{children:"DATETIME(6)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'2000-01-01'"}),(0,i.jsx)(t.td,{children:"optional default 20000101"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"startType"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/StartType",children:"enum - StartType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{children:"WaitTrigger"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"parentOrderHandling"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/ParentOrderHandling",children:"enum - ParentOrderHandling"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'ActiveTaker'"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"parentBalanceHandling"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/ParentBalanceHandling",children:"enum - ParentBalanceHandling"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'PostLimit'"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderLimitType"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/SpdrLimitType",children:"enum - SpdrLimitType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'Market'"}),(0,i.jsx)(t.td,{children:"Various Market Prc etc establishes the primary LimitPrice for a parent order"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"takeLimitClass"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/SpdrLimitClass",children:"enum - SpdrLimitClass"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'Simple'"}),(0,i.jsx)(t.td,{children:"Simple  LimitPrice Probability  BESTLimitPrice ProbLimit"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"makeLimitClass"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/SpdrLimitClass",children:"enum - SpdrLimitClass"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'Simple'"}),(0,i.jsx)(t.td,{children:"Simple  LimitPrice Probability  BESTLimitPrice ProbLimit"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"takeReachRule"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/ReachRule",children:"enum - ReachRule"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{children:"None  reach room immediately available Delayed  available after 13 seconds Passive  available if contra side aggresses WeakOnly  only take if available size  avgMarketSize ISOSweep  Intermarket Sweep requires WaitTrigger"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderPrcLimit"}),(0,i.jsx)(t.td,{children:"DOUBLE"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"Applies if LimitType  Prc"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderPrcOffset"}),(0,i.jsx)(t.td,{children:"DOUBLE"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"default0"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"takeAlphaType"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/AlphaType",children:"enum - AlphaType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{children:"Applies if takeLimitClass  Probability"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"makeAlphaType"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/AlphaType",children:"enum - AlphaType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{children:"Applies if makeLimitClass  Probability"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"takeAlphaFactor"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"22 takeProbLimit  MAXtakeProbability takeProbAvg  takeAlphaFactor  takeProbStd if takeAlphaType  Relative"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"makeAlphaFactor"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"22 makeProbLimit  MAXmakeProbability makeProbAvg  makeAlphaFactor  makeProbStd if makeAlphaType  Relative"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"takeProbability"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"takeProbLimit  takeProbability if takeAlphaType  Static"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"makeProbability"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"makeProbLimit  makeProbability if makeAlphaType  Static"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"autoHedge"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/AutoHedge",children:"enum - AutoHedge"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"hedgeSecKey_at"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'EQT'"}),(0,i.jsx)(t.td,{children:"autohedge instrument either TickerKey or ExpiryKey hedgeSecKey cannot equal orderFKey"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"hedgeSecKey_ts"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'NMS'"}),(0,i.jsx)(t.td,{children:"autohedge instrument either TickerKey or ExpiryKey hedgeSecKey cannot equal orderFKey"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"hedgeSecKey_tk"}),(0,i.jsx)(t.td,{children:"VARCHAR(12)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"autohedge instrument either TickerKey or ExpiryKey hedgeSecKey cannot equal orderFKey"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"hedgeSecKey_yr"}),(0,i.jsx)(t.td,{children:"SMALLINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"1900"}),(0,i.jsx)(t.td,{children:"autohedge instrument either TickerKey or ExpiryKey hedgeSecKey cannot equal orderFKey"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"hedgeSecKey_mn"}),(0,i.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"1"}),(0,i.jsx)(t.td,{children:"autohedge instrument either TickerKey or ExpiryKey hedgeSecKey cannot equal orderFKey"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"hedgeSecKey_dy"}),(0,i.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"1"}),(0,i.jsx)(t.td,{children:"autohedge instrument either TickerKey or ExpiryKey hedgeSecKey cannot equal orderFKey"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"hedgeSecType"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/SpdrKeyType",children:"enum - SpdrKeyType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{children:"None Stock or Future"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"hedgeBetaRatio"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"1.0"}),(0,i.jsx)(t.td,{children:"Portion of executed money to autohedge can be 10  Beta for beta hedging 40 to 40 note 00 will be interpreted as 10"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"hedgeScope"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/HedgeScope",children:"enum - HedgeScope"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'RiskGroup'"}),(0,i.jsx)(t.td,{children:"Autohedge at the RiskGroup or Accnt level"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"hedgeSession"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/MarketSession",children:"enum - MarketSession"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'RegMkt'"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"positionType"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/PositionType",children:"enum - PositionType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'Auto'"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"riskGroupId"}),(0,i.jsx)(t.td,{children:"CHAR(19)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'0000-0000-0000-0000'"}),(0,i.jsx)(t.td,{children:"All group grp risk limits below are relative to this riskGroupId  Default 0 none  Required to be nonzero if autoHedge is something other than None"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"reqAuxRiskGroupCtrl"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum - YesNo"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"symDayDDeltaOffset"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctsymbol day delta offset target"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxSymDayDDeltaLn"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctsymbol day delta long positive number1no limitrisk limit  max limit  current net counter  offset"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxSymDayDDeltaSh"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctsymbol day delta short positive number1no limitrisk limit  max limit  current net counter  offset"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayDDeltaLn"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctriskGroup day delta long positive number1no limitrisk limit  max limit  current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayDDeltaSh"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctriskGroup day delta short positive number1no limitrisk limit  max limit  current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayContractsLn"}),(0,i.jsx)(t.td,{children:"INT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctriskGroup day opt contracts long positive number1no limitrisk limit  max limit  current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayContractsSh"}),(0,i.jsx)(t.td,{children:"INT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctriskGroup day opt contracts short positive number1no limitrisk limit  max limit  current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayContractsAbs"}),(0,i.jsx)(t.td,{children:"INT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctriskGroup day opt contracts abs positive number1no limitrisk limit  max limit  abscurrent net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayRMetric1Ln"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctriskGroup day rMetric1 long positive number1no limitrisk limit  max limit  current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayRMetric1Sh"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctriskGroup day rMetric1 short positive number1no limitrisk limit  max limit  current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayRMetric1Abs"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctriskGroup day rMetric1 abs positive number1no limitrisk limit  max limit  abscurrent net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"grpDayRMetric1Ratio"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"1.0"}),(0,i.jsx)(t.td,{children:"target bot  sld ratio eg ratio05 means that neutral is bot rMetric1  05x sld rMetric1"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"traderName"}),(0,i.jsx)(t.td,{children:"VARCHAR(32)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"Name of the trader associated with the order"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"userData1"}),(0,i.jsx)(t.td,{children:"TINYTEXT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"client supplied data field passes through to parent and child executions and reports as well as FIX drops"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"userData2"}),(0,i.jsx)(t.td,{children:"TINYTEXT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"client supplied data field passes through to parent and child executions and reports as well as FIX drops"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"childData"}),(0,i.jsx)(t.td,{children:"TINYTEXT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"client supplied data field passes through to down stream child orders"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"checksum"}),(0,i.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"Must be set to 13  This helps detect some columnvalue misalignments"})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"primary-key-definition-unique",children:"PRIMARY KEY DEFINITION (Unique)"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Field"}),(0,i.jsx)(t.th,{children:"Sequence"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"fkey_tk"}),(0,i.jsx)(t.td,{children:"1"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"fkey_yr"}),(0,i.jsx)(t.td,{children:"2"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"fkey_mn"}),(0,i.jsx)(t.td,{children:"3"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"fkey_dy"}),(0,i.jsx)(t.td,{children:"4"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"fkey_at"}),(0,i.jsx)(t.td,{children:"5"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"fkey_ts"}),(0,i.jsx)(t.td,{children:"6"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"accnt"}),(0,i.jsx)(t.td,{children:"7"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderSide"}),(0,i.jsx)(t.td,{children:"8"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"groupingCode"}),(0,i.jsx)(t.td,{children:"9"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"clientFirm"}),(0,i.jsx)(t.td,{children:"10"})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"create-table-query",children:"CREATE TABLE QUERY"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-sql",children:"CREATE TABLE `SRTrade`.`MsgFutOrderGateway` (\n    `fkey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None',\n    `fkey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None',\n    `fkey_tk` VARCHAR(12) NOT NULL DEFAULT '',\n    `fkey_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0,\n    `fkey_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0,\n    `fkey_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0,\n    `accnt` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'SR Account (default = primary account associated with SRSE login)',\n    `orderSide` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'None' COMMENT 'Order side.  Values: Buy/Sell.',\n    `groupingCode` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'Client supplied order',\n    `clientFirm` VARCHAR(16) NOT NULL DEFAULT '',\n    `spdrActionType` ENUM('Add','AddReplace','Replace','Cancel','Modify') NOT NULL DEFAULT 'Add' COMMENT '[Add (new order), AddReplace (add or replace order), Cancel (cxl existing), Replace (update existing only), Release (modify order active size)]',\n    `altOrderId` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'Alternate client order ID.  This order ID will be copied to all execution reports.',\n    `altAccnt` VARCHAR(32) NOT NULL DEFAULT '' COMMENT 'alternate (client assigned) \"long\" account string (optional) [used to map between client and SR account strings]',\n    `altUserName` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'alternate (client assigned) user name (optional) [used to map between client and SR account strings]',\n    `execBrkrCode` VARCHAR(16) NOT NULL DEFAULT '' COMMENT '(optional) override the default execBrkrCode for this order',\n    `externExDest` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'routing code for orders directed to an external order router (default = null); should match FixRoutingTable.destination (in SR accnt config)',\n    `externParams` TINYTEXT NOT NULL DEFAULT '' COMMENT 'external algo names/parameters (usually just an algo name)',\n    `strategy` VARCHAR(36) NOT NULL DEFAULT '' COMMENT 'Client strategy string.  This value will appear on the SR Trade Monitor and in execution reports.',\n    `orderDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'order entry time (from client;if any)',\n    `orderSize` INT NOT NULL DEFAULT -1 COMMENT 'parent order size (contracts) [-1 = no change;used when spdrActionType=Release]',\n    `orderActiveSize` INT NOT NULL DEFAULT -1 COMMENT 'total activated size (total size released for execution) (-1 = all size available; 0 = staged/locked order)',\n    `addCumFillQuantity` ENUM('Yes','No') NOT NULL DEFAULT 'No' COMMENT 'If Yes then OrderSize is calculated @ order arrival as requested OrderSize + existing ''CumFillQuantity''.',\n    `maxExposureSize` INT NOT NULL DEFAULT -1 COMMENT 'maximum simultaneous cumulative child order public size exposure (-1 = orderActiveSize) [order can overfill if > orderActiveSize and numMakeExchanges > 1]',\n    `numMakeExchanges` TINYINT UNSIGNED NOT NULL DEFAULT 1 COMMENT 'number of exchanges (1 - 4) on which to publish public making orders.  Effective number might be less than requested number if sufficient exchanges are not available.',\n    `publicSize` ENUM('None','Randomize','MktSize','FullSize','MktSizeA','MktSizeB','MktSizeC','FullSizeR') NOT NULL DEFAULT 'None' COMMENT 'public order size handling: None=use default size handling (usually limits public size to ''typical'' market size); Randomize=randomize public size; MktSize=expose only ''typical'' market size; FullSize=expose entire order size where possible',\n    `randomizeSize` ENUM('Yes','No') NOT NULL DEFAULT 'Yes' COMMENT 'randomize public order size',\n    `canOverlapCxlRepl` ENUM('Yes','No') NOT NULL DEFAULT 'No' COMMENT 'can execution engines overlap cancel/replace operations [order can overfill if YES] (at most one active overlapping cxl/replace operation for each parent order)',\n    `progressRule` ENUM('None','Twap','Vwap','TwapReset','VwapReset','FastReset','SlowReset','TwapAlpha','VwapAlpha','TwapAlphaC','VwapAlphaC','AutoComplete','AllowImmediate','Manual','SpdrPulse','IOC') NOT NULL DEFAULT 'None' COMMENT 'None = all size immediately available;TWAP = size released in time intervals;VWAP = size released in volume intervals;',\n    `twapSliceCnt` TINYINT UNSIGNED NOT NULL DEFAULT 4 COMMENT '[ProgressSliceCnt] number of progress slices to use (default = 4 or 8) [max 20]',\n    `progressExposeTime` INT NOT NULL DEFAULT 0 COMMENT 'minimum time (secs) to expose order (0 = no minimum; used to guarantee that the order is exposed at mid-market for some time before actively taking)',\n    `vwapParticipation` FLOAT NOT NULL DEFAULT 0.10 COMMENT 'target vwap participation rate (target % of trade activity)',\n    `auctionResponder` ENUM('None','Any') NOT NULL DEFAULT 'None' COMMENT 'if set, parent order can be an auction responder',\n    `triggerType` ENUM('None','PrintPrc','PrintVol','SurfVol','PrtSurfVol') NOT NULL DEFAULT 'None' COMMENT 'type of trigger (PrintVol/SurfVol only for options) [print = print or actionable quote]',\n    `triggerLevel` FLOAT NOT NULL DEFAULT 0 COMMENT 'stop/trigger price for parent order to go active',\n    `cxlUPrcRange` ENUM('None','Yes','No','YesHalt','NoHalt') NOT NULL DEFAULT 'None' COMMENT 'cancel parent order if/when outside min/max uPrc range [_Halt = also cancel if the security/underlier has been halted]',\n    `minUBid` FLOAT NOT NULL DEFAULT 0 COMMENT '[optional]',\n    `maxUAsk` FLOAT NOT NULL DEFAULT 0 COMMENT '[optional] (< $0.01 = none)',\n    `minMaxType` ENUM('None','Prc','Pct') NOT NULL DEFAULT 'Prc' COMMENT 'if Prc minUBid/maxUAsk are expressed as prices; if Pct then they are expresses as pct change since parent order arrival',\n    `maxChildOrders` INT NOT NULL DEFAULT 1000 COMMENT 'maximum number of child orders that can be generated by this parent order [order will terminate if/when this cap is reached;zero or neg = unlimited]',\n    `spdrStageType` ENUM('None','ModifyAny','ModifyAlgo') NOT NULL DEFAULT 'None' COMMENT 'SizeLock = stage pending modification (can reduce size); SizeModify = stage pending modification (can increase/reduce size)',\n    `marketSession` ENUM('None','PreMkt','RegMkt','PostMkt','PreRegMkt','RegPostMkt','AllDay') NOT NULL DEFAULT 'RegMkt',\n    `startDttm` DATETIME(6) NOT NULL DEFAULT '2000-01-01' COMMENT '[optional] (parent order start time)',\n    `orderDuration` INT NOT NULL DEFAULT -1 COMMENT '[optional] (number of seconds)',\n    `activeDuration` INT NOT NULL DEFAULT -1,\n    `goodTillDttm` DATETIME(6) NOT NULL DEFAULT '2000-01-01' COMMENT '[optional] (default: 2000-01-01)',\n    `startType` ENUM('None','WaitTrigger') NOT NULL DEFAULT 'None' COMMENT '[WaitTrigger]',\n    `parentOrderHandling` ENUM('None','ActiveTaker','PostOnly','DMA','MktOnOpn','MktOnCls','Facilitate','Matrix','Legger','Seeker','SeekerLegger','CrossResponse','AuctionResponse','MLegAuctionResp','RFQRequest','AwayAlgo','ExchPing','BlockAuction','BlockResponse','SweepTake','CobMaker','FaceOmni','TestParent') NOT NULL DEFAULT 'ActiveTaker',\n    `parentBalanceHandling` ENUM('None','PostWith','PostTurn','PostImprove','PostLimit','MaxIntern','PostWthF','PostImprvR','PostFlash','PostFlashW','PostPeg','PostFlashI') NOT NULL DEFAULT 'PostLimit',\n    `orderLimitType` ENUM('Market','MarketArrival','Prc','RelMid','RelJoin','RelCross','RelTurn','SmrtFast','SmrtNorm','Aux') NOT NULL DEFAULT 'Market' COMMENT 'Various (Market, Prc, etc.); establishes the primary LimitPrice for a parent order',\n    `takeLimitClass` ENUM('Simple','Probability') NOT NULL DEFAULT 'Simple' COMMENT 'Simple = LimitPrice, Probability = BEST(LimitPrice, ProbLimit)',\n    `makeLimitClass` ENUM('Simple','Probability') NOT NULL DEFAULT 'Simple' COMMENT 'Simple = LimitPrice, Probability = BEST(LimitPrice, ProbLimit)',\n    `takeReachRule` ENUM('None','Delayed','Passive','WeakOnly','RespondOnly','FullSize','ISOSweep','AllOrNone','QtyOrMore','UpToQty','AtMost25','AtMost50','MinTakeFee') NOT NULL DEFAULT 'None' COMMENT 'None = reach room immediately available; Delayed = available after [1-3] seconds; Passive = available if contra side aggresses; WeakOnly = only take if available size < avgMarketSize; ISOSweep = Intermarket Sweep [requires WaitTrigger]',\n    `orderPrcLimit` DOUBLE NOT NULL DEFAULT 0 COMMENT 'Applies if LimitType = Prc[]',\n    `orderPrcOffset` DOUBLE NOT NULL DEFAULT 0 COMMENT 'default=0',\n    `takeAlphaType` ENUM('None','Static','Eagle','Hawk','Falcon','Relative') NOT NULL DEFAULT 'None' COMMENT 'Applies if takeLimitClass = Probability',\n    `makeAlphaType` ENUM('None','Static','Eagle','Hawk','Falcon','Relative') NOT NULL DEFAULT 'None' COMMENT 'Applies if makeLimitClass = Probability',\n    `takeAlphaFactor` FLOAT NOT NULL DEFAULT 0 COMMENT '[-2,+2] takeProbLimit = MAX(takeProbability, takeProbAvg + takeAlphaFactor * takeProbStd) [if takeAlphaType = Relative]',\n    `makeAlphaFactor` FLOAT NOT NULL DEFAULT 0 COMMENT '[-2,+2] makeProbLimit = MAX(makeProbability, makeProbAvg + makeAlphaFactor * makeProbStd) [if makeAlphaType = Relative]',\n    `takeProbability` FLOAT NOT NULL DEFAULT 0 COMMENT 'takeProbLimit = takeProbability [if takeAlphaType = Static]',\n    `makeProbability` FLOAT NOT NULL DEFAULT 0 COMMENT 'makeProbLimit = makeProbability [if makeAlphaType = Static]',\n    `autoHedge` ENUM('None','Static','AutoMid','AutoCrx','AutoTrn','SpdrAuto','Spdr10S','Spdr30S','Spdr90S','Spdr5M','Spdr30M','SpdrDay','SmartFast','SmartNorm','FastCrx','FastDark','SlowDark','AlphaVwap1pct','AlphaVwap2pct','AlphaVwap5pct','AlphaVwap25pct','Custom','AwayAlgo') NOT NULL DEFAULT 'None',\n    `hedgeSecKey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'EQT' COMMENT 'auto-hedge instrument (either TickerKey or ExpiryKey) [hedgeSecKey cannot equal order.FKey]',\n    `hedgeSecKey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'NMS' COMMENT 'auto-hedge instrument (either TickerKey or ExpiryKey) [hedgeSecKey cannot equal order.FKey]',\n    `hedgeSecKey_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'auto-hedge instrument (either TickerKey or ExpiryKey) [hedgeSecKey cannot equal order.FKey]',\n    `hedgeSecKey_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 1900 COMMENT 'auto-hedge instrument (either TickerKey or ExpiryKey) [hedgeSecKey cannot equal order.FKey]',\n    `hedgeSecKey_mn` TINYINT UNSIGNED NOT NULL DEFAULT 1 COMMENT 'auto-hedge instrument (either TickerKey or ExpiryKey) [hedgeSecKey cannot equal order.FKey]',\n    `hedgeSecKey_dy` TINYINT UNSIGNED NOT NULL DEFAULT 1 COMMENT 'auto-hedge instrument (either TickerKey or ExpiryKey) [hedgeSecKey cannot equal order.FKey]',\n    `hedgeSecType` ENUM('None','Stock','Future') NOT NULL DEFAULT 'None' COMMENT 'None, Stock, or Future',\n    `hedgeBetaRatio` FLOAT NOT NULL DEFAULT 1.0 COMMENT 'Portion of executed $money to auto-hedge (can be 1.0 / Beta for beta hedging) [-4.0 to +4.0] (note: 0.0 will be interpreted as 1.0)',\n    `hedgeScope` ENUM('None','Accnt','RiskGroup') NOT NULL DEFAULT 'RiskGroup' COMMENT 'Auto-hedge at the RiskGroup or Accnt level',\n    `hedgeSession` ENUM('None','PreMkt','RegMkt','PostMkt','PreRegMkt','RegPostMkt','AllDay') NOT NULL DEFAULT 'RegMkt',\n    `positionType` ENUM('None','Opening','Closing','Auto') NOT NULL DEFAULT 'Auto',\n    `riskGroupId` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'All group (grp) risk limits below are relative to this riskGroupId.  Default: 0 (none).  Required to be non-zero if `autoHedge` is something other than None.',\n    `reqAuxRiskGroupCtrl` ENUM('None','Yes','No') NOT NULL DEFAULT 'None',\n    `symDayDDeltaOffset` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+symbol day $delta offset (target)',\n    `maxSymDayDDeltaLn` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+symbol day $delta long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)',\n    `maxSymDayDDeltaSh` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+symbol day $delta short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)',\n    `maxGrpDayDDeltaLn` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day $delta long (positive number;-1=no limit);risk limit = max limit - current net counter',\n    `maxGrpDayDDeltaSh` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day $delta short (positive number;-1=no limit);risk limit = max limit + current net counter',\n    `maxGrpDayContractsLn` INT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day opt contracts long (positive number;-1=no limit);risk limit = max limit - current net counter',\n    `maxGrpDayContractsSh` INT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day opt contracts short (positive number;-1=no limit);risk limit = max limit + current net counter',\n    `maxGrpDayContractsAbs` INT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day opt contracts abs (positive number;-1=no limit);risk limit = max limit - abs(current net counter)',\n    `maxGrpDayRMetric1Ln` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day rMetric1 long (positive number;-1=no limit);risk limit = max limit - current net counter',\n    `maxGrpDayRMetric1Sh` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day rMetric1 short (positive number;-1=no limit);risk limit = max limit + current net counter',\n    `maxGrpDayRMetric1Abs` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day rMetric1 abs (positive number;-1=no limit);risk limit = max limit - abs(current net counter)',\n    `grpDayRMetric1Ratio` FLOAT NOT NULL DEFAULT 1.0 COMMENT 'target bot / sld ratio (eg ratio=0.5 means that neutral is bot rMetric1 = 0.5x sld rMetric1)',\n    `traderName` VARCHAR(32) NOT NULL DEFAULT '' COMMENT 'Name of the trader associated with the order',\n    `userData1` TINYTEXT NOT NULL DEFAULT '' COMMENT 'client supplied data field; passes through to parent and child executions and reports as well as FIX drops',\n    `userData2` TINYTEXT NOT NULL DEFAULT '' COMMENT 'client supplied data field; passes through to parent and child executions and reports as well as FIX drops',\n    `childData` TINYTEXT NOT NULL DEFAULT '' COMMENT 'client supplied data field; passes through to down stream child orders',\n    `checksum` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Must be set to 13.  This helps detect some column/value misalignments.',\n    CONSTRAINT nonnegative_groupingCode CHECK(ASCII(groupingCode) < 56),\n    CONSTRAINT nonnegative_riskGroupId CHECK(ASCII(riskGroupId) < 56),\n    PRIMARY KEY USING HASH (`fkey_tk`,`fkey_yr`,`fkey_mn`,`fkey_dy`,`fkey_at`,`fkey_ts`,`accnt`,`orderSide`,`groupingCode`,`clientFirm`)\n) ENGINE=SRSE DEFAULT CHARSET=LATIN1 COMMENT='Records inserted, updated, or replaced into the FutureOrderGateway table are validated and then converted to SpdrParentOrder records and forwarded to the appropriate execution engine for futher processing.  Parent orders can be inserted as either active/ready or in a wait start mode that requires subsequent release.\\nSee the SpiderRock Execution Engine concept guide for more details.';\n\n"})})]})}function h(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>s,x:()=>a});var i=r(96540);const d={},n=i.createContext(d);function s(e){const t=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:s(e.components),i.createElement(n.Provider,{value:t},e.children)}}}]);