"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[13204],{12678:(e,T,o)=>{o.r(T),o.d(T,{assets:()=>r,contentTitle:()=>L,default:()=>O,frontMatter:()=>t,metadata:()=>i,toc:()=>s});var N=o(74848),n=o(28453);const t={title:"OptionTheoVol"},L=void 0,i={id:"MessageSchemas/Schema/SRSE Products/SRTheo/OptionTheoVol/OptionTheoVol",title:"OptionTheoVol",description:"V8 Message Definition",source:"@site/docs/MessageSchemas/Schema/SRSE Products/SRTheo/OptionTheoVol/OptionTheoVol.md",sourceDirName:"MessageSchemas/Schema/SRSE Products/SRTheo/OptionTheoVol",slug:"/MessageSchemas/Schema/SRSE Products/SRTheo/OptionTheoVol/",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRTheo/OptionTheoVol/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"OptionTheoVol"},sidebar:"messageSchemasSidebar",previous:{title:"SRTheo",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRTheo/"},next:{title:"SpdrOptTheoRecord",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRTheo/SpdrOptTheoRecord/"}},r={},s=[];function E(e){const T={a:"a",code:"code",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,N.jsxs)(N.Fragment,{children:[(0,N.jsx)(T.p,{children:(0,N.jsx)(T.a,{href:"../../../Topics/srse-calculators/OptionTheoVol",children:"V8 Message Definition"})}),"\n",(0,N.jsx)(T.pre,{children:(0,N.jsx)(T.code,{className:"language-sql",children:"CREATE TABLE `SRTheo`.`MsgOptionTheoVol` (\n    `okey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None',\n    `okey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None',\n    `okey_tk` VARCHAR(12) NOT NULL DEFAULT '',\n    `okey_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0,\n    `okey_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0,\n    `okey_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0,\n    `okey_xx` DOUBLE NOT NULL DEFAULT 0,\n    `okey_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call',\n    `theoModel` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'required in where clause (theo model must be associated with an accnt that is visible)',\n    `clientFirmOut` VARCHAR(16) NOT NULL DEFAULT '',\n    `years` FLOAT NOT NULL DEFAULT 0 COMMENT 'volatility years to expiration (variable time metric; SR holiday calendar)',\n    `ticker_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'underlier ticker',\n    `ticker_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'underlier ticker',\n    `ticker_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'underlier ticker',\n    `uprc` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier price',\n    `ubid` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier bid',\n    `uask` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier ask',\n    `obid` FLOAT NOT NULL DEFAULT 0 COMMENT 'option market bid',\n    `oask` FLOAT NOT NULL DEFAULT 0 COMMENT 'option market ask',\n    `tvol` FLOAT NOT NULL DEFAULT 0 COMMENT 'theo vol',\n    `tvolBOpn` FLOAT NOT NULL DEFAULT 0 COMMENT 'theo buy/open vol',\n    `tvolSOpn` FLOAT NOT NULL DEFAULT 0 COMMENT 'theo sell/open vol',\n    `tprc` FLOAT NOT NULL DEFAULT 0 COMMENT 'theo vol price',\n    `tbPrc` FLOAT NOT NULL DEFAULT 0 COMMENT 'theo buy (open) price',\n    `tsPrc` FLOAT NOT NULL DEFAULT 0 COMMENT 'theo sell (open) price',\n    `tbClsPrc` FLOAT NOT NULL DEFAULT 0 COMMENT 'theo buy (close) price',\n    `tsClsPrc` FLOAT NOT NULL DEFAULT 0 COMMENT 'theo sell (close) price',\n    `veSlope` FLOAT NOT NULL DEFAULT 0 COMMENT 'veSlope = dVol / dUprc (assuming vol @ xAxis = 0 remains constant);hedgeDelta = (de + ve * 100 * veSlope) if hedging with this assumption',\n    `de` FLOAT NOT NULL DEFAULT 0 COMMENT 'implied greeks (from theo surface)',\n    `ga` FLOAT NOT NULL DEFAULT 0,\n    `th` FLOAT NOT NULL DEFAULT 0,\n    `ve` FLOAT NOT NULL DEFAULT 0,\n    `vo` FLOAT NOT NULL DEFAULT 0,\n    `va` FLOAT NOT NULL DEFAULT 0,\n    `deDecay` FLOAT NOT NULL DEFAULT 0,\n    `ro` FLOAT NOT NULL DEFAULT 0,\n    `ph` FLOAT NOT NULL DEFAULT 0,\n    `sdivB` FLOAT NOT NULL DEFAULT 0 COMMENT 'normalized sdiv when buying',\n    `sdivS` FLOAT NOT NULL DEFAULT 0 COMMENT 'normalized sdiv when selling',\n    `xAxis` FLOAT NOT NULL DEFAULT 0 COMMENT 'xAxis value (depends on xAxis definition in TheoExpSurface record)',\n    `tvolAtm` FLOAT NOT NULL DEFAULT 0 COMMENT 'theo model volatility (atm)',\n    `ivolAtm` FLOAT NOT NULL DEFAULT 0 COMMENT 'SR Surface Volatility (atm)',\n    `svol` FLOAT NOT NULL DEFAULT 0 COMMENT 'SR Surface Volatility',\n    `sprc` FLOAT NOT NULL DEFAULT 0 COMMENT 'SR Surface Price',\n    `sDe` FLOAT NOT NULL DEFAULT 0 COMMENT 'SR Surface Delta',\n    `sVe` FLOAT NOT NULL DEFAULT 0 COMMENT 'SR Surface Vega',\n    `rate` FLOAT NOT NULL DEFAULT 0 COMMENT 'SR Rate (average interest rate to expiration)',\n    `sdiv` FLOAT NOT NULL DEFAULT 0 COMMENT 'SR SDiv (continuous dividend;accretive with discrete dividends)',\n    `ddiv` FLOAT NOT NULL DEFAULT 0 COMMENT 'SR DDiv (sum of discrete dividend amounts prior to expiration)',\n    `err` TINYINT UNSIGNED NOT NULL DEFAULT 0,\n    `theoErr` VARCHAR(24) NOT NULL DEFAULT '',\n    `calcErr` VARCHAR(24) NOT NULL DEFAULT '',\n    `theoStatus` ENUM('Hold','Auto','Scanner','Markup','CloseOnly') NOT NULL DEFAULT 'Hold',\n    `timestamp` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000',\n    PRIMARY KEY USING HASH (`okey_tk`,`okey_yr`,`okey_mn`,`okey_dy`,`okey_xx`,`okey_cp`,`okey_at`,`okey_ts`),\n    KEY `ExpirationIndex` (`okey_yr`,`okey_mn`,`okey_dy`) USING HASH,\n    KEY `TickerIndex` (`ticker_tk`) USING HASH\n) ENGINE=SRSE DEFAULT CHARSET=LATIN1 COMMENT='OptionTheoVol records contain client supplied theoretical volatility surface information resolved at the level if individual strikes.  Strike volatilities, prices, greeks and SpiderRock surface volatilites and prices are all available.  Values are computed on the fly using fast/accurate calculation methods as records are returned.';\n\n"})})]})}function O(e={}){const{wrapper:T}={...(0,n.R)(),...e.components};return T?(0,N.jsx)(T,{...e,children:(0,N.jsx)(E,{...e})}):E(e)}},28453:(e,T,o)=>{o.d(T,{R:()=>L,x:()=>i});var N=o(96540);const n={},t=N.createContext(n);function L(e){const T=N.useContext(t);return N.useMemo((function(){return"function"==typeof e?e(T):{...T,...e}}),[T,e])}function i(e){let T;return T=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:L(e.components),N.createElement(t.Provider,{value:T},e.children)}}}]);