"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([["65421"],{93866:function(e,l,n){n.r(l),n.d(l,{default:()=>m,frontMatter:()=>o,metadata:()=>t,assets:()=>c,toc:()=>h,contentTitle:()=>a});var t=JSON.parse('{"id":"MessageSchemas/Schema/Topics/risk-counter/RiskGroupCounter","title":"RiskGroupCounter","description":"METADATA","source":"@site/versioned_docs/version-8.5.3.3/MessageSchemas/Schema/Topics/4625-risk-counter/RiskGroupCounter.md","sourceDirName":"MessageSchemas/Schema/Topics/4625-risk-counter","slug":"/MessageSchemas/Schema/Topics/risk-counter/RiskGroupCounter","permalink":"/docs/8.5.3.3/MessageSchemas/Schema/Topics/risk-counter/RiskGroupCounter","draft":false,"unlisted":false,"tags":[],"version":"8.5.3.3","frontMatter":{"title":"RiskGroupCounter"},"sidebar":"messageSchemasSidebar","previous":{"title":"MarRiskCounter","permalink":"/docs/8.5.3.3/MessageSchemas/Schema/Topics/risk-counter/MarRiskCounter"},"next":{"title":"SpdrRiskCounter","permalink":"/docs/8.5.3.3/MessageSchemas/Schema/Topics/risk-counter/SpdrRiskCounter"}}'),r=n("52676"),s=n("91503"),d=n("71386"),i=n("9641");let o={title:"RiskGroupCounter"},a="Schema: RiskGroupCounter (ID: 4655)",c={},h=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3}];function u(e){let l={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(l.header,{children:(0,r.jsxs)(l.h1,{id:"schema-riskgroupcounter-id-4655",children:["Schema: RiskGroupCounter ",(0,r.jsx)("span",{className:"small-text",children:"(ID: 4655)"})]})}),"\n",(0,r.jsx)(l.h3,{id:"metadata",children:"METADATA"}),"\n",(0,r.jsxs)(l.table,{children:[(0,r.jsx)(l.thead,{children:(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.th,{children:"Attribute"}),(0,r.jsx)(l.th,{children:"Value"})]})}),(0,r.jsxs)(l.tbody,{children:[(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.td,{children:"Topic"}),(0,r.jsx)(l.td,{children:"4625-risk-counter"})]}),(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.td,{children:"MLink Token"}),(0,r.jsx)(l.td,{children:"ClientTrading"})]}),(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.td,{children:"SRSE Product"}),(0,r.jsx)(l.td,{children:"SRTrade"})]})]})]}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(l.blockquote,{children:["\n",(0,r.jsxs)(l.p,{children:[(0,r.jsx)(l.strong,{children:"Note:"})," The symbol ",(0,r.jsx)(l.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,r.jsx)(l.h3,{id:"body",children:"BODY"}),"\n",(0,r.jsxs)(l.table,{children:[(0,r.jsx)(l.thead,{children:(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.th,{children:"#"}),(0,r.jsx)(l.th,{children:"Field"}),(0,r.jsx)(l.th,{children:"Type"}),(0,r.jsx)(l.th,{children:"Comment"})]})}),(0,r.jsxs)(l.tbody,{children:[(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.td,{children:"13="}),(0,r.jsx)(l.td,{children:"riskGroupId"}),(0,r.jsx)(l.td,{children:"long"}),(0,r.jsx)(l.td,{})]}),(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.td,{children:"11="}),(0,r.jsx)(l.td,{children:"accnt"}),(0,r.jsx)(l.td,{children:"string(16)"}),(0,r.jsx)(l.td,{})]}),(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.td,{children:"12="}),(0,r.jsx)(l.td,{children:"riskFirm"}),(0,r.jsx)(l.td,{children:"string(16)"}),(0,r.jsx)(l.td,{})]}),(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.td,{children:"100"}),(0,r.jsx)(l.td,{children:"sysRealm"}),(0,r.jsx)(l.td,{children:(0,r.jsx)(l.a,{href:"../../../Enums/SysRealm",children:"enum : SysRealm"})}),(0,r.jsx)(l.td,{})]}),(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.td,{children:"101"}),(0,r.jsx)(l.td,{children:"sysEnvironment"}),(0,r.jsx)(l.td,{children:(0,r.jsx)(l.a,{href:"../../../Enums/SysEnvironment",children:"enum : SysEnvironment"})}),(0,r.jsx)(l.td,{children:"original (source) sys environment [Stable, Current, etc]"})]}),(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.td,{children:"102"}),(0,r.jsx)(l.td,{children:"riskEngine"}),(0,r.jsx)(l.td,{children:"string(32)"}),(0,r.jsx)(l.td,{children:"EE engine name"})]}),(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.td,{children:"103"}),(0,r.jsx)(l.td,{children:"changeReason"}),(0,r.jsx)(l.td,{children:(0,r.jsx)(l.a,{href:"../../../Enums/ChangeReason",children:"enum : ChangeReason"})}),(0,r.jsx)(l.td,{})]}),(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.td,{children:"104"}),(0,r.jsx)(l.td,{children:"optQtyBotIocFilled"}),(0,r.jsx)(l.td,{children:"float"}),(0,r.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.td,{children:"105"}),(0,r.jsx)(l.td,{children:"optQtySldIocFilled"}),(0,r.jsx)(l.td,{children:"float"}),(0,r.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.td,{children:"106"}),(0,r.jsx)(l.td,{children:"ddBotIocFilled"}),(0,r.jsx)(l.td,{children:"float"}),(0,r.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.td,{children:"107"}),(0,r.jsx)(l.td,{children:"ddSldIocFilled"}),(0,r.jsx)(l.td,{children:"float"}),(0,r.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.td,{children:"108"}),(0,r.jsx)(l.td,{children:"veBotIocFilled"}),(0,r.jsx)(l.td,{children:"float"}),(0,r.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.td,{children:"109"}),(0,r.jsx)(l.td,{children:"veSldIocFilled"}),(0,r.jsx)(l.td,{children:"float"}),(0,r.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.td,{children:"110"}),(0,r.jsx)(l.td,{children:"wtVeBotIocFilled"}),(0,r.jsx)(l.td,{children:"float"}),(0,r.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.td,{children:"111"}),(0,r.jsx)(l.td,{children:"wtVeSldIocFilled"}),(0,r.jsx)(l.td,{children:"float"}),(0,r.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.td,{children:"112"}),(0,r.jsx)(l.td,{children:"nvBotIocFilled"}),(0,r.jsx)(l.td,{children:"float"}),(0,r.jsx)(l.td,{children:"fills + IOC leaves (notional value)"})]}),(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.td,{children:"113"}),(0,r.jsx)(l.td,{children:"nvSldIocFilled"}),(0,r.jsx)(l.td,{children:"float"}),(0,r.jsx)(l.td,{children:"fills + IOC leaves (notional value)"})]}),(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.td,{children:"114"}),(0,r.jsx)(l.td,{children:"rm1BotIocFilled"}),(0,r.jsx)(l.td,{children:"float"}),(0,r.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.td,{children:"115"}),(0,r.jsx)(l.td,{children:"rm1SldIocFilled"}),(0,r.jsx)(l.td,{children:"float"}),(0,r.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.td,{children:"116"}),(0,r.jsx)(l.td,{children:"rm2BotIocFilled"}),(0,r.jsx)(l.td,{children:"float"}),(0,r.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.td,{children:"117"}),(0,r.jsx)(l.td,{children:"rm2SldIocFilled"}),(0,r.jsx)(l.td,{children:"float"}),(0,r.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.td,{children:"118"}),(0,r.jsx)(l.td,{children:"rm3BotIocFilled"}),(0,r.jsx)(l.td,{children:"float"}),(0,r.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.td,{children:"119"}),(0,r.jsx)(l.td,{children:"rm3SldIocFilled"}),(0,r.jsx)(l.td,{children:"float"}),(0,r.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.td,{children:"120"}),(0,r.jsx)(l.td,{children:"rm4BotIocFilled"}),(0,r.jsx)(l.td,{children:"float"}),(0,r.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.td,{children:"121"}),(0,r.jsx)(l.td,{children:"rm4SldIocFilled"}),(0,r.jsx)(l.td,{children:"float"}),(0,r.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.td,{children:"122"}),(0,r.jsx)(l.td,{children:"rm5BotIocFilled"}),(0,r.jsx)(l.td,{children:"float"}),(0,r.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.td,{children:"123"}),(0,r.jsx)(l.td,{children:"rm5SldIocFilled"}),(0,r.jsx)(l.td,{children:"float"}),(0,r.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.td,{children:"124"}),(0,r.jsx)(l.td,{children:"rm6BotIocFilled"}),(0,r.jsx)(l.td,{children:"float"}),(0,r.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.td,{children:"125"}),(0,r.jsx)(l.td,{children:"rm6SldIocFilled"}),(0,r.jsx)(l.td,{children:"float"}),(0,r.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.td,{children:"126"}),(0,r.jsx)(l.td,{children:"rm7BotIocFilled"}),(0,r.jsx)(l.td,{children:"float"}),(0,r.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.td,{children:"127"}),(0,r.jsx)(l.td,{children:"rm7SldIocFilled"}),(0,r.jsx)(l.td,{children:"float"}),(0,r.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.td,{children:"128"}),(0,r.jsx)(l.td,{children:"counter"}),(0,r.jsx)(l.td,{children:"int"}),(0,r.jsx)(l.td,{})]}),(0,r.jsxs)(l.tr,{children:[(0,r.jsx)(l.td,{children:"129"}),(0,r.jsx)(l.td,{children:"timestamp"}),(0,r.jsx)(l.td,{children:"DateTime"}),(0,r.jsx)(l.td,{})]})]})]}),"\n",(0,r.jsx)(l.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,r.jsxs)(d.Z,{children:[(0,r.jsx)(i.Z,{value:"Python",label:"Python",children:(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'RiskGroupCounter'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n    # Required Parameters\n    \"apiKey\": API_KEY,\n    \"cmd\": 'getschema',\n    \"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,r.jsx)(i.Z,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=RiskGroupCounter'\n\n"})})})]}),"\n",(0,r.jsx)(l.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,r.jsxs)(d.Z,{children:[(0,r.jsx)(i.Z,{value:"Python",label:"Python",children:(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'RiskGroupCounter\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'sysRealm|sysEnvironment|riskEngine|changeReason|optQtyBotIocFilled|optQtySldIocFilled|ddBotIocFilled|ddSldIocFilled|veBotIocFilled|veSldIocFilled|wtVeBotIocFilled|wtVeSldIocFilled|nvBotIocFilled|nvSldIocFilled|rm1BotIocFilled|rm1SldIocFilled|rm2BotIocFilled|rm2SldIocFilled|rm3BotIocFilled|rm3SldIocFilled|rm4BotIocFilled|rm4SldIocFilled|rm5BotIocFilled|rm5SldIocFilled|rm6BotIocFilled|rm6SldIocFilled|rm7BotIocFilled|rm7SldIocFilled|counter|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,r.jsx)(i.Z,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=RiskGroupCounter' \\\n--data-urlencode 'view=sysRealm|sysEnvironment|riskEngine|changeReason|optQtyBotIocFilled|optQtySldIocFilled|ddBotIocFilled|ddSldIocFilled|veBotIocFilled|veSldIocFilled|wtVeBotIocFilled|wtVeSldIocFilled|nvBotIocFilled|nvSldIocFilled|rm1BotIocFilled|rm1SldIocFilled|rm2BotIocFilled|rm2SldIocFilled|rm3BotIocFilled|rm3SldIocFilled|rm4BotIocFilled|rm4SldIocFilled|rm5BotIocFilled|rm5SldIocFilled|rm6BotIocFilled|rm6SldIocFilled|rm7BotIocFilled|rm7SldIocFilled|counter|timestamp' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,r.jsx)(l.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,r.jsxs)(d.Z,{children:[(0,r.jsx)(i.Z,{value:"Python",label:"Python",children:(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'RiskGroupCounter\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'sysRealm|sysEnvironment|riskEngine|changeReason|optQtyBotIocFilled|optQtySldIocFilled|ddBotIocFilled|ddSldIocFilled|veBotIocFilled|veSldIocFilled|wtVeBotIocFilled|wtVeSldIocFilled|nvBotIocFilled|nvSldIocFilled|rm1BotIocFilled|rm1SldIocFilled|rm2BotIocFilled|rm2SldIocFilled|rm3BotIocFilled|rm3SldIocFilled|rm4BotIocFilled|rm4SldIocFilled|rm5BotIocFilled|rm5SldIocFilled|rm6BotIocFilled|rm6SldIocFilled|rm7BotIocFilled|rm7SldIocFilled|counter|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'sysRealm:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,r.jsx)(i.Z,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=RiskGroupCounter' \\\n--data-urlencode 'view=sysRealm|sysEnvironment|riskEngine|changeReason|optQtyBotIocFilled|optQtySldIocFilled|ddBotIocFilled|ddSldIocFilled|veBotIocFilled|veSldIocFilled|wtVeBotIocFilled|wtVeSldIocFilled|nvBotIocFilled|nvSldIocFilled|rm1BotIocFilled|rm1SldIocFilled|rm2BotIocFilled|rm2SldIocFilled|rm3BotIocFilled|rm3SldIocFilled|rm4BotIocFilled|rm4SldIocFilled|rm5BotIocFilled|rm5SldIocFilled|rm6BotIocFilled|rm6SldIocFilled|rm7BotIocFilled|rm7SldIocFilled|counter|timestamp' \\\n--data-urlencode 'where=accnt:eq:ExampleString' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=sysRealm:ASC'\n"})})})]}),"\n",(0,r.jsx)(l.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,r.jsxs)(d.Z,{children:[(0,r.jsx)(i.Z,{value:"Python",label:"Python",children:(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'RiskGroupCounter\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'sysRealm|sysEnvironment|riskEngine|changeReason|optQtyBotIocFilled|optQtySldIocFilled|ddBotIocFilled|ddSldIocFilled|veBotIocFilled|veSldIocFilled|wtVeBotIocFilled|wtVeSldIocFilled|nvBotIocFilled|nvSldIocFilled|rm1BotIocFilled|rm1SldIocFilled|rm2BotIocFilled|rm2SldIocFilled|rm3BotIocFilled|rm3SldIocFilled|rm4BotIocFilled|rm4SldIocFilled|rm5BotIocFilled|rm5SldIocFilled|rm6BotIocFilled|rm6SldIocFilled|rm7BotIocFilled|rm7SldIocFilled|counter|timestamp\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'sysRealm|sysEnvironment|changeReason\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getaggregate\',\n    "msgType": MSG_TYPE,\n    "measure": MEASURE,\n    "group": GROUP,\n    # Optional Parameters\n    "where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,r.jsx)(i.Z,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=RiskGroupCounter' \\\n--data-urlencode 'measure=sysRealm|sysEnvironment|riskEngine|changeReason|optQtyBotIocFilled|optQtySldIocFilled|ddBotIocFilled|ddSldIocFilled|veBotIocFilled|veSldIocFilled|wtVeBotIocFilled|wtVeSldIocFilled|nvBotIocFilled|nvSldIocFilled|rm1BotIocFilled|rm1SldIocFilled|rm2BotIocFilled|rm2SldIocFilled|rm3BotIocFilled|rm3SldIocFilled|rm4BotIocFilled|rm4SldIocFilled|rm5BotIocFilled|rm5SldIocFilled|rm6BotIocFilled|rm6SldIocFilled|rm7BotIocFilled|rm7SldIocFilled|counter|timestamp' \\\n--data-urlencode 'group=sysRealm|sysEnvironment|changeReason' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,r.jsx)(l.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,r.jsxs)(d.Z,{children:[(0,r.jsx)(i.Z,{value:"Python",label:"Python",children:(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'RiskGroupCounter\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,r.jsx)(i.Z,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=RiskGroupCounter' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]})]})}function m(e={}){let{wrapper:l}={...(0,s.a)(),...e.components};return l?(0,r.jsx)(l,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},9641:function(e,l,n){n.d(l,{Z:()=>s});var t=n("52676");n("75271");var r=n("54461");function s(e){let{children:l,hidden:n,className:s}=e;return(0,t.jsx)("div",{role:"tabpanel",className:(0,r.Z)("tabItem_SSzl",s),hidden:n,children:l})}},71386:function(e,l,n){n.d(l,{Z:()=>g});var t=n("52676"),r=n("75271"),s=n("54461"),d=n("52289"),i=n("3225"),o=n("42834"),a=n("40578"),c=n("35834"),h=n("79616");function u(e){return r.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||r.isValidElement(e)&&function(e){let{props:l}=e;return!!l&&"object"==typeof l&&"value"in l}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function m(e){let{value:l,tabValues:n}=e;return n.some(e=>e.value===l)}var p=n("44537");function x(e){let{className:l,block:n,selectedValue:r,selectValue:i,tabValues:o}=e,a=[],{blockElementScrollPositionUntilNextRender:c}=(0,d.o5)(),h=e=>{let l=e.currentTarget,n=o[a.indexOf(l)].value;n!==r&&(c(l),i(n))},u=e=>{let l=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{let n=a.indexOf(e.currentTarget)+1;l=a[n]??a[0];break}case"ArrowLeft":{let n=a.indexOf(e.currentTarget)-1;l=a[n]??a[a.length-1]}}l?.focus()};return(0,t.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":n},l),children:o.map(e=>{let{value:l,label:n,attributes:d}=e;return(0,t.jsx)("li",{role:"tab",tabIndex:r===l?0:-1,"aria-selected":r===l,ref:e=>a.push(e),onKeyDown:u,onClick:h,...d,className:(0,s.Z)("tabs__item","tabItem_aitt",d?.className,{"tabs__item--active":r===l}),children:n??l},l)})})}function j(e){let{lazy:l,children:n,selectedValue:d}=e,i=(Array.isArray(n)?n:[n]).filter(Boolean);if(l){let e=i.find(e=>e.props.value===d);return e?(0,r.cloneElement)(e,{className:(0,s.Z)("margin-top--md",e.props.className)}):null}return(0,t.jsx)("div",{className:"margin-top--md",children:i.map((e,l)=>(0,r.cloneElement)(e,{key:l,hidden:e.props.value!==d}))})}function I(e){let l=function(e){let{defaultValue:l,queryString:n=!1,groupId:t}=e,s=function(e){let{values:l,children:n}=e;return(0,r.useMemo)(()=>{let e=l??u(n).map(e=>{let{props:{value:l,label:n,attributes:t,default:r}}=e;return{value:l,label:n,attributes:t,default:r}});return!function(e){let l=(0,c.lx)(e,(e,l)=>e.value===l.value);if(l.length>0)throw Error(`Docusaurus error: Duplicate values "${l.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[l,n])}(e),[d,p]=(0,r.useState)(()=>(function(e){let{defaultValue:l,tabValues:n}=e;if(0===n.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(l){if(!m({value:l,tabValues:n}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${l}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return l}let t=n.find(e=>e.default)??n[0];if(!t)throw Error("Unexpected error: 0 tabValues");return t.value})({defaultValue:l,tabValues:s})),[x,j]=function(e){let{queryString:l=!1,groupId:n}=e,t=(0,i.k6)(),s=function(e){let{queryString:l=!1,groupId:n}=e;if("string"==typeof l)return l;if(!1===l)return null;if(!0===l&&!n)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:l,groupId:n});return[(0,a._X)(s),(0,r.useCallback)(e=>{if(!s)return;let l=new URLSearchParams(t.location.search);l.set(s,e),t.replace({...t.location,search:l.toString()})},[s,t])]}({queryString:n,groupId:t}),[I,g]=function(e){let{groupId:l}=e,n=l?`docusaurus.tab.${l}`:null,[t,s]=(0,h.Nk)(n);return[t,(0,r.useCallback)(e=>{n&&s.set(e)},[n,s])]}({groupId:t}),v=(()=>{let e=x??I;return m({value:e,tabValues:s})?e:null})();return(0,o.Z)(()=>{v&&p(v)},[v]),{selectedValue:d,selectValue:(0,r.useCallback)(e=>{if(!m({value:e,tabValues:s}))throw Error(`Can't select invalid tab value=${e}`);p(e),j(e),g(e)},[j,g,s]),tabValues:s}}(e);return(0,t.jsxs)("div",{className:(0,s.Z)("tabs-container","tabList_ArS0"),children:[(0,t.jsx)(x,{...l,...e}),(0,t.jsx)(j,{...l,...e})]})}function g(e){let l=(0,p.Z)();return(0,t.jsx)(I,{...e,children:u(e.children)},String(l))}},91503:function(e,l,n){n.d(l,{Z:function(){return i},a:function(){return d}});var t=n(75271);let r={},s=t.createContext(r);function d(e){let l=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(l):{...l,...e}},[l,e])}function i(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),t.createElement(s.Provider,{value:l},e.children)}}}]);