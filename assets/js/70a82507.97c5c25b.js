"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[49369],{63250:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var i=s(74848),t=s(28453);const r={title:"MLink",sidebar_position:2},d=void 0,o={id:"Documentation/Products/MLink/MLink",title:"MLink",description:"MLink",source:"@site/docs/Documentation/Products/MLink/MLink.md",sourceDirName:"Documentation/Products/MLink",slug:"/Documentation/Products/MLink/",permalink:"/docs/Documentation/Products/MLink/",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"MLink",sidebar_position:2},sidebar:"documentationSidebar",previous:{title:"Citrix Tools",permalink:"/docs/Documentation/Products/ToolSuite/CitrixTools"},next:{title:"MLink REST API",permalink:"/docs/Documentation/Products/MLink/RESTAPI"}},c={},l=[{value:"MLink",id:"mlink",level:2},{value:"Authentication Methods",id:"authentication-methods",level:2},{value:"Messages",id:"messages",level:2},{value:"Message Patterns",id:"message-patterns",level:3},{value:"Connection Types",id:"connection-types",level:2}];function a(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"mlink",children:"MLink"}),"\n",(0,i.jsx)(n.p,{children:"The SpiderRock MLink API provides access to live-data objects (real-time or delayed data feeds) within the SpiderRock system. This repo provides documentation and code samples for how developers can connect to MLink and consume the data returned."}),"\n",(0,i.jsx)(n.p,{children:"MLink provides several options:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://www.spiderrock.net/data/spiderstream-market-data-api/#dataproducts",children:"6 product categories"})," to choose from, which are divided into 18 tokens for scoped access to message types"]}),"\n",(0,i.jsx)(n.li,{children:"3 message delivery protocols: JSON, Framed JSON or Google Protocol Buffers"}),"\n",(0,i.jsx)(n.li,{children:"2 connection types: query-based (REST) or streaming (Websocket)"}),"\n",(0,i.jsx)(n.li,{children:"Real-time or delayed data"}),"\n",(0,i.jsx)(n.li,{children:"Authentication via API Key or Session Key"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"authentication-methods",children:"Authentication Methods"}),"\n",(0,i.jsx)(n.p,{children:"You can authenticate to MLink through 2 different methods: Login or API Key"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Login (Human Access)"}),":\nUse this method to authenticate your application by challenging humans to login with their SpiderRock ID credentials along with multi-factor authentication (MFA)."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The SpiderRock Support Desk will issue you a SpiderRock ID, by which you will receive an invitation to your registered email. From there, you will complete your setup and select with MFA method you want: Authenticator App or SMS. Upon completion of sign up you will have access to MLink as determined by your configuration."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Session Keys:"})," a Session Key looks similar to an API but is issued for each valid session after login. Therefore, once a user authenticates with their SpiderRock ID credentials their Session Key will be automatically issued and used for the remainer of the session."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"API Key (Machine Access)"}),":\nUse this method to authenticate your application directly to MLink if there is no ability to use MFA or you only require a single data feed."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["The SpiderRock Support Desk will issue an ",(0,i.jsx)(n.code,{children:"M2MUser"})," user as a datafeed profile, by which we will generate an API Key scoped to the permissions requested by the customer."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Using an API Key via REST:"}),' Add your API Key to the querystring as "apikey":\n',(0,i.jsx)(n.code,{children:"https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json?apikey=1234-5678-9012-31415"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Using an API Key via WebSocket:"})," Send an MLinkLogon to MLink servers, then include ",(0,i.jsx)(n.code,{children:"apikey"})," as a header in the initial HTTP handshake request:"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'msg = {\n    "header": {"mTyp": "MLinkLogon"},\n    "message": {\n        "apiKey": "1234-5678-9012-3141" # Replace with actual API key or session key\n    } \n}\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'async with websockets.connect(uriJson, \nextra_headers={"Authorization": "Bearer {apikey}"}, ping_timeout=None) as websocket:\n'})}),"\n",(0,i.jsx)(n.h2,{id:"messages",children:"Messages"}),"\n",(0,i.jsx)(n.p,{children:"In MLink, messages are organized and permissioned by the folllowing tokens:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Token"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"EqtMktData"}),(0,i.jsx)(n.td,{children:"Stock quote and prints"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"OptMktData"}),(0,i.jsx)(n.td,{children:"Options quote and prints"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"FutMktData"}),(0,i.jsx)(n.td,{children:"Futures quote and prints"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"SpreadMktData"}),(0,i.jsx)(n.td,{children:"Spread quote and markups"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"SpreadExchData"}),(0,i.jsx)(n.td,{children:"Live public spread orders for each exchange (if available)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"EqtSummaryData"}),(0,i.jsx)(n.td,{children:"Stock market summaries"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"OptSummaryData"}),(0,i.jsx)(n.td,{children:"Options market summaries"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"FutSummaryData"}),(0,i.jsx)(n.td,{children:"Futures market summaries"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"EqtMarkData"}),(0,i.jsx)(n.td,{children:"Stock open and close marks"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"OptMarkData"}),(0,i.jsx)(n.td,{children:"Options open, close, surface, closing greeks marks"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"FutMarkData"}),(0,i.jsx)(n.td,{children:"Futures open, close and settlement marks"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"EqtExchImbalance"}),(0,i.jsx)(n.td,{children:"Stock market auction imbalances"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"OptSurface"}),(0,i.jsx)(n.td,{children:"Options surfaces, at-the-money volatility and related"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"OptAnalytics"}),(0,i.jsx)(n.td,{children:"Options implied quotes and risk slides"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"EquityDefinition"}),(0,i.jsx)(n.td,{children:"Production definitions for equities"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"OptionDefinition"}),(0,i.jsx)(n.td,{children:"Production definitions for options"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"FutureDefinition"}),(0,i.jsx)(n.td,{children:"Production definitions for futures"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"GlobalDefinition"}),(0,i.jsx)(n.td,{children:"Dividends, EarningsCalendars, Rates, StockBetas"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"MLinkWs"}),(0,i.jsx)(n.td,{children:"MLink WebSocket admin messages"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"MLinkRest"}),(0,i.jsx)(n.td,{children:"MLink HTTP/REST admin messages"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"message-patterns",children:"Message Patterns"}),"\n",(0,i.jsx)(n.p,{children:"All MLink messages are generated from a common IDL schema and follow common patterns, including the following:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Live Data Objects with Primary Key:"})}),"\n",(0,i.jsx)(n.p,{children:'These messages have a well-defined primary key (unique per message type) and follow a create/replace pattern such that any new message arriving in MLink will completely replace the previous record with the same primary key, if one exists. NOTE: any REST query for this message pattern will result in the current, cached copy of all responsive records being returned to the client. An example of this pattern is the  "NBBOOptionQuote" message'}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Security Keys:"})}),"\n",(0,i.jsx)(n.p,{children:"Several messages contain security keys (TickerKey, ExpiryKey, and/or OptionKey)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["TickerKey: ",(0,i.jsx)(n.code,{children:"SSSS-TS-AT"})," where SSSS is the security symbol (eg. AAPL), TS is a ticker source (eg. NMS), and AT is a asset type (eg. EQT)."]}),"\n",(0,i.jsxs)(n.li,{children:["ExpiryKey: ",(0,i.jsx)(n.code,{children:"SSSS-TS-AT-YYYY-MM-DD"})," where YYYY is year, MM is month, and DD is day."]}),"\n",(0,i.jsxs)(n.li,{children:["OptionKey: ",(0,i.jsx)(n.code,{children:"SSSS-TS-AT-YYYY-MM-DD-XXXX-CP"})," where XXXX is the strike price, and CP is either (Call, Put, or Both)."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Ticker Sources (ts) can be of the following:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"None=0,SR=1,NMS=2,CME=3,ICE=4,CFE=5,CBOT=6,NYMEX=7,COMEX=8,RUT=9,CIDX=10,ARCA=11,NYSE=12,OTC=13,NSDQ=14,MFQS=15,MIAX=16,DJI=17,CUSIP=18,ISIN=19"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Asset Types (at) can be of the following:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"None=0,EQT=1,IDX=2,BND=3,CUR=4,COM=5,FUT=6,SYN=7,WAR=8,FLX=9,MUT=10,SPD=11,MM=12,MF=13,COIN=14,TOKEN=15"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Special Data Objects:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Spreads: ",(0,i.jsx)(n.code,{children:"#SSSShhhh"})," where hhhh is a hexadecimal ID number. It is not possible to determine the security being traded without referring to the associated product definition."]}),"\n",(0,i.jsx)(n.li,{children:"FLEX: encoded as OptionKeys with the security symbol being the standard FLEX root."}),"\n",(0,i.jsx)(n.li,{children:"Market Data: distributed with one of the above security keys where the symbol is the exchange trading symbol. Product definition records are available for all trading instruments that contain more complete details."}),"\n",(0,i.jsxs)(n.li,{children:["Synthetics: ",(0,i.jsx)(n.code,{children:"_SSSS"})," or ",(0,i.jsx)(n.code,{children:"SSSS_"})," computed for the purpose of pricing options more accurately (eg. multi-hedge basket underliers or roll+model derived options on futures quotes)."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Admin Data Objects without Primary Keys:"})}),"\n",(0,i.jsx)(n.p,{children:'Some SR MLink objects do not have natural primary keys and are used as administrative messages between MLink and a client. An example of this pattern is "MLinkLogon".'}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"HTTP/REST Admin Messages:"})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Messages"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"MLinkApiKey"}),(0,i.jsx)(n.td,{children:"Used to return a temporary ApiKey (./getapikey)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"QueryResult"}),(0,i.jsx)(n.td,{children:"Futures quote/print metrics (the last message in a response.body block) (./getmsg or ./getmsgs)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"MsgDesc"}),(0,i.jsx)(n.td,{children:"Message Description (describes an SR message) (in response to ./getmsgtypes call)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"FieldDesc"}),(0,i.jsx)(n.td,{children:"Field Description (schema) (in response to a ./getschema call)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"SummaryNumeric"}),(0,i.jsx)(n.td,{children:"Summary detail for a numeric field (in response to a ./getsummary call)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"SummaryString"}),(0,i.jsx)(n.td,{children:"Summary detail for a string field (in response to a ./getsummary call)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"PostAck"}),(0,i.jsx)(n.td,{children:"Post acknowlegement for an individual SR message post attempt (./postmsgs)"})]})]})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"MLink/WebSocket Admin Messages:"})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Messages"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"MLinkAdmin"}),(0,i.jsx)(n.td,{children:"Sent in response to a WebSocket connect attempt and also in response to an MLinkLogon message"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"MLinkLogon"}),(0,i.jsx)(n.td,{children:"Used to logon (authenticate) (only required if credentials were not supplied in initial HTTP connect)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"MLinkStream"}),(0,i.jsx)(n.td,{children:"Set or update the active subscription query for this session"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"MLinkStreamAck"}),(0,i.jsx)(n.td,{children:"Sent in repsponse to an MLinkStream attempt"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"MLinkStreamCheckPt"}),(0,i.jsx)(n.td,{children:"Query Check Point (None=0,Begin=1,Active=2,Complete=3,Replaced=4,Terminated=5)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"MLinkSignalReady"}),(0,i.jsx)(n.td,{children:"Used to signal that the client is ready for more messages (live subscriptions w/o an active latency)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"MLinkDataAck"}),(0,i.jsx)(n.td,{children:"Sent in response to an message upload attempt"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"MLinkSubscribe"}),(0,i.jsx)(n.td,{children:"Set or update an active subscription for a session by msgPKey"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"MLinkSubscribeAck"}),(0,i.jsx)(n.td,{children:"Sent in reponse to an MLinkSubscribe attempt"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"MLinkSubscribeCheckPt"}),(0,i.jsx)(n.td,{children:"Subscription Check Point (None=0,Begin=1,Active=2,Terminated=3)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"MLinkHeartbeat"}),(0,i.jsx)(n.td,{children:"MLink Connection heart beat; sent by default every 10 seconds"})]})]})]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"connection-types",children:"Connection Types"}),"\n",(0,i.jsx)(n.p,{children:"You can connect to the MLink API through 2 different connection types: REST or Websocket."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.strong,{children:"REST API"})," should be used for applications that need to query data from time to time, this connection type allows for more conservative message consumption which keeps costs lower."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.strong,{children:"Websocket"})," connection should be used for applications that require a live subscription to data, this connection type flows data to the screen automatically and tends to consume more messages as a result."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>o});var i=s(96540);const t={},r=i.createContext(t);function d(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);