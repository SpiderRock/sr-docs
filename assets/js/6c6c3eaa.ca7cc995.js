"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([["5676"],{45208:function(e,t,r){r.r(t),r.d(t,{default:()=>u,frontMatter:()=>d,metadata:()=>n,assets:()=>o,toc:()=>h,contentTitle:()=>a});var n=JSON.parse('{"id":"MessageSchemas/Schema/Topics/client-config/AccountExchGroupConfig","title":"AccountExchGroupConfig","description":"METADATA","source":"@site/docs/MessageSchemas/Schema/Topics/1800-client-config/AccountExchGroupConfig.md","sourceDirName":"MessageSchemas/Schema/Topics/1800-client-config","slug":"/MessageSchemas/Schema/Topics/client-config/AccountExchGroupConfig","permalink":"/docs/next/MessageSchemas/Schema/Topics/client-config/AccountExchGroupConfig","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"AccountExchGroupConfig"},"sidebar":"messageSchemasSidebar","previous":{"title":"1800-client-config","permalink":"/docs/next/MessageSchemas/Schema/Topics/client-config/"},"next":{"title":"AccountRouteConfig","permalink":"/docs/next/MessageSchemas/Schema/Topics/client-config/AccountRouteConfig"}}'),c=r("52676"),s=r("91503"),i=r("71386"),l=r("9641");let d={title:"AccountExchGroupConfig"},a="Schema: AccountExchGroupConfig (ID: 1806)",o={},h=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"REPEATING FIELDS",id:"repeating-fields",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3}];function x(e){let t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(t.header,{children:(0,c.jsxs)(t.h1,{id:"schema-accountexchgroupconfig-id-1806",children:["Schema: AccountExchGroupConfig ",(0,c.jsx)("span",{className:"small-text",children:"(ID: 1806)"})]})}),"\n",(0,c.jsx)(t.h3,{id:"metadata",children:"METADATA"}),"\n",(0,c.jsxs)(t.table,{children:[(0,c.jsx)(t.thead,{children:(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.th,{children:"Attribute"}),(0,c.jsx)(t.th,{children:"Value"})]})}),(0,c.jsxs)(t.tbody,{children:[(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"Topic"}),(0,c.jsx)(t.td,{children:"1800-client-config"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"MLink Token"}),(0,c.jsx)(t.td,{children:"ClientConfig"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"SRSE Product"}),(0,c.jsx)(t.td,{})]})]})]}),"\n",(0,c.jsx)("br",{}),"\n",(0,c.jsxs)(t.blockquote,{children:["\n",(0,c.jsxs)(t.p,{children:[(0,c.jsx)(t.strong,{children:"Note:"})," The symbol ",(0,c.jsx)(t.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,c.jsx)(t.h3,{id:"body",children:"BODY"}),"\n",(0,c.jsxs)(t.table,{children:[(0,c.jsx)(t.thead,{children:(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.th,{children:"#"}),(0,c.jsx)(t.th,{children:"Field"}),(0,c.jsx)(t.th,{children:"Type"}),(0,c.jsx)(t.th,{children:"Default Value"}),(0,c.jsx)(t.th,{children:"Comment"})]})}),(0,c.jsxs)(t.tbody,{children:[(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"10="}),(0,c.jsx)(t.td,{children:"accnt"}),(0,c.jsx)(t.td,{children:"string(16)"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"13="}),(0,c.jsx)(t.td,{children:"clientFirm"}),(0,c.jsx)(t.td,{children:"string(16)"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"SR assigned client firm acronym"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"11="}),(0,c.jsx)(t.td,{children:"exchGroup"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/ExchGroup",children:"enum : ExchGroup"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"eg (NMS, CMX, ICE, EUX)"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"12="}),(0,c.jsx)(t.td,{children:"secType"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/SpdrSecType",children:"enum : SpdrSecType"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"eg (Stock, Future, Option)"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"100"}),(0,c.jsx)(t.td,{children:"execEngineMode"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/ExecEngineMode",children:"enum : ExecEngineMode"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"290"}),(0,c.jsx)(t.td,{children:"stageReview"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/StageReview",children:"enum : StageReview"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"Strict will re-review user changes; Normal will re-review size incr only"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"301"}),(0,c.jsx)(t.td,{children:"reviewExDest"}),(0,c.jsx)(t.td,{children:"string(16)"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"order routing string (if any) [StageReview Orders]"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"109"}),(0,c.jsx)(t.td,{children:"allowReviewExecs"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"allow stage review executions [StageReview Orders]"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"291"}),(0,c.jsx)(t.td,{children:"stageReviewURL"}),(0,c.jsx)(t.td,{children:"text1"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"Stage Review URL for this account (HTTP(S) / REST / WS)"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"112"}),(0,c.jsx)(t.td,{children:"priAggGroup"}),(0,c.jsx)(t.td,{children:"string(16)"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"primary stk grouping code (for computing aggregate positions) [default = ClientFirm]"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"115"}),(0,c.jsx)(t.td,{children:"secAggGroup"}),(0,c.jsx)(t.td,{children:"string(16)"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:'secondary stk grouping code (for computing aggregate positions) [default = ""]'})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"118"}),(0,c.jsx)(t.td,{children:"userMarking"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"users are required to do the long/short marking on orders"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"310"}),(0,c.jsx)(t.td,{children:"requireLocate"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/RequireLocate",children:"enum : RequireLocate"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"locate check enforced in SR systems"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"124"}),(0,c.jsx)(t.td,{children:"requireExternPos"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"all sell orders require an ExternAggGroupReport (externSource = SRSE) record"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"127"}),(0,c.jsx)(t.td,{children:"locateFirm"}),(0,c.jsx)(t.td,{children:"string(6)"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"locate firm [must be one of the items in the clientFirmConfig.LocatePool list]"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"130"}),(0,c.jsx)(t.td,{children:"locatePool"}),(0,c.jsx)(t.td,{children:"string(16)"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"locate pool @ firm granting the locate"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"307"}),(0,c.jsx)(t.td,{children:"ticketLocateFirm"}),(0,c.jsx)(t.td,{children:"string(6)"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"ticket/chat (default) locate firm (only used for chat/concierge locate scenarios)"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"133"}),(0,c.jsx)(t.td,{children:"firmType"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/FirmType",children:"enum : FirmType"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"136"}),(0,c.jsx)(t.td,{children:"orderCapacity"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/OrderCapacity",children:"enum : OrderCapacity"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"Order capacity"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"139"}),(0,c.jsx)(t.td,{children:"custOrderCapacity"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/OrderCapacity",children:"enum : OrderCapacity"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"Order capacity of Account at Customer's Firm"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"119"}),(0,c.jsx)(t.td,{children:"badge"}),(0,c.jsx)(t.td,{children:"string(16)"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"exchange memembership and badge id"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"142"}),(0,c.jsx)(t.td,{children:"futClearingRange"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/FutClearingRange",children:"enum : FutClearingRange"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"145"}),(0,c.jsx)(t.td,{children:"futCustType"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/FutCustType",children:"enum : FutCustType"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"311"}),(0,c.jsx)(t.td,{children:"cmeStpId"}),(0,c.jsx)(t.td,{children:"long"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"CME Self-Trade Prevention ID (co-ordinate with client for value)"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"312"}),(0,c.jsx)(t.td,{children:"cmeStpInstruction"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/StpInstruction",children:"enum : StpInstruction"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"CME Self-Trade Prevention Instruction (default: Cancel Oldest)"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"148"}),(0,c.jsx)(t.td,{children:"isLowVelocity"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"if Yes all 390Rule counters will be computed even if not a PriorityCust"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"151"}),(0,c.jsx)(t.td,{children:"catReportable"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/CatReportType",children:"enum : CatReportType"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"CAT reportable type"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"154"}),(0,c.jsx)(t.td,{children:"catAccnt"}),(0,c.jsx)(t.td,{children:"string(40)"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"CAT Firm Designated ID"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"157"}),(0,c.jsx)(t.td,{children:"catBrkrAccnt"}),(0,c.jsx)(t.td,{children:"string(40)"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"Brkrs CAT Firm Designated ID"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"160"}),(0,c.jsx)(t.td,{children:"catBrkrAccntType"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/CatAccntType",children:"enum : CatAccntType"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"CAT account holder type"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"163"}),(0,c.jsx)(t.td,{children:"catBrkrFirmType"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/CatFirmType",children:"enum : CatFirmType"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"CAT source firm type"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"166"}),(0,c.jsx)(t.td,{children:"catBrkrIMID"}),(0,c.jsx)(t.td,{children:"string(16)"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"B/D firm FDID (only if client is a B/D) (supplied by FINRA fbo client)"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"169"}),(0,c.jsx)(t.td,{children:"clientAccnt"}),(0,c.jsx)(t.td,{children:"string(32)"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"client assigned account string (optional) [overrides AccountConfig.clientAccnt]"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"172"}),(0,c.jsx)(t.td,{children:"clientUserName"}),(0,c.jsx)(t.td,{children:"string(32)"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"client assigned account userName (optional) [overrides AccountConfig.clientUserName]"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"175"}),(0,c.jsx)(t.td,{children:"allocMethod"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/AllocMethod",children:"enum : AllocMethod"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"method for delivery of the allocation instruction to the broker"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"178"}),(0,c.jsx)(t.td,{children:"allocMLegRule"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/AllocMLegRule",children:"enum : AllocMLegRule"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"rule for how to send allocation instructions for mleg orders to the broker"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"181"}),(0,c.jsx)(t.td,{children:"allocAccnt"}),(0,c.jsx)(t.td,{children:"string(16)"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"302"}),(0,c.jsx)(t.td,{children:"allocExDest"}),(0,c.jsx)(t.td,{children:"string(16)"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"allocation routing string (if any) [Allocation Messages]"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"187"}),(0,c.jsx)(t.td,{children:"execBrkrAccntAlloc"}),(0,c.jsx)(t.td,{children:"string(16)"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"exec broker account (usually Account)"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"190"}),(0,c.jsx)(t.td,{children:"execBrkrClFirmAlloc"}),(0,c.jsx)(t.td,{children:"string(16)"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"exec broker client/firm (supplied by exec broker) (usually OnBehalfOfCompId<115>)"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"193"}),(0,c.jsx)(t.td,{children:"execBrkrUserNameAlloc"}),(0,c.jsx)(t.td,{children:"string(16)"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"196"}),(0,c.jsx)(t.td,{children:"clearingFirmName"}),(0,c.jsx)(t.td,{children:"string(24)"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"string name (can be anything) [commonly used by position loaders] (not used in any FIX message)"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"199"}),(0,c.jsx)(t.td,{children:"clearingFirm"}),(0,c.jsx)(t.td,{children:"string(4)"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"stock clearing firm name or code [books and records only; not visible in fix templates]"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"202"}),(0,c.jsx)(t.td,{children:"clearingAccnt"}),(0,c.jsx)(t.td,{children:"string(16)"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"eg C233702"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"205"}),(0,c.jsx)(t.td,{children:"clientAccntIds"}),(0,c.jsx)(t.td,{children:"text2"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"all other accounts that affect this accounts position (eg. C233702, C233703).  Affects incoming FIX drops (and perhaps scripts)."})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"208"}),(0,c.jsx)(t.td,{children:"positionSrc"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/PositionSource",children:"enum : PositionSource"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"SR = use SR rotated positions; CLR = use clearing records; CLR_SR = use clearing records if loaded but fallback to SR positions; Default (None) = behaves like CLR_SR"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"211"}),(0,c.jsx)(t.td,{children:"clearingLoadTime"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/ClearingLoadTime",children:"enum : ClearingLoadTime"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"214"}),(0,c.jsx)(t.td,{children:"tiedPriceRounding"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/TiedPriceRounding",children:"enum : TiedPriceRounding"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"option limit price rounding rule: Loose = up to 1/4 tick extra; Strict = never exceed limit"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"305"}),(0,c.jsx)(t.td,{children:"algoFlashPct"}),(0,c.jsx)(t.td,{children:"byte"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"percent of orders for which algo will start flash auctions [0 - 100]"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"306"}),(0,c.jsx)(t.td,{children:"algoBlockPct"}),(0,c.jsx)(t.td,{children:"byte"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"percent of orders for which algo will start block auctions [0 - 100]"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"220"}),(0,c.jsx)(t.td,{children:"canISOSweep"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"can initiate ISO Sweep WaitTrigger orders"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"309"}),(0,c.jsx)(t.td,{children:"nbboCap"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/NbboCap",children:"enum : NbboCap"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"indicates if order price is capped at NBBO (or 1, 5, 10 pennies through) unless overridden by ParentOrder"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"223"}),(0,c.jsx)(t.td,{children:"auctionResponder"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/AuctionResponder",children:"enum : AuctionResponder"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"can respond to exchange / away auctions"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"226"}),(0,c.jsx)(t.td,{children:"takeExchList"}),(0,c.jsx)(t.td,{children:"text1"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"exchange order for marketable orders eg: BATS,NYSE,CBOE"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"229"}),(0,c.jsx)(t.td,{children:"makeExchList"}),(0,c.jsx)(t.td,{children:"text1"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"exchange order for non-marketable orders eg: BATS,NYSE,CBOE"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"232"}),(0,c.jsx)(t.td,{children:"incTakeExchFee"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/IncExchFee",children:"enum : IncExchFee"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"include exchange fee in limit calculations"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"235"}),(0,c.jsx)(t.td,{children:"incMakeExchFee"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/IncExchFee",children:"enum : IncExchFee"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"include exchange fee in limit calculations"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"238"}),(0,c.jsx)(t.td,{children:"makeExchRule"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/MakeExchRule",children:"enum : MakeExchRule"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"ActiveMaker exchange preference rule: 'MaxPart' will pick exchanges to maximize participation; 'FeeOrder' will pick exchanges to minimize fees [maximize rebates]; 'ImprvOnly' will only make when improving NBBO."})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"241"}),(0,c.jsx)(t.td,{children:"roundRule"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/RoundRule",children:"enum : RoundRule"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"Stock Price Rounding rule (Fuzzy = 90%, Exact = 100%)"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"244"}),(0,c.jsx)(t.td,{children:"execMode"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/ExecMode",children:"enum : ExecMode"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"247"}),(0,c.jsx)(t.td,{children:"cxlOnHalt"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"cancel parent orders if the item being traded (or underlier) is halted"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"250"}),(0,c.jsx)(t.td,{children:"splitZero"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"sell stock down to zero before selling short"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"253"}),(0,c.jsx)(t.td,{children:"oddLotFlag"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/OddLotFlag",children:"enum : OddLotFlag"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"RoundLotsOnly restricts most child order sizes to multiples of 100"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"256"}),(0,c.jsx)(t.td,{children:"maxChildOrdersPerDay"}),(0,c.jsx)(t.td,{children:"int"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"maximum number of option child orders allowed for this account per day (zero = no restriction)"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"259"}),(0,c.jsx)(t.td,{children:"maxParentBrkrsPerDay"}),(0,c.jsx)(t.td,{children:"int"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"maximum number of execution engine stock broker (default=2,000)"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"262"}),(0,c.jsx)(t.td,{children:"riskCxlThrottle"}),(0,c.jsx)(t.td,{children:"int"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"maximum risk throttle cancel rate (per second)"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"265"}),(0,c.jsx)(t.td,{children:"betaSource"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/BetaSource",children:"enum : BetaSource"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"294"}),(0,c.jsx)(t.td,{children:"routeAllocRule"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/RouteAllocRule",children:"enum : RouteAllocRule"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"283"}),(0,c.jsx)(t.td,{children:"modifiedBy"}),(0,c.jsx)(t.td,{children:"string(24)"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"user who last modified this record"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"286"}),(0,c.jsx)(t.td,{children:"modifiedIn"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/SysEnvironment",children:"enum : SysEnvironment"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"289"}),(0,c.jsx)(t.td,{children:"timestamp"}),(0,c.jsx)(t.td,{children:"DateTime"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"timestamp of last modification"})]})]})]}),"\n",(0,c.jsx)(t.h3,{id:"repeating-fields",children:"REPEATING FIELDS"}),"\n",(0,c.jsx)(t.p,{children:"CapStrategyID"}),"\n",(0,c.jsxs)(t.table,{children:[(0,c.jsx)(t.thead,{children:(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.th,{children:"#"}),(0,c.jsx)(t.th,{children:"Field"}),(0,c.jsx)(t.th,{children:"Type"}),(0,c.jsx)(t.th,{children:"Default Value"}),(0,c.jsx)(t.th,{children:"Comment"})]})}),(0,c.jsxs)(t.tbody,{children:[(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"303"}),(0,c.jsx)(t.td,{children:"exDest"}),(0,c.jsx)(t.td,{children:"string(16)"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"exchange"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"300"}),(0,c.jsx)(t.td,{children:"capStrategyID"}),(0,c.jsx)(t.td,{children:"string(12)"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"client cap strategy ID (if any)"})]})]})]}),"\n",(0,c.jsx)(t.p,{children:"AccntRouteTable"}),"\n",(0,c.jsxs)(t.table,{children:[(0,c.jsx)(t.thead,{children:(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.th,{children:"#"}),(0,c.jsx)(t.th,{children:"Field"}),(0,c.jsx)(t.th,{children:"Type"}),(0,c.jsx)(t.th,{children:"Default Value"}),(0,c.jsx)(t.th,{children:"Comment"})]})}),(0,c.jsxs)(t.tbody,{children:[(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"280"}),(0,c.jsx)(t.td,{children:"enabled"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"296"}),(0,c.jsx)(t.td,{children:"execBrkrCode"}),(0,c.jsx)(t.td,{children:"string(16)"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"277"}),(0,c.jsx)(t.td,{children:"routeAllocMetric"}),(0,c.jsx)(t.td,{children:"float"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"304"}),(0,c.jsx)(t.td,{children:"brkrExDest"}),(0,c.jsx)(t.td,{children:"string(16)"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"order routing string (if any) [used to force orders use a specific ExDest regardless of the actual exchange destination]"})]})]})]}),"\n",(0,c.jsx)(t.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,c.jsxs)(i.Z,{children:[(0,c.jsx)(l.Z,{value:"Python",label:"Python",children:(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'AccountExchGroupConfig'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n    # Required Parameters\n    \"apiKey\": API_KEY,\n    \"cmd\": 'getschema',\n    \"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,c.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=AccountExchGroupConfig'\n\n"})})})]}),"\n",(0,c.jsx)(t.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,c.jsxs)(i.Z,{children:[(0,c.jsx)(l.Z,{value:"Python",label:"Python",children:(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'AccountExchGroupConfig\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'execEngineMode|stageReview|reviewExDest|allowReviewExecs|stageReviewURL|priAggGroup|secAggGroup|userMarking|requireLocate|requireExternPos|locateFirm|locatePool|ticketLocateFirm|firmType|orderCapacity|custOrderCapacity|badge|futClearingRange|futCustType|cmeStpId|cmeStpInstruction|isLowVelocity|catReportable|catAccnt|catBrkrAccnt|catBrkrAccntType|catBrkrFirmType|catBrkrIMID|clientAccnt|clientUserName|allocMethod|allocMLegRule|allocAccnt|allocExDest|execBrkrAccntAlloc|execBrkrClFirmAlloc|execBrkrUserNameAlloc|clearingFirmName|clearingFirm|clearingAccnt|clientAccntIds|positionSrc|clearingLoadTime|tiedPriceRounding|algoFlashPct|algoBlockPct|canISOSweep|nbboCap|auctionResponder|takeExchList|makeExchList|incTakeExchFee|incMakeExchFee|makeExchRule|roundRule|execMode|cxlOnHalt|splitZero|oddLotFlag|maxChildOrdersPerDay|maxParentBrkrsPerDay|riskCxlThrottle|betaSource|routeAllocRule|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,c.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=AccountExchGroupConfig' \\\n--data-urlencode 'view=execEngineMode|stageReview|reviewExDest|allowReviewExecs|stageReviewURL|priAggGroup|secAggGroup|userMarking|requireLocate|requireExternPos|locateFirm|locatePool|ticketLocateFirm|firmType|orderCapacity|custOrderCapacity|badge|futClearingRange|futCustType|cmeStpId|cmeStpInstruction|isLowVelocity|catReportable|catAccnt|catBrkrAccnt|catBrkrAccntType|catBrkrFirmType|catBrkrIMID|clientAccnt|clientUserName|allocMethod|allocMLegRule|allocAccnt|allocExDest|execBrkrAccntAlloc|execBrkrClFirmAlloc|execBrkrUserNameAlloc|clearingFirmName|clearingFirm|clearingAccnt|clientAccntIds|positionSrc|clearingLoadTime|tiedPriceRounding|algoFlashPct|algoBlockPct|canISOSweep|nbboCap|auctionResponder|takeExchList|makeExchList|incTakeExchFee|incMakeExchFee|makeExchRule|roundRule|execMode|cxlOnHalt|splitZero|oddLotFlag|maxChildOrdersPerDay|maxParentBrkrsPerDay|riskCxlThrottle|betaSource|routeAllocRule|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,c.jsx)(t.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,c.jsxs)(i.Z,{children:[(0,c.jsx)(l.Z,{value:"Python",label:"Python",children:(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'AccountExchGroupConfig\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'execEngineMode|stageReview|reviewExDest|allowReviewExecs|stageReviewURL|priAggGroup|secAggGroup|userMarking|requireLocate|requireExternPos|locateFirm|locatePool|ticketLocateFirm|firmType|orderCapacity|custOrderCapacity|badge|futClearingRange|futCustType|cmeStpId|cmeStpInstruction|isLowVelocity|catReportable|catAccnt|catBrkrAccnt|catBrkrAccntType|catBrkrFirmType|catBrkrIMID|clientAccnt|clientUserName|allocMethod|allocMLegRule|allocAccnt|allocExDest|execBrkrAccntAlloc|execBrkrClFirmAlloc|execBrkrUserNameAlloc|clearingFirmName|clearingFirm|clearingAccnt|clientAccntIds|positionSrc|clearingLoadTime|tiedPriceRounding|algoFlashPct|algoBlockPct|canISOSweep|nbboCap|auctionResponder|takeExchList|makeExchList|incTakeExchFee|incMakeExchFee|makeExchRule|roundRule|execMode|cxlOnHalt|splitZero|oddLotFlag|maxChildOrdersPerDay|maxParentBrkrsPerDay|riskCxlThrottle|betaSource|routeAllocRule|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'execEngineMode:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,c.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=AccountExchGroupConfig' \\\n--data-urlencode 'view=execEngineMode|stageReview|reviewExDest|allowReviewExecs|stageReviewURL|priAggGroup|secAggGroup|userMarking|requireLocate|requireExternPos|locateFirm|locatePool|ticketLocateFirm|firmType|orderCapacity|custOrderCapacity|badge|futClearingRange|futCustType|cmeStpId|cmeStpInstruction|isLowVelocity|catReportable|catAccnt|catBrkrAccnt|catBrkrAccntType|catBrkrFirmType|catBrkrIMID|clientAccnt|clientUserName|allocMethod|allocMLegRule|allocAccnt|allocExDest|execBrkrAccntAlloc|execBrkrClFirmAlloc|execBrkrUserNameAlloc|clearingFirmName|clearingFirm|clearingAccnt|clientAccntIds|positionSrc|clearingLoadTime|tiedPriceRounding|algoFlashPct|algoBlockPct|canISOSweep|nbboCap|auctionResponder|takeExchList|makeExchList|incTakeExchFee|incMakeExchFee|makeExchRule|roundRule|execMode|cxlOnHalt|splitZero|oddLotFlag|maxChildOrdersPerDay|maxParentBrkrsPerDay|riskCxlThrottle|betaSource|routeAllocRule|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'where=accnt:eq:ExampleString' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=execEngineMode:ASC'\n"})})})]}),"\n",(0,c.jsx)(t.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,c.jsxs)(i.Z,{children:[(0,c.jsx)(l.Z,{value:"Python",label:"Python",children:(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'AccountExchGroupConfig\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'execEngineMode|stageReview|reviewExDest|allowReviewExecs|stageReviewURL|priAggGroup|secAggGroup|userMarking|requireLocate|requireExternPos|locateFirm|locatePool|ticketLocateFirm|firmType|orderCapacity|custOrderCapacity|badge|futClearingRange|futCustType|cmeStpId|cmeStpInstruction|isLowVelocity|catReportable|catAccnt|catBrkrAccnt|catBrkrAccntType|catBrkrFirmType|catBrkrIMID|clientAccnt|clientUserName|allocMethod|allocMLegRule|allocAccnt|allocExDest|execBrkrAccntAlloc|execBrkrClFirmAlloc|execBrkrUserNameAlloc|clearingFirmName|clearingFirm|clearingAccnt|clientAccntIds|positionSrc|clearingLoadTime|tiedPriceRounding|algoFlashPct|algoBlockPct|canISOSweep|nbboCap|auctionResponder|takeExchList|makeExchList|incTakeExchFee|incMakeExchFee|makeExchRule|roundRule|execMode|cxlOnHalt|splitZero|oddLotFlag|maxChildOrdersPerDay|maxParentBrkrsPerDay|riskCxlThrottle|betaSource|routeAllocRule|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'execEngineMode|stageReview|allowReviewExecs|userMarking|requireLocate|requireExternPos|firmType|orderCapacity|custOrderCapacity|futClearingRange|futCustType|cmeStpInstruction|isLowVelocity|catReportable|catBrkrAccntType|catBrkrFirmType|allocMethod|allocMLegRule|positionSrc|clearingLoadTime|tiedPriceRounding|canISOSweep|nbboCap|auctionResponder|incTakeExchFee|incMakeExchFee|makeExchRule|roundRule|execMode|cxlOnHalt|splitZero|oddLotFlag|betaSource|routeAllocRule|modifiedIn\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getaggregate\',\n    "msgType": MSG_TYPE,\n    "measure": MEASURE,\n    "group": GROUP,\n    # Optional Parameters\n    "where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,c.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=AccountExchGroupConfig' \\\n--data-urlencode 'measure=execEngineMode|stageReview|reviewExDest|allowReviewExecs|stageReviewURL|priAggGroup|secAggGroup|userMarking|requireLocate|requireExternPos|locateFirm|locatePool|ticketLocateFirm|firmType|orderCapacity|custOrderCapacity|badge|futClearingRange|futCustType|cmeStpId|cmeStpInstruction|isLowVelocity|catReportable|catAccnt|catBrkrAccnt|catBrkrAccntType|catBrkrFirmType|catBrkrIMID|clientAccnt|clientUserName|allocMethod|allocMLegRule|allocAccnt|allocExDest|execBrkrAccntAlloc|execBrkrClFirmAlloc|execBrkrUserNameAlloc|clearingFirmName|clearingFirm|clearingAccnt|clientAccntIds|positionSrc|clearingLoadTime|tiedPriceRounding|algoFlashPct|algoBlockPct|canISOSweep|nbboCap|auctionResponder|takeExchList|makeExchList|incTakeExchFee|incMakeExchFee|makeExchRule|roundRule|execMode|cxlOnHalt|splitZero|oddLotFlag|maxChildOrdersPerDay|maxParentBrkrsPerDay|riskCxlThrottle|betaSource|routeAllocRule|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'group=execEngineMode|stageReview|allowReviewExecs|userMarking|requireLocate|requireExternPos|firmType|orderCapacity|custOrderCapacity|futClearingRange|futCustType|cmeStpInstruction|isLowVelocity|catReportable|catBrkrAccntType|catBrkrFirmType|allocMethod|allocMLegRule|positionSrc|clearingLoadTime|tiedPriceRounding|canISOSweep|nbboCap|auctionResponder|incTakeExchFee|incMakeExchFee|makeExchRule|roundRule|execMode|cxlOnHalt|splitZero|oddLotFlag|betaSource|routeAllocRule|modifiedIn' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,c.jsx)(t.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,c.jsxs)(i.Z,{children:[(0,c.jsx)(l.Z,{value:"Python",label:"Python",children:(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'AccountExchGroupConfig\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,c.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=AccountExchGroupConfig' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]})]})}function u(e={}){let{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,c.jsx)(t,{...e,children:(0,c.jsx)(x,{...e})}):x(e)}},9641:function(e,t,r){r.d(t,{Z:()=>s});var n=r("52676");r("75271");var c=r("54461");function s(e){let{children:t,hidden:r,className:s}=e;return(0,n.jsx)("div",{role:"tabpanel",className:(0,c.Z)("tabItem_SSzl",s),hidden:r,children:t})}},71386:function(e,t,r){r.d(t,{Z:()=>f});var n=r("52676"),c=r("75271"),s=r("54461"),i=r("52289"),l=r("3225"),d=r("42834"),a=r("40578"),o=r("35834"),h=r("79616");function x(e){return c.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||c.isValidElement(e)&&function(e){let{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function u(e){let{value:t,tabValues:r}=e;return r.some(e=>e.value===t)}var j=r("44537");function m(e){let{className:t,block:r,selectedValue:c,selectValue:l,tabValues:d}=e,a=[],{blockElementScrollPositionUntilNextRender:o}=(0,i.o5)(),h=e=>{let t=e.currentTarget,r=d[a.indexOf(t)].value;r!==c&&(o(t),l(r))},x=e=>{let t=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{let r=a.indexOf(e.currentTarget)+1;t=a[r]??a[0];break}case"ArrowLeft":{let r=a.indexOf(e.currentTarget)-1;t=a[r]??a[a.length-1]}}t?.focus()};return(0,n.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":r},t),children:d.map(e=>{let{value:t,label:r,attributes:i}=e;return(0,n.jsx)("li",{role:"tab",tabIndex:c===t?0:-1,"aria-selected":c===t,ref:e=>a.push(e),onKeyDown:x,onClick:h,...i,className:(0,s.Z)("tabs__item","tabItem_aitt",i?.className,{"tabs__item--active":c===t}),children:r??t},t)})})}function p(e){let{lazy:t,children:r,selectedValue:i}=e,l=(Array.isArray(r)?r:[r]).filter(Boolean);if(t){let e=l.find(e=>e.props.value===i);return e?(0,c.cloneElement)(e,{className:(0,s.Z)("margin-top--md",e.props.className)}):null}return(0,n.jsx)("div",{className:"margin-top--md",children:l.map((e,t)=>(0,c.cloneElement)(e,{key:t,hidden:e.props.value!==i}))})}function g(e){let t=function(e){let{defaultValue:t,queryString:r=!1,groupId:n}=e,s=function(e){let{values:t,children:r}=e;return(0,c.useMemo)(()=>{let e=t??x(r).map(e=>{let{props:{value:t,label:r,attributes:n,default:c}}=e;return{value:t,label:r,attributes:n,default:c}});return!function(e){let t=(0,o.lx)(e,(e,t)=>e.value===t.value);if(t.length>0)throw Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[t,r])}(e),[i,j]=(0,c.useState)(()=>(function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!u({value:t,tabValues:r}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}let n=r.find(e=>e.default)??r[0];if(!n)throw Error("Unexpected error: 0 tabValues");return n.value})({defaultValue:t,tabValues:s})),[m,p]=function(e){let{queryString:t=!1,groupId:r}=e,n=(0,l.k6)(),s=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,a._X)(s),(0,c.useCallback)(e=>{if(!s)return;let t=new URLSearchParams(n.location.search);t.set(s,e),n.replace({...n.location,search:t.toString()})},[s,n])]}({queryString:r,groupId:n}),[g,f]=function(e){let{groupId:t}=e,r=t?`docusaurus.tab.${t}`:null,[n,s]=(0,h.Nk)(r);return[n,(0,c.useCallback)(e=>{r&&s.set(e)},[r,s])]}({groupId:n}),y=(()=>{let e=m??g;return u({value:e,tabValues:s})?e:null})();return(0,d.Z)(()=>{y&&j(y)},[y]),{selectedValue:i,selectValue:(0,c.useCallback)(e=>{if(!u({value:e,tabValues:s}))throw Error(`Can't select invalid tab value=${e}`);j(e),p(e),f(e)},[p,f,s]),tabValues:s}}(e);return(0,n.jsxs)("div",{className:(0,s.Z)("tabs-container","tabList_ArS0"),children:[(0,n.jsx)(m,{...t,...e}),(0,n.jsx)(p,{...t,...e})]})}function f(e){let t=(0,j.Z)();return(0,n.jsx)(g,{...e,children:x(e.children)},String(t))}},91503:function(e,t,r){r.d(t,{Z:function(){return l},a:function(){return i}});var n=r(75271);let c={},s=n.createContext(c);function i(e){let t=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:i(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);