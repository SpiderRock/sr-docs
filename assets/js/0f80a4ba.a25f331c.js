"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[5661],{56330:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>x,frontMatter:()=>d,metadata:()=>c,toc:()=>m});var a=r(74848),i=r(28453),n=r(11470),s=r(19365);const d={title:"SpdrParentLimit"},l="Schema: SpdrParentLimit (ID: 4090)",c={id:"MessageSchemas/Schema/Topics/parent-orders/SpdrParentLimit",title:"SpdrParentLimit",description:"SpdrParentLimit records are supplied by clients (via SRSE) for use with parent orders having orderLimitType=Aux.  This table can be updated either before or after a parent order begins working and will influence the limit(s) used when working child orders.  Updates to this table do not constitute cancel/replace operations for the parent order.",source:"@site/versioned_docs/version-8.4.10.2/MessageSchemas/Schema/Topics/3985-parent-orders/SpdrParentLimit.md",sourceDirName:"MessageSchemas/Schema/Topics/3985-parent-orders",slug:"/MessageSchemas/Schema/Topics/parent-orders/SpdrParentLimit",permalink:"/docs/8.4.10.2/MessageSchemas/Schema/Topics/parent-orders/SpdrParentLimit",draft:!1,unlisted:!1,tags:[],version:"8.4.10.2",frontMatter:{title:"SpdrParentLimit"},sidebar:"messageSchemasSidebar",previous:{title:"SpdrParentExecution",permalink:"/docs/8.4.10.2/MessageSchemas/Schema/Topics/parent-orders/SpdrParentExecution"},next:{title:"SpdrParentOrder",permalink:"/docs/8.4.10.2/MessageSchemas/Schema/Topics/parent-orders/SpdrParentOrder"}},o={},m=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3}];function h(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.h1,{id:"schema-spdrparentlimit-id-4090",children:["Schema: SpdrParentLimit ",(0,a.jsx)("span",{className:"small-text",children:"(ID: 4090)"})]}),"\n",(0,a.jsx)(t.p,{children:"SpdrParentLimit records are supplied by clients (via SRSE) for use with parent orders having orderLimitType=Aux.  This table can be updated either before or after a parent order begins working and will influence the limit(s) used when working child orders.  Updates to this table do not constitute cancel/replace operations for the parent order."}),"\n",(0,a.jsx)(t.h3,{id:"metadata",children:"METADATA"}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Attribute"}),(0,a.jsx)(t.th,{children:"Value"})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"Topic"}),(0,a.jsx)(t.td,{children:"3985-parent-orders"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"MLink Token"}),(0,a.jsx)(t.td,{children:"ClientTrading"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"SRSE Product"}),(0,a.jsx)(t.td,{children:"SRTrade"})]})]})]}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Note:"})," The symbol ",(0,a.jsx)(t.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,a.jsx)(t.h3,{id:"body",children:"BODY"}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"#"}),(0,a.jsx)(t.th,{children:"Field"}),(0,a.jsx)(t.th,{children:"Type"}),(0,a.jsx)(t.th,{children:"Comment"})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"10="}),(0,a.jsx)(t.td,{children:"accnt"}),(0,a.jsx)(t.td,{children:"string(16)"}),(0,a.jsx)(t.td,{})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"11="}),(0,a.jsx)(t.td,{children:"secKey"}),(0,a.jsx)(t.td,{children:"OptionKey"}),(0,a.jsx)(t.td,{})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"12="}),(0,a.jsx)(t.td,{children:"secType"}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.a,{href:"../../../Enums/SpdrKeyType",children:"enum : SpdrKeyType"})}),(0,a.jsx)(t.td,{})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"13="}),(0,a.jsx)(t.td,{children:"spdrSource"}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.a,{href:"../../../Enums/SpdrSource",children:"enum : SpdrSource"})}),(0,a.jsx)(t.td,{})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"14="}),(0,a.jsx)(t.td,{children:"orderSide"}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,a.jsx)(t.td,{})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"15="}),(0,a.jsx)(t.td,{children:"groupingCode"}),(0,a.jsx)(t.td,{children:"long"}),(0,a.jsx)(t.td,{})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"16="}),(0,a.jsx)(t.td,{children:"clientFirm"}),(0,a.jsx)(t.td,{children:"string(16)"}),(0,a.jsx)(t.td,{children:"SR client firm"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"100"}),(0,a.jsx)(t.td,{children:"sysEnvironment"}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.a,{href:"../../../Enums/SysEnvironment",children:"enum : SysEnvironment"})}),(0,a.jsx)(t.td,{children:"original (source) sys environment [Stable, Current, etc]"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"103"}),(0,a.jsx)(t.td,{children:"runStatus"}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.a,{href:"../../../Enums/RunStatus",children:"enum : RunStatus"})}),(0,a.jsx)(t.td,{children:"original (source) run status [Prod,Beta]"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"106"}),(0,a.jsx)(t.td,{children:"orderActiveSize"}),(0,a.jsx)(t.td,{children:"int"}),(0,a.jsx)(t.td,{children:"OrderActiveSize = -1 will use all available parent order size; OrderActiveSize = 0 will cancel any existing child orders;"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"109"}),(0,a.jsx)(t.td,{children:"addCumFillQuantity"}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,a.jsx)(t.td,{children:"If Yes then OrderActiveSize is calculated @ order arrival as requested OrderActiveSize + existing 'CumFillQuantity'."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"112"}),(0,a.jsx)(t.td,{children:"orderLimitType"}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.a,{href:"../../../Enums/SpdrLimitType",children:"enum : SpdrLimitType"})}),(0,a.jsx)(t.td,{})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"115"}),(0,a.jsx)(t.td,{children:"takeLimitClass"}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.a,{href:"../../../Enums/SpdrLimitClass",children:"enum : SpdrLimitClass"})}),(0,a.jsx)(t.td,{children:"Simple = LimitPrice, Surface = BEST(LimitPrice, SurfLimit), Probability = BEST(LimitPrice, ProbLimit)"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"118"}),(0,a.jsx)(t.td,{children:"makeLimitClass"}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.a,{href:"../../../Enums/SpdrLimitClass",children:"enum : SpdrLimitClass"})}),(0,a.jsx)(t.td,{children:"Simple = LimitPrice, Surface = BEST(LimitPrice, SurfLimit), Probability = BEST(LimitPrice, ProbLimit)"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"121"}),(0,a.jsx)(t.td,{children:"orderPrcLimit"}),(0,a.jsx)(t.td,{children:"double"}),(0,a.jsx)(t.td,{children:"Applies if LimitType = Prc[]"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"124"}),(0,a.jsx)(t.td,{children:"orderRefUPrc"}),(0,a.jsx)(t.td,{children:"double"}),(0,a.jsx)(t.td,{children:"default=underlier.mid"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"127"}),(0,a.jsx)(t.td,{children:"orderRefDelta"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"default=option.delta"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"130"}),(0,a.jsx)(t.td,{children:"orderRefGamma"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"default=option.gamma"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"133"}),(0,a.jsx)(t.td,{children:"orderVolLimit"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"Applies if LimitType = Vol[] [uses SR dividends and borrow rates]"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"136"}),(0,a.jsx)(t.td,{children:"rateOverride"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"(depricated) zero = ignore;> zero = override"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"139"}),(0,a.jsx)(t.td,{children:"sdivOverride"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"(depricated)"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"142"}),(0,a.jsx)(t.td,{children:"ddivOverride"}),(0,a.jsx)(t.td,{children:"text1"}),(0,a.jsxs)(t.td,{children:["(depricated) discrete dividend string override ([yearsToExpiry,divYears",":divAmount",",divYears",":divAmount",", ...])"]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"145"}),(0,a.jsx)(t.td,{children:"overrideCode"}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.a,{href:"../../../Enums/OverrideCode",children:"enum : OverrideCode"})}),(0,a.jsx)(t.td,{children:"(depricated)"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"148"}),(0,a.jsx)(t.td,{children:"orderPrcOffset"}),(0,a.jsx)(t.td,{children:"double"}),(0,a.jsx)(t.td,{children:"default=0"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"151"}),(0,a.jsx)(t.td,{children:"stateModel"}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.a,{href:"../../../Enums/StateModel",children:"enum : StateModel"})}),(0,a.jsx)(t.td,{})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"154"}),(0,a.jsx)(t.td,{children:"uStateModel"}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.a,{href:"../../../Enums/StateModel",children:"enum : StateModel"})}),(0,a.jsx)(t.td,{})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"157"}),(0,a.jsx)(t.td,{children:"takeAlphaType"}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.a,{href:"../../../Enums/AlphaType",children:"enum : AlphaType"})}),(0,a.jsx)(t.td,{children:"Applies if takeLimitClass = Probability"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"160"}),(0,a.jsx)(t.td,{children:"makeAlphaType"}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.a,{href:"../../../Enums/AlphaType",children:"enum : AlphaType"})}),(0,a.jsx)(t.td,{children:"Applies if makeLimitClass = Probability"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"163"}),(0,a.jsx)(t.td,{children:"takeAlphaFactor"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"[-2,+2] takeProbLimit = MAX(takeProbability, takeProbAvg + takeAlphaFactor * takeProbStd) [if AlphaType = Relative]"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"166"}),(0,a.jsx)(t.td,{children:"makeAlphaFactor"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"[-2,+2] makeProbLimit = MAX(makeProbability, makeProbAvg + makeAlphaFactor * makeProbStd) [if AlphaType = Relative]"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"169"}),(0,a.jsx)(t.td,{children:"takeProbability"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"takeProbLimit = takeProbability [if AlphaType = Static]"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"172"}),(0,a.jsx)(t.td,{children:"makeProbability"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"makeProbLimit = makeProbability [if AlphaType = Static]"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"175"}),(0,a.jsx)(t.td,{children:"takeSurfPrcOffset"}),(0,a.jsx)(t.td,{children:"double"}),(0,a.jsx)(t.td,{children:"default=0"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"178"}),(0,a.jsx)(t.td,{children:"takeSurfVolOffset"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"default=0"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"181"}),(0,a.jsx)(t.td,{children:"takeSurfWidthOffset"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"[-1.x to +1.x]       -1.0 = -0.5 * avgMktWidth, +1.0 = +0.5 * avgMktWidth"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"184"}),(0,a.jsx)(t.td,{children:"makeSurfPrcOffset"}),(0,a.jsx)(t.td,{children:"double"}),(0,a.jsx)(t.td,{children:"default=0"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"187"}),(0,a.jsx)(t.td,{children:"makeSurfVolOffset"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"default=0"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"190"}),(0,a.jsx)(t.td,{children:"makeSurfWidthOffset"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"[-1.x to +1.x]       -1.0 = -0.5 * avgMktWidth, +1.0 = +0.5 * avgMktWidth"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"193"}),(0,a.jsx)(t.td,{children:"orderRefEventMult"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"196"}),(0,a.jsx)(t.td,{children:"orderRefEventDttm"}),(0,a.jsx)(t.td,{children:"DateTime"}),(0,a.jsx)(t.td,{})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"199"}),(0,a.jsx)(t.td,{children:"exchMask"}),(0,a.jsx)(t.td,{children:"uint"}),(0,a.jsx)(t.td,{children:"eligible exchanges (0 = all), a non-zero mask must be in the subset of the SpdrParentOrder exchMask"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"401"}),(0,a.jsx)(t.td,{children:"cxlUPrcRange"}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.a,{href:"../../../Enums/UPrcCxl",children:"enum : UPrcCxl"})}),(0,a.jsx)(t.td,{children:"cancel parent order if/when outside the uPrice range [ _Halt = also cancel if halted ]"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"402"}),(0,a.jsx)(t.td,{children:"minUBid"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"[optional]"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"403"}),(0,a.jsx)(t.td,{children:"maxUAsk"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"[optional] (< $0.01 = none)"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"404"}),(0,a.jsx)(t.td,{children:"minMaxType"}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.a,{href:"../../../Enums/MinMaxType",children:"enum : MinMaxType"})}),(0,a.jsx)(t.td,{children:"if Prc minUBid/maxUAsk are expressed as prices; if Pct then they are expresses as pct change since parent order arrival"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"405"}),(0,a.jsx)(t.td,{children:"minOptionPx"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"[optional] option price floor for tied to stock orders"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"205"}),(0,a.jsx)(t.td,{children:"startDttm"}),(0,a.jsx)(t.td,{children:"DateTime"}),(0,a.jsx)(t.td,{})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"406"}),(0,a.jsx)(t.td,{children:"activeDuration"}),(0,a.jsx)(t.td,{children:"int"}),(0,a.jsx)(t.td,{children:"[optional] (number of seconds)"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"214"}),(0,a.jsx)(t.td,{children:"progressExposeTime"}),(0,a.jsx)(t.td,{children:"int"}),(0,a.jsx)(t.td,{children:"minimum time (secs) to expose order (0 = no minimum; used to guarantee that the order is exposed at mid-market for some time before actively taking) (If the order is an Alpha type order, updating this will reset the alpha progression)"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"241"}),(0,a.jsx)(t.td,{children:"expDayWtVegaOffset"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"max acct+symbol day wtVega offset (target)"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"235"}),(0,a.jsx)(t.td,{children:"maxExpDayWtVegaLn"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"max accnt+expiration day (time weighted) vega long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"238"}),(0,a.jsx)(t.td,{children:"maxExpDayWtVegaSh"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"max accnt+expiration day (time weighted) vega short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"271"}),(0,a.jsx)(t.td,{children:"maxExpDayRMetric6Ln"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"max acct+expiration day rMetric6 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"274"}),(0,a.jsx)(t.td,{children:"maxExpDayRMetric6Sh"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"max acct+expiration day rMetric6 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"268"}),(0,a.jsx)(t.td,{children:"symDayDDeltaOffset"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"max acct+symbol day $delta offset (target)"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"262"}),(0,a.jsx)(t.td,{children:"maxSymDayDDeltaLn"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"max acct+symbol day $delta long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"265"}),(0,a.jsx)(t.td,{children:"maxSymDayDDeltaSh"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"max acct+symbol day $delta short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"250"}),(0,a.jsx)(t.td,{children:"symDayVegaOffset"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"max acct+symbol day vega offset (target)"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"244"}),(0,a.jsx)(t.td,{children:"maxSymDayVegaLn"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"max acct+symbol day vega long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"247"}),(0,a.jsx)(t.td,{children:"maxSymDayVegaSh"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"max acct+symbol day vega short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"259"}),(0,a.jsx)(t.td,{children:"symDayWtVegaOffset"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"max acct+symbol day wtVega offset (target)"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"253"}),(0,a.jsx)(t.td,{children:"maxSymDayWtVegaLn"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"max acct+symbol day (time weighted) vega long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"256"}),(0,a.jsx)(t.td,{children:"maxSymDayWtVegaSh"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"max acct+symbol day (time weighted) vega short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"280"}),(0,a.jsx)(t.td,{children:"maxSymDayRMetric7Ln"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"max acct+symbol day rMetric7 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"283"}),(0,a.jsx)(t.td,{children:"maxSymDayRMetric7Sh"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"max acct+symbol day rMetric7 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"289"}),(0,a.jsx)(t.td,{children:"maxGrpDayDDeltaLn"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"max acct+riskGroup day $delta long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"292"}),(0,a.jsx)(t.td,{children:"maxGrpDayDDeltaSh"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"max acct+riskGroup day $delta short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"298"}),(0,a.jsx)(t.td,{children:"maxGrpDayVegaLn"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"max acct+riskGroup day vega long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"301"}),(0,a.jsx)(t.td,{children:"maxGrpDayVegaSh"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"max acct+riskGroup day vega short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"304"}),(0,a.jsx)(t.td,{children:"maxGrpDayVegaAbs"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"max acct+riskGroup day vega abs (positive number;-1=no limit);risk limit = max limit - abs(current net counter)"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"307"}),(0,a.jsx)(t.td,{children:"grpDayVegaRatio"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"target bot / sld ratio (eg ratio=2.0 means that neutral is bot vega = 2x sld vega)"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"358"}),(0,a.jsx)(t.td,{children:"maxGrpDayContractsLn"}),(0,a.jsx)(t.td,{children:"int"}),(0,a.jsx)(t.td,{children:"max acct+riskGroup day opt contracts long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"361"}),(0,a.jsx)(t.td,{children:"maxGrpDayContractsSh"}),(0,a.jsx)(t.td,{children:"int"}),(0,a.jsx)(t.td,{children:"max acct+riskGroup day opt contracts short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"364"}),(0,a.jsx)(t.td,{children:"maxGrpDayContractsAbs"}),(0,a.jsx)(t.td,{children:"int"}),(0,a.jsx)(t.td,{children:"max acct+riskGroup day opt contracts abs (positive number;-1=no limit);risk limit = max limit - abs(current net counter)"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"322"}),(0,a.jsx)(t.td,{children:"maxGrpDayRMetric1Ln"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"max acct+riskGroup day rMetric1 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"325"}),(0,a.jsx)(t.td,{children:"maxGrpDayRMetric1Sh"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"max acct+riskGroup day rMetric1 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"328"}),(0,a.jsx)(t.td,{children:"maxGrpDayRMetric1Abs"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"max acct+riskGroup day rMetric1 abs (positive number;-1=no limit);risk limit = max limit - abs(current net counter)"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"331"}),(0,a.jsx)(t.td,{children:"grpDayRMetric1Ratio"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"target bot / sld ratio (eg ratio=0.5 means that neutral is bot rMetric1 = 0.5x sld rMetric1)"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"334"}),(0,a.jsx)(t.td,{children:"maxGrpDayRMetric2Ln"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"max acct+riskGroup day rMetric2 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"337"}),(0,a.jsx)(t.td,{children:"maxGrpDayRMetric2Sh"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"max acct+riskGroup day rMetric2 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"340"}),(0,a.jsx)(t.td,{children:"maxGrpDayRMetric3Ln"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"max acct+riskGroup day rMetric3 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"343"}),(0,a.jsx)(t.td,{children:"maxGrpDayRMetric3Sh"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"max acct+riskGroup day rMetric3 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"346"}),(0,a.jsx)(t.td,{children:"maxGrpDayRMetric4Ln"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"max acct+riskGroup day rMetric4 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"349"}),(0,a.jsx)(t.td,{children:"maxGrpDayRMetric4Sh"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"max acct+riskGroup day rMetric4 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"352"}),(0,a.jsx)(t.td,{children:"maxGrpDayRMetric5Ln"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"max acct+riskGroup day rMetric5 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"355"}),(0,a.jsx)(t.td,{children:"maxGrpDayRMetric5Sh"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"max acct+riskGroup day rMetric5 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"367"}),(0,a.jsx)(t.td,{children:"symEmaCxlDDeltaLn"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"max acct+symbol 60s EMA $delta long (positive number; <= 0 is no limit) [will immediately cxl all option orders in a symbol if any order in the symbol breaches]"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"370"}),(0,a.jsx)(t.td,{children:"symEmaCxlDDeltaSh"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"max acct+symbol 60s EMA $delta short (positive number; <= 0 is no limit)"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"373"}),(0,a.jsx)(t.td,{children:"symEmaCxlWtVegaLn"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"max acct+symbol 60s EMA wtVega long (positive number; <= 0 is no limit) [will immediately cxl all option orders in a symbol if any order in the symbol breaches]"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"376"}),(0,a.jsx)(t.td,{children:"symEmaCxlWtVegaSh"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"max acct+symbol 60s EMA wtVega short (positive number; <= 0 is no limit)"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"379"}),(0,a.jsx)(t.td,{children:"theoVol"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"client supplied theoretical volatility (used for markup only)"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"382"}),(0,a.jsx)(t.td,{children:"clArriveMark"}),(0,a.jsx)(t.td,{children:"float"}),(0,a.jsx)(t.td,{children:"client specified arrival mark (passed through to ParentExecution; markup only)"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"385"}),(0,a.jsx)(t.td,{children:"userData1"}),(0,a.jsx)(t.td,{children:"text1"}),(0,a.jsx)(t.td,{children:"client supplied data field; passes through to parent and child executions and reports as well as FIX drops"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"388"}),(0,a.jsx)(t.td,{children:"userData2"}),(0,a.jsx)(t.td,{children:"text1"}),(0,a.jsx)(t.td,{children:"client supplied data field; passes through to parent and child executions and reports as well as FIX drops"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"407"}),(0,a.jsx)(t.td,{children:"execBrkrCode"}),(0,a.jsx)(t.td,{children:"string(16)"}),(0,a.jsx)(t.td,{children:"an SR assigned execBrkrCode"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"394"}),(0,a.jsx)(t.td,{children:"modifiedBy"}),(0,a.jsx)(t.td,{children:"string(24)"}),(0,a.jsx)(t.td,{children:"user who last modified this record"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"397"}),(0,a.jsx)(t.td,{children:"modifiedIn"}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.a,{href:"../../../Enums/SysEnvironment",children:"enum : SysEnvironment"})}),(0,a.jsx)(t.td,{})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"400"}),(0,a.jsx)(t.td,{children:"timestamp"}),(0,a.jsx)(t.td,{children:"DateTime"}),(0,a.jsx)(t.td,{children:"timestamp of last modification"})]})]})]}),"\n",(0,a.jsx)(t.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,a.jsxs)(n.A,{children:[(0,a.jsx)(s.A,{value:"Python",label:"Python",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'SpdrParentLimit'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n#Required Parameters\n\"apiKey\": API_KEY,\n\"cmd\": 'getschema',\n\"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,a.jsx)(s.A,{value:"cUrl",label:"cUrl",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=SpdrParentLimit'\n\n"})})})]}),"\n",(0,a.jsx)(t.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,a.jsxs)(n.A,{children:[(0,a.jsx)(s.A,{value:"Python",label:"Python",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'SpdrParentLimit\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'sysEnvironment|runStatus|orderActiveSize|addCumFillQuantity|orderLimitType|takeLimitClass|makeLimitClass|orderPrcLimit|orderRefUPrc|orderRefDelta|orderRefGamma|orderVolLimit|rateOverride|sdivOverride|ddivOverride|overrideCode|orderPrcOffset|stateModel|uStateModel|takeAlphaType|makeAlphaType|takeAlphaFactor|makeAlphaFactor|takeProbability|makeProbability|takeSurfPrcOffset|takeSurfVolOffset|takeSurfWidthOffset|makeSurfPrcOffset|makeSurfVolOffset|makeSurfWidthOffset|orderRefEventMult|orderRefEventDttm|exchMask|cxlUPrcRange|minUBid|maxUAsk|minMaxType|minOptionPx|startDttm|activeDuration|progressExposeTime|expDayWtVegaOffset|maxExpDayWtVegaLn|maxExpDayWtVegaSh|maxExpDayRMetric6Ln|maxExpDayRMetric6Sh|symDayDDeltaOffset|maxSymDayDDeltaLn|maxSymDayDDeltaSh|symDayVegaOffset|maxSymDayVegaLn|maxSymDayVegaSh|symDayWtVegaOffset|maxSymDayWtVegaLn|maxSymDayWtVegaSh|maxSymDayRMetric7Ln|maxSymDayRMetric7Sh|maxGrpDayDDeltaLn|maxGrpDayDDeltaSh|maxGrpDayVegaLn|maxGrpDayVegaSh|maxGrpDayVegaAbs|grpDayVegaRatio|maxGrpDayContractsLn|maxGrpDayContractsSh|maxGrpDayContractsAbs|maxGrpDayRMetric1Ln|maxGrpDayRMetric1Sh|maxGrpDayRMetric1Abs|grpDayRMetric1Ratio|maxGrpDayRMetric2Ln|maxGrpDayRMetric2Sh|maxGrpDayRMetric3Ln|maxGrpDayRMetric3Sh|maxGrpDayRMetric4Ln|maxGrpDayRMetric4Sh|maxGrpDayRMetric5Ln|maxGrpDayRMetric5Sh|symEmaCxlDDeltaLn|symEmaCxlDDeltaSh|symEmaCxlWtVegaLn|symEmaCxlWtVegaSh|theoVol|clArriveMark|userData1|userData2|execBrkrCode|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,a.jsx)(s.A,{value:"cUrl",label:"cUrl",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=SpdrParentLimit' \\\n--data-urlencode 'view=sysEnvironment|runStatus|orderActiveSize|addCumFillQuantity|orderLimitType|takeLimitClass|makeLimitClass|orderPrcLimit|orderRefUPrc|orderRefDelta|orderRefGamma|orderVolLimit|rateOverride|sdivOverride|ddivOverride|overrideCode|orderPrcOffset|stateModel|uStateModel|takeAlphaType|makeAlphaType|takeAlphaFactor|makeAlphaFactor|takeProbability|makeProbability|takeSurfPrcOffset|takeSurfVolOffset|takeSurfWidthOffset|makeSurfPrcOffset|makeSurfVolOffset|makeSurfWidthOffset|orderRefEventMult|orderRefEventDttm|exchMask|cxlUPrcRange|minUBid|maxUAsk|minMaxType|minOptionPx|startDttm|activeDuration|progressExposeTime|expDayWtVegaOffset|maxExpDayWtVegaLn|maxExpDayWtVegaSh|maxExpDayRMetric6Ln|maxExpDayRMetric6Sh|symDayDDeltaOffset|maxSymDayDDeltaLn|maxSymDayDDeltaSh|symDayVegaOffset|maxSymDayVegaLn|maxSymDayVegaSh|symDayWtVegaOffset|maxSymDayWtVegaLn|maxSymDayWtVegaSh|maxSymDayRMetric7Ln|maxSymDayRMetric7Sh|maxGrpDayDDeltaLn|maxGrpDayDDeltaSh|maxGrpDayVegaLn|maxGrpDayVegaSh|maxGrpDayVegaAbs|grpDayVegaRatio|maxGrpDayContractsLn|maxGrpDayContractsSh|maxGrpDayContractsAbs|maxGrpDayRMetric1Ln|maxGrpDayRMetric1Sh|maxGrpDayRMetric1Abs|grpDayRMetric1Ratio|maxGrpDayRMetric2Ln|maxGrpDayRMetric2Sh|maxGrpDayRMetric3Ln|maxGrpDayRMetric3Sh|maxGrpDayRMetric4Ln|maxGrpDayRMetric4Sh|maxGrpDayRMetric5Ln|maxGrpDayRMetric5Sh|symEmaCxlDDeltaLn|symEmaCxlDDeltaSh|symEmaCxlWtVegaLn|symEmaCxlWtVegaSh|theoVol|clArriveMark|userData1|userData2|execBrkrCode|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,a.jsx)(t.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,a.jsxs)(n.A,{children:[(0,a.jsx)(s.A,{value:"Python",label:"Python",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'SpdrParentLimit\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'sysEnvironment|runStatus|orderActiveSize|addCumFillQuantity|orderLimitType|takeLimitClass|makeLimitClass|orderPrcLimit|orderRefUPrc|orderRefDelta|orderRefGamma|orderVolLimit|rateOverride|sdivOverride|ddivOverride|overrideCode|orderPrcOffset|stateModel|uStateModel|takeAlphaType|makeAlphaType|takeAlphaFactor|makeAlphaFactor|takeProbability|makeProbability|takeSurfPrcOffset|takeSurfVolOffset|takeSurfWidthOffset|makeSurfPrcOffset|makeSurfVolOffset|makeSurfWidthOffset|orderRefEventMult|orderRefEventDttm|exchMask|cxlUPrcRange|minUBid|maxUAsk|minMaxType|minOptionPx|startDttm|activeDuration|progressExposeTime|expDayWtVegaOffset|maxExpDayWtVegaLn|maxExpDayWtVegaSh|maxExpDayRMetric6Ln|maxExpDayRMetric6Sh|symDayDDeltaOffset|maxSymDayDDeltaLn|maxSymDayDDeltaSh|symDayVegaOffset|maxSymDayVegaLn|maxSymDayVegaSh|symDayWtVegaOffset|maxSymDayWtVegaLn|maxSymDayWtVegaSh|maxSymDayRMetric7Ln|maxSymDayRMetric7Sh|maxGrpDayDDeltaLn|maxGrpDayDDeltaSh|maxGrpDayVegaLn|maxGrpDayVegaSh|maxGrpDayVegaAbs|grpDayVegaRatio|maxGrpDayContractsLn|maxGrpDayContractsSh|maxGrpDayContractsAbs|maxGrpDayRMetric1Ln|maxGrpDayRMetric1Sh|maxGrpDayRMetric1Abs|grpDayRMetric1Ratio|maxGrpDayRMetric2Ln|maxGrpDayRMetric2Sh|maxGrpDayRMetric3Ln|maxGrpDayRMetric3Sh|maxGrpDayRMetric4Ln|maxGrpDayRMetric4Sh|maxGrpDayRMetric5Ln|maxGrpDayRMetric5Sh|symEmaCxlDDeltaLn|symEmaCxlDDeltaSh|symEmaCxlWtVegaLn|symEmaCxlWtVegaSh|theoVol|clArriveMark|userData1|userData2|execBrkrCode|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'sysEnvironment:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,a.jsx)(s.A,{value:"cUrl",label:"cUrl",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=SpdrParentLimit' \\\n--data-urlencode 'view=sysEnvironment|runStatus|orderActiveSize|addCumFillQuantity|orderLimitType|takeLimitClass|makeLimitClass|orderPrcLimit|orderRefUPrc|orderRefDelta|orderRefGamma|orderVolLimit|rateOverride|sdivOverride|ddivOverride|overrideCode|orderPrcOffset|stateModel|uStateModel|takeAlphaType|makeAlphaType|takeAlphaFactor|makeAlphaFactor|takeProbability|makeProbability|takeSurfPrcOffset|takeSurfVolOffset|takeSurfWidthOffset|makeSurfPrcOffset|makeSurfVolOffset|makeSurfWidthOffset|orderRefEventMult|orderRefEventDttm|exchMask|cxlUPrcRange|minUBid|maxUAsk|minMaxType|minOptionPx|startDttm|activeDuration|progressExposeTime|expDayWtVegaOffset|maxExpDayWtVegaLn|maxExpDayWtVegaSh|maxExpDayRMetric6Ln|maxExpDayRMetric6Sh|symDayDDeltaOffset|maxSymDayDDeltaLn|maxSymDayDDeltaSh|symDayVegaOffset|maxSymDayVegaLn|maxSymDayVegaSh|symDayWtVegaOffset|maxSymDayWtVegaLn|maxSymDayWtVegaSh|maxSymDayRMetric7Ln|maxSymDayRMetric7Sh|maxGrpDayDDeltaLn|maxGrpDayDDeltaSh|maxGrpDayVegaLn|maxGrpDayVegaSh|maxGrpDayVegaAbs|grpDayVegaRatio|maxGrpDayContractsLn|maxGrpDayContractsSh|maxGrpDayContractsAbs|maxGrpDayRMetric1Ln|maxGrpDayRMetric1Sh|maxGrpDayRMetric1Abs|grpDayRMetric1Ratio|maxGrpDayRMetric2Ln|maxGrpDayRMetric2Sh|maxGrpDayRMetric3Ln|maxGrpDayRMetric3Sh|maxGrpDayRMetric4Ln|maxGrpDayRMetric4Sh|maxGrpDayRMetric5Ln|maxGrpDayRMetric5Sh|symEmaCxlDDeltaLn|symEmaCxlDDeltaSh|symEmaCxlWtVegaLn|symEmaCxlWtVegaSh|theoVol|clArriveMark|userData1|userData2|execBrkrCode|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'where=accnt:eq:ExampleString' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=sysEnvironment:ASC'\n"})})})]}),"\n",(0,a.jsx)(t.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,a.jsxs)(n.A,{children:[(0,a.jsx)(s.A,{value:"Python",label:"Python",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'SpdrParentLimit\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'sysEnvironment|runStatus|orderActiveSize|addCumFillQuantity|orderLimitType|takeLimitClass|makeLimitClass|orderPrcLimit|orderRefUPrc|orderRefDelta|orderRefGamma|orderVolLimit|rateOverride|sdivOverride|ddivOverride|overrideCode|orderPrcOffset|stateModel|uStateModel|takeAlphaType|makeAlphaType|takeAlphaFactor|makeAlphaFactor|takeProbability|makeProbability|takeSurfPrcOffset|takeSurfVolOffset|takeSurfWidthOffset|makeSurfPrcOffset|makeSurfVolOffset|makeSurfWidthOffset|orderRefEventMult|orderRefEventDttm|exchMask|cxlUPrcRange|minUBid|maxUAsk|minMaxType|minOptionPx|startDttm|activeDuration|progressExposeTime|expDayWtVegaOffset|maxExpDayWtVegaLn|maxExpDayWtVegaSh|maxExpDayRMetric6Ln|maxExpDayRMetric6Sh|symDayDDeltaOffset|maxSymDayDDeltaLn|maxSymDayDDeltaSh|symDayVegaOffset|maxSymDayVegaLn|maxSymDayVegaSh|symDayWtVegaOffset|maxSymDayWtVegaLn|maxSymDayWtVegaSh|maxSymDayRMetric7Ln|maxSymDayRMetric7Sh|maxGrpDayDDeltaLn|maxGrpDayDDeltaSh|maxGrpDayVegaLn|maxGrpDayVegaSh|maxGrpDayVegaAbs|grpDayVegaRatio|maxGrpDayContractsLn|maxGrpDayContractsSh|maxGrpDayContractsAbs|maxGrpDayRMetric1Ln|maxGrpDayRMetric1Sh|maxGrpDayRMetric1Abs|grpDayRMetric1Ratio|maxGrpDayRMetric2Ln|maxGrpDayRMetric2Sh|maxGrpDayRMetric3Ln|maxGrpDayRMetric3Sh|maxGrpDayRMetric4Ln|maxGrpDayRMetric4Sh|maxGrpDayRMetric5Ln|maxGrpDayRMetric5Sh|symEmaCxlDDeltaLn|symEmaCxlDDeltaSh|symEmaCxlWtVegaLn|symEmaCxlWtVegaSh|theoVol|clArriveMark|userData1|userData2|execBrkrCode|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'sysEnvironment|runStatus|addCumFillQuantity|orderLimitType|takeLimitClass|makeLimitClass|overrideCode|stateModel|uStateModel|takeAlphaType|makeAlphaType|cxlUPrcRange|minMaxType|modifiedIn\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getaggregate\',\n"msgType": MSG_TYPE,\n"measure": MEASURE,\n"group": GROUP,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,a.jsx)(s.A,{value:"cUrl",label:"cUrl",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=SpdrParentLimit' \\\n--data-urlencode 'measure=sysEnvironment|runStatus|orderActiveSize|addCumFillQuantity|orderLimitType|takeLimitClass|makeLimitClass|orderPrcLimit|orderRefUPrc|orderRefDelta|orderRefGamma|orderVolLimit|rateOverride|sdivOverride|ddivOverride|overrideCode|orderPrcOffset|stateModel|uStateModel|takeAlphaType|makeAlphaType|takeAlphaFactor|makeAlphaFactor|takeProbability|makeProbability|takeSurfPrcOffset|takeSurfVolOffset|takeSurfWidthOffset|makeSurfPrcOffset|makeSurfVolOffset|makeSurfWidthOffset|orderRefEventMult|orderRefEventDttm|exchMask|cxlUPrcRange|minUBid|maxUAsk|minMaxType|minOptionPx|startDttm|activeDuration|progressExposeTime|expDayWtVegaOffset|maxExpDayWtVegaLn|maxExpDayWtVegaSh|maxExpDayRMetric6Ln|maxExpDayRMetric6Sh|symDayDDeltaOffset|maxSymDayDDeltaLn|maxSymDayDDeltaSh|symDayVegaOffset|maxSymDayVegaLn|maxSymDayVegaSh|symDayWtVegaOffset|maxSymDayWtVegaLn|maxSymDayWtVegaSh|maxSymDayRMetric7Ln|maxSymDayRMetric7Sh|maxGrpDayDDeltaLn|maxGrpDayDDeltaSh|maxGrpDayVegaLn|maxGrpDayVegaSh|maxGrpDayVegaAbs|grpDayVegaRatio|maxGrpDayContractsLn|maxGrpDayContractsSh|maxGrpDayContractsAbs|maxGrpDayRMetric1Ln|maxGrpDayRMetric1Sh|maxGrpDayRMetric1Abs|grpDayRMetric1Ratio|maxGrpDayRMetric2Ln|maxGrpDayRMetric2Sh|maxGrpDayRMetric3Ln|maxGrpDayRMetric3Sh|maxGrpDayRMetric4Ln|maxGrpDayRMetric4Sh|maxGrpDayRMetric5Ln|maxGrpDayRMetric5Sh|symEmaCxlDDeltaLn|symEmaCxlDDeltaSh|symEmaCxlWtVegaLn|symEmaCxlWtVegaSh|theoVol|clArriveMark|userData1|userData2|execBrkrCode|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'group=sysEnvironment|runStatus|addCumFillQuantity|orderLimitType|takeLimitClass|makeLimitClass|overrideCode|stateModel|uStateModel|takeAlphaType|makeAlphaType|cxlUPrcRange|minMaxType|modifiedIn' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,a.jsx)(t.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,a.jsxs)(n.A,{children:[(0,a.jsx)(s.A,{value:"Python",label:"Python",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'SpdrParentLimit\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,a.jsx)(s.A,{value:"cUrl",label:"cUrl",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=SpdrParentLimit' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]})]})}function x(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},19365:(e,t,r)=>{r.d(t,{A:()=>s});r(96540);var a=r(34164);const i={tabItem:"tabItem_Ymn6"};var n=r(74848);function s(e){let{children:t,hidden:r,className:s}=e;return(0,n.jsx)("div",{role:"tabpanel",className:(0,a.A)(i.tabItem,s),hidden:r,children:t})}},11470:(e,t,r)=>{r.d(t,{A:()=>v});var a=r(96540),i=r(34164),n=r(23104),s=r(56347),d=r(205),l=r(57485),c=r(31682),o=r(70679);function m(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:r}=e;return(0,a.useMemo)((()=>{const e=t??function(e){return m(e).map((e=>{let{props:{value:t,label:r,attributes:a,default:i}}=e;return{value:t,label:r,attributes:a,default:i}}))}(r);return function(e){const t=(0,c.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function x(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function u(e){let{queryString:t=!1,groupId:r}=e;const i=(0,s.W6)(),n=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,l.aZ)(n),(0,a.useCallback)((e=>{if(!n)return;const t=new URLSearchParams(i.location.search);t.set(n,e),i.replace({...i.location,search:t.toString()})}),[n,i])]}function p(e){const{defaultValue:t,queryString:r=!1,groupId:i}=e,n=h(e),[s,l]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!x({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=r.find((e=>e.default))??r[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:n}))),[c,m]=u({queryString:r,groupId:i}),[p,y]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[i,n]=(0,o.Dv)(r);return[i,(0,a.useCallback)((e=>{r&&n.set(e)}),[r,n])]}({groupId:i}),j=(()=>{const e=c??p;return x({value:e,tabValues:n})?e:null})();(0,d.A)((()=>{j&&l(j)}),[j]);return{selectedValue:s,selectValue:(0,a.useCallback)((e=>{if(!x({value:e,tabValues:n}))throw new Error(`Can't select invalid tab value=${e}`);l(e),m(e),y(e)}),[m,y,n]),tabValues:n}}var y=r(92303);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=r(74848);function D(e){let{className:t,block:r,selectedValue:a,selectValue:s,tabValues:d}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,n.a_)(),o=e=>{const t=e.currentTarget,r=l.indexOf(t),i=d[r].value;i!==a&&(c(t),s(i))},m=e=>{let t=null;switch(e.key){case"Enter":o(e);break;case"ArrowRight":{const r=l.indexOf(e.currentTarget)+1;t=l[r]??l[0];break}case"ArrowLeft":{const r=l.indexOf(e.currentTarget)-1;t=l[r]??l[l.length-1];break}}t?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":r},t),children:d.map((e=>{let{value:t,label:r,attributes:n}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:a===t?0:-1,"aria-selected":a===t,ref:e=>l.push(e),onKeyDown:m,onClick:o,...n,className:(0,i.A)("tabs__item",j.tabItem,n?.className,{"tabs__item--active":a===t}),children:r??t},t)}))})}function g(e){let{lazy:t,children:r,selectedValue:i}=e;const n=(Array.isArray(r)?r:[r]).filter(Boolean);if(t){const e=n.find((e=>e.props.value===i));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:n.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==i})))})}function S(e){const t=p(e);return(0,f.jsxs)("div",{className:(0,i.A)("tabs-container",j.tabList),children:[(0,f.jsx)(D,{...t,...e}),(0,f.jsx)(g,{...t,...e})]})}function v(e){const t=(0,y.A)();return(0,f.jsx)(S,{...e,children:m(e.children)},String(t))}},28453:(e,t,r)=>{r.d(t,{R:()=>s,x:()=>d});var a=r(96540);const i={},n=a.createContext(i);function s(e){const t=a.useContext(n);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),a.createElement(n.Provider,{value:t},e.children)}}}]);