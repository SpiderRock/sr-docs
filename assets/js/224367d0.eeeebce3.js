"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([["626"],{162:function(e,t,s){s.r(t),s.d(t,{default:()=>p,frontMatter:()=>c,metadata:()=>r,assets:()=>o,toc:()=>h,contentTitle:()=>a});var r=JSON.parse('{"id":"MessageSchemas/Schema/Topics/liquidity-notice/NoticeExecReport","title":"NoticeExecReport","description":"METADATA","source":"@site/versioned_docs/version-8.5.8.1/MessageSchemas/Schema/Topics/2450-liquidity-notice/NoticeExecReport.md","sourceDirName":"MessageSchemas/Schema/Topics/2450-liquidity-notice","slug":"/MessageSchemas/Schema/Topics/liquidity-notice/NoticeExecReport","permalink":"/docs/8.5.8.1/MessageSchemas/Schema/Topics/liquidity-notice/NoticeExecReport","draft":false,"unlisted":false,"tags":[],"version":"8.5.8.1","frontMatter":{"title":"NoticeExecReport"},"sidebar":"messageSchemasSidebar","previous":{"title":"NoticeCancel","permalink":"/docs/8.5.8.1/MessageSchemas/Schema/Topics/liquidity-notice/NoticeCancel"},"next":{"title":"NoticeResponse","permalink":"/docs/8.5.8.1/MessageSchemas/Schema/Topics/liquidity-notice/NoticeResponse"}}'),n=s("52676"),i=s("91503"),d=s("71386"),l=s("9641");let c={title:"NoticeExecReport"},a="Schema: NoticeExecReport (ID: 2475)",o={},h=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"REPEATING FIELDS",id:"repeating-fields",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3}];function u(e){let t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsxs)(t.h1,{id:"schema-noticeexecreport-id-2475",children:["Schema: NoticeExecReport ",(0,n.jsx)("span",{className:"small-text",children:"(ID: 2475)"})]})}),"\n",(0,n.jsx)(t.h3,{id:"metadata",children:"METADATA"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Attribute"}),(0,n.jsx)(t.th,{children:"Value"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Topic"}),(0,n.jsx)(t.td,{children:"2450-liquidity-notice"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"MLink Token"}),(0,n.jsx)(t.td,{children:"SRATS"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"SRSE Product"}),(0,n.jsx)(t.td,{children:"SRTrade"})]})]})]}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Note:"})," The symbol ",(0,n.jsx)(t.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"body",children:"BODY"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"#"}),(0,n.jsx)(t.th,{children:"Field"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Default Value"}),(0,n.jsx)(t.th,{children:"Comment"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"13="}),(0,n.jsx)(t.td,{children:"noticeNumber"}),(0,n.jsx)(t.td,{children:"long"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"AuctionNotice.noticeNumber"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"14="}),(0,n.jsx)(t.td,{children:"baseParentNumber"}),(0,n.jsx)(t.td,{children:"long"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"125"}),(0,n.jsx)(t.td,{children:"ticker"}),(0,n.jsx)(t.td,{children:"TickerKey"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"underlier ticker"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"126"}),(0,n.jsx)(t.td,{children:"tradeDate"}),(0,n.jsx)(t.td,{children:"DateKey"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"139"}),(0,n.jsx)(t.td,{children:"accnt"}),(0,n.jsx)(t.td,{children:"string(16)"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"SR Accnt"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"140"}),(0,n.jsx)(t.td,{children:"clientFirm"}),(0,n.jsx)(t.td,{children:"string(16)"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"SR ClientFirm"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"141"}),(0,n.jsx)(t.td,{children:"noticeDttm"}),(0,n.jsx)(t.td,{children:"DateTime"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"either notice create datetime or notice arrival@SR datetime (high precision)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"100"}),(0,n.jsx)(t.td,{children:"responseId"}),(0,n.jsx)(t.td,{children:"string(24)"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"from NoticeResponse.responseId (most recently processed response to noticeNumber for this accnt/clientFirm pair)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"142"}),(0,n.jsx)(t.td,{children:"respOrigin"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../../Enums/SpdrSource",children:"enum : SpdrSource"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"AutoResponder, MLINK, FIX, ICEChat, TradeAp responders"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"101"}),(0,n.jsx)(t.td,{children:"stageType"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../../Enums/SpdrStageType",children:"enum : SpdrStageType"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"response staged or not"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"143"}),(0,n.jsx)(t.td,{children:"auctionType"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../../Enums/AuctionType",children:"enum : AuctionType"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"Exch Exposure, Exch Price Improve, Exch Facilitation, Exch Solicitation, SR ATS Block, SR ATS Flash"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"144"}),(0,n.jsx)(t.td,{children:"auctionSource"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../../Enums/AuctionSource",children:"enum : AuctionSource"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"Source of the auction notice (eg. SRC, CBOE, MIAX, etc.)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"127"}),(0,n.jsx)(t.td,{children:"respDttm"}),(0,n.jsx)(t.td,{children:"DateTime"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"response arrival dttm (high precision)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"102"}),(0,n.jsx)(t.td,{children:"respSide"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"103"}),(0,n.jsx)(t.td,{children:"respSize"}),(0,n.jsx)(t.td,{children:"int"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"104"}),(0,n.jsx)(t.td,{children:"respActiveSize"}),(0,n.jsx)(t.td,{children:"int"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"active response order size (zero for ActiveHold)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"105"}),(0,n.jsx)(t.td,{children:"respPrice"}),(0,n.jsx)(t.td,{children:"double"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"effRespPrice = respPrice + de * (uMid - refUPrc) + 0.5 * ga * (uMid - refUPrc)^2"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"106"}),(0,n.jsx)(t.td,{children:"refUPrc"}),(0,n.jsx)(t.td,{children:"double"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"reference price for tied to underlier orders (mid-market tie) (block auctions only)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"107"}),(0,n.jsx)(t.td,{children:"refDe"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"reference delta for tied to underlier orders (zero if tie is not desired) (block auctions only)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"108"}),(0,n.jsx)(t.td,{children:"refGa"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"reference gamma for tied to underlier orders (zero if tie is not desired) (block auctions only)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"128"}),(0,n.jsx)(t.td,{children:"roundRule"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../../Enums/RoundRule",children:"enum : RoundRule"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"Exact (100%) or Fuzzy (90%) [default is Exact] (block auctions only)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"129"}),(0,n.jsx)(t.td,{children:"stepUpIncr"}),(0,n.jsx)(t.td,{children:"double"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"additional price increment (best price) (typically only used if auction is competitive)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"109"}),(0,n.jsx)(t.td,{children:"riskGroupId"}),(0,n.jsx)(t.td,{children:"long"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"any auction response is associated with this riskGroupID (and SpdrRiskGroupControl)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"110"}),(0,n.jsx)(t.td,{children:"strategy"}),(0,n.jsx)(t.td,{children:"string(32)"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"user strategy field (visible on SR tools)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"111"}),(0,n.jsx)(t.td,{children:"userData1"}),(0,n.jsx)(t.td,{children:"text1"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"user data field (free text) (from NoticeResponse)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"112"}),(0,n.jsx)(t.td,{children:"respStatus"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../../Enums/SpdrOrderStatus",children:"enum : SpdrOrderStatus"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"113"}),(0,n.jsx)(t.td,{children:"respDetail"}),(0,n.jsx)(t.td,{children:"text1"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"145"}),(0,n.jsx)(t.td,{children:"lastUPrc"}),(0,n.jsx)(t.td,{children:"double"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"effective uPrc (mid-market) from last trial pass"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"146"}),(0,n.jsx)(t.td,{children:"lastTrialPrc"}),(0,n.jsx)(t.td,{children:"double"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"effective response price from last trial pass"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"147"}),(0,n.jsx)(t.td,{children:"leavesQty"}),(0,n.jsx)(t.td,{children:"int"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"open order quantity"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"130"}),(0,n.jsx)(t.td,{children:"cumFillQty"}),(0,n.jsx)(t.td,{children:"int"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"pkg cumFillQty if MLeg"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"131"}),(0,n.jsx)(t.td,{children:"avgFillPrice"}),(0,n.jsx)(t.td,{children:"double"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"pkg avgFillPrice if MLeg"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"148"}),(0,n.jsx)(t.td,{children:"addLatency"}),(0,n.jsx)(t.td,{children:"double"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"latency from notice arrival@SR to external response send (in seconds) OR latency from notice create to response accepted (in seconds) (SRC Auctions)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"149"}),(0,n.jsx)(t.td,{children:"ackLatency"}),(0,n.jsx)(t.td,{children:"double"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"latency from external response send to external response ack (FRT) (in seconds) (external auctions only)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"152"}),(0,n.jsx)(t.td,{children:"numOptLegs"}),(0,n.jsx)(t.td,{children:"int"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"number of option legs"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"153"}),(0,n.jsx)(t.td,{children:"spreadClass"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../../Enums/SpreadClass",children:"enum : SpreadClass"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"spread class (eg. Call, Put, RevCon, Box, JRoll, etc.)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"154"}),(0,n.jsx)(t.td,{children:"spreadFlavor"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../../Enums/SpreadFlavor",children:"enum : SpreadFlavor"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"spread flavor (Normal, Flipped) of this order"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"155"}),(0,n.jsx)(t.td,{children:"containsHedge"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"if this order contains a stock/future leg"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"156"}),(0,n.jsx)(t.td,{children:"containsFlex"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"if this order contains flex leg(s)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"157"}),(0,n.jsx)(t.td,{children:"containsMultiHedge"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"contains MultiHedge (corp action adjusted) options"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"132"}),(0,n.jsx)(t.td,{children:"responseResult"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../../Enums/NoticeResult",children:"enum : NoticeResult"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"133"}),(0,n.jsx)(t.td,{children:"responseTime"}),(0,n.jsx)(t.td,{children:"short"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"notice response arrival time (milliseconds since auction start)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"134"}),(0,n.jsx)(t.td,{children:"prtPrice"}),(0,n.jsx)(t.td,{children:"double"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"reported print price (pkgPrice if MLeg)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"135"}),(0,n.jsx)(t.td,{children:"prtSize"}),(0,n.jsx)(t.td,{children:"int"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"reported print size (pgkSize if MLeg)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"136"}),(0,n.jsx)(t.td,{children:"prtTime"}),(0,n.jsx)(t.td,{children:"DateTime"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"reported print time (1st print if MLeg)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"150"}),(0,n.jsx)(t.td,{children:"prtUBid"}),(0,n.jsx)(t.td,{children:"double"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"best estimate of uBid @ auction print time"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"151"}),(0,n.jsx)(t.td,{children:"prtUAsk"}),(0,n.jsx)(t.td,{children:"double"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"best estimate of uAsk @ auction print time"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"124"}),(0,n.jsx)(t.td,{children:"timestamp"}),(0,n.jsx)(t.td,{children:"DateTime"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"repeating-fields",children:"REPEATING FIELDS"}),"\n",(0,n.jsx)(t.p,{children:"OrderLegs"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"#"}),(0,n.jsx)(t.th,{children:"Field"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Default Value"}),(0,n.jsx)(t.th,{children:"Comment"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"117"}),(0,n.jsx)(t.td,{children:"secKey"}),(0,n.jsx)(t.td,{children:"OptionKey"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"118"}),(0,n.jsx)(t.td,{children:"secType"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../../Enums/SpdrKeyType",children:"enum : SpdrKeyType"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"119"}),(0,n.jsx)(t.td,{children:"side"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"120"}),(0,n.jsx)(t.td,{children:"ratio"}),(0,n.jsx)(t.td,{children:"int"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"121"}),(0,n.jsx)(t.td,{children:"positionType"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../../Enums/LegPositionType",children:"enum : LegPositionType"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"122"}),(0,n.jsx)(t.td,{children:"legCumFillQty"}),(0,n.jsx)(t.td,{children:"int"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"123"}),(0,n.jsx)(t.td,{children:"legAvgFillPrice"}),(0,n.jsx)(t.td,{children:"double"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,n.jsxs)(d.Z,{children:[(0,n.jsx)(l.Z,{value:"Python",label:"Python",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'NoticeExecReport'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n    # Required Parameters\n    \"apiKey\": API_KEY,\n    \"cmd\": 'getschema',\n    \"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,n.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=NoticeExecReport'\n\n"})})})]}),"\n",(0,n.jsx)(t.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,n.jsxs)(d.Z,{children:[(0,n.jsx)(l.Z,{value:"Python",label:"Python",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'NoticeExecReport\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'ticker|tradeDate|accnt|clientFirm|noticeDttm|responseId|respOrigin|stageType|auctionType|auctionSource|respDttm|respSide|respSize|respActiveSize|respPrice|refUPrc|refDe|refGa|roundRule|stepUpIncr|riskGroupId|strategy|userData1|respStatus|respDetail|lastUPrc|lastTrialPrc|leavesQty|cumFillQty|avgFillPrice|addLatency|ackLatency|numOptLegs|spreadClass|spreadFlavor|containsHedge|containsFlex|containsMultiHedge|responseResult|responseTime|prtPrice|prtSize|prtTime|prtUBid|prtUAsk|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,n.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=NoticeExecReport' \\\n--data-urlencode 'view=ticker|tradeDate|accnt|clientFirm|noticeDttm|responseId|respOrigin|stageType|auctionType|auctionSource|respDttm|respSide|respSize|respActiveSize|respPrice|refUPrc|refDe|refGa|roundRule|stepUpIncr|riskGroupId|strategy|userData1|respStatus|respDetail|lastUPrc|lastTrialPrc|leavesQty|cumFillQty|avgFillPrice|addLatency|ackLatency|numOptLegs|spreadClass|spreadFlavor|containsHedge|containsFlex|containsMultiHedge|responseResult|responseTime|prtPrice|prtSize|prtTime|prtUBid|prtUAsk|timestamp' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,n.jsx)(t.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,n.jsxs)(d.Z,{children:[(0,n.jsx)(l.Z,{value:"Python",label:"Python",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'NoticeExecReport\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'ticker|tradeDate|accnt|clientFirm|noticeDttm|responseId|respOrigin|stageType|auctionType|auctionSource|respDttm|respSide|respSize|respActiveSize|respPrice|refUPrc|refDe|refGa|roundRule|stepUpIncr|riskGroupId|strategy|userData1|respStatus|respDetail|lastUPrc|lastTrialPrc|leavesQty|cumFillQty|avgFillPrice|addLatency|ackLatency|numOptLegs|spreadClass|spreadFlavor|containsHedge|containsFlex|containsMultiHedge|responseResult|responseTime|prtPrice|prtSize|prtTime|prtUBid|prtUAsk|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'ticker:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,n.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=NoticeExecReport' \\\n--data-urlencode 'view=ticker|tradeDate|accnt|clientFirm|noticeDttm|responseId|respOrigin|stageType|auctionType|auctionSource|respDttm|respSide|respSize|respActiveSize|respPrice|refUPrc|refDe|refGa|roundRule|stepUpIncr|riskGroupId|strategy|userData1|respStatus|respDetail|lastUPrc|lastTrialPrc|leavesQty|cumFillQty|avgFillPrice|addLatency|ackLatency|numOptLegs|spreadClass|spreadFlavor|containsHedge|containsFlex|containsMultiHedge|responseResult|responseTime|prtPrice|prtSize|prtTime|prtUBid|prtUAsk|timestamp' \\\n--data-urlencode 'where=accnt:eq:ExampleString' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=ticker:ASC'\n"})})})]}),"\n",(0,n.jsx)(t.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,n.jsxs)(d.Z,{children:[(0,n.jsx)(l.Z,{value:"Python",label:"Python",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'NoticeExecReport\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'ticker|tradeDate|accnt|clientFirm|noticeDttm|responseId|respOrigin|stageType|auctionType|auctionSource|respDttm|respSide|respSize|respActiveSize|respPrice|refUPrc|refDe|refGa|roundRule|stepUpIncr|riskGroupId|strategy|userData1|respStatus|respDetail|lastUPrc|lastTrialPrc|leavesQty|cumFillQty|avgFillPrice|addLatency|ackLatency|numOptLegs|spreadClass|spreadFlavor|containsHedge|containsFlex|containsMultiHedge|responseResult|responseTime|prtPrice|prtSize|prtTime|prtUBid|prtUAsk|timestamp\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'respOrigin|stageType|auctionType|auctionSource|respSide|roundRule|respStatus|spreadClass|spreadFlavor|containsHedge|containsFlex|containsMultiHedge|responseResult\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getaggregate\',\n    "msgType": MSG_TYPE,\n    "measure": MEASURE,\n    "group": GROUP,\n    # Optional Parameters\n    "where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,n.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=NoticeExecReport' \\\n--data-urlencode 'measure=ticker|tradeDate|accnt|clientFirm|noticeDttm|responseId|respOrigin|stageType|auctionType|auctionSource|respDttm|respSide|respSize|respActiveSize|respPrice|refUPrc|refDe|refGa|roundRule|stepUpIncr|riskGroupId|strategy|userData1|respStatus|respDetail|lastUPrc|lastTrialPrc|leavesQty|cumFillQty|avgFillPrice|addLatency|ackLatency|numOptLegs|spreadClass|spreadFlavor|containsHedge|containsFlex|containsMultiHedge|responseResult|responseTime|prtPrice|prtSize|prtTime|prtUBid|prtUAsk|timestamp' \\\n--data-urlencode 'group=respOrigin|stageType|auctionType|auctionSource|respSide|roundRule|respStatus|spreadClass|spreadFlavor|containsHedge|containsFlex|containsMultiHedge|responseResult' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,n.jsx)(t.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,n.jsxs)(d.Z,{children:[(0,n.jsx)(l.Z,{value:"Python",label:"Python",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'NoticeExecReport\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,n.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=NoticeExecReport' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]})]})}function p(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},9641:function(e,t,s){s.d(t,{Z:()=>i});var r=s("52676");s("75271");var n=s("54461");function i(e){let{children:t,hidden:s,className:i}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,n.Z)("tabItem_SSzl",i),hidden:s,children:t})}},71386:function(e,t,s){s.d(t,{Z:()=>y});var r=s("52676"),n=s("75271"),i=s("54461"),d=s("52289"),l=s("3225"),c=s("42834"),a=s("40578"),o=s("35834"),h=s("79616");function u(e){return n.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||n.isValidElement(e)&&function(e){let{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p(e){let{value:t,tabValues:s}=e;return s.some(e=>e.value===t)}var x=s("44537");function j(e){let{className:t,block:s,selectedValue:n,selectValue:l,tabValues:c}=e,a=[],{blockElementScrollPositionUntilNextRender:o}=(0,d.o5)(),h=e=>{let t=e.currentTarget,s=c[a.indexOf(t)].value;s!==n&&(o(t),l(s))},u=e=>{let t=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{let s=a.indexOf(e.currentTarget)+1;t=a[s]??a[0];break}case"ArrowLeft":{let s=a.indexOf(e.currentTarget)-1;t=a[s]??a[a.length-1]}}t?.focus()};return(0,r.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":s},t),children:c.map(e=>{let{value:t,label:s,attributes:d}=e;return(0,r.jsx)("li",{role:"tab",tabIndex:n===t?0:-1,"aria-selected":n===t,ref:e=>a.push(e),onKeyDown:u,onClick:h,...d,className:(0,i.Z)("tabs__item","tabItem_aitt",d?.className,{"tabs__item--active":n===t}),children:s??t},t)})})}function m(e){let{lazy:t,children:s,selectedValue:d}=e,l=(Array.isArray(s)?s:[s]).filter(Boolean);if(t){let e=l.find(e=>e.props.value===d);return e?(0,n.cloneElement)(e,{className:(0,i.Z)("margin-top--md",e.props.className)}):null}return(0,r.jsx)("div",{className:"margin-top--md",children:l.map((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==d}))})}function g(e){let t=function(e){let{defaultValue:t,queryString:s=!1,groupId:r}=e,i=function(e){let{values:t,children:s}=e;return(0,n.useMemo)(()=>{let e=t??u(s).map(e=>{let{props:{value:t,label:s,attributes:r,default:n}}=e;return{value:t,label:s,attributes:r,default:n}});return!function(e){let t=(0,o.lx)(e,(e,t)=>e.value===t.value);if(t.length>0)throw Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[t,s])}(e),[d,x]=(0,n.useState)(()=>(function(e){let{defaultValue:t,tabValues:s}=e;if(0===s.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:s}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${s.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}let r=s.find(e=>e.default)??s[0];if(!r)throw Error("Unexpected error: 0 tabValues");return r.value})({defaultValue:t,tabValues:i})),[j,m]=function(e){let{queryString:t=!1,groupId:s}=e,r=(0,l.k6)(),i=function(e){let{queryString:t=!1,groupId:s}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!s)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return s??null}({queryString:t,groupId:s});return[(0,a._X)(i),(0,n.useCallback)(e=>{if(!i)return;let t=new URLSearchParams(r.location.search);t.set(i,e),r.replace({...r.location,search:t.toString()})},[i,r])]}({queryString:s,groupId:r}),[g,y]=function(e){let{groupId:t}=e,s=t?`docusaurus.tab.${t}`:null,[r,i]=(0,h.Nk)(s);return[r,(0,n.useCallback)(e=>{s&&i.set(e)},[s,i])]}({groupId:r}),f=(()=>{let e=j??g;return p({value:e,tabValues:i})?e:null})();return(0,c.Z)(()=>{f&&x(f)},[f]),{selectedValue:d,selectValue:(0,n.useCallback)(e=>{if(!p({value:e,tabValues:i}))throw Error(`Can't select invalid tab value=${e}`);x(e),m(e),y(e)},[m,y,i]),tabValues:i}}(e);return(0,r.jsxs)("div",{className:(0,i.Z)("tabs-container","tabList_ArS0"),children:[(0,r.jsx)(j,{...t,...e}),(0,r.jsx)(m,{...t,...e})]})}function y(e){let t=(0,x.Z)();return(0,r.jsx)(g,{...e,children:u(e.children)},String(t))}},91503:function(e,t,s){s.d(t,{Z:function(){return l},a:function(){return d}});var r=s(75271);let n={},i=r.createContext(n);function d(e){let t=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);