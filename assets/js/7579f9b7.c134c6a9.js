"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[26293],{34313:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>o,contentTitle:()=>i,default:()=>x,frontMatter:()=>d,metadata:()=>c,toc:()=>h});var r=t(74848),n=t(28453),a=t(11470),l=t(19365);const d={title:"LiveExpirySurface"},i="Schema: LiveExpirySurface (ID: 1135)",c={id:"MessageSchemas/Schema/Topics/analytics/LiveExpirySurface",title:"LiveExpirySurface",description:"LiveExpirySurface (surfaceType = 'Live') records are computed and publish continuously during trading hours and represent a current best implied volatility market fit.SurfaceType = 'PriorDay' records contain the `closing surface record from the prior trading period (usually from just before the last main session close).",source:"@site/versioned_docs/version-8.4.08.4/MessageSchemas/Schema/Topics/1000-analytics/LiveExpirySurface.md",sourceDirName:"MessageSchemas/Schema/Topics/1000-analytics",slug:"/MessageSchemas/Schema/Topics/analytics/LiveExpirySurface",permalink:"/docs/8.4.08.4/MessageSchemas/Schema/Topics/analytics/LiveExpirySurface",draft:!1,unlisted:!1,tags:[],version:"8.4.08.4",frontMatter:{title:"LiveExpirySurface"},sidebar:"messageSchemasSidebar",previous:{title:"LiveAtmVol",permalink:"/docs/8.4.08.4/MessageSchemas/Schema/Topics/analytics/LiveAtmVol"},next:{title:"LiveIVarSwapFixedTerm",permalink:"/docs/8.4.08.4/MessageSchemas/Schema/Topics/analytics/LiveIVarSwapFixedTerm"}},o={},h=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3}];function u(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.h1,{id:"schema-liveexpirysurface-id-1135",children:["Schema: LiveExpirySurface ",(0,r.jsx)("span",{className:"small-text",children:"(ID: 1135)"})]}),"\n",(0,r.jsxs)(s.p,{children:["LiveExpirySurface (surfaceType = 'Live') records are computed and publish continuously during trading hours and represent a current best implied volatility market fit.",(0,r.jsx)("br",{}),(0,r.jsx)("br",{}),"SurfaceType = 'PriorDay' records contain the `closing surface record from the prior trading period (usually from just before the last main session close)."]}),"\n",(0,r.jsx)(s.h3,{id:"metadata",children:"METADATA"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Attribute"}),(0,r.jsx)(s.th,{children:"Value"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Topic"}),(0,r.jsx)(s.td,{children:"1000-analytics"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"MLink Token"}),(0,r.jsx)(s.td,{children:"SystemData"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"SRSE Product"}),(0,r.jsx)(s.td,{children:"SRAnalytics"})]})]})]}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Note:"})," The symbol ",(0,r.jsx)(s.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"body",children:"BODY"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"#"}),(0,r.jsx)(s.th,{children:"Field"}),(0,r.jsx)(s.th,{children:"Type"}),(0,r.jsx)(s.th,{children:"Comment"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"10="}),(0,r.jsx)(s.td,{children:"ekey"}),(0,r.jsx)(s.td,{children:"ExpiryKey"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"11="}),(0,r.jsx)(s.td,{children:"surfaceType"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"../../../Enums/SurfaceCurveType",children:"enum : SurfaceCurveType"})}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"100"}),(0,r.jsx)(s.td,{children:"uPrc"}),(0,r.jsx)(s.td,{children:"double"}),(0,r.jsx)(s.td,{children:"effective uPrc used for surface fitting"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"101"}),(0,r.jsx)(s.td,{children:"uPrcDriver"}),(0,r.jsx)(s.td,{children:"double"}),(0,r.jsx)(s.td,{children:"underlier driver (mid-market)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"102"}),(0,r.jsx)(s.td,{children:"years"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"time to expiration (in years)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"103"}),(0,r.jsx)(s.td,{children:"rate"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"average interest rate to expiration (discount rate)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"104"}),(0,r.jsx)(s.td,{children:"sdiv"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"stock dividend (borrow rate)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"105"}),(0,r.jsx)(s.td,{children:"atmVol"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"atm vol (xAxis = 0)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"106"}),(0,r.jsx)(s.td,{children:"atmSlope"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"volatility surface slope (dVol / dXAxis) @ ATM (xAxis=0)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"107"}),(0,r.jsx)(s.td,{children:"fitRate"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"108"}),(0,r.jsx)(s.td,{children:"axisFUPrc"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"axis FwdUPrc (fwd underlying price used to compute xAxis)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"109"}),(0,r.jsx)(s.td,{children:"axisVolRT"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"axis volatility x sqrt(years) (used to compute xAxis) [usually the minimum curve volatility]"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"110"}),(0,r.jsx)(s.td,{children:"skewMult"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"sVol = skewMult * BasisSkewFn(xMult * xAxis - xShift)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"111"}),(0,r.jsx)(s.td,{children:"xMult"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"112"}),(0,r.jsx)(s.td,{children:"xShift"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"113"}),(0,r.jsx)(s.td,{children:"skewC00"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"curve coeff[0]"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"114"}),(0,r.jsx)(s.td,{children:"skewC01"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"curve coeff[1]"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"115"}),(0,r.jsx)(s.td,{children:"skewC02"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"116"}),(0,r.jsx)(s.td,{children:"skewC03"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"117"}),(0,r.jsx)(s.td,{children:"skewC04"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"118"}),(0,r.jsx)(s.td,{children:"skewC05"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"119"}),(0,r.jsx)(s.td,{children:"skewC06"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"120"}),(0,r.jsx)(s.td,{children:"skewC07"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"121"}),(0,r.jsx)(s.td,{children:"skewC08"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"122"}),(0,r.jsx)(s.td,{children:"skewC09"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"123"}),(0,r.jsx)(s.td,{children:"skewC10"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"124"}),(0,r.jsx)(s.td,{children:"skewC11"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"125"}),(0,r.jsx)(s.td,{children:"skewC12"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"126"}),(0,r.jsx)(s.td,{children:"skewC13"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"127"}),(0,r.jsx)(s.td,{children:"skewC14"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"128"}),(0,r.jsx)(s.td,{children:"skewC15"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"129"}),(0,r.jsx)(s.td,{children:"skewC16"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"130"}),(0,r.jsx)(s.td,{children:"skewC17"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"131"}),(0,r.jsx)(s.td,{children:"skewC18"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"132"}),(0,r.jsx)(s.td,{children:"skewC19"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"133"}),(0,r.jsx)(s.td,{children:"skewC20"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"134"}),(0,r.jsx)(s.td,{children:"skewC21"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"135"}),(0,r.jsx)(s.td,{children:"skewC22"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"136"}),(0,r.jsx)(s.td,{children:"skewC23"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"137"}),(0,r.jsx)(s.td,{children:"skewC24"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"138"}),(0,r.jsx)(s.td,{children:"skewC25"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"139"}),(0,r.jsx)(s.td,{children:"skewC26"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"140"}),(0,r.jsx)(s.td,{children:"skewC27"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"141"}),(0,r.jsx)(s.td,{children:"skewC28"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"142"}),(0,r.jsx)(s.td,{children:"cpAdjD04"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"xAxis = -4.0"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"143"}),(0,r.jsx)(s.td,{children:"cpAdjD03"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"xAxis = -3.0"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"144"}),(0,r.jsx)(s.td,{children:"cpAdjD02"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"xAxis = -2.0"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"145"}),(0,r.jsx)(s.td,{children:"cpAdjD01"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"xAxis = -1.0"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"146"}),(0,r.jsx)(s.td,{children:"cpAdjU01"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"xAxis = +1.0"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"147"}),(0,r.jsx)(s.td,{children:"cpAdjU02"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"xAxis = +2.0"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"148"}),(0,r.jsx)(s.td,{children:"cpAdjU03"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"xAxis = +3.0"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"149"}),(0,r.jsx)(s.td,{children:"cpAdjU04"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"xAxis = +4.0"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"150"}),(0,r.jsx)(s.td,{children:"tradeableStatus"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"../../../Enums/TradeableStatus",children:"enum : TradeableStatus"})}),(0,r.jsx)(s.td,{children:"indicates whether the surface is currently tradeable or not (all server surface integrity checks pass)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"151"}),(0,r.jsx)(s.td,{children:"surfaceResult"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"../../../Enums/SurfaceResult",children:"enum : SurfaceResult"})}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"152"}),(0,r.jsx)(s.td,{children:"marketSession"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"../../../Enums/MarketSession",children:"enum : MarketSession"})}),(0,r.jsx)(s.td,{children:"market session this surface is from"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"153"}),(0,r.jsx)(s.td,{children:"timestamp"}),(0,r.jsx)(s.td,{children:"DateTime"}),(0,r.jsx)(s.td,{})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"Python",label:"Python",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'LiveExpirySurface'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n#Required Parameters\n\"apiKey\": API_KEY,\n\"cmd\": 'getschema',\n\"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,r.jsx)(l.A,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=LiveExpirySurface'\n\n"})})})]}),"\n",(0,r.jsx)(s.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"Python",label:"Python",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'LiveExpirySurface\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'uPrc|uPrcDriver|years|rate|sdiv|atmVol|atmSlope|fitRate|axisFUPrc|axisVolRT|skewMult|xMult|xShift|skewC00|skewC01|skewC02|skewC03|skewC04|skewC05|skewC06|skewC07|skewC08|skewC09|skewC10|skewC11|skewC12|skewC13|skewC14|skewC15|skewC16|skewC17|skewC18|skewC19|skewC20|skewC21|skewC22|skewC23|skewC24|skewC25|skewC26|skewC27|skewC28|cpAdjD04|cpAdjD03|cpAdjD02|cpAdjD01|cpAdjU01|cpAdjU02|cpAdjU03|cpAdjU04|tradeableStatus|surfaceResult|marketSession|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,r.jsx)(l.A,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=LiveExpirySurface' \\\n--data-urlencode 'view=uPrc|uPrcDriver|years|rate|sdiv|atmVol|atmSlope|fitRate|axisFUPrc|axisVolRT|skewMult|xMult|xShift|skewC00|skewC01|skewC02|skewC03|skewC04|skewC05|skewC06|skewC07|skewC08|skewC09|skewC10|skewC11|skewC12|skewC13|skewC14|skewC15|skewC16|skewC17|skewC18|skewC19|skewC20|skewC21|skewC22|skewC23|skewC24|skewC25|skewC26|skewC27|skewC28|cpAdjD04|cpAdjD03|cpAdjD02|cpAdjD01|cpAdjU01|cpAdjU02|cpAdjU03|cpAdjU04|tradeableStatus|surfaceResult|marketSession|timestamp' \\\n--data-urlencode 'where='\n"})})})]}),"\n",(0,r.jsx)(s.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"Python",label:"Python",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'LiveExpirySurface\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'uPrc|uPrcDriver|years|rate|sdiv|atmVol|atmSlope|fitRate|axisFUPrc|axisVolRT|skewMult|xMult|xShift|skewC00|skewC01|skewC02|skewC03|skewC04|skewC05|skewC06|skewC07|skewC08|skewC09|skewC10|skewC11|skewC12|skewC13|skewC14|skewC15|skewC16|skewC17|skewC18|skewC19|skewC20|skewC21|skewC22|skewC23|skewC24|skewC25|skewC26|skewC27|skewC28|cpAdjD04|cpAdjD03|cpAdjD02|cpAdjD01|cpAdjU01|cpAdjU02|cpAdjU03|cpAdjU04|tradeableStatus|surfaceResult|marketSession|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'uPrc:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,r.jsx)(l.A,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=LiveExpirySurface' \\\n--data-urlencode 'view=uPrc|uPrcDriver|years|rate|sdiv|atmVol|atmSlope|fitRate|axisFUPrc|axisVolRT|skewMult|xMult|xShift|skewC00|skewC01|skewC02|skewC03|skewC04|skewC05|skewC06|skewC07|skewC08|skewC09|skewC10|skewC11|skewC12|skewC13|skewC14|skewC15|skewC16|skewC17|skewC18|skewC19|skewC20|skewC21|skewC22|skewC23|skewC24|skewC25|skewC26|skewC27|skewC28|cpAdjD04|cpAdjD03|cpAdjD02|cpAdjD01|cpAdjU01|cpAdjU02|cpAdjU03|cpAdjU04|tradeableStatus|surfaceResult|marketSession|timestamp' \\\n--data-urlencode 'where=' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=uPrc:ASC'\n"})})})]}),"\n",(0,r.jsx)(s.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"Python",label:"Python",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'LiveExpirySurface\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'uPrc|uPrcDriver|years|rate|sdiv|atmVol|atmSlope|fitRate|axisFUPrc|axisVolRT|skewMult|xMult|xShift|skewC00|skewC01|skewC02|skewC03|skewC04|skewC05|skewC06|skewC07|skewC08|skewC09|skewC10|skewC11|skewC12|skewC13|skewC14|skewC15|skewC16|skewC17|skewC18|skewC19|skewC20|skewC21|skewC22|skewC23|skewC24|skewC25|skewC26|skewC27|skewC28|cpAdjD04|cpAdjD03|cpAdjD02|cpAdjD01|cpAdjU01|cpAdjU02|cpAdjU03|cpAdjU04|tradeableStatus|surfaceResult|marketSession|timestamp\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'tradeableStatus|surfaceResult|marketSession\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getaggregate\',\n"msgType": MSG_TYPE,\n"measure": MEASURE,\n"group": GROUP,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,r.jsx)(l.A,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=LiveExpirySurface' \\\n--data-urlencode 'measure=uPrc|uPrcDriver|years|rate|sdiv|atmVol|atmSlope|fitRate|axisFUPrc|axisVolRT|skewMult|xMult|xShift|skewC00|skewC01|skewC02|skewC03|skewC04|skewC05|skewC06|skewC07|skewC08|skewC09|skewC10|skewC11|skewC12|skewC13|skewC14|skewC15|skewC16|skewC17|skewC18|skewC19|skewC20|skewC21|skewC22|skewC23|skewC24|skewC25|skewC26|skewC27|skewC28|cpAdjD04|cpAdjD03|cpAdjD02|cpAdjD01|cpAdjU01|cpAdjU02|cpAdjU03|cpAdjU04|tradeableStatus|surfaceResult|marketSession|timestamp' \\\n--data-urlencode 'group=tradeableStatus|surfaceResult|marketSession' \\\n--data-urlencode 'where='\n"})})})]}),"\n",(0,r.jsx)(s.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"Python",label:"Python",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'LiveExpirySurface\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,r.jsx)(l.A,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=LiveExpirySurface' \\\n--data-urlencode 'where='\n"})})})]})]})}function x(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},19365:(e,s,t)=>{t.d(s,{A:()=>l});t(96540);var r=t(34164);const n={tabItem:"tabItem_Ymn6"};var a=t(74848);function l(e){let{children:s,hidden:t,className:l}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,r.A)(n.tabItem,l),hidden:t,children:s})}},11470:(e,s,t)=>{t.d(s,{A:()=>y});var r=t(96540),n=t(34164),a=t(23104),l=t(56347),d=t(205),i=t(57485),c=t(31682),o=t(70679);function h(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:s}=e;return!!s&&"object"==typeof s&&"value"in s}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:s,children:t}=e;return(0,r.useMemo)((()=>{const e=s??function(e){return h(e).map((e=>{let{props:{value:s,label:t,attributes:r,default:n}}=e;return{value:s,label:t,attributes:r,default:n}}))}(t);return function(e){const s=(0,c.X)(e,((e,s)=>e.value===s.value));if(s.length>0)throw new Error(`Docusaurus error: Duplicate values "${s.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[s,t])}function x(e){let{value:s,tabValues:t}=e;return t.some((e=>e.value===s))}function j(e){let{queryString:s=!1,groupId:t}=e;const n=(0,l.W6)(),a=function(e){let{queryString:s=!1,groupId:t}=e;if("string"==typeof s)return s;if(!1===s)return null;if(!0===s&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:s,groupId:t});return[(0,i.aZ)(a),(0,r.useCallback)((e=>{if(!a)return;const s=new URLSearchParams(n.location.search);s.set(a,e),n.replace({...n.location,search:s.toString()})}),[a,n])]}function p(e){const{defaultValue:s,queryString:t=!1,groupId:n}=e,a=u(e),[l,i]=(0,r.useState)((()=>function(e){let{defaultValue:s,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(s){if(!x({value:s,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${s}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return s}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:s,tabValues:a}))),[c,h]=j({queryString:t,groupId:n}),[p,w]=function(e){let{groupId:s}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(s),[n,a]=(0,o.Dv)(t);return[n,(0,r.useCallback)((e=>{t&&a.set(e)}),[t,a])]}({groupId:n}),m=(()=>{const e=c??p;return x({value:e,tabValues:a})?e:null})();(0,d.A)((()=>{m&&i(m)}),[m]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!x({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);i(e),h(e),w(e)}),[h,w,a]),tabValues:a}}var w=t(92303);const m={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var k=t(74848);function f(e){let{className:s,block:t,selectedValue:r,selectValue:l,tabValues:d}=e;const i=[],{blockElementScrollPositionUntilNextRender:c}=(0,a.a_)(),o=e=>{const s=e.currentTarget,t=i.indexOf(s),n=d[t].value;n!==r&&(c(s),l(n))},h=e=>{let s=null;switch(e.key){case"Enter":o(e);break;case"ArrowRight":{const t=i.indexOf(e.currentTarget)+1;s=i[t]??i[0];break}case"ArrowLeft":{const t=i.indexOf(e.currentTarget)-1;s=i[t]??i[i.length-1];break}}s?.focus()};return(0,k.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.A)("tabs",{"tabs--block":t},s),children:d.map((e=>{let{value:s,label:t,attributes:a}=e;return(0,k.jsx)("li",{role:"tab",tabIndex:r===s?0:-1,"aria-selected":r===s,ref:e=>i.push(e),onKeyDown:h,onClick:o,...a,className:(0,n.A)("tabs__item",m.tabItem,a?.className,{"tabs__item--active":r===s}),children:t??s},s)}))})}function C(e){let{lazy:s,children:t,selectedValue:n}=e;const a=(Array.isArray(t)?t:[t]).filter(Boolean);if(s){const e=a.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,k.jsx)("div",{className:"margin-top--md",children:a.map(((e,s)=>(0,r.cloneElement)(e,{key:s,hidden:e.props.value!==n})))})}function g(e){const s=p(e);return(0,k.jsxs)("div",{className:(0,n.A)("tabs-container",m.tabList),children:[(0,k.jsx)(f,{...s,...e}),(0,k.jsx)(C,{...s,...e})]})}function y(e){const s=(0,w.A)();return(0,k.jsx)(g,{...e,children:h(e.children)},String(s))}},28453:(e,s,t)=>{t.d(s,{R:()=>l,x:()=>d});var r=t(96540);const n={},a=r.createContext(n);function l(e){const s=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),r.createElement(a.Provider,{value:s},e.children)}}}]);