"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([["91929"],{80798:function(e,t,r){r.r(t),r.d(t,{default:()=>h,frontMatter:()=>s,metadata:()=>n,assets:()=>c,toc:()=>a,contentTitle:()=>i});var n=JSON.parse('{"id":"MessageSchemas/Schema/SRSE Products/SRTrade/SRMLegBrkrState/SRMLegBrkrState","title":"SRMLegBrkrState","description":"V8 Message Definiton","source":"@site/docs/MessageSchemas/Schema/SRSE Products/SRTrade/SRMLegBrkrState/SRMLegBrkrState.md","sourceDirName":"MessageSchemas/Schema/SRSE Products/SRTrade/SRMLegBrkrState","slug":"/MessageSchemas/Schema/SRSE Products/SRTrade/SRMLegBrkrState/","permalink":"/docs/next/MessageSchemas/Schema/SRSE Products/SRTrade/SRMLegBrkrState/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"messageSchemasSidebar","previous":{"title":"SRMLegBrkrEvent","permalink":"/docs/next/MessageSchemas/Schema/SRSE Products/SRTrade/SRMLegBrkrEvent/"},"next":{"title":"SROmniOrder","permalink":"/docs/next/MessageSchemas/Schema/SRSE Products/SRTrade/SROmniOrder/"}}'),d=r("52676"),l=r("91503");let s={},i=void 0,c={},a=[{value:"METADATA",id:"metadata",level:3},{value:"Table Definition",id:"table-definition",level:3},{value:"PRIMARY KEY DEFINITION (Unique)",id:"primary-key-definition-unique",level:3},{value:"SECONDARY INDEX (AccntIndex) (Not Unique)",id:"secondary-index-accntindex-not-unique",level:3},{value:"SECONDARY INDEX (ClientFirmIndex) (Not Unique)",id:"secondary-index-clientfirmindex-not-unique",level:3},{value:"SECONDARY INDEX (UserNameIndex) (Not Unique)",id:"secondary-index-usernameindex-not-unique",level:3},{value:"CREATE TABLE EXAMPLE QUERY",id:"create-table-example-query",level:3},{value:"SELECT TABLE EXAMPLE QUERY",id:"select-table-example-query",level:3},{value:"Doc Columns Query",id:"doc-columns-query",level:3}];function x(e){let t={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,l.a)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(t.p,{children:(0,d.jsx)(t.a,{href:"../../../Topics/parent-orders/SpdrMLegBrkrState",children:"V8 Message Definiton"})}),"\n",(0,d.jsx)(t.p,{children:"SpdrMLegBrkrState records are published by execution engines and describe the current state of a broker that is managing a SpiderRock parent order.  These records include a description of the active child orders managed by the broker.  Records are updated whenever a child order changes and also at other times but are not completely live and may not always reflect current market data or limit levels for working orders."}),"\n",(0,d.jsx)(t.h3,{id:"metadata",children:"METADATA"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Attribute"}),(0,d.jsx)(t.th,{children:"Value"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Topic"}),(0,d.jsx)(t.td,{children:"3985-parent-orders"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"MLink Token"}),(0,d.jsx)(t.td,{children:"ClientTrading"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Product"}),(0,d.jsx)(t.td,{children:"SRTrade"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"accessType"}),(0,d.jsx)(t.td,{children:"SELECT"})]})]})]}),"\n",(0,d.jsx)(t.h3,{id:"table-definition",children:"Table Definition"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Field"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Key"}),(0,d.jsx)(t.th,{children:"Default Value"}),(0,d.jsx)(t.th,{children:"Comment"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"ticker_at"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,d.jsx)(t.td,{children:"PRI"}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"ticker_ts"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,d.jsx)(t.td,{children:"PRI"}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"ticker_tk"}),(0,d.jsx)(t.td,{children:"VARCHAR(12)"}),(0,d.jsx)(t.td,{children:"PRI"}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"accnt"}),(0,d.jsx)(t.td,{children:"VARCHAR(16)"}),(0,d.jsx)(t.td,{children:"PRI, SEC"}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"spdrSource"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrSource",children:"enum - SpdrSource"})}),(0,d.jsx)(t.td,{children:"PRI"}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"groupingCode"}),(0,d.jsx)(t.td,{children:"CHAR(19)"}),(0,d.jsx)(t.td,{children:"PRI"}),(0,d.jsx)(t.td,{children:"'0000-0000-0000-0000'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"orderSide"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/BuySell",children:"enum - BuySell"})}),(0,d.jsx)(t.td,{children:"PRI"}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"clientFirm"}),(0,d.jsx)(t.td,{children:"VARCHAR(16)"}),(0,d.jsx)(t.td,{children:"PRI, SEC"}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{children:"SR client firm"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"engineName"}),(0,d.jsx)(t.td,{children:"VARCHAR(32)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{children:"execution engine"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"parentNumber"}),(0,d.jsx)(t.td,{children:"CHAR(19)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'0000-0000-0000-0000'"}),(0,d.jsx)(t.td,{children:"SPDR parent number most recentcurrently active"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"baseParentNumber"}),(0,d.jsx)(t.td,{children:"CHAR(19)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'0000-0000-0000-0000'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"modifyNumber"}),(0,d.jsx)(t.td,{children:"CHAR(19)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'0000-0000-0000-0000'"}),(0,d.jsx)(t.td,{children:"most recent parent number affecting this order Modify"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"altOrderId"}),(0,d.jsx)(t.td,{children:"VARCHAR(24)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{children:"alternate order ID usually clOrdId from client"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"packageId"}),(0,d.jsx)(t.td,{children:"BIGINT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"groups related orderbrokers together eg Legger wMLeg Parent"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"altAccnt"}),(0,d.jsx)(t.td,{children:"VARCHAR(32)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{children:"alternate client assigned long account string optional"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"altUserName"}),(0,d.jsx)(t.td,{children:"VARCHAR(24)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{children:"alternate client assigned user name optional"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"stageType"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrStageType",children:"enum - SpdrStageType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"parent is a staged order ToolVisible"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"startType"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/StartType",children:"enum - StartType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"isFlagged"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum - YesNo"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"broker state records is flagged for action user alert only"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"noticeNumber"}),(0,d.jsx)(t.td,{children:"CHAR(19)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'0000-0000-0000-0000'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"execBrkrCode"}),(0,d.jsx)(t.td,{children:"VARCHAR(16)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{children:"execBrkrCode attached to parent order if any"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"spreadClass"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpreadClass",children:"enum - SpreadClass"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"spreadFlavor"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpreadFlavor",children:"enum - SpreadFlavor"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"stockSide"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/BuySell",children:"enum - BuySell"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"ssaleFlag"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/ShortSaleFlag",children:"enum - ShortSaleFlag"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"locateQuan"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"available locate quantity if selling short  child order send time"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"locateFirm"}),(0,d.jsx)(t.td,{children:"VARCHAR(6)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{children:"firm granting the locate also locate firm used on street FIX orders"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"locatePool"}),(0,d.jsx)(t.td,{children:"VARCHAR(16)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{children:"locate pool  firm granting the locate"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"stockShares"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"number of shares included zero if none"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"stockLegId"}),(0,d.jsx)(t.td,{children:"BIGINT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"stockFillQuan"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"stockAvgFillPrice"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"refUPrc"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"reference underlier price PrcDe orders"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"liveUPrc"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"uPriceFormat"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/PriceFormat",children:"enum - PriceFormat"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"underlier price format code"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"stockCpx"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"child best price"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"stockCsz"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"child cumulative share represented at best price"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"stockCex"}),(0,d.jsx)(t.td,{children:"BIGINT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"child bit mask of all exchanges where we are representing this order"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"numLegs"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"number of valid legs below"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey1_at"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"leg 1"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey1_ts"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"leg 1"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey1_tk"}),(0,d.jsx)(t.td,{children:"VARCHAR(12)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{children:"leg 1"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey1_yr"}),(0,d.jsx)(t.td,{children:"SMALLINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"leg 1"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey1_mn"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"leg 1"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey1_dy"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"leg 1"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey1_xx"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"leg 1"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey1_cp"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/CallPut",children:"enum - CallPut"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'Call'"}),(0,d.jsx)(t.td,{children:"leg 1"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secType1"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrKeyType",children:"enum - SpdrKeyType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"ratio1"}),(0,d.jsx)(t.td,{children:"SMALLINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"side1"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/BuySell",children:"enum - BuySell"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"positionType1"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/PositionType",children:"enum - PositionType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legId1"}),(0,d.jsx)(t.td,{children:"BIGINT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"fillQuan1"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"avgFillPrice1"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"vega1"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"refUPrc1"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"reference underlier price PrcDe orders"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"refDelta1"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"reference delta for PrcDe order handling"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"refEarnCnt1"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"reference  of earnings moves before expiration"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"liveUPrc1"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"priceFormat1"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/PriceFormat",children:"enum - PriceFormat"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"option price format code"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCpx1"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"child best price"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCsz1"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"child cumulative share represented at best price"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCex1"}),(0,d.jsx)(t.td,{children:"BIGINT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"child bit mask of all exchanges where we are representing this order"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplAvgPrice1"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"average leg completion price"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey1_at"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey1_ts"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey1_tk"}),(0,d.jsx)(t.td,{children:"VARCHAR(12)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey1_yr"}),(0,d.jsx)(t.td,{children:"SMALLINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey1_mn"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey1_dy"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey1_xx"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey1_cp"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/CallPut",children:"enum - CallPut"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'Call'"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecType1"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrKeyType",children:"enum - SpdrKeyType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"usually Future or Option None if not yet valid"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey2_at"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"leg 2"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey2_ts"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"leg 2"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey2_tk"}),(0,d.jsx)(t.td,{children:"VARCHAR(12)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{children:"leg 2"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey2_yr"}),(0,d.jsx)(t.td,{children:"SMALLINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"leg 2"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey2_mn"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"leg 2"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey2_dy"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"leg 2"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey2_xx"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"leg 2"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey2_cp"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/CallPut",children:"enum - CallPut"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'Call'"}),(0,d.jsx)(t.td,{children:"leg 2"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secType2"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrKeyType",children:"enum - SpdrKeyType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"ratio2"}),(0,d.jsx)(t.td,{children:"SMALLINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"side2"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/BuySell",children:"enum - BuySell"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"positionType2"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/PositionType",children:"enum - PositionType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legId2"}),(0,d.jsx)(t.td,{children:"BIGINT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"fillQuan2"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"avgFillPrice2"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"vega2"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"refUPrc2"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"reference underlier price PrcDe orders"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"refDelta2"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"reference delta for PrcDe order handling"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"refEarnCnt2"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"reference  of earnings moves before expiration"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"liveUPrc2"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"priceFormat2"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/PriceFormat",children:"enum - PriceFormat"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"option price format code"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCpx2"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"child best price"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCsz2"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"child cumulative share represented at best price"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCex2"}),(0,d.jsx)(t.td,{children:"BIGINT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"child bit mask of all exchanges where we are representing this order"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplAvgPrice2"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"average leg completion price"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey2_at"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey2_ts"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey2_tk"}),(0,d.jsx)(t.td,{children:"VARCHAR(12)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey2_yr"}),(0,d.jsx)(t.td,{children:"SMALLINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey2_mn"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey2_dy"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey2_xx"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey2_cp"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/CallPut",children:"enum - CallPut"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'Call'"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecType2"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrKeyType",children:"enum - SpdrKeyType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"usually Future or Option None if not yet valid"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey3_at"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"leg 3"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey3_ts"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"leg 3"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey3_tk"}),(0,d.jsx)(t.td,{children:"VARCHAR(12)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{children:"leg 3"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey3_yr"}),(0,d.jsx)(t.td,{children:"SMALLINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"leg 3"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey3_mn"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"leg 3"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey3_dy"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"leg 3"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey3_xx"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"leg 3"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey3_cp"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/CallPut",children:"enum - CallPut"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'Call'"}),(0,d.jsx)(t.td,{children:"leg 3"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secType3"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrKeyType",children:"enum - SpdrKeyType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"ratio3"}),(0,d.jsx)(t.td,{children:"SMALLINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"side3"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/BuySell",children:"enum - BuySell"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"positionType3"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/PositionType",children:"enum - PositionType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legId3"}),(0,d.jsx)(t.td,{children:"BIGINT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"fillQuan3"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"avgFillPrice3"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"vega3"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"refUPrc3"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"reference underlier price PrcDe orders"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"refDelta3"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"reference delta for PrcDe order handling"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"refEarnCnt3"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"reference  of earnings moves before expiration"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"liveUPrc3"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"priceFormat3"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/PriceFormat",children:"enum - PriceFormat"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"option price format code"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCpx3"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"child best price"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCsz3"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"child cumulative share represented at best price"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCex3"}),(0,d.jsx)(t.td,{children:"BIGINT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"child bit mask of all exchanges where we are representing this order"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplAvgPrice3"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"average leg completion price"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey3_at"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey3_ts"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey3_tk"}),(0,d.jsx)(t.td,{children:"VARCHAR(12)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey3_yr"}),(0,d.jsx)(t.td,{children:"SMALLINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey3_mn"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey3_dy"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey3_xx"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey3_cp"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/CallPut",children:"enum - CallPut"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'Call'"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecType3"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrKeyType",children:"enum - SpdrKeyType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"usually Future or Option None if not yet valid"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey4_at"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"leg 4"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey4_ts"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"leg 4"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey4_tk"}),(0,d.jsx)(t.td,{children:"VARCHAR(12)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{children:"leg 4"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey4_yr"}),(0,d.jsx)(t.td,{children:"SMALLINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"leg 4"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey4_mn"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"leg 4"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey4_dy"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"leg 4"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey4_xx"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"leg 4"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey4_cp"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/CallPut",children:"enum - CallPut"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'Call'"}),(0,d.jsx)(t.td,{children:"leg 4"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secType4"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrKeyType",children:"enum - SpdrKeyType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"ratio4"}),(0,d.jsx)(t.td,{children:"SMALLINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"side4"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/BuySell",children:"enum - BuySell"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"positionType4"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/PositionType",children:"enum - PositionType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legId4"}),(0,d.jsx)(t.td,{children:"BIGINT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"fillQuan4"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"avgFillPrice4"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"vega4"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"refUPrc4"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"reference underlier price PrcDe orders"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"refDelta4"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"reference delta for PrcDe order handling"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"refEarnCnt4"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"reference  of earnings moves before expiration"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"liveUPrc4"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"priceFormat4"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/PriceFormat",children:"enum - PriceFormat"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"option price format code"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCpx4"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"child best price"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCsz4"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"child cumulative share represented at best price"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCex4"}),(0,d.jsx)(t.td,{children:"BIGINT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"child bit mask of all exchanges where we are representing this order"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplAvgPrice4"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"average leg completion price"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey4_at"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey4_ts"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey4_tk"}),(0,d.jsx)(t.td,{children:"VARCHAR(12)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey4_yr"}),(0,d.jsx)(t.td,{children:"SMALLINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey4_mn"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey4_dy"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey4_xx"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey4_cp"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/CallPut",children:"enum - CallPut"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'Call'"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecType4"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrKeyType",children:"enum - SpdrKeyType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"usually Future or Option None if not yet valid"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey5_at"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"leg 5"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey5_ts"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"leg 5"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey5_tk"}),(0,d.jsx)(t.td,{children:"VARCHAR(12)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{children:"leg 5"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey5_yr"}),(0,d.jsx)(t.td,{children:"SMALLINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"leg 5"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey5_mn"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"leg 5"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey5_dy"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"leg 5"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey5_xx"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"leg 5"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey5_cp"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/CallPut",children:"enum - CallPut"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'Call'"}),(0,d.jsx)(t.td,{children:"leg 5"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secType5"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrKeyType",children:"enum - SpdrKeyType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"ratio5"}),(0,d.jsx)(t.td,{children:"SMALLINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"side5"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/BuySell",children:"enum - BuySell"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"positionType5"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/PositionType",children:"enum - PositionType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legId5"}),(0,d.jsx)(t.td,{children:"BIGINT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"fillQuan5"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"avgFillPrice5"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"vega5"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"refUPrc5"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"reference underlier price PrcDe orders"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"refDelta5"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"reference delta for PrcDe order handling"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"refEarnCnt5"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"reference  of earnings moves before expiration"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"liveUPrc5"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"priceFormat5"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/PriceFormat",children:"enum - PriceFormat"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"option price format code"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCpx5"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"child best price"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCsz5"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"child cumulative share represented at best price"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCex5"}),(0,d.jsx)(t.td,{children:"BIGINT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"child bit mask of all exchanges where we are representing this order"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplAvgPrice5"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"average leg completion price"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey5_at"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey5_ts"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey5_tk"}),(0,d.jsx)(t.td,{children:"VARCHAR(12)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey5_yr"}),(0,d.jsx)(t.td,{children:"SMALLINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey5_mn"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey5_dy"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey5_xx"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey5_cp"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/CallPut",children:"enum - CallPut"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'Call'"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecType5"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrKeyType",children:"enum - SpdrKeyType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"usually Future or Option None if not yet valid"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey6_at"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"leg 6"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey6_ts"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"leg 6"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey6_tk"}),(0,d.jsx)(t.td,{children:"VARCHAR(12)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{children:"leg 6"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey6_yr"}),(0,d.jsx)(t.td,{children:"SMALLINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"leg 6"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey6_mn"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"leg 6"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey6_dy"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"leg 6"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey6_xx"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"leg 6"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secKey6_cp"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/CallPut",children:"enum - CallPut"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'Call'"}),(0,d.jsx)(t.td,{children:"leg 6"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"secType6"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrKeyType",children:"enum - SpdrKeyType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"ratio6"}),(0,d.jsx)(t.td,{children:"SMALLINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"side6"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/BuySell",children:"enum - BuySell"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"positionType6"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/PositionType",children:"enum - PositionType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legId6"}),(0,d.jsx)(t.td,{children:"BIGINT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"fillQuan6"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"avgFillPrice6"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"vega6"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"refUPrc6"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"reference underlier price PrcDe orders"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"refDelta6"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"reference delta for PrcDe order handling"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"refEarnCnt6"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"reference  of earnings moves before expiration"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"liveUPrc6"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"priceFormat6"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/PriceFormat",children:"enum - PriceFormat"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"option price format code"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCpx6"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"child best price"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCsz6"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"child cumulative share represented at best price"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCex6"}),(0,d.jsx)(t.td,{children:"BIGINT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"child bit mask of all exchanges where we are representing this order"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplAvgPrice6"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"average leg completion price"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey6_at"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey6_ts"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey6_tk"}),(0,d.jsx)(t.td,{children:"VARCHAR(12)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey6_yr"}),(0,d.jsx)(t.td,{children:"SMALLINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey6_mn"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey6_dy"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey6_xx"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecKey6_cp"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/CallPut",children:"enum - CallPut"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'Call'"}),(0,d.jsx)(t.td,{children:"final settlement secKey contract that DAC TAS TACO etc will convert to might not be valid until completed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"legCmplSecType6"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrKeyType",children:"enum - SpdrKeyType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"usually Future or Option None if not yet valid"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"mlegVega"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"net vega per spread"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"mlegWtVega"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"net wt vega per spread"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"mlegDelta"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"net delta per spread"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"mlegGamma"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"net gamma per spread"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"mlegTheta"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"net theta per spread"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"description"}),(0,d.jsx)(t.td,{children:"VARCHAR(24)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{children:"user defined"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"orderSize"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"order size of most recent parent order"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"orderActiveSize"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"total activated size total size released for execution 2  all available size"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"leavesQuantity"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"current child order leaves quantity quantity actively working in the marketall child orders"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"spdrOrderStatus"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrOrderStatus",children:"enum - SpdrOrderStatus"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'PendNew'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"spdrCloseReason"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrCloseReason",children:"enum - SpdrCloseReason"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"spdrRejectReason"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrRejectReason",children:"enum - SpdrRejectReason"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"spdrCloseDetailTxt"}),(0,d.jsx)(t.td,{children:"TINYTEXT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"activeHoldState"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/ActiveHoldState",children:"enum - ActiveHoldState"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"activeHoldReason"}),(0,d.jsx)(t.td,{children:"TINYTEXT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"openLegs"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"cumSquareQty"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"cumulative spread quantity filled all legs received"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"avgSquarePrc"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"cumPartialQty"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"cumulative spread quantity partially filled at least one leg received expected cumFilledQty if all legs square up"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"completionType"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/CompletionType",children:"enum - CompletionType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"None DAC POC TAS TACO BTIC"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"completionState"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/CompletionState",children:"enum - CompletionState"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"None Pending Complete"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"avgSquareCmplPrice"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"completion trade price final trade price also avg completion price"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"fillVega"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"net vega filled"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"fillWtVega"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"net wt vega filled"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"fillDelta"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"net delta filled"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"fillDDelta"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"net delta filled"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"fillGamma"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"net gamma filled"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"fillTheta"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"net theta filled"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"lastFillDttm"}),(0,d.jsx)(t.td,{children:"DATETIME(6)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'1900-01-01 00:00:00.000000'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"riskLimitSize"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"risk limit size"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"riskLimitDesc"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrRisk",children:"enum - SpdrRisk"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"reason for size reduction"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"riskLimitLevel"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrRiskLevel",children:"enum - SpdrRiskLevel"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"risk limit level responsible for reduction"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"maxProgress"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/MaxProgress",children:"enum - MaxProgress"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"maximum point of progress for most recent parent order"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"maxProgressDetail"}),(0,d.jsx)(t.td,{children:"VARCHAR(48)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{children:"additional detail on point of maximum progress"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"maxProgressTime"}),(0,d.jsx)(t.td,{children:"DATETIME(6)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'1900-01-01 00:00:00.000000'"}),(0,d.jsx)(t.td,{children:"time of last max progress advance"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"algoState"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/AlgoState",children:"enum - AlgoState"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"enum current state of order handler maker"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"algoCounter"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"number of times order checked by algo handler note most checks result in no action"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"makeState"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/AlgoState",children:"enum - AlgoState"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"enum current state of make handler maker"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"makeCounter"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"number of times order checked by make algo handler note most checks result in no action"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"mktRespState"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/MktRespState",children:"enum - MktRespState"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"enum current state of response handler if any"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"mktRespCounter"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"number of times order checked by market response handler note most checks result in no action"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"brokerState"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/BrokerState",children:"enum - BrokerState"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"broker monitor state"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"brokerCounter"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"number of times order checked by broker monitor note most checks result in no action"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"spdrMktState"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrMarketState",children:"enum - SpdrMarketState"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"enum market state"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"spdrBrokerStatus"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrBrokerStatus",children:"enum - SpdrBrokerStatus"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"progressRuleDetail"}),(0,d.jsx)(t.td,{children:"TINYTEXT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{children:"TwapVwap progress detail"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"lastChildRejectDttm"}),(0,d.jsx)(t.td,{children:"DATETIME(6)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'1900-01-01 00:00:00.000000'"}),(0,d.jsx)(t.td,{children:"last child order reject dttm if any"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"lastChildRejectText"}),(0,d.jsx)(t.td,{children:"TINYTEXT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{children:"last child order reject reasontext if any"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"riskGroupId"}),(0,d.jsx)(t.td,{children:"CHAR(19)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'0000-0000-0000-0000'"}),(0,d.jsx)(t.td,{children:"autohedge risk group"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"triggerGroupId"}),(0,d.jsx)(t.td,{children:"BIGINT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"WaitTrigger group Id"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"hedgeGroupingCode"}),(0,d.jsx)(t.td,{children:"BIGINT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"autohedge risk group"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"autoHedge"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/AutoHedge",children:"enum - AutoHedge"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"hedgeInstrument"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/HedgeInst",children:"enum - HedgeInst"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"autohedge instrument from parent order"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"hedgeSecKey_at"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"autohedge sec key if any"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"hedgeSecKey_ts"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"autohedge sec key if any"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"hedgeSecKey_tk"}),(0,d.jsx)(t.td,{children:"VARCHAR(12)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{children:"autohedge sec key if any"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"hedgeSecKey_yr"}),(0,d.jsx)(t.td,{children:"SMALLINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"autohedge sec key if any"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"hedgeSecKey_mn"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"autohedge sec key if any"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"hedgeSecKey_dy"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"autohedge sec key if any"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"hedgeSecType"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrKeyType",children:"enum - SpdrKeyType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"autohedge sec type Stock or Future"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"hedgeBetaRatio"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"autohedge ratio from parent order if supplied or computed by SR"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"hedgeScope"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/HedgeScope",children:"enum - HedgeScope"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"hedge group scope RiskGroup or Accnt"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"externHedgeExDest"}),(0,d.jsx)(t.td,{children:"VARCHAR(16)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{children:"external broker exDest only used if orderHandlingExtern			 Should match FixRoutingTabledestination type eg Nighthawk"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"externHedgeParams"}),(0,d.jsx)(t.td,{children:"TINYTEXT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{children:"external algo namesparameters usually just an algo name			 usually copied from the FixRoutingTableexternParams"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"hedgeFillUMarkLmtPrc"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum - YesNo"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"set a price limit on the autohedge order based on the most recent option fillUMark"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"bestWayPrc"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"current leg market nbbo at time of record publish"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"wrstWayPrc"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"current leg market nbbo ask at time of record publish"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"bestWaySz"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"current leg market nbbo cum bid size at time of record publish"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"wrstWaySz"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"current leg market nbbo cum ask size at time of record publish"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"surfacePrc"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"SR spread surface price  record publish"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"surfaceVol"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"surfaceUPrc"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"limitPrice"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"spread limit price"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"limitRefUPrc"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"limitErr"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/LimitError",children:"enum - LimitError"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"limit price error code"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"makeLimitPrice"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"takeLimitPrice"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"cxlUPrcRange"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/UPrcCxl",children:"enum - UPrcCxl"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"cancel spdr order ifwhen outside stock price range"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"minUBid"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"Used in conjunction with minMaxType  maxUAsk When set implements a lower bound on the underlying price and will either suspend or cancel an order when violated"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"maxUAsk"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"Used in conjunction with minMaxType  minUBid When set implements an upper bound on the underlying price and will either suspend or cancel an order when violated"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"minMaxType"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/MinMaxType",children:"enum - MinMaxType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"if Prc minUBidmaxUAsk are expressed as prices if Pct then they are expresses as pct change since parent order arrival"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"leadSide"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/BuySell",children:"enum - BuySell"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"for legged orders which side to lead with  optional None ok"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"maxCompletionSlippage"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"maximum price slippage to complete an open basket or a cross auction face side slippage"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"orderRefPremium"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"reference premium mleg orders only"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"strategy"}),(0,d.jsx)(t.td,{children:"VARCHAR(36)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{children:"parent order strategy description only"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"userName"}),(0,d.jsx)(t.td,{children:"VARCHAR(24)"}),(0,d.jsx)(t.td,{children:"SEC"}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{children:"user that entered the most recent parent order"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"visibleInSV"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum - YesNo"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"allow order to be visible in SV do not use for high volume of orders"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"spdrComment"}),(0,d.jsx)(t.td,{children:"TINYTEXT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"takeReachRule"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/ReachRule",children:"enum - ReachRule"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"Immediate  reach room immediately available Delayed  available after 13 seconds Passive  available if contra side aggresses WeakOnly  only take if available size  avgMarketSize ISOSweep  Intermarket Sweep requires WaitTrigger"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"maxExposureSize"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"maximum simultaneous cumulative child order public size exposure 2  orderActiveSize order can overfill if  orderActiveSize and numMakeExchanges  2"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"numMakeExchanges"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"number of exchanges 2  4 on which to publish public making orders  Effective number might be less than requested number if sufficient exchanges are not available"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"publicSize"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/PublicSizeHandling",children:"enum - PublicSizeHandling"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"public order size handling"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"progressRule"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/ProgressRule",children:"enum - ProgressRule"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"Immediate  all size immediately availableTWAP  size released in time intervalsVWAP  size released in volume intervals"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"progressSliceCnt"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"number of progress slices to use default  4 or 8 max 20"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"progressExposeTime"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"minimum time secs to expose order 0  no minimum used to guarantee that the order is exposed at midmarket for some time before actively taking"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"maxChildOrders"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"maximum number of child orders that can be generated by this parent order order will terminate ifwhen this cap is reachedzero or neg  unlimited"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"exchMask"}),(0,d.jsx)(t.td,{children:"BIGINT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"eligible exchanges 0  all"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"marketSession"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/MarketSession",children:"enum - MarketSession"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"startDttm"}),(0,d.jsx)(t.td,{children:"DATETIME(6)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'1900-01-01 00:00:00.000000'"}),(0,d.jsx)(t.td,{children:"Order Start DateTime"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"orderDuration"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"optional number of seconds"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"activeDuration"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"optional number of seconds"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"goodTillDttm"}),(0,d.jsx)(t.td,{children:"DATETIME(6)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'1900-01-01 00:00:00.000000'"}),(0,d.jsx)(t.td,{children:"optional default 20990202"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"expireDttm"}),(0,d.jsx)(t.td,{children:"DATETIME(6)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'1900-01-01 00:00:00.000000'"}),(0,d.jsx)(t.td,{children:"expected order expiration dttm"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"parentOrderHandling"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/ParentOrderHandling",children:"enum - ParentOrderHandling"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"parentBalanceHandling"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/ParentBalanceHandling",children:"enum - ParentBalanceHandling"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"atsVisibility"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/AtsVisibility",children:"enum - AtsVisibility"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"orderLimitType"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrLimitType",children:"enum - SpdrLimitType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"orderVolLimit"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"Applies if LimitType  Vol"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"orderPrcLimit"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"Applies if LimitType  Prc"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"orderRefUPrc"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"reference uPrc PrcDe orders"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"orderRefDe"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"reference delta PrcDe orders"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"orderRefGa"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"reference gamma PrcDe orders"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"orderPrcOffset"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"default0"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"takeLimitClass"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrLimitClass",children:"enum - SpdrLimitClass"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'Simple'"}),(0,d.jsx)(t.td,{children:"Simple  LimitPrice Surface  BESTLimitPrice SurfLimit Probability  BESTLimitPrice ProbLimit"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"takeAlphaType"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/AlphaType",children:"enum - AlphaType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"Applies if limitClass  Probability"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"takeAlphaFactor"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"22 ProbLimit  MAXalphaProbability ProbAvg  AlphaFactor  ProbStd if AlphaType  Relative"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"takeAlphaProbability"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"ProbLimit  alphaProbability if AlphaType  Static"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"takeSurfPrcOffset"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"default0"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"takeSurfVolOffset"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"default0"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"takeSurfWidOffset"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"default0"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"makeLimitClass"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrLimitClass",children:"enum - SpdrLimitClass"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'Simple'"}),(0,d.jsx)(t.td,{children:"Simple  LimitPrice Surface  BESTLimitPrice SurfLimit Probability  BESTLimitPrice ProbLimit"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"makeAlphaType"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/AlphaType",children:"enum - AlphaType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{children:"Applies if limitClass  Probability"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"makeAlphaFactor"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"22 ProbLimit  MAXalphaProbability ProbAvg  AlphaFactor  ProbStd if AlphaType  Relative"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"makeAlphaProbability"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"ProbLimit  alphaProbability if AlphaType  Static"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"makeSurfPrcOffset"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"default0"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"makeSurfVolOffset"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"default0"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"makeSurfWidOffset"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"default0"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"orderRefEventMult"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"orderRefEventDttm"}),(0,d.jsx)(t.td,{children:"DATETIME(6)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'1900-01-01 00:00:00.000000'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"mlegProbLimit"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"live prob limit"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"mlegSurfOffset"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"live surface offset in premium"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"externExDest"}),(0,d.jsx)(t.td,{children:"VARCHAR(16)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"orderDttm"}),(0,d.jsx)(t.td,{children:"DATETIME(6)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'1900-01-01 00:00:00.000000'"}),(0,d.jsx)(t.td,{children:"order entry datetime"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"minSurfVol"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"minimum SR spread surface vol vega weighted while parent order was working"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"maxSurfVol"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"maximum SR spread surface vol vega weighted while parent order was working"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"minSurfPrc"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"minimum SR spread surface price while parent order was working"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"maxSurfPrc"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"maximum SR spread surface price while parent order was working"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"minSurfUPrc"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"minimum SR spread surface uPrc while parent order was working"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"maxSurfUPrc"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"maximum SR spread surface uPrc while parent order was working"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"minQteWidth"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"minimum quote width during active order window"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"avgQteWidth"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"average quote width during active order window"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"cntQteWidth"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"arriveBid"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"arriveAsk"}),(0,d.jsx)(t.td,{children:"DOUBLE"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"totalSeconds"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"number of seconds that the parent order was active"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"workingSeconds"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"number of seconds with one or more working child orders in an exchange order book"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"prtActiveCnt"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"total print events while parent order was active"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"prtQtyActive"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"total quantity printed while parent order was active"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"cumExchFee"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"cumulative fill exch fee"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"cumM10Pnl"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"cumArrivalPnl"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"uPrcDrift"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"underlier drift since parent order start"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"sVolDrift"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"surface vol drift since parent order start"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"maxGrpDayDDeltaLn"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"-1"}),(0,d.jsx)(t.td,{children:"max acctriskGroup day delta long positive number1no limitrisk limit  max limit  current net counter"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"maxGrpDayDDeltaSh"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"-1"}),(0,d.jsx)(t.td,{children:"max acctriskGroup day delta short positive number1no limitrisk limit  max limit  current net counter"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"maxGrpDayContractsLn"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"-1"}),(0,d.jsx)(t.td,{children:"max acctriskGroup day opt contracts long positive number1no limitrisk limit  max limit  current net counter"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"maxGrpDayContractsSh"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"-1"}),(0,d.jsx)(t.td,{children:"max acctriskGroup day opt contracts short positive number1no limitrisk limit  max limit  current net counter"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"maxGrpDayContractsAbs"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"-1"}),(0,d.jsx)(t.td,{children:"max acctriskGroup day opt contracts abs positive number1no limitrisk limit  max limit  abscurrent net counter"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"maxGrpDayVegaLn"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"-1"}),(0,d.jsx)(t.td,{children:"max acctriskGroup day vega long positive number1no limitrisk limit  max limit  current net counter"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"maxGrpDayVegaSh"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"-1"}),(0,d.jsx)(t.td,{children:"max acctriskGroup day vega short positive number1no limitrisk limit  max limit  current net counter"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"maxGrpDayVegaAbs"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"-1"}),(0,d.jsx)(t.td,{children:"max acctriskGroup day vega abs positive number1no limitrisk limit  max limit  abscurrent net counter"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"grpDayVegaRatio"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"1.0"}),(0,d.jsx)(t.td,{children:"target bot  sld ratio eg ratio20 means that neutral is bot vega  2x sld vega"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"maxGrpDayRMetric1Ln"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"-1"}),(0,d.jsx)(t.td,{children:"max acctriskGroup day rMetric1 long positive number1no limitrisk limit  max limit  current net counter"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"maxGrpDayRMetric1Sh"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"-1"}),(0,d.jsx)(t.td,{children:"max acctriskGroup day rMetric1 short positive number1no limitrisk limit  max limit  current net counter"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"maxGrpDayRMetric1Abs"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"-1"}),(0,d.jsx)(t.td,{children:"max acctriskGroup day rMetric1 abs positive number1no limitrisk limit  max limit  abscurrent net counter"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"grpDayRMetric1Ratio"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"1.0"}),(0,d.jsx)(t.td,{children:"target bot  sld ratio eg ratio05 means that neutral is bot rMetric1  05x sld rMetric1"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"refRMetric1Src"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/RMetricSource",children:"enum - RMetricSource"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'None'"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"orderRefRMetric1"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"user supplied RMetric1 value used in RiskGroupID risk controls netRMetric1  sumfillQty  orderRefRMetric1  underlierPerCn"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"cpx1"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"csz1"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"cumulative size represented at this price"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"cex1"}),(0,d.jsx)(t.td,{children:"BIGINT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"bit mask of all exchanges where we are representing this order"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"cpx2"}),(0,d.jsx)(t.td,{children:"FLOAT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"csz2"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"cumulative size represented at this price"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"cex2"}),(0,d.jsx)(t.td,{children:"BIGINT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"bit mask of all exchanges where we are representing this order"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"cMore"}),(0,d.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"numNewOrders"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"number of new child orders"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"numParentLimits"}),(0,d.jsx)(t.td,{children:"SMALLINT UNSIGNED"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"number of parent limit messages received for this broker"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"userData1"}),(0,d.jsx)(t.td,{children:"TINYTEXT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{children:"user supplied additional detail 255 charsupplied via FIX or SRSE when entering order"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"userData2"}),(0,d.jsx)(t.td,{children:"TINYTEXT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"''"}),(0,d.jsx)(t.td,{children:"user supplied additional detail 255 charsupplied via FIX or SRSE when entering order"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"numUpdates"}),(0,d.jsx)(t.td,{children:"INT"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"number of record updates cumulative for the day"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"timestamp"}),(0,d.jsx)(t.td,{children:"DATETIME(6)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"'1900-01-01 00:00:00.000000'"}),(0,d.jsx)(t.td,{})]})]})]}),"\n",(0,d.jsx)(t.h3,{id:"primary-key-definition-unique",children:"PRIMARY KEY DEFINITION (Unique)"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Field"}),(0,d.jsx)(t.th,{children:"Sequence"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"ticker_tk"}),(0,d.jsx)(t.td,{children:"1"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"ticker_at"}),(0,d.jsx)(t.td,{children:"2"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"ticker_ts"}),(0,d.jsx)(t.td,{children:"3"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"accnt"}),(0,d.jsx)(t.td,{children:"4"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"spdrSource"}),(0,d.jsx)(t.td,{children:"5"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"groupingCode"}),(0,d.jsx)(t.td,{children:"6"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"orderSide"}),(0,d.jsx)(t.td,{children:"7"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"clientFirm"}),(0,d.jsx)(t.td,{children:"8"})]})]})]}),"\n",(0,d.jsx)(t.h3,{id:"secondary-index-accntindex-not-unique",children:"SECONDARY INDEX (AccntIndex) (Not Unique)"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Field"}),(0,d.jsx)(t.th,{children:"Sequence"})]})}),(0,d.jsx)(t.tbody,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"accnt"}),(0,d.jsx)(t.td,{children:"1"})]})})]}),"\n",(0,d.jsx)(t.h3,{id:"secondary-index-clientfirmindex-not-unique",children:"SECONDARY INDEX (ClientFirmIndex) (Not Unique)"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Field"}),(0,d.jsx)(t.th,{children:"Sequence"})]})}),(0,d.jsx)(t.tbody,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"clientFirm"}),(0,d.jsx)(t.td,{children:"1"})]})})]}),"\n",(0,d.jsx)(t.h3,{id:"secondary-index-usernameindex-not-unique",children:"SECONDARY INDEX (UserNameIndex) (Not Unique)"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Field"}),(0,d.jsx)(t.th,{children:"Sequence"})]})}),(0,d.jsx)(t.tbody,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"userName"}),(0,d.jsx)(t.td,{children:"1"})]})})]}),"\n",(0,d.jsx)(t.h3,{id:"create-table-example-query",children:"CREATE TABLE EXAMPLE QUERY"}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-sql",children:"CREATE TABLE `SRTrade`.`MsgSRMLegBrkrState` (\n    `ticker_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None',\n    `ticker_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None',\n    `ticker_tk` VARCHAR(12) NOT NULL DEFAULT '',\n    `accnt` VARCHAR(16) NOT NULL DEFAULT '',\n    `spdrSource` ENUM('None','SpdrTicket','SpdrSingle','SRSE','FIX','HedgeTool','TradeHedge','OpenHedge','AutoHedge','Orphan','RiskManager','OrderManager','ManagedOrder','RFQRespSrvr','Legger','SRSEDrop','FixDrop','TicketDrop','SysTest','RFRResponse','AllocOmni','AllocClient','CertGateway','MLegResponse','LeggerX','DropManager','AutoHedgeSrvr','AuctionStrategySrvr','AllocBlockFace','AllocBlockCust','IceChatGateway','EXS2SRC','MLinkResponse','AutoResponderVD','AutoResponderRC','AutoResponderSN','AutoResponderBX','MLink','SymChatGateway','RiskDrop') NOT NULL DEFAULT 'None',\n    `groupingCode` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000',\n    `orderSide` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'None',\n    `clientFirm` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'SR client firm',\n    `engineName` VARCHAR(32) NOT NULL DEFAULT '' COMMENT 'execution engine',\n    `parentNumber` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'SPDR parent number (most recent/currently active)',\n    `baseParentNumber` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000',\n    `modifyNumber` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'most recent parent number affecting this order (Modify)',\n    `altOrderId` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'alternate order ID (usually clOrdId from client)',\n    `packageId` BIGINT NOT NULL DEFAULT 0 COMMENT 'groups related order/brokers together (eg. Legger w/MLeg Parent)',\n    `altAccnt` VARCHAR(32) NOT NULL DEFAULT '' COMMENT 'alternate (client assigned) \"long\" account string (optional)',\n    `altUserName` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'alternate (client assigned) user name (optional)',\n    `stageType` ENUM('None','ModifyAny','ModifyAlgo') NOT NULL DEFAULT 'None' COMMENT 'parent is a staged order [ToolVisible]',\n    `startType` ENUM('None','WaitTrigger','TriggerAll') NOT NULL DEFAULT 'None',\n    `isFlagged` ENUM('None','Yes','No') NOT NULL DEFAULT 'None' COMMENT 'broker state records is flagged for action (user alert only)',\n    `noticeNumber` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000',\n    `execBrkrCode` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'execBrkrCode attached to parent order (if any)',\n    `spreadClass` ENUM('None','Stk','Fut','Call','Put','Synth','RevCon','Box','JRoll','Roll','Straddle','Strangle','CSpread','PSpread','VStrip','VSpread','HStrip','HSpread','BFly','RiskRev','Mixed','VarSwap','Pair','ExpPair','VolPair') NOT NULL DEFAULT 'None',\n    `spreadFlavor` ENUM('None','Normal','Flipped') NOT NULL DEFAULT 'None',\n    `stockSide` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'None',\n    `ssaleFlag` ENUM('None','Long','Short','Exempt','Auto','Open','Close','Cover','NA') NOT NULL DEFAULT 'None',\n    `locateQuan` INT NOT NULL DEFAULT 0 COMMENT 'available locate quantity (if selling short) @ child order send time',\n    `locateFirm` VARCHAR(6) NOT NULL DEFAULT '' COMMENT 'firm granting the locate (also locate firm used on street FIX orders)',\n    `locatePool` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'locate pool @ firm granting the locate',\n    `stockShares` INT NOT NULL DEFAULT 0 COMMENT 'number of shares included (zero if none)',\n    `stockLegId` BIGINT NOT NULL DEFAULT 0,\n    `stockFillQuan` INT NOT NULL DEFAULT 0,\n    `stockAvgFillPrice` DOUBLE NOT NULL DEFAULT 0,\n    `refUPrc` FLOAT NOT NULL DEFAULT 0 COMMENT 'reference underlier price (PrcDe orders)',\n    `liveUPrc` FLOAT NOT NULL DEFAULT 0,\n    `uPriceFormat` ENUM('None','N0','N1','N2','N3','N4','N5','N6','N7','F4','F8','Q8','F16','F32','H32','Q32','F64','H64','FullPenny','PartPenny','PartNickle','V1','V2','V3','V4','V5','V6','V7','V8','V9','V10','V11','V12','V13','V14','V15','V16','A0','A1','A2','A3','A4','A5','A6','A7','E32','EU2A','EU2B','EU2C','EU2D','EU2E','EU2F','EU3A','EU3B','EU3C','EU3D','EU3E','EU3F','EU3G','EU3H','EU3I','EU3J','EU4A','EU4B','EU4C','EU5A','EU5B','NMS_Penny','NMS_Nickle','NMS_HalfPenny','EQT') NOT NULL DEFAULT 'None' COMMENT 'underlier price format code',\n    `stockCpx` FLOAT NOT NULL DEFAULT 0 COMMENT '[child] best price',\n    `stockCsz` INT NOT NULL DEFAULT 0 COMMENT '[child] cumulative share represented at best price',\n    `stockCex` BIGINT NOT NULL DEFAULT 0 COMMENT '[child] bit mask of all exchanges where we are representing this order',\n    `numLegs` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'number of valid legs below',\n    `secKey1_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'leg #1',\n    `secKey1_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'leg #1',\n    `secKey1_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'leg #1',\n    `secKey1_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'leg #1',\n    `secKey1_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'leg #1',\n    `secKey1_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'leg #1',\n    `secKey1_xx` DOUBLE NOT NULL DEFAULT 0 COMMENT 'leg #1',\n    `secKey1_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call' COMMENT 'leg #1',\n    `secType1` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None',\n    `ratio1` SMALLINT UNSIGNED NOT NULL DEFAULT 0,\n    `side1` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'None',\n    `positionType1` ENUM('None','Opening','Closing','Auto') NOT NULL DEFAULT 'None',\n    `legId1` BIGINT NOT NULL DEFAULT 0,\n    `fillQuan1` INT NOT NULL DEFAULT 0,\n    `avgFillPrice1` DOUBLE NOT NULL DEFAULT 0,\n    `vega1` FLOAT NOT NULL DEFAULT 0,\n    `refUPrc1` DOUBLE NOT NULL DEFAULT 0 COMMENT 'reference underlier price (PrcDe orders)',\n    `refDelta1` FLOAT NOT NULL DEFAULT 0 COMMENT 'reference delta (for PrcDe order handling)',\n    `refEarnCnt1` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'reference # of earnings moves before expiration',\n    `liveUPrc1` DOUBLE NOT NULL DEFAULT 0,\n    `priceFormat1` ENUM('None','N0','N1','N2','N3','N4','N5','N6','N7','F4','F8','Q8','F16','F32','H32','Q32','F64','H64','FullPenny','PartPenny','PartNickle','V1','V2','V3','V4','V5','V6','V7','V8','V9','V10','V11','V12','V13','V14','V15','V16','A0','A1','A2','A3','A4','A5','A6','A7','E32','EU2A','EU2B','EU2C','EU2D','EU2E','EU2F','EU3A','EU3B','EU3C','EU3D','EU3E','EU3F','EU3G','EU3H','EU3I','EU3J','EU4A','EU4B','EU4C','EU5A','EU5B','NMS_Penny','NMS_Nickle','NMS_HalfPenny','EQT') NOT NULL DEFAULT 'None' COMMENT 'option price format code',\n    `legCpx1` FLOAT NOT NULL DEFAULT 0 COMMENT '[child] best price',\n    `legCsz1` INT NOT NULL DEFAULT 0 COMMENT '[child] cumulative share represented at best price',\n    `legCex1` BIGINT NOT NULL DEFAULT 0 COMMENT '[child] bit mask of all exchanges where we are representing this order',\n    `legCmplAvgPrice1` DOUBLE NOT NULL DEFAULT 0 COMMENT 'average leg completion price',\n    `legCmplSecKey1_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey1_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey1_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey1_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey1_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey1_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey1_xx` DOUBLE NOT NULL DEFAULT 0 COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey1_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call' COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecType1` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None' COMMENT 'usually Future or Option (None if not yet valid)',\n    `secKey2_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'leg #2',\n    `secKey2_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'leg #2',\n    `secKey2_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'leg #2',\n    `secKey2_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'leg #2',\n    `secKey2_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'leg #2',\n    `secKey2_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'leg #2',\n    `secKey2_xx` DOUBLE NOT NULL DEFAULT 0 COMMENT 'leg #2',\n    `secKey2_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call' COMMENT 'leg #2',\n    `secType2` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None',\n    `ratio2` SMALLINT UNSIGNED NOT NULL DEFAULT 0,\n    `side2` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'None',\n    `positionType2` ENUM('None','Opening','Closing','Auto') NOT NULL DEFAULT 'None',\n    `legId2` BIGINT NOT NULL DEFAULT 0,\n    `fillQuan2` INT NOT NULL DEFAULT 0,\n    `avgFillPrice2` DOUBLE NOT NULL DEFAULT 0,\n    `vega2` FLOAT NOT NULL DEFAULT 0,\n    `refUPrc2` DOUBLE NOT NULL DEFAULT 0 COMMENT 'reference underlier price (PrcDe orders)',\n    `refDelta2` FLOAT NOT NULL DEFAULT 0 COMMENT 'reference delta (for PrcDe order handling)',\n    `refEarnCnt2` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'reference # of earnings moves before expiration',\n    `liveUPrc2` DOUBLE NOT NULL DEFAULT 0,\n    `priceFormat2` ENUM('None','N0','N1','N2','N3','N4','N5','N6','N7','F4','F8','Q8','F16','F32','H32','Q32','F64','H64','FullPenny','PartPenny','PartNickle','V1','V2','V3','V4','V5','V6','V7','V8','V9','V10','V11','V12','V13','V14','V15','V16','A0','A1','A2','A3','A4','A5','A6','A7','E32','EU2A','EU2B','EU2C','EU2D','EU2E','EU2F','EU3A','EU3B','EU3C','EU3D','EU3E','EU3F','EU3G','EU3H','EU3I','EU3J','EU4A','EU4B','EU4C','EU5A','EU5B','NMS_Penny','NMS_Nickle','NMS_HalfPenny','EQT') NOT NULL DEFAULT 'None' COMMENT 'option price format code',\n    `legCpx2` FLOAT NOT NULL DEFAULT 0 COMMENT '[child] best price',\n    `legCsz2` INT NOT NULL DEFAULT 0 COMMENT '[child] cumulative share represented at best price',\n    `legCex2` BIGINT NOT NULL DEFAULT 0 COMMENT '[child] bit mask of all exchanges where we are representing this order',\n    `legCmplAvgPrice2` DOUBLE NOT NULL DEFAULT 0 COMMENT 'average leg completion price',\n    `legCmplSecKey2_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey2_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey2_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey2_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey2_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey2_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey2_xx` DOUBLE NOT NULL DEFAULT 0 COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey2_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call' COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecType2` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None' COMMENT 'usually Future or Option (None if not yet valid)',\n    `secKey3_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'leg #3',\n    `secKey3_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'leg #3',\n    `secKey3_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'leg #3',\n    `secKey3_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'leg #3',\n    `secKey3_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'leg #3',\n    `secKey3_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'leg #3',\n    `secKey3_xx` DOUBLE NOT NULL DEFAULT 0 COMMENT 'leg #3',\n    `secKey3_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call' COMMENT 'leg #3',\n    `secType3` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None',\n    `ratio3` SMALLINT UNSIGNED NOT NULL DEFAULT 0,\n    `side3` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'None',\n    `positionType3` ENUM('None','Opening','Closing','Auto') NOT NULL DEFAULT 'None',\n    `legId3` BIGINT NOT NULL DEFAULT 0,\n    `fillQuan3` INT NOT NULL DEFAULT 0,\n    `avgFillPrice3` DOUBLE NOT NULL DEFAULT 0,\n    `vega3` FLOAT NOT NULL DEFAULT 0,\n    `refUPrc3` DOUBLE NOT NULL DEFAULT 0 COMMENT 'reference underlier price (PrcDe orders)',\n    `refDelta3` FLOAT NOT NULL DEFAULT 0 COMMENT 'reference delta (for PrcDe order handling)',\n    `refEarnCnt3` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'reference # of earnings moves before expiration',\n    `liveUPrc3` DOUBLE NOT NULL DEFAULT 0,\n    `priceFormat3` ENUM('None','N0','N1','N2','N3','N4','N5','N6','N7','F4','F8','Q8','F16','F32','H32','Q32','F64','H64','FullPenny','PartPenny','PartNickle','V1','V2','V3','V4','V5','V6','V7','V8','V9','V10','V11','V12','V13','V14','V15','V16','A0','A1','A2','A3','A4','A5','A6','A7','E32','EU2A','EU2B','EU2C','EU2D','EU2E','EU2F','EU3A','EU3B','EU3C','EU3D','EU3E','EU3F','EU3G','EU3H','EU3I','EU3J','EU4A','EU4B','EU4C','EU5A','EU5B','NMS_Penny','NMS_Nickle','NMS_HalfPenny','EQT') NOT NULL DEFAULT 'None' COMMENT 'option price format code',\n    `legCpx3` FLOAT NOT NULL DEFAULT 0 COMMENT '[child] best price',\n    `legCsz3` INT NOT NULL DEFAULT 0 COMMENT '[child] cumulative share represented at best price',\n    `legCex3` BIGINT NOT NULL DEFAULT 0 COMMENT '[child] bit mask of all exchanges where we are representing this order',\n    `legCmplAvgPrice3` DOUBLE NOT NULL DEFAULT 0 COMMENT 'average leg completion price',\n    `legCmplSecKey3_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey3_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey3_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey3_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey3_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey3_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey3_xx` DOUBLE NOT NULL DEFAULT 0 COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey3_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call' COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecType3` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None' COMMENT 'usually Future or Option (None if not yet valid)',\n    `secKey4_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'leg #4',\n    `secKey4_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'leg #4',\n    `secKey4_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'leg #4',\n    `secKey4_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'leg #4',\n    `secKey4_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'leg #4',\n    `secKey4_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'leg #4',\n    `secKey4_xx` DOUBLE NOT NULL DEFAULT 0 COMMENT 'leg #4',\n    `secKey4_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call' COMMENT 'leg #4',\n    `secType4` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None',\n    `ratio4` SMALLINT UNSIGNED NOT NULL DEFAULT 0,\n    `side4` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'None',\n    `positionType4` ENUM('None','Opening','Closing','Auto') NOT NULL DEFAULT 'None',\n    `legId4` BIGINT NOT NULL DEFAULT 0,\n    `fillQuan4` INT NOT NULL DEFAULT 0,\n    `avgFillPrice4` DOUBLE NOT NULL DEFAULT 0,\n    `vega4` FLOAT NOT NULL DEFAULT 0,\n    `refUPrc4` DOUBLE NOT NULL DEFAULT 0 COMMENT 'reference underlier price (PrcDe orders)',\n    `refDelta4` FLOAT NOT NULL DEFAULT 0 COMMENT 'reference delta (for PrcDe order handling)',\n    `refEarnCnt4` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'reference # of earnings moves before expiration',\n    `liveUPrc4` DOUBLE NOT NULL DEFAULT 0,\n    `priceFormat4` ENUM('None','N0','N1','N2','N3','N4','N5','N6','N7','F4','F8','Q8','F16','F32','H32','Q32','F64','H64','FullPenny','PartPenny','PartNickle','V1','V2','V3','V4','V5','V6','V7','V8','V9','V10','V11','V12','V13','V14','V15','V16','A0','A1','A2','A3','A4','A5','A6','A7','E32','EU2A','EU2B','EU2C','EU2D','EU2E','EU2F','EU3A','EU3B','EU3C','EU3D','EU3E','EU3F','EU3G','EU3H','EU3I','EU3J','EU4A','EU4B','EU4C','EU5A','EU5B','NMS_Penny','NMS_Nickle','NMS_HalfPenny','EQT') NOT NULL DEFAULT 'None' COMMENT 'option price format code',\n    `legCpx4` FLOAT NOT NULL DEFAULT 0 COMMENT '[child] best price',\n    `legCsz4` INT NOT NULL DEFAULT 0 COMMENT '[child] cumulative share represented at best price',\n    `legCex4` BIGINT NOT NULL DEFAULT 0 COMMENT '[child] bit mask of all exchanges where we are representing this order',\n    `legCmplAvgPrice4` DOUBLE NOT NULL DEFAULT 0 COMMENT 'average leg completion price',\n    `legCmplSecKey4_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey4_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey4_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey4_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey4_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey4_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey4_xx` DOUBLE NOT NULL DEFAULT 0 COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey4_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call' COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecType4` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None' COMMENT 'usually Future or Option (None if not yet valid)',\n    `secKey5_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'leg #5',\n    `secKey5_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'leg #5',\n    `secKey5_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'leg #5',\n    `secKey5_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'leg #5',\n    `secKey5_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'leg #5',\n    `secKey5_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'leg #5',\n    `secKey5_xx` DOUBLE NOT NULL DEFAULT 0 COMMENT 'leg #5',\n    `secKey5_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call' COMMENT 'leg #5',\n    `secType5` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None',\n    `ratio5` SMALLINT UNSIGNED NOT NULL DEFAULT 0,\n    `side5` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'None',\n    `positionType5` ENUM('None','Opening','Closing','Auto') NOT NULL DEFAULT 'None',\n    `legId5` BIGINT NOT NULL DEFAULT 0,\n    `fillQuan5` INT NOT NULL DEFAULT 0,\n    `avgFillPrice5` DOUBLE NOT NULL DEFAULT 0,\n    `vega5` FLOAT NOT NULL DEFAULT 0,\n    `refUPrc5` DOUBLE NOT NULL DEFAULT 0 COMMENT 'reference underlier price (PrcDe orders)',\n    `refDelta5` FLOAT NOT NULL DEFAULT 0 COMMENT 'reference delta (for PrcDe order handling)',\n    `refEarnCnt5` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'reference # of earnings moves before expiration',\n    `liveUPrc5` DOUBLE NOT NULL DEFAULT 0,\n    `priceFormat5` ENUM('None','N0','N1','N2','N3','N4','N5','N6','N7','F4','F8','Q8','F16','F32','H32','Q32','F64','H64','FullPenny','PartPenny','PartNickle','V1','V2','V3','V4','V5','V6','V7','V8','V9','V10','V11','V12','V13','V14','V15','V16','A0','A1','A2','A3','A4','A5','A6','A7','E32','EU2A','EU2B','EU2C','EU2D','EU2E','EU2F','EU3A','EU3B','EU3C','EU3D','EU3E','EU3F','EU3G','EU3H','EU3I','EU3J','EU4A','EU4B','EU4C','EU5A','EU5B','NMS_Penny','NMS_Nickle','NMS_HalfPenny','EQT') NOT NULL DEFAULT 'None' COMMENT 'option price format code',\n    `legCpx5` FLOAT NOT NULL DEFAULT 0 COMMENT '[child] best price',\n    `legCsz5` INT NOT NULL DEFAULT 0 COMMENT '[child] cumulative share represented at best price',\n    `legCex5` BIGINT NOT NULL DEFAULT 0 COMMENT '[child] bit mask of all exchanges where we are representing this order',\n    `legCmplAvgPrice5` DOUBLE NOT NULL DEFAULT 0 COMMENT 'average leg completion price',\n    `legCmplSecKey5_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey5_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey5_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey5_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey5_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey5_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey5_xx` DOUBLE NOT NULL DEFAULT 0 COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey5_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call' COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecType5` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None' COMMENT 'usually Future or Option (None if not yet valid)',\n    `secKey6_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'leg #6',\n    `secKey6_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'leg #6',\n    `secKey6_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'leg #6',\n    `secKey6_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'leg #6',\n    `secKey6_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'leg #6',\n    `secKey6_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'leg #6',\n    `secKey6_xx` DOUBLE NOT NULL DEFAULT 0 COMMENT 'leg #6',\n    `secKey6_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call' COMMENT 'leg #6',\n    `secType6` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None',\n    `ratio6` SMALLINT UNSIGNED NOT NULL DEFAULT 0,\n    `side6` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'None',\n    `positionType6` ENUM('None','Opening','Closing','Auto') NOT NULL DEFAULT 'None',\n    `legId6` BIGINT NOT NULL DEFAULT 0,\n    `fillQuan6` INT NOT NULL DEFAULT 0,\n    `avgFillPrice6` DOUBLE NOT NULL DEFAULT 0,\n    `vega6` FLOAT NOT NULL DEFAULT 0,\n    `refUPrc6` DOUBLE NOT NULL DEFAULT 0 COMMENT 'reference underlier price (PrcDe orders)',\n    `refDelta6` FLOAT NOT NULL DEFAULT 0 COMMENT 'reference delta (for PrcDe order handling)',\n    `refEarnCnt6` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'reference # of earnings moves before expiration',\n    `liveUPrc6` DOUBLE NOT NULL DEFAULT 0,\n    `priceFormat6` ENUM('None','N0','N1','N2','N3','N4','N5','N6','N7','F4','F8','Q8','F16','F32','H32','Q32','F64','H64','FullPenny','PartPenny','PartNickle','V1','V2','V3','V4','V5','V6','V7','V8','V9','V10','V11','V12','V13','V14','V15','V16','A0','A1','A2','A3','A4','A5','A6','A7','E32','EU2A','EU2B','EU2C','EU2D','EU2E','EU2F','EU3A','EU3B','EU3C','EU3D','EU3E','EU3F','EU3G','EU3H','EU3I','EU3J','EU4A','EU4B','EU4C','EU5A','EU5B','NMS_Penny','NMS_Nickle','NMS_HalfPenny','EQT') NOT NULL DEFAULT 'None' COMMENT 'option price format code',\n    `legCpx6` FLOAT NOT NULL DEFAULT 0 COMMENT '[child] best price',\n    `legCsz6` INT NOT NULL DEFAULT 0 COMMENT '[child] cumulative share represented at best price',\n    `legCex6` BIGINT NOT NULL DEFAULT 0 COMMENT '[child] bit mask of all exchanges where we are representing this order',\n    `legCmplAvgPrice6` DOUBLE NOT NULL DEFAULT 0 COMMENT 'average leg completion price',\n    `legCmplSecKey6_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey6_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey6_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey6_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey6_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey6_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey6_xx` DOUBLE NOT NULL DEFAULT 0 COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecKey6_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call' COMMENT 'final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)',\n    `legCmplSecType6` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None' COMMENT 'usually Future or Option (None if not yet valid)',\n    `mlegVega` FLOAT NOT NULL DEFAULT 0 COMMENT 'net vega per spread',\n    `mlegWtVega` FLOAT NOT NULL DEFAULT 0 COMMENT 'net wt vega per spread',\n    `mlegDelta` FLOAT NOT NULL DEFAULT 0 COMMENT 'net delta per spread',\n    `mlegGamma` FLOAT NOT NULL DEFAULT 0 COMMENT 'net gamma per spread',\n    `mlegTheta` FLOAT NOT NULL DEFAULT 0 COMMENT 'net theta per spread',\n    `description` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'user defined',\n    `orderSize` INT NOT NULL DEFAULT 0 COMMENT 'order size of most recent parent order',\n    `orderActiveSize` INT NOT NULL DEFAULT 0 COMMENT 'total activated size (total size released for execution) (-2 = all available size)',\n    `leavesQuantity` INT NOT NULL DEFAULT 0 COMMENT 'current child order leaves quantity (quantity actively working in the market;all child orders)',\n    `spdrOrderStatus` ENUM('PendNew','New','PendClose','Closed','Rejected','SendReject') NOT NULL DEFAULT 'PendNew',\n    `spdrCloseReason` ENUM('None','Cancelled','Filled','Replaced','Expired','Limit','System','LegReject','DoneForDay','IOCExpire','UserCxl','NoProgress','TooManyRej','ReplReject','AlgoClose','Restart','InvldParentLimit','FilledRepl','ForceClose','DmaReject','DmaExpire','DmaBrkrCxl','ReviewReject','MarketState','AlgoReject','ReviewTimeout','ChildReject','ChildCancel','ReviewClose','UPrcRange','LegBrkrClosed','ExchRisk','CrossFailed') NOT NULL DEFAULT 'None',\n    `spdrRejectReason` ENUM('None','AccntHold','UnknwnOpt','UnknwnStk','Expired','BadSize','BadOrdNum','DupOrdNum','BadVolPx','BadLmtType','BadMktPrc','BadLimit','SysReject','TestOrder','CustType','NoFirmPos','BadCent','NoSurface','UnknwnAcc','UnknwnRoot','OrdSpacing','BadOptMkt','BadStkMkt','SendFailed','BadExpose','BadPrem','NoOptLeg','Min2Leg','Max6Leg','BadStkSz','BadRatio','BadLegID','DupLegID','MixedRoots','OffMkt','CentVol','CentLeg','CentRng','CentSAtm','CentSpln','CentErr','NoRiskGrp','BadDDivs','NoPricer','CalcErr','TwapLate','TwapTime','NoAcctMap','UserUnk','UserHold','GTCHold','SysException','StkCrossed','BadOrdType','BadSSaleFlag','NoBorrow','NoFacilitateAccnt','UnknwnFut','MktNotOpen','NoRoutes','NoLocate','SSaleRstr','NoLegs','BadSide','BadLegKeyType','UnknwnRefStk','BadRefMktPrc','UnknwnRefFut','UnknwnRefAtm','BadRefVe','BadProdDef','StkOddLot','RiskException','MaxParticipation','MarExemptHold','NoMarRec','NullCounter','StkQty','FutQty','OptQty','StkDDelta','FutDDelta','OptDDelta','StkClsOnly','StkDisabled','FutClsOnly','FutDisabled','OptClsOnly','OptDisabled','OrderMargin','AccMargin','DayMargin','OpenExpose','DayLnDDelta','DayShDDelta','DayAbsDDelta','DayLnWtVega','DayShWtVega','DayAbsWtVega','DayLnNValue','DayShNValue','DayAbsNValue','InvldStratAccnt','AccFrozen','ConfigErr','NoFMFuture','NoLinkage','NoProdDef','BadRiskID','InvldAutoH','LegChange','CxlSpacing','BadHedgeInst','TooLateToReduce','PendCxlRepl','InvldCxlRepl','InvldCxl','DmaReject','NoUPrc','TwapSteps','UnknwnFirm','NoSSaleFlg','AccntNotMM','BadSource','VwapLate','AlreadyFilled','UnknownSecKey','InvldGTD','NotSupported','CutoffTime','ParentShape','NoFaceSide','NoFaceLegs','AuctionSize','InvldClFirm','BadLegBrkr','NoLegBrkr','StkLegNotAllowed','BadLeadSide','UnknwnRefUnd','ExecEngineType','NoExchAvail','SelfTrade','PointValueErr','PointCurrencyErr','StkCollar','FutCollar','OptCollar','LmtCollar','RefUPrcErr','InvldUser','InvldAccnt','UnknownCrossId','WidUMkt','UMktCls','UPrcRange','RiskCollarRng') NOT NULL DEFAULT 'None',\n    `spdrCloseDetailTxt` TINYTEXT NOT NULL DEFAULT '',\n    `activeHoldState` ENUM('None','User','Algo','Error') NOT NULL DEFAULT 'None',\n    `activeHoldReason` TINYTEXT NOT NULL DEFAULT '',\n    `openLegs` TINYINT UNSIGNED NOT NULL DEFAULT 0,\n    `cumSquareQty` INT NOT NULL DEFAULT 0 COMMENT 'cumulative spread quantity filled (all legs received)',\n    `avgSquarePrc` DOUBLE NOT NULL DEFAULT 0,\n    `cumPartialQty` INT NOT NULL DEFAULT 0 COMMENT 'cumulative spread quantity partially filled (at least one leg received) [expected cumFilledQty if all legs square up]',\n    `completionType` ENUM('None','DAC','POC','TAS','TACO','BTIC') NOT NULL DEFAULT 'None' COMMENT 'None, DAC, POC, TAS, TACO, BTIC',\n    `completionState` ENUM('None','Prelim','Complete') NOT NULL DEFAULT 'None' COMMENT 'None, Pending, Complete',\n    `avgSquareCmplPrice` DOUBLE NOT NULL DEFAULT 0 COMMENT 'completion trade price (final trade price) [also avg completion price]',\n    `fillVega` FLOAT NOT NULL DEFAULT 0 COMMENT 'net vega filled',\n    `fillWtVega` FLOAT NOT NULL DEFAULT 0 COMMENT 'net wt vega filled',\n    `fillDelta` FLOAT NOT NULL DEFAULT 0 COMMENT 'net delta filled',\n    `fillDDelta` FLOAT NOT NULL DEFAULT 0 COMMENT 'net $delta filled',\n    `fillGamma` FLOAT NOT NULL DEFAULT 0 COMMENT 'net gamma filled',\n    `fillTheta` FLOAT NOT NULL DEFAULT 0 COMMENT 'net theta filled',\n    `lastFillDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000',\n    `riskLimitSize` INT NOT NULL DEFAULT 0 COMMENT 'risk limit size',\n    `riskLimitDesc` ENUM('None','NullCounter','StkClsOnly','StkDisabled','FutClsOnly','FutDisabled','OptClsOnly','OptDisabled','OrderMargin','AccMargin','DayMargin','OpenExpose','DayLnDDelta','DayShDDelta','DayAbsDDelta','DayLnWtVe','DayShWtVe','DayAbsWtVe','DayLnNValue','DayShNValue','DayAbsNValue','StkImpact','FutImpact','OptImpact','NullMRC','NullSRC','DDeltaLn','DDeltaSh','DDeltaAbs','WtVegaLn','WtVegaSh','WtVegaAbs','NValueLn','NValueSh','NValueAbs','CtrlDisable','AccEmaDdLn','AccEmaDdSh','AccEmaWvLn','AccEmaWvSh','SymEmaDdLn','SymEmaDdSh','SymEmaWvLn','SymEmaWvSh','ExpDDeltaLn','ExpDDeltaSh','ExpWtVegaLn','ExpWtVegaSh','ExpRm6Ln','ExpRm6Sh','SymDDeltaLn','SymDDeltaSh','SymVegaLn','SymVegaSh','SymWtVegaLn','SymWtVegaSh','SymRm7Ln','SymRm7Sh','GrpDdLn','GrpDdSh','GrpOptQtyLn','GrpOptQtySh','GrpOptQtyAbs','GrpVegaLn','GrpVegaSh','GrpVegaAbs','GrpRm1Ln','GrpRm1Sh','GrpRm1Abs','GrpRm2Ln','GrpRm2Sh','GrpRm3Ln','GrpRm3Sh','GrpRm4Ln','GrpRm4Sh','GrpRm5Ln','GrpRm5Sh','UDn50','UUp50','UDn15','UUp15','OrderSize','SysErr','StkErr','FutErr','OptErr','SSaleErr','SSaleRstr','StkSellLmt','Locate','StkRstct','SizeCap','ZeroCross','PreOpnQ','TrgWait','WaitStart','WaitTrigger','LegStep','TwapStep','MktNotReady','MaxRisk','NoStkBrw','BadMkt','BadLmt','NoAltOrdId','InvldBrkr','MaxChildOrders','MktHalted','UPrcErr','MinUBid','MaxUAsk','PreStart','ClntRteDn','ActiveSize','MktClosed','NoDDeltaMult','InvldDelta','RiskCollarRng','DayFutCnBot','DayFutCnSld','DayFutCnAbs','AccFutCnAbs') NOT NULL DEFAULT 'None' COMMENT 'reason for size reduction',\n    `riskLimitLevel` ENUM('None','MarExsOnSponsLvl','MarExsOnSponsTkLvl','MarExsOnCoreLvl','MarExsOnCoreTkLvl','MarSponsOnCoreLvl','MarSponsOnCoreTkLvl','MarCoreOnCoreLvl','MarCoreOnCoreTkLvl','MarCoreOnSubLvl','MarCoreOnSubTkLvl','MarCoreOnAccntLvl','MarCoreOnAccntTkLvl','MarSubOnAccntLvl','MarSubOnAccntTkLvl','MarCoreOnCustomLvl','MarCoreOnCustomTkLvl','MarSubOnCustomLvl','MarSubOnCustomTkLvl','UserLvl','UserTkLvl','AccntLvl','AccntTkLvl','CFirmLvl','CFirmTkLvl','RiskGroup','HardLvl','SoftLvl','GblTkLvl','MarCustomOnCoreLvl','MarCustomOnCoreTkLvl','UserAccntLvl','UserAccntTkLvl') NOT NULL DEFAULT 'None' COMMENT 'risk limit level responsible for reduction',\n    `maxProgress` ENUM('None','Initialize','Rejected','PreOpen','RiskHold','Working','ChkRte','RteRej','WaitAction','InMarket','Filling','Filled','PendingClose','Closed','HedgeHold') NOT NULL DEFAULT 'None' COMMENT 'maximum point of progress for most recent parent order',\n    `maxProgressDetail` VARCHAR(48) NOT NULL DEFAULT '' COMMENT 'additional detail on point of maximum progress',\n    `maxProgressTime` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'time of last max progress advance',\n    `algoState` ENUM('None','Posting','PendPost','OffMkt','BadFirmType','NoExchSet','BadOrder','NoPostSize','MaxActive','ActWait','SendHold','LmtErr','LmtRng','LmtPx','PendAct','MaxSize','OddLot','IWait','Quiet','Fade','InVld','MaxPSz','MaxOrd','MaxPxLv','MaxPec1','MaxPec2','MaxPec3','TryPxLvl1','TryPxLvl2','TryPxLvl3','DonePxLvl1','DonePxLvl2','DonePxLvl3','SendPxLvl1','SendPxLvl2','SendPxLvl3','NoExchQte','CrtErr','SizeWait','NbboHold','ExchHold','CxlRpl','SndErr','OldMdl','ExchRte','PrcHold','ModelErr','LowProb','PostWith','PostBhnd','NoModel','NoOptQte','NoStkQte','RiskHold','SurfHold','NoFutQte','NoStkPrt','PostClr','NoQte','PHold','StkEnv','OptEnv','FutEnv','TryExch','CkSend','PredMiss','SysEnv','NoExchAvail','PostWide','ZeroLmt','LockSkip','ProbLmt','PrcLmt','NoActSz','CkAdd','Locked','PendCxl','NewWait','EnterLimit','EnterPost','EnterFlow','EnterMake','EnterSeeker','EnterMatrix','EnterLegger','SendOK','SendFail','Except','Filled','TrySend','BadMkt','SysError','MktDataErr','TickSizeErr','NullParent','NoUPrc','TryTake','NoProb','SendThrtl','ProbErr','PendClear','MaxExCnt','MaxExpose','NoExDest','ReachDelay','ReachWait','ClearWait','CxlWait','LeavesErr','FeeWait','ActMaker','WthFade','SyncHold','AuctionDone','BadUDefKey','UDefReject','PendUDef','ExchRej','TrySendSprd','Working','RejDelay','NoStepSz','UpdtLegBrkr','LegNewWait','LegNoChng','LegBadMkt','LegImprvDelay','LegUpdtLmt','LegUpdtErr','NoExchList','PendTake','LeggerDone','MaxChildren','RiskCxlThrtl','FlashWait','NoImpRm','RollVlm','MoveVlm','AccelTake','NoMassQte','MktNotOpen','CreateSprd','InvldExch','RFQTimeout','TrySendRFQ','EnterResponder','CreateErr','LockFail','NoRoute','UnkCrossId','SelfTrade','ImpactHold','LegWait','TwapWait','InvalidSpread','PegHold','OffPeg','ChildCxlHold','CheckBrkr','FaceDone','CtrlSize','FacePromote','MatrixDone','TakeVlmHold','NoExchRoute','ExchNoMake','ExchWrking','ExchSingle','ExchMakeHold','ExchBrkrSkip','ExchNoQte','ExchMaxFee','ExchOffMkt','ExchNoImprv','FlashInitErr','FlashCalcErr','MarketClosed','ExchActOrd','ExchMaxFeeP','ExchNoRte','TakeFail','BestPxLmt','PennyProtected','WaitSquare','NotActive','RteOpnLmt','NoTiedMaker','WaitTrigger','CrossPending','NoResponders','SendThrtlHiLat','SendThrtlNewWin','SendThrtlRteQGap','SendThrtlRteQSz','SendThrtlRteQAge','ExRiskMgmt','RouteDayMax','ZeroChildSize','ExchTakeSkip','ExchNoSzSkip','ExchNoQteSkip','ExchNullRte','ExchRteFail','CxlCntWait','TryGetRoutes','GetMakePrice','MktPreOpen','MktClosed','MktHalted','PendCross','PendSweep','CrossMkt','Sweeping','SweepMiss','NoCrossSize','NoFace','ConfigErr','NExchOffMkt','CrossClear','LiqReqPend','CxlThrottle','RouteSafeMode','Crossing','CrossComplete','CrossExpired') NOT NULL DEFAULT 'None' COMMENT '[enum] current state of order handler (maker)',\n    `algoCounter` INT NOT NULL DEFAULT 0 COMMENT 'number of times order checked by algo handler (note: most checks result in no action)',\n    `makeState` ENUM('None','Posting','PendPost','OffMkt','BadFirmType','NoExchSet','BadOrder','NoPostSize','MaxActive','ActWait','SendHold','LmtErr','LmtRng','LmtPx','PendAct','MaxSize','OddLot','IWait','Quiet','Fade','InVld','MaxPSz','MaxOrd','MaxPxLv','MaxPec1','MaxPec2','MaxPec3','TryPxLvl1','TryPxLvl2','TryPxLvl3','DonePxLvl1','DonePxLvl2','DonePxLvl3','SendPxLvl1','SendPxLvl2','SendPxLvl3','NoExchQte','CrtErr','SizeWait','NbboHold','ExchHold','CxlRpl','SndErr','OldMdl','ExchRte','PrcHold','ModelErr','LowProb','PostWith','PostBhnd','NoModel','NoOptQte','NoStkQte','RiskHold','SurfHold','NoFutQte','NoStkPrt','PostClr','NoQte','PHold','StkEnv','OptEnv','FutEnv','TryExch','CkSend','PredMiss','SysEnv','NoExchAvail','PostWide','ZeroLmt','LockSkip','ProbLmt','PrcLmt','NoActSz','CkAdd','Locked','PendCxl','NewWait','EnterLimit','EnterPost','EnterFlow','EnterMake','EnterSeeker','EnterMatrix','EnterLegger','SendOK','SendFail','Except','Filled','TrySend','BadMkt','SysError','MktDataErr','TickSizeErr','NullParent','NoUPrc','TryTake','NoProb','SendThrtl','ProbErr','PendClear','MaxExCnt','MaxExpose','NoExDest','ReachDelay','ReachWait','ClearWait','CxlWait','LeavesErr','FeeWait','ActMaker','WthFade','SyncHold','AuctionDone','BadUDefKey','UDefReject','PendUDef','ExchRej','TrySendSprd','Working','RejDelay','NoStepSz','UpdtLegBrkr','LegNewWait','LegNoChng','LegBadMkt','LegImprvDelay','LegUpdtLmt','LegUpdtErr','NoExchList','PendTake','LeggerDone','MaxChildren','RiskCxlThrtl','FlashWait','NoImpRm','RollVlm','MoveVlm','AccelTake','NoMassQte','MktNotOpen','CreateSprd','InvldExch','RFQTimeout','TrySendRFQ','EnterResponder','CreateErr','LockFail','NoRoute','UnkCrossId','SelfTrade','ImpactHold','LegWait','TwapWait','InvalidSpread','PegHold','OffPeg','ChildCxlHold','CheckBrkr','FaceDone','CtrlSize','FacePromote','MatrixDone','TakeVlmHold','NoExchRoute','ExchNoMake','ExchWrking','ExchSingle','ExchMakeHold','ExchBrkrSkip','ExchNoQte','ExchMaxFee','ExchOffMkt','ExchNoImprv','FlashInitErr','FlashCalcErr','MarketClosed','ExchActOrd','ExchMaxFeeP','ExchNoRte','TakeFail','BestPxLmt','PennyProtected','WaitSquare','NotActive','RteOpnLmt','NoTiedMaker','WaitTrigger','CrossPending','NoResponders','SendThrtlHiLat','SendThrtlNewWin','SendThrtlRteQGap','SendThrtlRteQSz','SendThrtlRteQAge','ExRiskMgmt','RouteDayMax','ZeroChildSize','ExchTakeSkip','ExchNoSzSkip','ExchNoQteSkip','ExchNullRte','ExchRteFail','CxlCntWait','TryGetRoutes','GetMakePrice','MktPreOpen','MktClosed','MktHalted','PendCross','PendSweep','CrossMkt','Sweeping','SweepMiss','NoCrossSize','NoFace','ConfigErr','NExchOffMkt','CrossClear','LiqReqPend','CxlThrottle','RouteSafeMode','Crossing','CrossComplete','CrossExpired') NOT NULL DEFAULT 'None' COMMENT '[enum] current state of make handler (maker)',\n    `makeCounter` INT NOT NULL DEFAULT 0 COMMENT 'number of times order checked by make algo handler (note: most checks result in no action)',\n    `mktRespState` ENUM('None','ChildCxlHold') NOT NULL DEFAULT 'None' COMMENT '[enum] current state of response handler (if any)',\n    `mktRespCounter` INT NOT NULL DEFAULT 0 COMMENT 'number of times order checked by market response handler (note: most checks result in no action)',\n    `brokerState` ENUM('None','Start','MarNotEnabled','CloseRequest','WaitTrigger','ChkBrkrFail','NotValid','StepChk','ResetOff','ResetOn','ResetActive','TwapChkWait','TwapChk','VwapChk','VwapVlmFail','CleanupBrkr','AlgoNormal','StkClosed','StkHalted','StkNotOpn','FutClosed','FutHalted','FutNotOpn','TryCxlChildrenCont','BrkrPendNew','BrkrPendClose','BrkrPreOpnQ','BrkrPendRpl','BrkrWaitTrig','TryCxlChildrenTerm','PendChildCxl','Done','BrkrClosing','BrkrClosed','BrkrRejected','MktHalted','LimitErr','RiskHold','SecTypeErr','MktDataErr','LmtErr','StkNotRdy','MinUPrcLmt','MaxUPrcLmt','InvldSysEnv','InvldRunStatus','InvldEngineType','MarketClosed','GoodTillDttmReached','TestExpired','AutoHedgeExpired','EngineClosed','EngPreOpn','OutsideMktDay','OutsideMktDay2','MaxChildRejects','IOCExpired','ProgressTimeout','NoStreetFixSession','StreetFixNotLoggedIn','StreetFixTimeout','HedgeHold','NewParent','AddUpdate','ClearAction','UpdateLegLimit','Exception','AlgoWorking','ReviewReject','ReviewPending','ReviewTimeout','PendTrigger','PendReview','PendCxlRpl','Suspended','LeggerWait','NoStkMkt','CkIncrProgress','TriggerHold','SwitchMOC','HoldMOC','VwapStepWait','MaxChildOrders','ActiveHold') NOT NULL DEFAULT 'None' COMMENT 'broker monitor state',\n    `brokerCounter` INT NOT NULL DEFAULT 0 COMMENT 'number of times order checked by broker monitor (note: most checks result in no action)]',\n    `spdrMktState` ENUM('None','PreOpen','Open','Closed','Halted','EngNotOpen','Exception') NOT NULL DEFAULT 'None' COMMENT '[enum] market state',\n    `spdrBrokerStatus` ENUM('None','Updating','Active','Closing','Closed','Rejected','ActiveHold') NOT NULL DEFAULT 'None',\n    `progressRuleDetail` TINYTEXT NOT NULL DEFAULT '' COMMENT 'Twap/Vwap progress detail',\n    `lastChildRejectDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'last child order reject dttm (if any)',\n    `lastChildRejectText` TINYTEXT NOT NULL DEFAULT '' COMMENT 'last child order reject reason/text (if any)',\n    `riskGroupId` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'autohedge risk group',\n    `triggerGroupId` BIGINT NOT NULL DEFAULT 0 COMMENT 'WaitTrigger group Id',\n    `hedgeGroupingCode` BIGINT NOT NULL DEFAULT 0 COMMENT 'autohedge risk group',\n    `autoHedge` ENUM('None','Static','AutoMid','AutoCrx','AutoTrn','SpdrAuto','Spdr10S','Spdr30S','Spdr90S','Spdr5M','Spdr30M','SpdrDay','SmartFast','SmartNorm','FastCrx','FastDark','SlowDark','AlphaVwap1pct','AlphaVwap2pct','AlphaVwap5pct','AlphaVwap25pct','Custom','AwayAlgo','EuxMsAlgo') NOT NULL DEFAULT 'None',\n    `hedgeInstrument` ENUM('None','Default','FrontMonth','Stock','Future') NOT NULL DEFAULT 'None' COMMENT 'auto-hedge instrument (from parent order)',\n    `hedgeSecKey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'auto-hedge sec key (if any)',\n    `hedgeSecKey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'auto-hedge sec key (if any)',\n    `hedgeSecKey_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'auto-hedge sec key (if any)',\n    `hedgeSecKey_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'auto-hedge sec key (if any)',\n    `hedgeSecKey_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'auto-hedge sec key (if any)',\n    `hedgeSecKey_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'auto-hedge sec key (if any)',\n    `hedgeSecType` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None' COMMENT 'auto-hedge sec type (Stock or Future)',\n    `hedgeBetaRatio` FLOAT NOT NULL DEFAULT 0 COMMENT 'auto-hedge ratio [from parent order (if supplied) or computed by SR]',\n    `hedgeScope` ENUM('None','Accnt','RiskGroup') NOT NULL DEFAULT 'None' COMMENT 'hedge group scope [RiskGroup or Accnt]',\n    `externHedgeExDest` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'external broker exDest (only used if orderHandling=Extern)			# Should match FixRoutingTable.destination type (eg. #Nighthawk)',\n    `externHedgeParams` TINYTEXT NOT NULL DEFAULT '' COMMENT 'external algo names/parameters (usually just an algo name)			# usually copied from the FixRoutingTable.externParams',\n    `hedgeFillUMarkLmtPrc` ENUM('None','Yes','No') NOT NULL DEFAULT 'None' COMMENT 'set a price limit on the autohedge order based on the most recent option fillUMark',\n    `bestWayPrc` FLOAT NOT NULL DEFAULT 0 COMMENT 'current leg market nbbo (at time of record publish)',\n    `wrstWayPrc` FLOAT NOT NULL DEFAULT 0 COMMENT 'current leg market nbbo ask (at time of record publish)',\n    `bestWaySz` INT NOT NULL DEFAULT 0 COMMENT 'current leg market nbbo cum bid size (at time of record publish)',\n    `wrstWaySz` INT NOT NULL DEFAULT 0 COMMENT 'current leg market nbbo cum ask size (at time of record publish)',\n    `surfacePrc` FLOAT NOT NULL DEFAULT 0 COMMENT 'SR spread surface price @ record publish',\n    `surfaceVol` FLOAT NOT NULL DEFAULT 0,\n    `surfaceUPrc` FLOAT NOT NULL DEFAULT 0,\n    `limitPrice` DOUBLE NOT NULL DEFAULT 0 COMMENT 'spread limit price',\n    `limitRefUPrc` DOUBLE NOT NULL DEFAULT 0,\n    `limitErr` ENUM('None','LmtPrcRng','NoStkNbbo','LowStkNbbo','WideStkNbbo','CrossStkNbbo','VolCalcErr','RefUPrcErr','RefDeltaRng','dUPrcRng','BadLmtType','LmtPrcErr','BadCent','CentVolLmt','BadSurf','CentPrcLmt','NoOptNbbo','WideOptNbbo','dYrsRng','BadRefDelta','BadStkNbbo','InvldMkt','BadVolLmt','CrossOptNbbo','NoFutNbbo','LowFutNbbo','WideFutNbbo','CrossFutNbbo','InvldRefMkt','TiedRtnRng','InvldAdjType','ProdDefErr','PrcBandViol','SysErr','NoQteProb','ProbRng','LmtClass','NoAlphaLvl','SurfErr','ProbErr','BadMult','NoUPrc','BadAlphaLvl','LegLimitErr','AuxLimit','NoFutMktSz','FutMktNotOpn','StaleProb','NoStkObj','NoFutObj','NoOptObj','dOpxGaRng','FadeProb','SurfNoTrd','SurfAge','SurfMktSess','SurfVolRng','SurfPrc','NoSurface','SurfLowCCnt','SurfLowPCnt','SurfFitPrcErr','SurfBidAskMiss','SurfLowCounter','SurfDefaultSkew','SurfSessionMiss','SurfBaseErr','SurfSwitchDelay','SurfWideMktV','SurfWideMktP','SurfUWidthEma','SurfCCntEma','SurfPCntEma','SurfVWidthEma','SurfPWidthEma','SurfWideUMkt','LowOptPrc','LegURng','WideMarket','dOpxThRng','NA','InvldMktWidth','Except','BadProbRecord','InterpErr','SurfImprErr','JoinImprErr','JoinItrpErr','JoinFadeErr','NoLimit') NOT NULL DEFAULT 'None' COMMENT 'limit price error code',\n    `makeLimitPrice` DOUBLE NOT NULL DEFAULT 0,\n    `takeLimitPrice` DOUBLE NOT NULL DEFAULT 0,\n    `cxlUPrcRange` ENUM('None','Yes','No','YesHalt','NoHalt') NOT NULL DEFAULT 'None' COMMENT 'cancel spdr order if/when outside stock price range',\n    `minUBid` FLOAT NOT NULL DEFAULT 0 COMMENT 'Used in conjunction with minMaxType & maxUAsk. When set, implements a lower bound on the underlying price and will either suspend or cancel an order when violated.',\n    `maxUAsk` FLOAT NOT NULL DEFAULT 0 COMMENT 'Used in conjunction with minMaxType & minUBid. When set, implements an upper bound on the underlying price and will either suspend or cancel an order when violated.',\n    `minMaxType` ENUM('None','Prc','Pct') NOT NULL DEFAULT 'None' COMMENT 'if Prc minUBid/maxUAsk are expressed as prices; if Pct then they are expresses as pct change since parent order arrival',\n    `leadSide` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'None' COMMENT 'for legged orders, which side to lead with.  (optional, None ok)',\n    `maxCompletionSlippage` DOUBLE NOT NULL DEFAULT 0 COMMENT 'maximum price slippage to complete an open basket or a cross auction (face side slippage)',\n    `orderRefPremium` FLOAT NOT NULL DEFAULT 0 COMMENT 'reference premium (mleg orders only)',\n    `strategy` VARCHAR(36) NOT NULL DEFAULT '' COMMENT 'parent order strategy (description only)',\n    `userName` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'user that entered the most recent parent order',\n    `visibleInSV` ENUM('None','Yes','No') NOT NULL DEFAULT 'None' COMMENT 'allow order to be visible in SV (do not use for high volume of orders)',\n    `spdrComment` TINYTEXT NOT NULL DEFAULT '',\n    `takeReachRule` ENUM('None','Delayed','Passive','WeakOnly','RespondOnly','FullSize','ISOSweep','AllOrNone','QtyOrMore','UpToQty','AtMost25','AtMost50','MinTakeFee') NOT NULL DEFAULT 'None' COMMENT 'Immediate = reach room immediately available; Delayed = available after [1-3] seconds; Passive = available if contra side aggresses; WeakOnly = only take if available size < avgMarketSize; ISOSweep = Intermarket Sweep [requires WaitTrigger]',\n    `maxExposureSize` INT NOT NULL DEFAULT 0 COMMENT 'maximum simultaneous cumulative child order public size exposure (-2 = orderActiveSize) [order can overfill if > orderActiveSize and numMakeExchanges > 2]',\n    `numMakeExchanges` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'number of exchanges (2 - 4) on which to publish public making orders.  Effective number might be less than requested number if sufficient exchanges are not available.',\n    `publicSize` ENUM('None','Randomize','MktSize','FullSize','MktSizeA','MktSizeB','MktSizeC','FullSizeR','Max25Pct','Max50Pct','Max75Pct','NoSize') NOT NULL DEFAULT 'None' COMMENT 'public order size handling',\n    `progressRule` ENUM('None','Twap','Vwap','TwapReset','VwapReset','FastReset','SlowReset','TwapAlpha','VwapAlpha','TwapAlphaC','VwapAlphaC','AutoComplete','AllowImmediate','Manual','SpdrPulse','IOC','FlashMakeTake') NOT NULL DEFAULT 'None' COMMENT 'Immediate = all size immediately available;TWAP = size released in time intervals;VWAP = size released in volume intervals;',\n    `progressSliceCnt` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'number of progress slices to use (default = 4 or 8) [max 20]',\n    `progressExposeTime` INT NOT NULL DEFAULT 0 COMMENT 'minimum time (secs) to expose order (0 = no minimum; used to guarantee that the order is exposed at mid-market for some time before actively taking)',\n    `maxChildOrders` INT NOT NULL DEFAULT 0 COMMENT 'maximum number of child orders that can be generated by this parent order [order will terminate if/when this cap is reached;zero or neg = unlimited]',\n    `exchMask` BIGINT NOT NULL DEFAULT 0 COMMENT 'eligible exchanges (0 = all)',\n    `marketSession` ENUM('None','PreMkt','RegMkt','PostMkt','PreRegMkt','RegPostMkt','AllDay') NOT NULL DEFAULT 'None',\n    `startDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'Order Start Date/Time',\n    `orderDuration` INT NOT NULL DEFAULT 0 COMMENT '[optional] (number of seconds)',\n    `activeDuration` INT NOT NULL DEFAULT 0 COMMENT '[optional] (number of seconds)',\n    `goodTillDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT '[optional] (default: 2099-02-02)',\n    `expireDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'expected order expiration dttm',\n    `parentOrderHandling` ENUM('None','ActiveTaker','PostOnly','DMA','MktOnOpn','MktOnCls','Facilitate','Matrix','Legger','Seeker','SeekerLegger','CrossResponse','AuctionResponse','MLegAuctionResp','RFQRequest','AwayAlgo','ExchPing','BlockAuction','AtsResponse','SweepTake','CobMaker','FaceOmni','TestParent','FlashAuction','BlockAuctionDAC','BlockAuctionPOC','BlockAuctionPCV') NOT NULL DEFAULT 'None',\n    `parentBalanceHandling` ENUM('None','PostWith','PostTurn','PostImprove','PostLimit','MaxIntern','PostWthF','PostImprvR','PostFlash','PostFlashW','PostPeg','PostFlashI') NOT NULL DEFAULT 'None',\n    `atsVisibility` ENUM('None','Neither','Side','SidePrice') NOT NULL DEFAULT 'None',\n    `orderLimitType` ENUM('None','Market','MarketArrival','Prc','PrcDe','PrcDeX','PrcDeT','PrcDeP','PrcDeXT','PrcDeXP','Vol','VolX','PrcV','PrcVX','NoLimit','RelMid','RelJoin','RelCross','SmrtFast','SmrtNorm','RelTurn','PrcDeEm','VolEm','Aux','UPrcPct','PkgNeutral','RcPrem','SynthLimitMM','SynthLimitBW','SynthLimitWW','UPrcPctStrike') NOT NULL DEFAULT 'None',\n    `orderVolLimit` DOUBLE NOT NULL DEFAULT 0 COMMENT 'Applies if LimitType = Vol[]',\n    `orderPrcLimit` DOUBLE NOT NULL DEFAULT 0 COMMENT 'Applies if LimitType = Prc[]',\n    `orderRefUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'reference uPrc (PrcDe orders)',\n    `orderRefDe` FLOAT NOT NULL DEFAULT 0 COMMENT 'reference delta (PrcDe orders)',\n    `orderRefGa` FLOAT NOT NULL DEFAULT 0 COMMENT 'reference gamma (PrcDe orders)',\n    `orderPrcOffset` DOUBLE NOT NULL DEFAULT 0 COMMENT 'default=0',\n    `takeLimitClass` ENUM('Simple','Surface','Probability','SurfProb') NOT NULL DEFAULT 'Simple' COMMENT 'Simple = LimitPrice, Surface = BEST(LimitPrice, SurfLimit), Probability = BEST(LimitPrice, ProbLimit)',\n    `takeAlphaType` ENUM('None','Static','Eagle','Hawk','Falcon','Relative') NOT NULL DEFAULT 'None' COMMENT 'Applies if limitClass = Probability',\n    `takeAlphaFactor` FLOAT NOT NULL DEFAULT 0 COMMENT '[-2,+2] ProbLimit = MAX(alphaProbability, ProbAvg + AlphaFactor * ProbStd) [if AlphaType = Relative]',\n    `takeAlphaProbability` FLOAT NOT NULL DEFAULT 0 COMMENT 'ProbLimit = alphaProbability [if AlphaType = Static]',\n    `takeSurfPrcOffset` DOUBLE NOT NULL DEFAULT 0 COMMENT 'default=0',\n    `takeSurfVolOffset` FLOAT NOT NULL DEFAULT 0 COMMENT 'default=0',\n    `takeSurfWidOffset` FLOAT NOT NULL DEFAULT 0 COMMENT 'default=0',\n    `makeLimitClass` ENUM('Simple','Surface','Probability','SurfProb') NOT NULL DEFAULT 'Simple' COMMENT 'Simple = LimitPrice, Surface = BEST(LimitPrice, SurfLimit), Probability = BEST(LimitPrice, ProbLimit)',\n    `makeAlphaType` ENUM('None','Static','Eagle','Hawk','Falcon','Relative') NOT NULL DEFAULT 'None' COMMENT 'Applies if limitClass = Probability',\n    `makeAlphaFactor` FLOAT NOT NULL DEFAULT 0 COMMENT '[-2,+2] ProbLimit = MAX(alphaProbability, ProbAvg + AlphaFactor * ProbStd) [if AlphaType = Relative]',\n    `makeAlphaProbability` FLOAT NOT NULL DEFAULT 0 COMMENT 'ProbLimit = alphaProbability [if AlphaType = Static]',\n    `makeSurfPrcOffset` DOUBLE NOT NULL DEFAULT 0 COMMENT 'default=0',\n    `makeSurfVolOffset` FLOAT NOT NULL DEFAULT 0 COMMENT 'default=0',\n    `makeSurfWidOffset` FLOAT NOT NULL DEFAULT 0 COMMENT 'default=0',\n    `orderRefEventMult` FLOAT NOT NULL DEFAULT 0,\n    `orderRefEventDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000',\n    `mlegProbLimit` FLOAT NOT NULL DEFAULT 0 COMMENT 'live prob limit',\n    `mlegSurfOffset` FLOAT NOT NULL DEFAULT 0 COMMENT 'live surface offset (in premium)',\n    `externExDest` VARCHAR(16) NOT NULL DEFAULT '',\n    `orderDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'order entry date/time',\n    `minSurfVol` FLOAT NOT NULL DEFAULT 0 COMMENT '(minimum) SR spread surface vol [vega weighted] while parent order was working',\n    `maxSurfVol` FLOAT NOT NULL DEFAULT 0 COMMENT '(maximum) SR spread surface vol [vega weighted] while parent order was working',\n    `minSurfPrc` FLOAT NOT NULL DEFAULT 0 COMMENT '(minimum) SR spread surface price while parent order was working',\n    `maxSurfPrc` FLOAT NOT NULL DEFAULT 0 COMMENT '(maximum) SR spread surface price while parent order was working',\n    `minSurfUPrc` FLOAT NOT NULL DEFAULT 0 COMMENT '(minimum) SR spread surface uPrc while parent order was working',\n    `maxSurfUPrc` FLOAT NOT NULL DEFAULT 0 COMMENT '(maximum) SR spread surface uPrc while parent order was working',\n    `minQteWidth` FLOAT NOT NULL DEFAULT 0 COMMENT 'minimum quote width during active order window',\n    `avgQteWidth` FLOAT NOT NULL DEFAULT 0 COMMENT 'average quote width (during active order window)',\n    `cntQteWidth` INT NOT NULL DEFAULT 0,\n    `arriveBid` DOUBLE NOT NULL DEFAULT 0,\n    `arriveAsk` DOUBLE NOT NULL DEFAULT 0,\n    `totalSeconds` FLOAT NOT NULL DEFAULT 0 COMMENT 'number of seconds that the parent order was active',\n    `workingSeconds` FLOAT NOT NULL DEFAULT 0 COMMENT 'number of seconds with one or more working child orders in an exchange order book',\n    `prtActiveCnt` INT NOT NULL DEFAULT 0 COMMENT 'total print events while parent order was active',\n    `prtQtyActive` INT NOT NULL DEFAULT 0 COMMENT 'total quantity printed while parent order was active',\n    `cumExchFee` FLOAT NOT NULL DEFAULT 0 COMMENT 'cumulative fill exch fee',\n    `cumM10Pnl` FLOAT NOT NULL DEFAULT 0,\n    `cumArrivalPnl` FLOAT NOT NULL DEFAULT 0,\n    `uPrcDrift` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier drift (since parent order start)',\n    `sVolDrift` FLOAT NOT NULL DEFAULT 0 COMMENT 'surface vol drift (since parent order start)',\n    `maxGrpDayDDeltaLn` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day $delta long (positive number;-1=no limit);risk limit = max limit - current net counter',\n    `maxGrpDayDDeltaSh` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day $delta short (positive number;-1=no limit);risk limit = max limit + current net counter',\n    `maxGrpDayContractsLn` INT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day opt contracts long (positive number;-1=no limit);risk limit = max limit - current net counter',\n    `maxGrpDayContractsSh` INT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day opt contracts short (positive number;-1=no limit);risk limit = max limit + current net counter',\n    `maxGrpDayContractsAbs` INT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day opt contracts abs (positive number;-1=no limit);risk limit = max limit - abs(current net counter)',\n    `maxGrpDayVegaLn` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day vega long (positive number;-1=no limit);risk limit = max limit - current net counter',\n    `maxGrpDayVegaSh` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day vega short (positive number;-1=no limit);risk limit = max limit + current net counter',\n    `maxGrpDayVegaAbs` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day vega abs (positive number;-1=no limit);risk limit = max limit - abs(current net counter)',\n    `grpDayVegaRatio` FLOAT NOT NULL DEFAULT 1.0 COMMENT 'target bot / sld ratio (eg ratio=2.0 means that neutral is bot vega = 2x sld vega)',\n    `maxGrpDayRMetric1Ln` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day rMetric1 long (positive number;-1=no limit);risk limit = max limit - current net counter',\n    `maxGrpDayRMetric1Sh` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day rMetric1 short (positive number;-1=no limit);risk limit = max limit + current net counter',\n    `maxGrpDayRMetric1Abs` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day rMetric1 abs (positive number;-1=no limit);risk limit = max limit - abs(current net counter)',\n    `grpDayRMetric1Ratio` FLOAT NOT NULL DEFAULT 1.0 COMMENT 'target bot / sld ratio (eg ratio=0.5 means that neutral is bot rMetric1 = 0.5x sld rMetric1)',\n    `refRMetric1Src` ENUM('None','User','Vega','WVega','WTVega','TVega','Theta','Gamma','DGamma','DDeltaIvS','BDDelta','OptDDelta','Premium','Notional','Quantity') NOT NULL DEFAULT 'None',\n    `orderRefRMetric1` FLOAT NOT NULL DEFAULT 0 COMMENT 'user supplied RMetric1 value (used in RiskGroupID risk controls) [netRMetric1 = sum(fillQty * orderRefRMetric1 * underlierPerCn)]',\n    `cpx1` FLOAT NOT NULL DEFAULT 0,\n    `csz1` INT NOT NULL DEFAULT 0 COMMENT 'cumulative size represented at this price',\n    `cex1` BIGINT NOT NULL DEFAULT 0 COMMENT 'bit mask of all exchanges where we are representing this order',\n    `cpx2` FLOAT NOT NULL DEFAULT 0,\n    `csz2` INT NOT NULL DEFAULT 0 COMMENT 'cumulative size represented at this price',\n    `cex2` BIGINT NOT NULL DEFAULT 0 COMMENT 'bit mask of all exchanges where we are representing this order',\n    `cMore` TINYINT UNSIGNED NOT NULL DEFAULT 0,\n    `numNewOrders` INT NOT NULL DEFAULT 0 COMMENT 'number of new child orders',\n    `numParentLimits` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'number of parent limit messages received for this broker',\n    `userData1` TINYTEXT NOT NULL DEFAULT '' COMMENT 'user supplied additional detail (255 char);supplied via FIX or SRSE when entering order',\n    `userData2` TINYTEXT NOT NULL DEFAULT '' COMMENT 'user supplied additional detail (255 char);supplied via FIX or SRSE when entering order',\n    `numUpdates` INT NOT NULL DEFAULT 0 COMMENT 'number of record updates (cumulative for the day)',\n    `timestamp` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000',\n    CONSTRAINT nonnegative_groupingCode CHECK(ASCII(groupingCode) < 56),\n    CONSTRAINT nonnegative_parentNumber CHECK(ASCII(parentNumber) < 56),\n    CONSTRAINT nonnegative_baseParentNumber CHECK(ASCII(baseParentNumber) < 56),\n    CONSTRAINT nonnegative_modifyNumber CHECK(ASCII(modifyNumber) < 56),\n    CONSTRAINT nonnegative_noticeNumber CHECK(ASCII(noticeNumber) < 56),\n    CONSTRAINT nonnegative_riskGroupId CHECK(ASCII(riskGroupId) < 56),\n    PRIMARY KEY USING HASH (`ticker_tk`,`ticker_at`,`ticker_ts`,`accnt`,`spdrSource`,`groupingCode`,`orderSide`,`clientFirm`),\n    KEY `AccntIndex` (`accnt`) USING HASH,\n    KEY `ClientFirmIndex` (`clientFirm`) USING HASH,\n    KEY `UserNameIndex` (`userName`) USING HASH\n) ENGINE=SRSE DEFAULT CHARSET=LATIN1 COMMENT='SpdrMLegBrkrState records are published by execution engines and describe the current state of a broker that is managing a SpiderRock parent order.  These records include a description of the active child orders managed by the broker.  Records are updated whenever a child order changes and also at other times but are not completely live and may not always reflect current market data or limit levels for working orders.';\n\n"})}),"\n",(0,d.jsx)(t.h3,{id:"select-table-example-query",children:"SELECT TABLE EXAMPLE QUERY"}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-sql",children:"SELECT\n    `ticker_at`,\n    `ticker_ts`,\n    `ticker_tk`,\n    `accnt`,\n    `spdrSource`,\n    `groupingCode`,\n    `orderSide`,\n    `clientFirm`,\n    `engineName`,\n    `parentNumber`,\n    `baseParentNumber`,\n    `modifyNumber`,\n    `altOrderId`,\n    `packageId`,\n    `altAccnt`,\n    `altUserName`,\n    `stageType`,\n    `startType`,\n    `isFlagged`,\n    `noticeNumber`,\n    `execBrkrCode`,\n    `spreadClass`,\n    `spreadFlavor`,\n    `stockSide`,\n    `ssaleFlag`,\n    `locateQuan`,\n    `locateFirm`,\n    `locatePool`,\n    `stockShares`,\n    `stockLegId`,\n    `stockFillQuan`,\n    `stockAvgFillPrice`,\n    `refUPrc`,\n    `liveUPrc`,\n    `uPriceFormat`,\n    `stockCpx`,\n    `stockCsz`,\n    `stockCex`,\n    `numLegs`,\n    `secKey1_at`,\n    `secKey1_ts`,\n    `secKey1_tk`,\n    `secKey1_yr`,\n    `secKey1_mn`,\n    `secKey1_dy`,\n    `secKey1_xx`,\n    `secKey1_cp`,\n    `secType1`,\n    `ratio1`,\n    `side1`,\n    `positionType1`,\n    `legId1`,\n    `fillQuan1`,\n    `avgFillPrice1`,\n    `vega1`,\n    `refUPrc1`,\n    `refDelta1`,\n    `refEarnCnt1`,\n    `liveUPrc1`,\n    `priceFormat1`,\n    `legCpx1`,\n    `legCsz1`,\n    `legCex1`,\n    `legCmplAvgPrice1`,\n    `legCmplSecKey1_at`,\n    `legCmplSecKey1_ts`,\n    `legCmplSecKey1_tk`,\n    `legCmplSecKey1_yr`,\n    `legCmplSecKey1_mn`,\n    `legCmplSecKey1_dy`,\n    `legCmplSecKey1_xx`,\n    `legCmplSecKey1_cp`,\n    `legCmplSecType1`,\n    `secKey2_at`,\n    `secKey2_ts`,\n    `secKey2_tk`,\n    `secKey2_yr`,\n    `secKey2_mn`,\n    `secKey2_dy`,\n    `secKey2_xx`,\n    `secKey2_cp`,\n    `secType2`,\n    `ratio2`,\n    `side2`,\n    `positionType2`,\n    `legId2`,\n    `fillQuan2`,\n    `avgFillPrice2`,\n    `vega2`,\n    `refUPrc2`,\n    `refDelta2`,\n    `refEarnCnt2`,\n    `liveUPrc2`,\n    `priceFormat2`,\n    `legCpx2`,\n    `legCsz2`,\n    `legCex2`,\n    `legCmplAvgPrice2`,\n    `legCmplSecKey2_at`,\n    `legCmplSecKey2_ts`,\n    `legCmplSecKey2_tk`,\n    `legCmplSecKey2_yr`,\n    `legCmplSecKey2_mn`,\n    `legCmplSecKey2_dy`,\n    `legCmplSecKey2_xx`,\n    `legCmplSecKey2_cp`,\n    `legCmplSecType2`,\n    `secKey3_at`,\n    `secKey3_ts`,\n    `secKey3_tk`,\n    `secKey3_yr`,\n    `secKey3_mn`,\n    `secKey3_dy`,\n    `secKey3_xx`,\n    `secKey3_cp`,\n    `secType3`,\n    `ratio3`,\n    `side3`,\n    `positionType3`,\n    `legId3`,\n    `fillQuan3`,\n    `avgFillPrice3`,\n    `vega3`,\n    `refUPrc3`,\n    `refDelta3`,\n    `refEarnCnt3`,\n    `liveUPrc3`,\n    `priceFormat3`,\n    `legCpx3`,\n    `legCsz3`,\n    `legCex3`,\n    `legCmplAvgPrice3`,\n    `legCmplSecKey3_at`,\n    `legCmplSecKey3_ts`,\n    `legCmplSecKey3_tk`,\n    `legCmplSecKey3_yr`,\n    `legCmplSecKey3_mn`,\n    `legCmplSecKey3_dy`,\n    `legCmplSecKey3_xx`,\n    `legCmplSecKey3_cp`,\n    `legCmplSecType3`,\n    `secKey4_at`,\n    `secKey4_ts`,\n    `secKey4_tk`,\n    `secKey4_yr`,\n    `secKey4_mn`,\n    `secKey4_dy`,\n    `secKey4_xx`,\n    `secKey4_cp`,\n    `secType4`,\n    `ratio4`,\n    `side4`,\n    `positionType4`,\n    `legId4`,\n    `fillQuan4`,\n    `avgFillPrice4`,\n    `vega4`,\n    `refUPrc4`,\n    `refDelta4`,\n    `refEarnCnt4`,\n    `liveUPrc4`,\n    `priceFormat4`,\n    `legCpx4`,\n    `legCsz4`,\n    `legCex4`,\n    `legCmplAvgPrice4`,\n    `legCmplSecKey4_at`,\n    `legCmplSecKey4_ts`,\n    `legCmplSecKey4_tk`,\n    `legCmplSecKey4_yr`,\n    `legCmplSecKey4_mn`,\n    `legCmplSecKey4_dy`,\n    `legCmplSecKey4_xx`,\n    `legCmplSecKey4_cp`,\n    `legCmplSecType4`,\n    `secKey5_at`,\n    `secKey5_ts`,\n    `secKey5_tk`,\n    `secKey5_yr`,\n    `secKey5_mn`,\n    `secKey5_dy`,\n    `secKey5_xx`,\n    `secKey5_cp`,\n    `secType5`,\n    `ratio5`,\n    `side5`,\n    `positionType5`,\n    `legId5`,\n    `fillQuan5`,\n    `avgFillPrice5`,\n    `vega5`,\n    `refUPrc5`,\n    `refDelta5`,\n    `refEarnCnt5`,\n    `liveUPrc5`,\n    `priceFormat5`,\n    `legCpx5`,\n    `legCsz5`,\n    `legCex5`,\n    `legCmplAvgPrice5`,\n    `legCmplSecKey5_at`,\n    `legCmplSecKey5_ts`,\n    `legCmplSecKey5_tk`,\n    `legCmplSecKey5_yr`,\n    `legCmplSecKey5_mn`,\n    `legCmplSecKey5_dy`,\n    `legCmplSecKey5_xx`,\n    `legCmplSecKey5_cp`,\n    `legCmplSecType5`,\n    `secKey6_at`,\n    `secKey6_ts`,\n    `secKey6_tk`,\n    `secKey6_yr`,\n    `secKey6_mn`,\n    `secKey6_dy`,\n    `secKey6_xx`,\n    `secKey6_cp`,\n    `secType6`,\n    `ratio6`,\n    `side6`,\n    `positionType6`,\n    `legId6`,\n    `fillQuan6`,\n    `avgFillPrice6`,\n    `vega6`,\n    `refUPrc6`,\n    `refDelta6`,\n    `refEarnCnt6`,\n    `liveUPrc6`,\n    `priceFormat6`,\n    `legCpx6`,\n    `legCsz6`,\n    `legCex6`,\n    `legCmplAvgPrice6`,\n    `legCmplSecKey6_at`,\n    `legCmplSecKey6_ts`,\n    `legCmplSecKey6_tk`,\n    `legCmplSecKey6_yr`,\n    `legCmplSecKey6_mn`,\n    `legCmplSecKey6_dy`,\n    `legCmplSecKey6_xx`,\n    `legCmplSecKey6_cp`,\n    `legCmplSecType6`,\n    `mlegVega`,\n    `mlegWtVega`,\n    `mlegDelta`,\n    `mlegGamma`,\n    `mlegTheta`,\n    `description`,\n    `orderSize`,\n    `orderActiveSize`,\n    `leavesQuantity`,\n    `spdrOrderStatus`,\n    `spdrCloseReason`,\n    `spdrRejectReason`,\n    `spdrCloseDetailTxt`,\n    `activeHoldState`,\n    `activeHoldReason`,\n    `openLegs`,\n    `cumSquareQty`,\n    `avgSquarePrc`,\n    `cumPartialQty`,\n    `completionType`,\n    `completionState`,\n    `avgSquareCmplPrice`,\n    `fillVega`,\n    `fillWtVega`,\n    `fillDelta`,\n    `fillDDelta`,\n    `fillGamma`,\n    `fillTheta`,\n    `lastFillDttm`,\n    `riskLimitSize`,\n    `riskLimitDesc`,\n    `riskLimitLevel`,\n    `maxProgress`,\n    `maxProgressDetail`,\n    `maxProgressTime`,\n    `algoState`,\n    `algoCounter`,\n    `makeState`,\n    `makeCounter`,\n    `mktRespState`,\n    `mktRespCounter`,\n    `brokerState`,\n    `brokerCounter`,\n    `spdrMktState`,\n    `spdrBrokerStatus`,\n    `progressRuleDetail`,\n    `lastChildRejectDttm`,\n    `lastChildRejectText`,\n    `riskGroupId`,\n    `triggerGroupId`,\n    `hedgeGroupingCode`,\n    `autoHedge`,\n    `hedgeInstrument`,\n    `hedgeSecKey_at`,\n    `hedgeSecKey_ts`,\n    `hedgeSecKey_tk`,\n    `hedgeSecKey_yr`,\n    `hedgeSecKey_mn`,\n    `hedgeSecKey_dy`,\n    `hedgeSecType`,\n    `hedgeBetaRatio`,\n    `hedgeScope`,\n    `externHedgeExDest`,\n    `externHedgeParams`,\n    `hedgeFillUMarkLmtPrc`,\n    `bestWayPrc`,\n    `wrstWayPrc`,\n    `bestWaySz`,\n    `wrstWaySz`,\n    `surfacePrc`,\n    `surfaceVol`,\n    `surfaceUPrc`,\n    `limitPrice`,\n    `limitRefUPrc`,\n    `limitErr`,\n    `makeLimitPrice`,\n    `takeLimitPrice`,\n    `cxlUPrcRange`,\n    `minUBid`,\n    `maxUAsk`,\n    `minMaxType`,\n    `leadSide`,\n    `maxCompletionSlippage`,\n    `orderRefPremium`,\n    `strategy`,\n    `userName`,\n    `visibleInSV`,\n    `spdrComment`,\n    `takeReachRule`,\n    `maxExposureSize`,\n    `numMakeExchanges`,\n    `publicSize`,\n    `progressRule`,\n    `progressSliceCnt`,\n    `progressExposeTime`,\n    `maxChildOrders`,\n    `exchMask`,\n    `marketSession`,\n    `startDttm`,\n    `orderDuration`,\n    `activeDuration`,\n    `goodTillDttm`,\n    `expireDttm`,\n    `parentOrderHandling`,\n    `parentBalanceHandling`,\n    `atsVisibility`,\n    `orderLimitType`,\n    `orderVolLimit`,\n    `orderPrcLimit`,\n    `orderRefUPrc`,\n    `orderRefDe`,\n    `orderRefGa`,\n    `orderPrcOffset`,\n    `takeLimitClass`,\n    `takeAlphaType`,\n    `takeAlphaFactor`,\n    `takeAlphaProbability`,\n    `takeSurfPrcOffset`,\n    `takeSurfVolOffset`,\n    `takeSurfWidOffset`,\n    `makeLimitClass`,\n    `makeAlphaType`,\n    `makeAlphaFactor`,\n    `makeAlphaProbability`,\n    `makeSurfPrcOffset`,\n    `makeSurfVolOffset`,\n    `makeSurfWidOffset`,\n    `orderRefEventMult`,\n    `orderRefEventDttm`,\n    `mlegProbLimit`,\n    `mlegSurfOffset`,\n    `externExDest`,\n    `orderDttm`,\n    `minSurfVol`,\n    `maxSurfVol`,\n    `minSurfPrc`,\n    `maxSurfPrc`,\n    `minSurfUPrc`,\n    `maxSurfUPrc`,\n    `minQteWidth`,\n    `avgQteWidth`,\n    `cntQteWidth`,\n    `arriveBid`,\n    `arriveAsk`,\n    `totalSeconds`,\n    `workingSeconds`,\n    `prtActiveCnt`,\n    `prtQtyActive`,\n    `cumExchFee`,\n    `cumM10Pnl`,\n    `cumArrivalPnl`,\n    `uPrcDrift`,\n    `sVolDrift`,\n    `maxGrpDayDDeltaLn`,\n    `maxGrpDayDDeltaSh`,\n    `maxGrpDayContractsLn`,\n    `maxGrpDayContractsSh`,\n    `maxGrpDayContractsAbs`,\n    `maxGrpDayVegaLn`,\n    `maxGrpDayVegaSh`,\n    `maxGrpDayVegaAbs`,\n    `grpDayVegaRatio`,\n    `maxGrpDayRMetric1Ln`,\n    `maxGrpDayRMetric1Sh`,\n    `maxGrpDayRMetric1Abs`,\n    `grpDayRMetric1Ratio`,\n    `refRMetric1Src`,\n    `orderRefRMetric1`,\n    `cpx1`,\n    `csz1`,\n    `cex1`,\n    `cpx2`,\n    `csz2`,\n    `cex2`,\n    `cMore`,\n    `numNewOrders`,\n    `numParentLimits`,\n    `userData1`,\n    `userData2`,\n    `numUpdates`,\n    `timestamp`\nFROM `SRTrade`.`MsgSRMLegBrkrState`\nWHERE \n    /* Replace with a ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') */ \n    `ticker_at` = 'None'\n  AND\n    /* Replace with a ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') */ \n    `ticker_ts` = 'None'\n  AND\n    /* Replace with a VARCHAR(12) */ \n    `ticker_tk` = 'Example_ticker_tk'\n  AND\n    /* Replace with a VARCHAR(16) */ \n    `accnt` = 'Example_accnt'\n  AND\n    /* Replace with a ENUM('None','SpdrTicket','SpdrSingle','SRSE','FIX','HedgeTool','TradeHedge','OpenHedge','AutoHedge','Orphan','RiskManager','OrderManager','ManagedOrder','RFQRespSrvr','Legger','SRSEDrop','FixDrop','TicketDrop','SysTest','RFRResponse','AllocOmni','AllocClient','CertGateway','MLegResponse','LeggerX','DropManager','AutoHedgeSrvr','AuctionStrategySrvr','AllocBlockFace','AllocBlockCust','IceChatGateway','EXS2SRC','MLinkResponse','AutoResponderVD','AutoResponderRC','AutoResponderSN','AutoResponderBX','MLink','SymChatGateway','RiskDrop') */ \n    `spdrSource` = 'None'\n  AND\n    /* Replace with a CHAR(19) */\n    `groupingCode` = 'Example_groupingCode'\n  AND\n    /* Replace with a ENUM('None','Buy','Sell') */ \n    `orderSide` = 'None'\n  AND\n    /* Replace with a VARCHAR(16) */ \n    `clientFirm` = 'Example_clientFirm';\n"})}),"\n",(0,d.jsx)(t.h3,{id:"doc-columns-query",children:"Doc Columns Query"}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-sql",children:"SELECT * FROM SRTrade.doccolumns WHERE TABLE_NAME='SRMLegBrkrState' ORDER BY ordinal_position ASC;\n"})})]})}function h(e={}){let{wrapper:t}={...(0,l.a)(),...e.components};return t?(0,d.jsx)(t,{...e,children:(0,d.jsx)(x,{...e})}):x(e)}},91503:function(e,t,r){r.d(t,{Z:function(){return i},a:function(){return s}});var n=r(75271);let d={},l=n.createContext(d);function s(e){let t=n.useContext(l);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:s(e.components),n.createElement(l.Provider,{value:t},e.children)}}}]);