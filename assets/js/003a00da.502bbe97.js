"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[53622],{72216:(e,L,r)=>{r.r(L),r.d(L,{assets:()=>n,contentTitle:()=>N,default:()=>E,frontMatter:()=>T,metadata:()=>i,toc:()=>a});var s=r(74848),t=r(28453);const T={title:"LiveExpirySurface"},N=void 0,i={id:"MessageSchemas/Schema/SRSE Products/SRAnalytics/LiveExpirySurface/LiveExpirySurface",title:"LiveExpirySurface",description:"V8 Message Definition",source:"@site/docs/MessageSchemas/Schema/SRSE Products/SRAnalytics/LiveExpirySurface/LiveExpirySurface.md",sourceDirName:"MessageSchemas/Schema/SRSE Products/SRAnalytics/LiveExpirySurface",slug:"/MessageSchemas/Schema/SRSE Products/SRAnalytics/LiveExpirySurface/",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRAnalytics/LiveExpirySurface/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"LiveExpirySurface"},sidebar:"messageSchemasSidebar",previous:{title:"LiveAtmVol",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRAnalytics/LiveAtmVol/"},next:{title:"LiveIVarSwapFixedTerm",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRAnalytics/LiveIVarSwapFixedTerm/"}},n={},a=[];function o(e){const L={a:"a",code:"code",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(L.p,{children:(0,s.jsx)(L.a,{href:"../../../Topics/analytics/LiveExpirySurface",children:"V8 Message Definition"})}),"\n",(0,s.jsx)(L.pre,{children:(0,s.jsx)(L.code,{className:"language-sql",children:"CREATE TABLE `SRAnalytics`.`MsgLiveExpirySurface` (\n    `ekey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None',\n    `ekey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None',\n    `ekey_tk` VARCHAR(12) NOT NULL DEFAULT '',\n    `ekey_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0,\n    `ekey_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0,\n    `ekey_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0,\n    `surfaceType` ENUM('None','Live','PrevDay','Interp','Close','Test') NOT NULL DEFAULT 'None',\n    `uPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'effective uPrc used for surface fitting',\n    `uPrcDriver` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier driver (mid-market)',\n    `years` FLOAT NOT NULL DEFAULT 0 COMMENT 'time to expiration (in years)',\n    `rate` FLOAT NOT NULL DEFAULT 0 COMMENT 'average interest rate to expiration (discount rate)',\n    `sdiv` FLOAT NOT NULL DEFAULT 0 COMMENT 'stock dividend (borrow rate)',\n    `atmVol` FLOAT NOT NULL DEFAULT 0 COMMENT 'atm vol (xAxis = 0)',\n    `atmSlope` FLOAT NOT NULL DEFAULT 0 COMMENT 'volatility surface slope (dVol / dXAxis) @ ATM (xAxis=0)',\n    `fitRate` FLOAT NOT NULL DEFAULT 0,\n    `axisFUPrc` FLOAT NOT NULL DEFAULT 0 COMMENT 'axis FwdUPrc (fwd underlying price used to compute xAxis)',\n    `axisVolRT` FLOAT NOT NULL DEFAULT 0 COMMENT 'axis volatility x sqrt(years) (used to compute xAxis) [usually the minimum curve volatility]',\n    `skewMult` FLOAT NOT NULL DEFAULT 0 COMMENT 'sVol = skewMult * BasisSkewFn(xMult * xAxis - xShift)',\n    `xMult` FLOAT NOT NULL DEFAULT 0,\n    `xShift` FLOAT NOT NULL DEFAULT 0,\n    `skewC00` FLOAT NOT NULL DEFAULT 0 COMMENT 'curve coeff[0]',\n    `skewC01` FLOAT NOT NULL DEFAULT 0 COMMENT 'curve coeff[1]',\n    `skewC02` FLOAT NOT NULL DEFAULT 0,\n    `skewC03` FLOAT NOT NULL DEFAULT 0,\n    `skewC04` FLOAT NOT NULL DEFAULT 0,\n    `skewC05` FLOAT NOT NULL DEFAULT 0,\n    `skewC06` FLOAT NOT NULL DEFAULT 0,\n    `skewC07` FLOAT NOT NULL DEFAULT 0,\n    `skewC08` FLOAT NOT NULL DEFAULT 0,\n    `skewC09` FLOAT NOT NULL DEFAULT 0,\n    `skewC10` FLOAT NOT NULL DEFAULT 0,\n    `skewC11` FLOAT NOT NULL DEFAULT 0,\n    `skewC12` FLOAT NOT NULL DEFAULT 0,\n    `skewC13` FLOAT NOT NULL DEFAULT 0,\n    `skewC14` FLOAT NOT NULL DEFAULT 0,\n    `skewC15` FLOAT NOT NULL DEFAULT 0,\n    `skewC16` FLOAT NOT NULL DEFAULT 0,\n    `skewC17` FLOAT NOT NULL DEFAULT 0,\n    `skewC18` FLOAT NOT NULL DEFAULT 0,\n    `skewC19` FLOAT NOT NULL DEFAULT 0,\n    `skewC20` FLOAT NOT NULL DEFAULT 0,\n    `skewC21` FLOAT NOT NULL DEFAULT 0,\n    `skewC22` FLOAT NOT NULL DEFAULT 0,\n    `skewC23` FLOAT NOT NULL DEFAULT 0,\n    `skewC24` FLOAT NOT NULL DEFAULT 0,\n    `skewC25` FLOAT NOT NULL DEFAULT 0,\n    `skewC26` FLOAT NOT NULL DEFAULT 0,\n    `skewC27` FLOAT NOT NULL DEFAULT 0,\n    `skewC28` FLOAT NOT NULL DEFAULT 0,\n    `cpAdjD04` FLOAT NOT NULL DEFAULT 0 COMMENT 'xAxis = -4.0',\n    `cpAdjD03` FLOAT NOT NULL DEFAULT 0 COMMENT 'xAxis = -3.0',\n    `cpAdjD02` FLOAT NOT NULL DEFAULT 0 COMMENT 'xAxis = -2.0',\n    `cpAdjD01` FLOAT NOT NULL DEFAULT 0 COMMENT 'xAxis = -1.0',\n    `cpAdjU01` FLOAT NOT NULL DEFAULT 0 COMMENT 'xAxis = +1.0',\n    `cpAdjU02` FLOAT NOT NULL DEFAULT 0 COMMENT 'xAxis = +2.0',\n    `cpAdjU03` FLOAT NOT NULL DEFAULT 0 COMMENT 'xAxis = +3.0',\n    `cpAdjU04` FLOAT NOT NULL DEFAULT 0 COMMENT 'xAxis = +4.0',\n    `tradeableStatus` ENUM('None','OK','SurfaceErr','LowCCnt','LowPCnt','FitPrcErr','BidAskMiss','LowCounter','DefaultSkew','SessionMiss','BaseErr','SwitchDelay','WideMktV','WideMktP','WideUMkt','UWidthEma','CCntEma','PCntEma','VWidthEma','PWidthEma','Closed') NOT NULL DEFAULT 'None' COMMENT 'indicates whether the surface is currently tradeable or not (all server surface integrity checks pass)',\n    `surfaceResult` ENUM('None','OK','EOD','Init','Cache','PrevDay','NullExpIdx','NoStrikes','NoBaseCurve','BadBootAtm','NoGoodStrikes','BadAtmVol','Bootstrap','NoUPrc','NoIVols','NoModelPts','ZeroYears','NoSimpleVol','OptMktNotOpn','NoBaseSurface','UPrcOffCnt','SkewKnotCnt','Exception','AxisError','CAskFit1Err','CAskFit2Err','PAskFit1Err','PAskFit2Err','CBidFit1Err','CBidFit2Err','PBidFit1Err','PBidFit2Err','CobsSampleErr','NoPrcFit','NumStrikes','CMidFitErr','PMidFitErr','StrikeCount','VolKnotCnt','InterpError','NoAtmStrike','CobsConvexFitErr','CobsMidFitErr','ProxyError','NoOptExp','Expired','NoUnderlier','NoBaseUnderlier','InvalidUPrc','ZeroUPrc','WideUMkt','StalePrcFit','NoPrcCurves','PriceError','ConvergeFail','NoUPrcRatio','NoSDivValue') NOT NULL DEFAULT 'None',\n    `marketSession` ENUM('None','PreMkt','RegMkt','PostMkt','PreRegMkt','RegPostMkt','AllDay') NOT NULL DEFAULT 'None' COMMENT 'market session this surface is from',\n    `timestamp` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000',\n    PRIMARY KEY USING HASH (`ekey_tk`,`ekey_yr`,`ekey_mn`,`ekey_dy`,`ekey_at`,`ekey_ts`,`surfaceType`)\n) ENGINE=SRSE DEFAULT CHARSET=LATIN1 COMMENT='LiveExpirySurface (surfaceType = \\'Live\\') records are computed and publish continuously during trading hours and represent a current best implied volatility market fit.\\nSurfaceType = \\'PriorDay\\' records contain the `closing surface record from the prior trading period (usually from just before the last main session close).';\n\n"})})]})}function E(e={}){const{wrapper:L}={...(0,t.R)(),...e.components};return L?(0,s.jsx)(L,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},28453:(e,L,r)=>{r.d(L,{R:()=>N,x:()=>i});var s=r(96540);const t={},T=s.createContext(t);function N(e){const L=s.useContext(T);return s.useMemo((function(){return"function"==typeof e?e(L):{...L,...e}}),[L,e])}function i(e){let L;return L=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:N(e.components),s.createElement(T.Provider,{value:L},e.children)}}}]);