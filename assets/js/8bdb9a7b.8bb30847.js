"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[3886],{8587:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>c,toc:()=>h});var r=t(74848),i=t(28453),n=t(11470),d=t(19365);const l={title:"LiveSurfaceAtm"},a="Schema: LiveSurfaceAtm (ID: 1030)",c={id:"MessageSchemas/Schema/Topics/analytics/LiveSurfaceAtm",title:"LiveSurfaceAtm",description:"METADATA",source:"@site/versioned_docs/version-8.4.10.2/MessageSchemas/Schema/Topics/1000-analytics/LiveSurfaceAtm.md",sourceDirName:"MessageSchemas/Schema/Topics/1000-analytics",slug:"/MessageSchemas/Schema/Topics/analytics/LiveSurfaceAtm",permalink:"/docs/8.4.10.2/MessageSchemas/Schema/Topics/analytics/LiveSurfaceAtm",draft:!1,unlisted:!1,tags:[],version:"8.4.10.2",frontMatter:{title:"LiveSurfaceAtm"},sidebar:"messageSchemasSidebar",previous:{title:"LiveRevConQuote",permalink:"/docs/8.4.10.2/MessageSchemas/Schema/Topics/analytics/LiveRevConQuote"},next:{title:"LiveSurfaceCurve",permalink:"/docs/8.4.10.2/MessageSchemas/Schema/Topics/analytics/LiveSurfaceCurve"}},o={},h=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3}];function x(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.h1,{id:"schema-livesurfaceatm-id-1030",children:["Schema: LiveSurfaceAtm ",(0,r.jsx)("span",{className:"small-text",children:"(ID: 1030)"})]}),"\n",(0,r.jsx)(s.h3,{id:"metadata",children:"METADATA"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Attribute"}),(0,r.jsx)(s.th,{children:"Value"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Topic"}),(0,r.jsx)(s.td,{children:"1000-analytics"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"MLink Token"}),(0,r.jsx)(s.td,{children:"SRMLinkAnalytics"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"SRSE Product"}),(0,r.jsx)(s.td,{children:"SRAnalytics"})]})]})]}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Note:"})," The symbol ",(0,r.jsx)(s.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"body",children:"BODY"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"#"}),(0,r.jsx)(s.th,{children:"Field"}),(0,r.jsx)(s.th,{children:"Type"}),(0,r.jsx)(s.th,{children:"Comment"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"10="}),(0,r.jsx)(s.td,{children:"ekey"}),(0,r.jsx)(s.td,{children:"ExpiryKey"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"100"}),(0,r.jsx)(s.td,{children:"ticker"}),(0,r.jsx)(s.td,{children:"TickerKey"}),(0,r.jsx)(s.td,{children:"underlying stock key that this option expiration attaches to"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"103"}),(0,r.jsx)(s.td,{children:"fkey"}),(0,r.jsx)(s.td,{children:"ExpiryKey"}),(0,r.jsx)(s.td,{children:"future that this option expiration month written on (if any)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"106"}),(0,r.jsx)(s.td,{children:"uBid"}),(0,r.jsx)(s.td,{children:"double"}),(0,r.jsx)(s.td,{children:"underlier bid price"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"109"}),(0,r.jsx)(s.td,{children:"uAsk"}),(0,r.jsx)(s.td,{children:"double"}),(0,r.jsx)(s.td,{children:"underlier ask price"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"112"}),(0,r.jsx)(s.td,{children:"years"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"time to expiration (in years)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"115"}),(0,r.jsx)(s.td,{children:"rate"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"interest rate"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"118"}),(0,r.jsx)(s.td,{children:"sdiv"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"stock dividend (borrow rate)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"121"}),(0,r.jsx)(s.td,{children:"ddiv"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"present value of discrete dividend stream"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"124"}),(0,r.jsx)(s.td,{children:"exType"}),(0,r.jsx)(s.td,{children:"byte"}),(0,r.jsx)(s.td,{children:"exercise type of the options used to compute this surface"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"127"}),(0,r.jsx)(s.td,{children:"modelType"}),(0,r.jsx)(s.td,{children:"byte"}),(0,r.jsx)(s.td,{children:"option pricing model used for price calcs"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"130"}),(0,r.jsx)(s.td,{children:"earnCnt"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"number of qualifying earnings events prior to expiration [can be fractional] (from StockEarningsCalendar)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"133"}),(0,r.jsx)(s.td,{children:"earnCntAdj"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"number of qualifying earnings events prior to expiration [adjusted] (from StockEarningsCalendar + LiveSurfaceTerm)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"136"}),(0,r.jsx)(s.td,{children:"axisVolRT"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"axis volatility x sqrt(years) (used to compute xAxis) [usually 4m atm vol]"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"139"}),(0,r.jsx)(s.td,{children:"axisFUPrc"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"axis FwdUPrc (fwd underlying price used to compute xAxis)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"142"}),(0,r.jsx)(s.td,{children:"moneynessType"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"../../../Enums/MoneynessType",children:"enum : MoneynessType"})}),(0,r.jsx)(s.td,{children:"moneyness (xAxis) convention"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"145"}),(0,r.jsx)(s.td,{children:"underlierMode"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"../../../Enums/UnderlierMode",children:"enum : UnderlierMode"})}),(0,r.jsx)(s.td,{children:"underlier pricing mode (None=use spot/stock market; FrontMonth=use front month future market * uPrcRatio; Actual = use actual underlier future market)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"148"}),(0,r.jsx)(s.td,{children:"priceQuoteType"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"../../../Enums/PriceQuoteType",children:"enum : PriceQuoteType"})}),(0,r.jsx)(s.td,{children:"Price or Vol"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"151"}),(0,r.jsx)(s.td,{children:"atmVol"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"atm vol (xAxis = 0)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"154"}),(0,r.jsx)(s.td,{children:"atmCen"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"atm vol (xAxis = 0) (eMove/earnCntAdj censored)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"157"}),(0,r.jsx)(s.td,{children:"atmVolHist"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"historical realized volatility (includes eMoveHist x earnCntAdj adjustment).  Note that this is the default atmVol if no implied markets existed previous day."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"160"}),(0,r.jsx)(s.td,{children:"atmCenHist"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"censored (earnings events removed) historical realized volatility.  Trailing periods is 2x forward time to expiration.  From HistoricalVolatility(windowType=hlCen).mv_nnn"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"163"}),(0,r.jsx)(s.td,{children:"minAtmVol"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"minimum estimated atm vol"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"166"}),(0,r.jsx)(s.td,{children:"maxAtmVol"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"maximum estimated atm vol"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"169"}),(0,r.jsx)(s.td,{children:"eMove"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"implied earnings move (from LiveSurfaceTerm)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"172"}),(0,r.jsx)(s.td,{children:"eMoveHist"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"historical earnings move (avg of trailing 8 moves). From StockEarningsCalendar.eMoveHist"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"175"}),(0,r.jsx)(s.td,{children:"atmMove"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"fixed strike atm move from prior period"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"178"}),(0,r.jsx)(s.td,{children:"atmCenMove"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"fixed strike atm (censored) move from prior period"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"181"}),(0,r.jsx)(s.td,{children:"atmPhi"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"surface phi @ xAxis = 0"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"184"}),(0,r.jsx)(s.td,{children:"atmVega"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"surface vega @ xAxis = 0"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"187"}),(0,r.jsx)(s.td,{children:"slope"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"volatility surface slope (dVol / dXAxis) @ ATM (xAxis=0)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"190"}),(0,r.jsx)(s.td,{children:"varSwapFV"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"variance swap fair value (estimated by numerical integration over OTM price surface)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"193"}),(0,r.jsx)(s.td,{children:"gridType"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"../../../Enums/GridType",children:"enum : GridType"})}),(0,r.jsx)(s.td,{children:"gridType defines D11 - U12 xAxis points + spline type"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"196"}),(0,r.jsx)(s.td,{children:"minXAxis"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"minimum xAxis value; xAxis values to the left extrapolate horizontally"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"199"}),(0,r.jsx)(s.td,{children:"maxXAxis"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"maximum xAxis value; xAxis values to the right extrapolate horizontally"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"202"}),(0,r.jsx)(s.td,{children:"minCurvValue"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"minimum curvature (2nd derivative) of skew curve (can be negative if curve is not strictly convex)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"205"}),(0,r.jsx)(s.td,{children:"minCurvXAxis"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"xAxis of minimum curvature point"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"208"}),(0,r.jsx)(s.td,{children:"maxCurvValue"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"maximum curvature (2nd derivative) of skew curve"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"211"}),(0,r.jsx)(s.td,{children:"maxCurvXAxis"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"xAxis of maximum curvature point"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"214"}),(0,r.jsx)(s.td,{children:"skewMinX"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"xAxis = (effStrike / effAxisFUPrc - 1.0) / axisVolRT; effStrike = strike * strikeRatio; effAxisFUPrc = axisFUPrc * symbolRatio"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"217"}),(0,r.jsx)(s.td,{children:"skewMinY"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"skewMinX / skewMinY are the skew curve minimum point (usually a positive x value and a negative y value)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"220"}),(0,r.jsx)(s.td,{children:"skewD11"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"skew @ D11 point (volatility skew curve)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"223"}),(0,r.jsx)(s.td,{children:"skewD10"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"skew @ D10 point"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"226"}),(0,r.jsx)(s.td,{children:"skewD9"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"skew @ D9 point"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"229"}),(0,r.jsx)(s.td,{children:"skewD8"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"skew @ D8 point"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"232"}),(0,r.jsx)(s.td,{children:"skewD7"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"skew @ D7 point"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"235"}),(0,r.jsx)(s.td,{children:"skewD6"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"skew @ D6 point"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"238"}),(0,r.jsx)(s.td,{children:"skewD5"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"skew @ D5 point"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"241"}),(0,r.jsx)(s.td,{children:"skewD4"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"skew @ D4 point"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"244"}),(0,r.jsx)(s.td,{children:"skewD3"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"skew @ D3 point"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"247"}),(0,r.jsx)(s.td,{children:"skewD2"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"skew @ D2 point"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"250"}),(0,r.jsx)(s.td,{children:"skewD1"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"skew @ D1 point"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"253"}),(0,r.jsx)(s.td,{children:"skewC0"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"central value (@xAxis = 0) [usually zero]"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"256"}),(0,r.jsx)(s.td,{children:"skewU1"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"skew @ U1 point"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"259"}),(0,r.jsx)(s.td,{children:"skewU2"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"skew @ U2 point"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"262"}),(0,r.jsx)(s.td,{children:"skewU3"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"skew @ U3 point"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"265"}),(0,r.jsx)(s.td,{children:"skewU4"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"skew @ U4 point"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"268"}),(0,r.jsx)(s.td,{children:"skewU5"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"skew @ U5 point"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"271"}),(0,r.jsx)(s.td,{children:"skewU6"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"skew @ U6 point"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"274"}),(0,r.jsx)(s.td,{children:"skewU7"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"skew @ U7 point"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"277"}),(0,r.jsx)(s.td,{children:"skewU8"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"skew @ U8 point"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"280"}),(0,r.jsx)(s.td,{children:"skewU9"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"skew @ U9 point"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"283"}),(0,r.jsx)(s.td,{children:"skewU10"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"skew @ U10 point"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"286"}),(0,r.jsx)(s.td,{children:"skewU11"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"skew @ U11 point"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"289"}),(0,r.jsx)(s.td,{children:"sdivD3"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"sdiv @ D3 point"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"292"}),(0,r.jsx)(s.td,{children:"sdivD2"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"sdiv @ D2 point"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"295"}),(0,r.jsx)(s.td,{children:"sdivD1"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"sdiv @ D1 point"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"298"}),(0,r.jsx)(s.td,{children:"sdivU1"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"sdiv @ U1 point"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"301"}),(0,r.jsx)(s.td,{children:"sdivU2"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"sdiv @ U2 point"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"304"}),(0,r.jsx)(s.td,{children:"sdivU3"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"sdiv @ U3 point"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"307"}),(0,r.jsx)(s.td,{children:"pwidth"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"minimum mkt premium width"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"310"}),(0,r.jsx)(s.td,{children:"vwidth"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"minimum mkt volatility width"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"313"}),(0,r.jsx)(s.td,{children:"cCnt"}),(0,r.jsx)(s.td,{children:"byte"}),(0,r.jsx)(s.td,{children:"num call strikes"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"316"}),(0,r.jsx)(s.td,{children:"pCnt"}),(0,r.jsx)(s.td,{children:"byte"}),(0,r.jsx)(s.td,{children:"num put strikes"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"319"}),(0,r.jsx)(s.td,{children:"cBidMiss"}),(0,r.jsx)(s.td,{children:"byte"}),(0,r.jsx)(s.td,{children:"number of call bid violations (surface outside the market)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"322"}),(0,r.jsx)(s.td,{children:"cAskMiss"}),(0,r.jsx)(s.td,{children:"byte"}),(0,r.jsx)(s.td,{children:"number of call ask violations (surface outside the market)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"325"}),(0,r.jsx)(s.td,{children:"pBidMiss"}),(0,r.jsx)(s.td,{children:"byte"}),(0,r.jsx)(s.td,{children:"number of put bid violations"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"328"}),(0,r.jsx)(s.td,{children:"pAskMiss"}),(0,r.jsx)(s.td,{children:"byte"}),(0,r.jsx)(s.td,{children:"number of put ask violations"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"331"}),(0,r.jsx)(s.td,{children:"fitAvgErr"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"surface fit R2 (mid-market values)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"334"}),(0,r.jsx)(s.td,{children:"fitAvgAbsErr"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"mean square error (mid-market values)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"337"}),(0,r.jsx)(s.td,{children:"fitMaxPrcErr"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"worst case surface premium violation"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"340"}),(0,r.jsx)(s.td,{children:"fitErrXX"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"okey_xx of the option with the largest fit error in this expiration"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"343"}),(0,r.jsx)(s.td,{children:"fitErrCP"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"../../../Enums/CallPut",children:"enum : CallPut"})}),(0,r.jsx)(s.td,{children:"okey_cp of the option with the largest fit error in this expiration"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"346"}),(0,r.jsx)(s.td,{children:"fitErrDe"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"delta of fixErrXX"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"349"}),(0,r.jsx)(s.td,{children:"fitErrBid"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"bid of the option with the largest fit error"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"352"}),(0,r.jsx)(s.td,{children:"fitErrAsk"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"ask of the option with the largest fit error"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"355"}),(0,r.jsx)(s.td,{children:"fitErrPrc"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"surface prc of the option with the largest fit error"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"358"}),(0,r.jsx)(s.td,{children:"fitErrVol"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"surface vol of the option with the largest fit error"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"361"}),(0,r.jsx)(s.td,{children:"counter"}),(0,r.jsx)(s.td,{children:"int"}),(0,r.jsx)(s.td,{children:"message counter - number of surface fits today"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"364"}),(0,r.jsx)(s.td,{children:"skewCounter"}),(0,r.jsx)(s.td,{children:"int"}),(0,r.jsx)(s.td,{children:"skew surface fit counter"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"367"}),(0,r.jsx)(s.td,{children:"sdivCounter"}),(0,r.jsx)(s.td,{children:"int"}),(0,r.jsx)(s.td,{children:"sdiv surface fit counter"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"380"}),(0,r.jsx)(s.td,{children:"tradingSession"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"../../../Enums/TradingSession",children:"enum : TradingSession"})}),(0,r.jsx)(s.td,{children:"trading session this surface is from"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"373"}),(0,r.jsx)(s.td,{children:"tradeableStatus"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"../../../Enums/TradeableStatus",children:"enum : TradeableStatus"})}),(0,r.jsx)(s.td,{children:"indicates whether the surface is currently tradeable or not (all server surface integrity checks pass)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"376"}),(0,r.jsx)(s.td,{children:"surfaceResult"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"../../../Enums/SurfaceResult",children:"enum : SurfaceResult"})}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"379"}),(0,r.jsx)(s.td,{children:"timestamp"}),(0,r.jsx)(s.td,{children:"DateTime"}),(0,r.jsx)(s.td,{})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,r.jsxs)(n.A,{children:[(0,r.jsx)(d.A,{value:"Python",label:"Python",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'LiveSurfaceAtm'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n#Required Parameters\n\"apiKey\": API_KEY,\n\"cmd\": 'getschema',\n\"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,r.jsx)(d.A,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=LiveSurfaceAtm'\n\n"})})})]}),"\n",(0,r.jsx)(s.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,r.jsxs)(n.A,{children:[(0,r.jsx)(d.A,{value:"Python",label:"Python",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'LiveSurfaceAtm\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'ticker|fkey|uBid|uAsk|years|rate|sdiv|ddiv|exType|modelType|earnCnt|earnCntAdj|axisVolRT|axisFUPrc|moneynessType|underlierMode|priceQuoteType|atmVol|atmCen|atmVolHist|atmCenHist|minAtmVol|maxAtmVol|eMove|eMoveHist|atmMove|atmCenMove|atmPhi|atmVega|slope|varSwapFV|gridType|minXAxis|maxXAxis|minCurvValue|minCurvXAxis|maxCurvValue|maxCurvXAxis|skewMinX|skewMinY|skewD11|skewD10|skewD9|skewD8|skewD7|skewD6|skewD5|skewD4|skewD3|skewD2|skewD1|skewC0|skewU1|skewU2|skewU3|skewU4|skewU5|skewU6|skewU7|skewU8|skewU9|skewU10|skewU11|sdivD3|sdivD2|sdivD1|sdivU1|sdivU2|sdivU3|pwidth|vwidth|cCnt|pCnt|cBidMiss|cAskMiss|pBidMiss|pAskMiss|fitAvgErr|fitAvgAbsErr|fitMaxPrcErr|fitErrXX|fitErrCP|fitErrDe|fitErrBid|fitErrAsk|fitErrPrc|fitErrVol|counter|skewCounter|sdivCounter|tradingSession|tradeableStatus|surfaceResult|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,r.jsx)(d.A,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=LiveSurfaceAtm' \\\n--data-urlencode 'view=ticker|fkey|uBid|uAsk|years|rate|sdiv|ddiv|exType|modelType|earnCnt|earnCntAdj|axisVolRT|axisFUPrc|moneynessType|underlierMode|priceQuoteType|atmVol|atmCen|atmVolHist|atmCenHist|minAtmVol|maxAtmVol|eMove|eMoveHist|atmMove|atmCenMove|atmPhi|atmVega|slope|varSwapFV|gridType|minXAxis|maxXAxis|minCurvValue|minCurvXAxis|maxCurvValue|maxCurvXAxis|skewMinX|skewMinY|skewD11|skewD10|skewD9|skewD8|skewD7|skewD6|skewD5|skewD4|skewD3|skewD2|skewD1|skewC0|skewU1|skewU2|skewU3|skewU4|skewU5|skewU6|skewU7|skewU8|skewU9|skewU10|skewU11|sdivD3|sdivD2|sdivD1|sdivU1|sdivU2|sdivU3|pwidth|vwidth|cCnt|pCnt|cBidMiss|cAskMiss|pBidMiss|pAskMiss|fitAvgErr|fitAvgAbsErr|fitMaxPrcErr|fitErrXX|fitErrCP|fitErrDe|fitErrBid|fitErrAsk|fitErrPrc|fitErrVol|counter|skewCounter|sdivCounter|tradingSession|tradeableStatus|surfaceResult|timestamp' \\\n--data-urlencode 'where='\n"})})})]}),"\n",(0,r.jsx)(s.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,r.jsxs)(n.A,{children:[(0,r.jsx)(d.A,{value:"Python",label:"Python",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'LiveSurfaceAtm\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'ticker|fkey|uBid|uAsk|years|rate|sdiv|ddiv|exType|modelType|earnCnt|earnCntAdj|axisVolRT|axisFUPrc|moneynessType|underlierMode|priceQuoteType|atmVol|atmCen|atmVolHist|atmCenHist|minAtmVol|maxAtmVol|eMove|eMoveHist|atmMove|atmCenMove|atmPhi|atmVega|slope|varSwapFV|gridType|minXAxis|maxXAxis|minCurvValue|minCurvXAxis|maxCurvValue|maxCurvXAxis|skewMinX|skewMinY|skewD11|skewD10|skewD9|skewD8|skewD7|skewD6|skewD5|skewD4|skewD3|skewD2|skewD1|skewC0|skewU1|skewU2|skewU3|skewU4|skewU5|skewU6|skewU7|skewU8|skewU9|skewU10|skewU11|sdivD3|sdivD2|sdivD1|sdivU1|sdivU2|sdivU3|pwidth|vwidth|cCnt|pCnt|cBidMiss|cAskMiss|pBidMiss|pAskMiss|fitAvgErr|fitAvgAbsErr|fitMaxPrcErr|fitErrXX|fitErrCP|fitErrDe|fitErrBid|fitErrAsk|fitErrPrc|fitErrVol|counter|skewCounter|sdivCounter|tradingSession|tradeableStatus|surfaceResult|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'ticker:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,r.jsx)(d.A,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=LiveSurfaceAtm' \\\n--data-urlencode 'view=ticker|fkey|uBid|uAsk|years|rate|sdiv|ddiv|exType|modelType|earnCnt|earnCntAdj|axisVolRT|axisFUPrc|moneynessType|underlierMode|priceQuoteType|atmVol|atmCen|atmVolHist|atmCenHist|minAtmVol|maxAtmVol|eMove|eMoveHist|atmMove|atmCenMove|atmPhi|atmVega|slope|varSwapFV|gridType|minXAxis|maxXAxis|minCurvValue|minCurvXAxis|maxCurvValue|maxCurvXAxis|skewMinX|skewMinY|skewD11|skewD10|skewD9|skewD8|skewD7|skewD6|skewD5|skewD4|skewD3|skewD2|skewD1|skewC0|skewU1|skewU2|skewU3|skewU4|skewU5|skewU6|skewU7|skewU8|skewU9|skewU10|skewU11|sdivD3|sdivD2|sdivD1|sdivU1|sdivU2|sdivU3|pwidth|vwidth|cCnt|pCnt|cBidMiss|cAskMiss|pBidMiss|pAskMiss|fitAvgErr|fitAvgAbsErr|fitMaxPrcErr|fitErrXX|fitErrCP|fitErrDe|fitErrBid|fitErrAsk|fitErrPrc|fitErrVol|counter|skewCounter|sdivCounter|tradingSession|tradeableStatus|surfaceResult|timestamp' \\\n--data-urlencode 'where=' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=ticker:ASC'\n"})})})]}),"\n",(0,r.jsx)(s.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,r.jsxs)(n.A,{children:[(0,r.jsx)(d.A,{value:"Python",label:"Python",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'LiveSurfaceAtm\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'ticker|fkey|uBid|uAsk|years|rate|sdiv|ddiv|exType|modelType|earnCnt|earnCntAdj|axisVolRT|axisFUPrc|moneynessType|underlierMode|priceQuoteType|atmVol|atmCen|atmVolHist|atmCenHist|minAtmVol|maxAtmVol|eMove|eMoveHist|atmMove|atmCenMove|atmPhi|atmVega|slope|varSwapFV|gridType|minXAxis|maxXAxis|minCurvValue|minCurvXAxis|maxCurvValue|maxCurvXAxis|skewMinX|skewMinY|skewD11|skewD10|skewD9|skewD8|skewD7|skewD6|skewD5|skewD4|skewD3|skewD2|skewD1|skewC0|skewU1|skewU2|skewU3|skewU4|skewU5|skewU6|skewU7|skewU8|skewU9|skewU10|skewU11|sdivD3|sdivD2|sdivD1|sdivU1|sdivU2|sdivU3|pwidth|vwidth|cCnt|pCnt|cBidMiss|cAskMiss|pBidMiss|pAskMiss|fitAvgErr|fitAvgAbsErr|fitMaxPrcErr|fitErrXX|fitErrCP|fitErrDe|fitErrBid|fitErrAsk|fitErrPrc|fitErrVol|counter|skewCounter|sdivCounter|tradingSession|tradeableStatus|surfaceResult|timestamp\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'moneynessType|underlierMode|priceQuoteType|gridType|fitErrCP|tradingSession|tradeableStatus|surfaceResult\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getaggregate\',\n"msgType": MSG_TYPE,\n"measure": MEASURE,\n"group": GROUP,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,r.jsx)(d.A,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=LiveSurfaceAtm' \\\n--data-urlencode 'measure=ticker|fkey|uBid|uAsk|years|rate|sdiv|ddiv|exType|modelType|earnCnt|earnCntAdj|axisVolRT|axisFUPrc|moneynessType|underlierMode|priceQuoteType|atmVol|atmCen|atmVolHist|atmCenHist|minAtmVol|maxAtmVol|eMove|eMoveHist|atmMove|atmCenMove|atmPhi|atmVega|slope|varSwapFV|gridType|minXAxis|maxXAxis|minCurvValue|minCurvXAxis|maxCurvValue|maxCurvXAxis|skewMinX|skewMinY|skewD11|skewD10|skewD9|skewD8|skewD7|skewD6|skewD5|skewD4|skewD3|skewD2|skewD1|skewC0|skewU1|skewU2|skewU3|skewU4|skewU5|skewU6|skewU7|skewU8|skewU9|skewU10|skewU11|sdivD3|sdivD2|sdivD1|sdivU1|sdivU2|sdivU3|pwidth|vwidth|cCnt|pCnt|cBidMiss|cAskMiss|pBidMiss|pAskMiss|fitAvgErr|fitAvgAbsErr|fitMaxPrcErr|fitErrXX|fitErrCP|fitErrDe|fitErrBid|fitErrAsk|fitErrPrc|fitErrVol|counter|skewCounter|sdivCounter|tradingSession|tradeableStatus|surfaceResult|timestamp' \\\n--data-urlencode 'group=moneynessType|underlierMode|priceQuoteType|gridType|fitErrCP|tradingSession|tradeableStatus|surfaceResult' \\\n--data-urlencode 'where='\n"})})})]}),"\n",(0,r.jsx)(s.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,r.jsxs)(n.A,{children:[(0,r.jsx)(d.A,{value:"Python",label:"Python",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'LiveSurfaceAtm\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,r.jsx)(d.A,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=LiveSurfaceAtm' \\\n--data-urlencode 'where='\n"})})})]})]})}function u(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(x,{...e})}):x(e)}},19365:(e,s,t)=>{t.d(s,{A:()=>d});t(96540);var r=t(34164);const i={tabItem:"tabItem_Ymn6"};var n=t(74848);function d(e){let{children:s,hidden:t,className:d}=e;return(0,n.jsx)("div",{role:"tabpanel",className:(0,r.A)(i.tabItem,d),hidden:t,children:s})}},11470:(e,s,t)=>{t.d(s,{A:()=>y});var r=t(96540),i=t(34164),n=t(23104),d=t(56347),l=t(205),a=t(57485),c=t(31682),o=t(70679);function h(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:s}=e;return!!s&&"object"==typeof s&&"value"in s}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function x(e){const{values:s,children:t}=e;return(0,r.useMemo)((()=>{const e=s??function(e){return h(e).map((e=>{let{props:{value:s,label:t,attributes:r,default:i}}=e;return{value:s,label:t,attributes:r,default:i}}))}(t);return function(e){const s=(0,c.X)(e,((e,s)=>e.value===s.value));if(s.length>0)throw new Error(`Docusaurus error: Duplicate values "${s.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[s,t])}function u(e){let{value:s,tabValues:t}=e;return t.some((e=>e.value===s))}function j(e){let{queryString:s=!1,groupId:t}=e;const i=(0,d.W6)(),n=function(e){let{queryString:s=!1,groupId:t}=e;if("string"==typeof s)return s;if(!1===s)return null;if(!0===s&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:s,groupId:t});return[(0,a.aZ)(n),(0,r.useCallback)((e=>{if(!n)return;const s=new URLSearchParams(i.location.search);s.set(n,e),i.replace({...i.location,search:s.toString()})}),[n,i])]}function m(e){const{defaultValue:s,queryString:t=!1,groupId:i}=e,n=x(e),[d,a]=(0,r.useState)((()=>function(e){let{defaultValue:s,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(s){if(!u({value:s,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${s}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return s}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:s,tabValues:n}))),[c,h]=j({queryString:t,groupId:i}),[m,p]=function(e){let{groupId:s}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(s),[i,n]=(0,o.Dv)(t);return[i,(0,r.useCallback)((e=>{t&&n.set(e)}),[t,n])]}({groupId:i}),f=(()=>{const e=c??m;return u({value:e,tabValues:n})?e:null})();(0,l.A)((()=>{f&&a(f)}),[f]);return{selectedValue:d,selectValue:(0,r.useCallback)((e=>{if(!u({value:e,tabValues:n}))throw new Error(`Can't select invalid tab value=${e}`);a(e),h(e),p(e)}),[h,p,n]),tabValues:n}}var p=t(92303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=t(74848);function w(e){let{className:s,block:t,selectedValue:r,selectValue:d,tabValues:l}=e;const a=[],{blockElementScrollPositionUntilNextRender:c}=(0,n.a_)(),o=e=>{const s=e.currentTarget,t=a.indexOf(s),i=l[t].value;i!==r&&(c(s),d(i))},h=e=>{let s=null;switch(e.key){case"Enter":o(e);break;case"ArrowRight":{const t=a.indexOf(e.currentTarget)+1;s=a[t]??a[0];break}case"ArrowLeft":{const t=a.indexOf(e.currentTarget)-1;s=a[t]??a[a.length-1];break}}s?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":t},s),children:l.map((e=>{let{value:s,label:t,attributes:n}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:r===s?0:-1,"aria-selected":r===s,ref:e=>a.push(e),onKeyDown:h,onClick:o,...n,className:(0,i.A)("tabs__item",f.tabItem,n?.className,{"tabs__item--active":r===s}),children:t??s},s)}))})}function k(e){let{lazy:s,children:t,selectedValue:i}=e;const n=(Array.isArray(t)?t:[t]).filter(Boolean);if(s){const e=n.find((e=>e.props.value===i));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:n.map(((e,s)=>(0,r.cloneElement)(e,{key:s,hidden:e.props.value!==i})))})}function g(e){const s=m(e);return(0,v.jsxs)("div",{className:(0,i.A)("tabs-container",f.tabList),children:[(0,v.jsx)(w,{...s,...e}),(0,v.jsx)(k,{...s,...e})]})}function y(e){const s=(0,p.A)();return(0,v.jsx)(g,{...e,children:h(e.children)},String(s))}},28453:(e,s,t)=>{t.d(s,{R:()=>d,x:()=>l});var r=t(96540);const i={},n=r.createContext(i);function d(e){const s=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),r.createElement(n.Provider,{value:s},e.children)}}}]);