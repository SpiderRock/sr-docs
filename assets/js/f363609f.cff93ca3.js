"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([["52131"],{45294:function(e,n,s){s.r(n),s.d(n,{default:()=>u,frontMatter:()=>i,metadata:()=>l,assets:()=>c,toc:()=>g,contentTitle:()=>o});var l=JSON.parse('{"id":"MessageSchemas/Schema/Topics/client-config/PositionHedgePolicyConfig","title":"PositionHedgePolicyConfig","description":"METADATA","source":"@site/docs/MessageSchemas/Schema/Topics/1800-client-config/PositionHedgePolicyConfig.md","sourceDirName":"MessageSchemas/Schema/Topics/1800-client-config","slug":"/MessageSchemas/Schema/Topics/client-config/PositionHedgePolicyConfig","permalink":"/docs/next/MessageSchemas/Schema/Topics/client-config/PositionHedgePolicyConfig","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"PositionHedgePolicyConfig"},"sidebar":"messageSchemasSidebar","previous":{"title":"HedgePolicyAlgoConfig","permalink":"/docs/next/MessageSchemas/Schema/Topics/client-config/HedgePolicyAlgoConfig"},"next":{"title":"PositionHedgeTrigger","permalink":"/docs/next/MessageSchemas/Schema/Topics/client-config/PositionHedgeTrigger"}}'),d=s("52676"),t=s("91503"),r=s("71386"),a=s("9641");let i={title:"PositionHedgePolicyConfig"},o="Schema: PositionHedgePolicyConfig (ID: 1813)",c={},g=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"REPEATING FIELDS",id:"repeating-fields",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3},{value:"Post Msgs API Call",id:"post-msgs-api-call",level:3}];function h(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.a)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.header,{children:(0,d.jsxs)(n.h1,{id:"schema-positionhedgepolicyconfig-id-1813",children:["Schema: PositionHedgePolicyConfig ",(0,d.jsx)("span",{className:"small-text",children:"(ID: 1813)"})]})}),"\n",(0,d.jsx)(n.h3,{id:"metadata",children:"METADATA"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Attribute"}),(0,d.jsx)(n.th,{children:"Value"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Topic"}),(0,d.jsx)(n.td,{children:"1800-client-config"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"MLink Token"}),(0,d.jsx)(n.td,{children:"ClientControl"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"SRSE Product"}),(0,d.jsx)(n.td,{children:"SRControl"})]})]})]}),"\n",(0,d.jsx)("br",{}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Note:"})," The symbol ",(0,d.jsx)(n.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,d.jsx)(n.h3,{id:"body",children:"BODY"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"#"}),(0,d.jsx)(n.th,{children:"Field"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Comment"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"10="}),(0,d.jsx)(n.td,{children:"accnt"}),(0,d.jsx)(n.td,{children:"string(16)"}),(0,d.jsx)(n.td,{})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"11="}),(0,d.jsx)(n.td,{children:"clientFirm"}),(0,d.jsx)(n.td,{children:"string(16)"}),(0,d.jsx)(n.td,{})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"12="}),(0,d.jsx)(n.td,{children:"policy"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"../../../Enums/PositionHedgePolicy",children:"enum : PositionHedgePolicy"})}),(0,d.jsx)(n.td,{})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"100"}),(0,d.jsx)(n.td,{children:"enabled"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,d.jsx)(n.td,{})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"101"}),(0,d.jsx)(n.td,{children:"hedgeDeltaRule"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"../../../Enums/HedgeDeltaRule",children:"enum : HedgeDeltaRule"})}),(0,d.jsx)(n.td,{children:"HedgeDelta Source (IVol = use SR implied surface (sticky strike), IvS = use SR surface (dynamic), TVol = use user supplied theo surface (sticky strike), TvS = use user supplied theo surface (dynamic)) [AccountConfig.hedgeDelta]"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"102"}),(0,d.jsx)(n.td,{children:"binaryDays"}),(0,d.jsx)(n.td,{children:"float"}),(0,d.jsx)(n.td,{children:"used to force delta calcs binary prior to expiration (1.0 = force to binary at the start of the final regular market; 0.5 = force to binary half way through final regular market)"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"107"}),(0,d.jsx)(n.td,{children:"balanceSymbols"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,d.jsx)(n.td,{children:"balance accnt level deltas from all symbols using this policy"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"108"}),(0,d.jsx)(n.td,{children:"hedgeAlgo"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"../../../Enums/HedgeAlgo",children:"enum : HedgeAlgo"})}),(0,d.jsx)(n.td,{})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"109"}),(0,d.jsx)(n.td,{children:"execBrkrAlgo"}),(0,d.jsx)(n.td,{children:"string(32)"}),(0,d.jsx)(n.td,{children:"display name of exec broker algo (should not have spaces)"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"110"}),(0,d.jsx)(n.td,{children:"execBrkrCode"}),(0,d.jsx)(n.td,{children:"string(16)"}),(0,d.jsx)(n.td,{children:"required if BROKER_ALGO"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"111"}),(0,d.jsx)(n.td,{children:"execBkkrTags"}),(0,d.jsx)(n.td,{children:"text1"}),(0,d.jsx)(n.td,{children:"key/value set of algo tags"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"112"}),(0,d.jsx)(n.td,{children:"eodHedgeWindow"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"../../../Enums/HedgeWindow",children:"enum : HedgeWindow"})}),(0,d.jsx)(n.td,{})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"113"}),(0,d.jsx)(n.td,{children:"eodSymHedgeBandDD"}),(0,d.jsx)(n.td,{children:"float"}),(0,d.jsx)(n.td,{children:"individual symbol hedge band ($delta)"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"114"}),(0,d.jsx)(n.td,{children:"eodSymHedgeBandGR"}),(0,d.jsx)(n.td,{children:"float"}),(0,d.jsx)(n.td,{children:"individual symbol hedge band (gamma ratio)"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"115"}),(0,d.jsx)(n.td,{children:"eodBalanceSymbols"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,d.jsx)(n.td,{children:"balance accnt level deltas from all symbols using this policy"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"116"}),(0,d.jsx)(n.td,{children:"eodHedgeAlgo"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"../../../Enums/HedgeAlgo",children:"enum : HedgeAlgo"})}),(0,d.jsx)(n.td,{})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"117"}),(0,d.jsx)(n.td,{children:"eodExecBrkrAlgo"}),(0,d.jsx)(n.td,{children:"string(32)"}),(0,d.jsx)(n.td,{children:"display name of exec broker algo (should not have spaces)"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"118"}),(0,d.jsx)(n.td,{children:"eodExecBrkrCode"}),(0,d.jsx)(n.td,{children:"string(16)"}),(0,d.jsx)(n.td,{children:"required if BROKER_ALGO"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"119"}),(0,d.jsx)(n.td,{children:"eodExecBkkrTags"}),(0,d.jsx)(n.td,{children:"text1"}),(0,d.jsx)(n.td,{children:"key/value set of algo tags that get forwarded to exec broker on order"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"120"}),(0,d.jsx)(n.td,{children:"clsHedgeWindow"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"../../../Enums/ClsHedgeWindow",children:"enum : ClsHedgeWindow"})}),(0,d.jsx)(n.td,{})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"121"}),(0,d.jsx)(n.td,{children:"clsAuctionSymHedgeBandDD"}),(0,d.jsx)(n.td,{children:"float"}),(0,d.jsx)(n.td,{children:"individual symbol hedge band ($delta) (if participating in closing auction)"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"122"}),(0,d.jsx)(n.td,{children:"clsAuctionSymHedgeBandGR"}),(0,d.jsx)(n.td,{children:"float"}),(0,d.jsx)(n.td,{children:"individual symbol hedge band (gamma ratio) (if participating in closing auction)"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"123"}),(0,d.jsx)(n.td,{children:"clsSymHedgeBandDD"}),(0,d.jsx)(n.td,{children:"float"}),(0,d.jsx)(n.td,{children:"individual symbol hedge band ($delta) (if using an EOD algo)"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"124"}),(0,d.jsx)(n.td,{children:"clsSymHedgeBandGR"}),(0,d.jsx)(n.td,{children:"float"}),(0,d.jsx)(n.td,{children:"individual symbol hedge band (gamma ratio) (if using an EOD algo)"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"125"}),(0,d.jsx)(n.td,{children:"clsBalanceSymbols"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,d.jsx)(n.td,{children:"balance accnt level deltas from all symbols using this policy"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"126"}),(0,d.jsx)(n.td,{children:"clsHedgeAlgo"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"../../../Enums/ClsHedgeAlgo",children:"enum : ClsHedgeAlgo"})}),(0,d.jsx)(n.td,{})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"127"}),(0,d.jsx)(n.td,{children:"clsExecBrkrAlgo"}),(0,d.jsx)(n.td,{children:"string(32)"}),(0,d.jsx)(n.td,{children:"display name of exec broker algo (should not have spaces)"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"128"}),(0,d.jsx)(n.td,{children:"clsExecBrkrCode"}),(0,d.jsx)(n.td,{children:"string(16)"}),(0,d.jsx)(n.td,{children:"required if BROKER_ALGO"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"129"}),(0,d.jsx)(n.td,{children:"clsExecBkkrTags"}),(0,d.jsx)(n.td,{children:"text1"}),(0,d.jsx)(n.td,{children:"key/value set of algo tags that get forwarded to exec broker on order"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"130"}),(0,d.jsx)(n.td,{children:"modifiedBy"}),(0,d.jsx)(n.td,{children:"string(24)"}),(0,d.jsx)(n.td,{children:"user who last modified this record"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"131"}),(0,d.jsx)(n.td,{children:"modifiedIn"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"../../../Enums/SysEnvironment",children:"enum : SysEnvironment"})}),(0,d.jsx)(n.td,{})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"132"}),(0,d.jsx)(n.td,{children:"timestamp"}),(0,d.jsx)(n.td,{children:"DateTime"}),(0,d.jsx)(n.td,{children:"timestamp of last modification"})]})]})]}),"\n",(0,d.jsx)(n.h3,{id:"repeating-fields",children:"REPEATING FIELDS"}),"\n",(0,d.jsx)(n.p,{children:"HedgeWaves"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Field"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Comment"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"104"}),(0,d.jsx)(n.td,{children:"hedgeTime"}),(0,d.jsx)(n.td,{children:"TimeSpan"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"105"}),(0,d.jsx)(n.td,{children:"symHedgeBandDD"}),(0,d.jsx)(n.td,{children:"float"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"106"}),(0,d.jsx)(n.td,{children:"symHedgeBandGR"}),(0,d.jsx)(n.td,{children:"float"})]})]})]}),"\n",(0,d.jsx)(n.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,d.jsxs)(r.Z,{children:[(0,d.jsx)(a.Z,{value:"Python",label:"Python",children:(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'PositionHedgePolicyConfig'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n    # Required Parameters\n    \"apiKey\": API_KEY,\n    \"cmd\": 'getschema',\n    \"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,d.jsx)(a.Z,{value:"cUrl",label:"cUrl",children:(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=PositionHedgePolicyConfig'\n\n"})})})]}),"\n",(0,d.jsx)(n.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,d.jsxs)(r.Z,{children:[(0,d.jsx)(a.Z,{value:"Python",label:"Python",children:(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'PositionHedgePolicyConfig\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'enabled|hedgeDeltaRule|binaryDays|balanceSymbols|hedgeAlgo|execBrkrAlgo|execBrkrCode|execBkkrTags|eodHedgeWindow|eodSymHedgeBandDD|eodSymHedgeBandGR|eodBalanceSymbols|eodHedgeAlgo|eodExecBrkrAlgo|eodExecBrkrCode|eodExecBkkrTags|clsHedgeWindow|clsAuctionSymHedgeBandDD|clsAuctionSymHedgeBandGR|clsSymHedgeBandDD|clsSymHedgeBandGR|clsBalanceSymbols|clsHedgeAlgo|clsExecBrkrAlgo|clsExecBrkrCode|clsExecBkkrTags|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,d.jsx)(a.Z,{value:"cUrl",label:"cUrl",children:(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=PositionHedgePolicyConfig' \\\n--data-urlencode 'view=enabled|hedgeDeltaRule|binaryDays|balanceSymbols|hedgeAlgo|execBrkrAlgo|execBrkrCode|execBkkrTags|eodHedgeWindow|eodSymHedgeBandDD|eodSymHedgeBandGR|eodBalanceSymbols|eodHedgeAlgo|eodExecBrkrAlgo|eodExecBrkrCode|eodExecBkkrTags|clsHedgeWindow|clsAuctionSymHedgeBandDD|clsAuctionSymHedgeBandGR|clsSymHedgeBandDD|clsSymHedgeBandGR|clsBalanceSymbols|clsHedgeAlgo|clsExecBrkrAlgo|clsExecBrkrCode|clsExecBkkrTags|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,d.jsx)(n.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,d.jsxs)(r.Z,{children:[(0,d.jsx)(a.Z,{value:"Python",label:"Python",children:(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'PositionHedgePolicyConfig\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'enabled|hedgeDeltaRule|binaryDays|balanceSymbols|hedgeAlgo|execBrkrAlgo|execBrkrCode|execBkkrTags|eodHedgeWindow|eodSymHedgeBandDD|eodSymHedgeBandGR|eodBalanceSymbols|eodHedgeAlgo|eodExecBrkrAlgo|eodExecBrkrCode|eodExecBkkrTags|clsHedgeWindow|clsAuctionSymHedgeBandDD|clsAuctionSymHedgeBandGR|clsSymHedgeBandDD|clsSymHedgeBandGR|clsBalanceSymbols|clsHedgeAlgo|clsExecBrkrAlgo|clsExecBrkrCode|clsExecBkkrTags|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'enabled:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,d.jsx)(a.Z,{value:"cUrl",label:"cUrl",children:(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=PositionHedgePolicyConfig' \\\n--data-urlencode 'view=enabled|hedgeDeltaRule|binaryDays|balanceSymbols|hedgeAlgo|execBrkrAlgo|execBrkrCode|execBkkrTags|eodHedgeWindow|eodSymHedgeBandDD|eodSymHedgeBandGR|eodBalanceSymbols|eodHedgeAlgo|eodExecBrkrAlgo|eodExecBrkrCode|eodExecBkkrTags|clsHedgeWindow|clsAuctionSymHedgeBandDD|clsAuctionSymHedgeBandGR|clsSymHedgeBandDD|clsSymHedgeBandGR|clsBalanceSymbols|clsHedgeAlgo|clsExecBrkrAlgo|clsExecBrkrCode|clsExecBkkrTags|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'where=accnt:eq:ExampleString' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=enabled:ASC'\n"})})})]}),"\n",(0,d.jsx)(n.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,d.jsxs)(r.Z,{children:[(0,d.jsx)(a.Z,{value:"Python",label:"Python",children:(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'PositionHedgePolicyConfig\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'enabled|hedgeDeltaRule|binaryDays|balanceSymbols|hedgeAlgo|execBrkrAlgo|execBrkrCode|execBkkrTags|eodHedgeWindow|eodSymHedgeBandDD|eodSymHedgeBandGR|eodBalanceSymbols|eodHedgeAlgo|eodExecBrkrAlgo|eodExecBrkrCode|eodExecBkkrTags|clsHedgeWindow|clsAuctionSymHedgeBandDD|clsAuctionSymHedgeBandGR|clsSymHedgeBandDD|clsSymHedgeBandGR|clsBalanceSymbols|clsHedgeAlgo|clsExecBrkrAlgo|clsExecBrkrCode|clsExecBkkrTags|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'enabled|hedgeDeltaRule|balanceSymbols|hedgeAlgo|eodHedgeWindow|eodBalanceSymbols|eodHedgeAlgo|clsHedgeWindow|clsBalanceSymbols|clsHedgeAlgo|modifiedIn\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getaggregate\',\n    "msgType": MSG_TYPE,\n    "measure": MEASURE,\n    "group": GROUP,\n    # Optional Parameters\n    "where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,d.jsx)(a.Z,{value:"cUrl",label:"cUrl",children:(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=PositionHedgePolicyConfig' \\\n--data-urlencode 'measure=enabled|hedgeDeltaRule|binaryDays|balanceSymbols|hedgeAlgo|execBrkrAlgo|execBrkrCode|execBkkrTags|eodHedgeWindow|eodSymHedgeBandDD|eodSymHedgeBandGR|eodBalanceSymbols|eodHedgeAlgo|eodExecBrkrAlgo|eodExecBrkrCode|eodExecBkkrTags|clsHedgeWindow|clsAuctionSymHedgeBandDD|clsAuctionSymHedgeBandGR|clsSymHedgeBandDD|clsSymHedgeBandGR|clsBalanceSymbols|clsHedgeAlgo|clsExecBrkrAlgo|clsExecBrkrCode|clsExecBkkrTags|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'group=enabled|hedgeDeltaRule|balanceSymbols|hedgeAlgo|eodHedgeWindow|eodBalanceSymbols|eodHedgeAlgo|clsHedgeWindow|clsBalanceSymbols|clsHedgeAlgo|modifiedIn' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,d.jsx)(n.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,d.jsxs)(r.Z,{children:[(0,d.jsx)(a.Z,{value:"Python",label:"Python",children:(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'PositionHedgePolicyConfig\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,d.jsx)(a.Z,{value:"cUrl",label:"cUrl",children:(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=PositionHedgePolicyConfig' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,d.jsx)(n.h3,{id:"post-msgs-api-call",children:"Post Msgs API Call"}),"\n",(0,d.jsxs)(r.Z,{children:[(0,d.jsx)(a.Z,{value:"Python",label:"Python",children:(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:'import requests\n\n# Replace with your desired MLINK URL\nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Request Parameters\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'postmsgs\',\n    "postaction": "I", # (I)nsert, (U)pdate, (R)eplace, or (D)elete\n    "postmerge": "Y", # (Y)es or (N)o\n}\n\npayload = {\n    "header": {\n        "mTyp": "PositionHedgePolicyConfig"\n    },\n    "message": {\n        "pkey": {\n            "accnt": "exampleString", // string\n            "clientFirm": "exampleString", // string\n            "policy": "enumValue" // enum(PositionHedgePolicy) - None Default A B C D\n        },\n        "enabled": "enumValue", // enum(YesNo) - None, Yes, No\n        "hedgeDeltaRule": "enumValue", // enum(HedgeDeltaRule) - None, IVol, IvS, TVol, TvS, Binary, IvS_25, IvS_50, IvS_75, TvAll, TvAllS\n        "binaryDays": 1.0, // float\n        "balanceSymbols": "enumValue", // enum(YesNo) - None, Yes, No\n        "hedgeAlgo": "enumValue", // enum(HedgeAlgo) - None, SR_VWAP, SR_PASSIVE, BROKER_ALGO\n        "execBrkrAlgo": "exampleString", // string\n        "execBrkrCode": "exampleString", // string\n        "execBkkrTags": "exampleString", // text1\n        "eodHedgeWindow": "enumValue", // enum(HedgeWindow) - None, Sec_10, Sec_30, Sec_60, Min_1, Min_10, Min_30\n        "eodSymHedgeBandDD": 1.0, // float\n        "eodSymHedgeBandGR": 1.0, // float\n        "eodBalanceSymbols": "enumValue", // enum(YesNo) - None, Yes, No\n        "eodHedgeAlgo": "enumValue", // enum(HedgeAlgo) - None, SR_VWAP, SR_PASSIVE, BROKER_ALGO\n        "eodExecBrkrAlgo": "exampleString", // string\n        "eodExecBrkrCode": "exampleString", // string\n        "eodExecBkkrTags": "exampleString", // text1\n        "clsHedgeWindow": "enumValue", // enum(ClsHedgeWindow) - None, NoAction, CloseAuction, CloseAuctionOrAlgo\n        "clsAuctionSymHedgeBandDD": 1.0, // float\n        "clsAuctionSymHedgeBandGR": 1.0, // float\n        "clsSymHedgeBandDD": 1.0, // float\n        "clsSymHedgeBandGR": 1.0, // float\n        "clsBalanceSymbols": "enumValue", // enum(YesNo) - None, Yes, No\n        "clsHedgeAlgo": "enumValue", // enum(ClsHedgeAlgo) - None, SR_SWEEP, BRKR_ALGO\n        "clsExecBrkrAlgo": "exampleString", // string\n        "clsExecBrkrCode": "exampleString", // string\n        "clsExecBkkrTags": "exampleString", // text1\n        "modifiedBy": "exampleString", // string\n        "modifiedIn": "enumValue", // enum(SysEnvironment) - None, Neptune, Pluto, V7_Stable, V7_Latest, Saturn, Venus, Mars, SysTest, V7_Current\n        "timestamp": "2025-01-01 12:00:00.000000", // yyyy-MM-dd HH:mm:ss.SSSSSS\n        "HedgeWaves": [ // Repeating Field\n            {\n                "hedgeTime": "12:00:00.000000", // HH:mm:ss.SSSSSS\n                "symHedgeBandDD": 1.0, // float\n                "symHedgeBandGR": 1.0 // float\n            }\n        ]\n    }\n}\n\nresponse = requests.post(MLINK_PROD_URL, params=params, json=payload)\n'})})}),(0,d.jsx)(a.Z,{value:"cUrl",label:"cUrl",children:(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:'curl -X POST \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\' \\\n--data-urlencode \'apiKey=XXXX-XXXX-XXXX-XXXX\' \\\n--data-urlencode \'cmd=postmsgs\' \\\n--data-urlencode \'postaction=I\' \\ # (I)nsert, (U)pdate, (R)eplace, or (D)elete\n--data-urlencode \'postmerge=Y\' \\ # (Y)es or (N)o\n--header \'Content-Type: application/json\' \\\n--data \'{\n    "header": {\n        "mTyp": "PositionHedgePolicyConfig"\n    },\n    "message": {\n        "pkey": {\n            "accnt": "exampleString", // string\n            "clientFirm": "exampleString", // string\n            "policy": "enumValue" // enum(PositionHedgePolicy) - None Default A B C D\n        },\n        "enabled": "enumValue", // enum(YesNo) - None, Yes, No\n        "hedgeDeltaRule": "enumValue", // enum(HedgeDeltaRule) - None, IVol, IvS, TVol, TvS, Binary, IvS_25, IvS_50, IvS_75, TvAll, TvAllS\n        "binaryDays": 1.0, // float\n        "balanceSymbols": "enumValue", // enum(YesNo) - None, Yes, No\n        "hedgeAlgo": "enumValue", // enum(HedgeAlgo) - None, SR_VWAP, SR_PASSIVE, BROKER_ALGO\n        "execBrkrAlgo": "exampleString", // string\n        "execBrkrCode": "exampleString", // string\n        "execBkkrTags": "exampleString", // text1\n        "eodHedgeWindow": "enumValue", // enum(HedgeWindow) - None, Sec_10, Sec_30, Sec_60, Min_1, Min_10, Min_30\n        "eodSymHedgeBandDD": 1.0, // float\n        "eodSymHedgeBandGR": 1.0, // float\n        "eodBalanceSymbols": "enumValue", // enum(YesNo) - None, Yes, No\n        "eodHedgeAlgo": "enumValue", // enum(HedgeAlgo) - None, SR_VWAP, SR_PASSIVE, BROKER_ALGO\n        "eodExecBrkrAlgo": "exampleString", // string\n        "eodExecBrkrCode": "exampleString", // string\n        "eodExecBkkrTags": "exampleString", // text1\n        "clsHedgeWindow": "enumValue", // enum(ClsHedgeWindow) - None, NoAction, CloseAuction, CloseAuctionOrAlgo\n        "clsAuctionSymHedgeBandDD": 1.0, // float\n        "clsAuctionSymHedgeBandGR": 1.0, // float\n        "clsSymHedgeBandDD": 1.0, // float\n        "clsSymHedgeBandGR": 1.0, // float\n        "clsBalanceSymbols": "enumValue", // enum(YesNo) - None, Yes, No\n        "clsHedgeAlgo": "enumValue", // enum(ClsHedgeAlgo) - None, SR_SWEEP, BRKR_ALGO\n        "clsExecBrkrAlgo": "exampleString", // string\n        "clsExecBrkrCode": "exampleString", // string\n        "clsExecBkkrTags": "exampleString", // text1\n        "modifiedBy": "exampleString", // string\n        "modifiedIn": "enumValue", // enum(SysEnvironment) - None, Neptune, Pluto, V7_Stable, V7_Latest, Saturn, Venus, Mars, SysTest, V7_Current\n        "timestamp": "2025-01-01 12:00:00.000000", // yyyy-MM-dd HH:mm:ss.SSSSSS\n        "HedgeWaves": [ // Repeating Field\n            {\n                "hedgeTime": "12:00:00.000000", // HH:mm:ss.SSSSSS\n                "symHedgeBandDD": 1.0, // float\n                "symHedgeBandGR": 1.0 // float\n            }\n        ]\n    }\n}\'\n'})})})]})]})}function u(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}},9641:function(e,n,s){s.d(n,{Z:()=>t});var l=s("52676");s("75271");var d=s("54461");function t(e){let{children:n,hidden:s,className:t}=e;return(0,l.jsx)("div",{role:"tabpanel",className:(0,d.Z)("tabItem_SSzl",t),hidden:s,children:n})}},71386:function(e,n,s){s.d(n,{Z:()=>j});var l=s("52676"),d=s("75271"),t=s("54461"),r=s("52289"),a=s("3225"),i=s("42834"),o=s("40578"),c=s("35834"),g=s("79616");function h(e){return d.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||d.isValidElement(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function u(e){let{value:n,tabValues:s}=e;return s.some(e=>e.value===n)}var m=s("44537");function x(e){let{className:n,block:s,selectedValue:d,selectValue:a,tabValues:i}=e,o=[],{blockElementScrollPositionUntilNextRender:c}=(0,r.o5)(),g=e=>{let n=e.currentTarget,s=i[o.indexOf(n)].value;s!==d&&(c(n),a(s))},h=e=>{let n=null;switch(e.key){case"Enter":g(e);break;case"ArrowRight":{let s=o.indexOf(e.currentTarget)+1;n=o[s]??o[0];break}case"ArrowLeft":{let s=o.indexOf(e.currentTarget)-1;n=o[s]??o[o.length-1]}}n?.focus()};return(0,l.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.Z)("tabs",{"tabs--block":s},n),children:i.map(e=>{let{value:n,label:s,attributes:r}=e;return(0,l.jsx)("li",{role:"tab",tabIndex:d===n?0:-1,"aria-selected":d===n,ref:e=>o.push(e),onKeyDown:h,onClick:g,...r,className:(0,t.Z)("tabs__item","tabItem_aitt",r?.className,{"tabs__item--active":d===n}),children:s??n},n)})})}function p(e){let{lazy:n,children:s,selectedValue:r}=e,a=(Array.isArray(s)?s:[s]).filter(Boolean);if(n){let e=a.find(e=>e.props.value===r);return e?(0,d.cloneElement)(e,{className:(0,t.Z)("margin-top--md",e.props.className)}):null}return(0,l.jsx)("div",{className:"margin-top--md",children:a.map((e,n)=>(0,d.cloneElement)(e,{key:n,hidden:e.props.value!==r}))})}function y(e){let n=function(e){let{defaultValue:n,queryString:s=!1,groupId:l}=e,t=function(e){let{values:n,children:s}=e;return(0,d.useMemo)(()=>{let e=n??h(s).map(e=>{let{props:{value:n,label:s,attributes:l,default:d}}=e;return{value:n,label:s,attributes:l,default:d}});return!function(e){let n=(0,c.lx)(e,(e,n)=>e.value===n.value);if(n.length>0)throw Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,s])}(e),[r,m]=(0,d.useState)(()=>(function(e){let{defaultValue:n,tabValues:s}=e;if(0===s.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!u({value:n,tabValues:s}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${s.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}let l=s.find(e=>e.default)??s[0];if(!l)throw Error("Unexpected error: 0 tabValues");return l.value})({defaultValue:n,tabValues:t})),[x,p]=function(e){let{queryString:n=!1,groupId:s}=e,l=(0,a.k6)(),t=function(e){let{queryString:n=!1,groupId:s}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!s)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return s??null}({queryString:n,groupId:s});return[(0,o._X)(t),(0,d.useCallback)(e=>{if(!t)return;let n=new URLSearchParams(l.location.search);n.set(t,e),l.replace({...l.location,search:n.toString()})},[t,l])]}({queryString:s,groupId:l}),[y,j]=function(e){let{groupId:n}=e,s=n?`docusaurus.tab.${n}`:null,[l,t]=(0,g.Nk)(s);return[l,(0,d.useCallback)(e=>{s&&t.set(e)},[s,t])]}({groupId:l}),f=(()=>{let e=x??y;return u({value:e,tabValues:t})?e:null})();return(0,i.Z)(()=>{f&&m(f)},[f]),{selectedValue:r,selectValue:(0,d.useCallback)(e=>{if(!u({value:e,tabValues:t}))throw Error(`Can't select invalid tab value=${e}`);m(e),p(e),j(e)},[p,j,t]),tabValues:t}}(e);return(0,l.jsxs)("div",{className:(0,t.Z)("tabs-container","tabList_ArS0"),children:[(0,l.jsx)(x,{...n,...e}),(0,l.jsx)(p,{...n,...e})]})}function j(e){let n=(0,m.Z)();return(0,l.jsx)(y,{...e,children:h(e.children)},String(n))}},91503:function(e,n,s){s.d(n,{Z:function(){return a},a:function(){return r}});var l=s(75271);let d={},t=l.createContext(d);function r(e){let n=l.useContext(t);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:r(e.components),l.createElement(t.Provider,{value:n},e.children)}}}]);