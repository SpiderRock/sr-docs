"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([["23608"],{34624:function(e,t,n){n.r(t),n.d(t,{default:()=>x,frontMatter:()=>a,metadata:()=>r,assets:()=>o,toc:()=>h,contentTitle:()=>c});var r=JSON.parse('{"id":"MessageSchemas/Schema/Topics/client-config/ClientFirmConfig","title":"ClientFirmConfig","description":"METADATA","source":"@site/versioned_docs/version-8.5.5.1/MessageSchemas/Schema/Topics/1800-client-config/ClientFirmConfig.md","sourceDirName":"MessageSchemas/Schema/Topics/1800-client-config","slug":"/MessageSchemas/Schema/Topics/client-config/ClientFirmConfig","permalink":"/docs/8.5.5.1/MessageSchemas/Schema/Topics/client-config/ClientFirmConfig","draft":false,"unlisted":false,"tags":[],"version":"8.5.5.1","frontMatter":{"title":"ClientFirmConfig"},"sidebar":"messageSchemasSidebar","previous":{"title":"ClientAccountConfig","permalink":"/docs/8.5.5.1/MessageSchemas/Schema/Topics/client-config/ClientAccountConfig"},"next":{"title":"ClientPrivateSRSE","permalink":"/docs/8.5.5.1/MessageSchemas/Schema/Topics/client-config/ClientPrivateSRSE"}}'),i=n("52676"),s=n("91503"),l=n("71386"),d=n("9641");let a={title:"ClientFirmConfig"},c="Schema: ClientFirmConfig (ID: 1850)",o={},h=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"REPEATING FIELDS",id:"repeating-fields",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3}];function u(e){let t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsxs)(t.h1,{id:"schema-clientfirmconfig-id-1850",children:["Schema: ClientFirmConfig ",(0,i.jsx)("span",{className:"small-text",children:"(ID: 1850)"})]})}),"\n",(0,i.jsx)(t.h3,{id:"metadata",children:"METADATA"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Attribute"}),(0,i.jsx)(t.th,{children:"Value"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Topic"}),(0,i.jsx)(t.td,{children:"1800-client-config"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"MLink Token"}),(0,i.jsx)(t.td,{children:"ClientConfig"})]})]})]}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Note:"})," The symbol ",(0,i.jsx)(t.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"body",children:"BODY"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"#"}),(0,i.jsx)(t.th,{children:"Field"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Default Value"}),(0,i.jsx)(t.th,{children:"Comment"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"10="}),(0,i.jsx)(t.td,{children:"clientFirm"}),(0,i.jsx)(t.td,{children:"string(16)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"SR assigned client firm acronym"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"100"}),(0,i.jsx)(t.td,{children:"clientFirmStatus"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/ClientFirmStatus",children:"enum : ClientFirmStatus"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"ClientFirm status"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"103"}),(0,i.jsx)(t.td,{children:"clientFirmStatusDttm"}),(0,i.jsx)(t.td,{children:"DateTime"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"The date/time this status was last changed"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"285"}),(0,i.jsx)(t.td,{children:"enabledIn"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/SysVersion",children:"enum : SysVersion"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"106"}),(0,i.jsx)(t.td,{children:"clientFirmType"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/ClientFirmType",children:"enum : ClientFirmType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"SponsorClientFirm [Accnts/Users] -> CoreClientFirm [Accnts/Users] -> SubClientFirm [Accnts/Users]"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"109"}),(0,i.jsx)(t.td,{children:"clientFirmName"}),(0,i.jsx)(t.td,{children:"text1"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"SR assigned client firm Name"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"112"}),(0,i.jsx)(t.td,{children:"clientFirmShortCode"}),(0,i.jsx)(t.td,{children:"string(4)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"SR assigned client firm short code (usually an MPID or equivalent)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"115"}),(0,i.jsx)(t.td,{children:"clientFirmRelationship"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/ClientFirmRelationship",children:"flag : ClientFirmRelationship"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"118"}),(0,i.jsx)(t.td,{children:"repCodeSR"}),(0,i.jsx)(t.td,{children:"text1"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"SR client rep code"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"121"}),(0,i.jsx)(t.td,{children:"clientTagPool"}),(0,i.jsx)(t.td,{children:"text2"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"(optional) complete (unique) pool of user defined account tag(s) (tag bag JSON definition block) [max of 10,000 total chars (including seps)]"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"124"}),(0,i.jsx)(t.td,{children:"billingAccount"}),(0,i.jsx)(t.td,{children:"string(24)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"billing account within the G/L system"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"127"}),(0,i.jsx)(t.td,{children:"billingSchedule"}),(0,i.jsx)(t.td,{children:"string(16)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"billing schedule code"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"130"}),(0,i.jsx)(t.td,{children:"billingAddress1"}),(0,i.jsx)(t.td,{children:"text1"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"Billing Address - line 1"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"133"}),(0,i.jsx)(t.td,{children:"billingAddress2"}),(0,i.jsx)(t.td,{children:"text1"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"Billing Address - line 2"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"136"}),(0,i.jsx)(t.td,{children:"billingCity"}),(0,i.jsx)(t.td,{children:"text1"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"Billing Address - city"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"139"}),(0,i.jsx)(t.td,{children:"billingState"}),(0,i.jsx)(t.td,{children:"text1"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"Billing Address - state"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"142"}),(0,i.jsx)(t.td,{children:"billingZipCode"}),(0,i.jsx)(t.td,{children:"string(8)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"Billing Address - zipCode"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"145"}),(0,i.jsx)(t.td,{children:"billingCountry"}),(0,i.jsx)(t.td,{children:"string(8)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"Billing Address - country"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"148"}),(0,i.jsx)(t.td,{children:"billingPhoneNumber"}),(0,i.jsx)(t.td,{children:"string(15)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"Billing - phone"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"151"}),(0,i.jsx)(t.td,{children:"billingEmailAddress"}),(0,i.jsx)(t.td,{children:"text1"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"Billing - emails (comma delimited string)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"154"}),(0,i.jsx)(t.td,{children:"reportAddress1"}),(0,i.jsx)(t.td,{children:"text1"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"Reporting Address - line 1"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"157"}),(0,i.jsx)(t.td,{children:"reportAddress2"}),(0,i.jsx)(t.td,{children:"text1"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"Reporting Address - line 2"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"160"}),(0,i.jsx)(t.td,{children:"reportCity"}),(0,i.jsx)(t.td,{children:"text1"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"Reporting Address - city"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"163"}),(0,i.jsx)(t.td,{children:"reportState"}),(0,i.jsx)(t.td,{children:"text1"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"Reporting Address - state"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"166"}),(0,i.jsx)(t.td,{children:"reportZipCode"}),(0,i.jsx)(t.td,{children:"string(8)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"Reporting Address - zipCode"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"169"}),(0,i.jsx)(t.td,{children:"reportCountry"}),(0,i.jsx)(t.td,{children:"string(8)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"Reporting Address - country"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"172"}),(0,i.jsx)(t.td,{children:"reportPhoneNumber"}),(0,i.jsx)(t.td,{children:"string(15)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"Reporting - phone"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"175"}),(0,i.jsx)(t.td,{children:"reportEmailAddress"}),(0,i.jsx)(t.td,{children:"text1"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"Reporting - emails (comma delimited string)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"178"}),(0,i.jsx)(t.td,{children:"coreClientFirm"}),(0,i.jsx)(t.td,{children:"string(16)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"the core client firm this (Sub) client firm rolls up to [blank if none]"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"181"}),(0,i.jsx)(t.td,{children:"sponsorClientFirm"}),(0,i.jsx)(t.td,{children:"string(16)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"the sponsor client firm this (Sub or Core) client firm rolls up to [blank if none]"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"184"}),(0,i.jsx)(t.td,{children:"canHaveTradingAccnt"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"disables all accnt activity"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"187"}),(0,i.jsx)(t.td,{children:"legalEntityId"}),(0,i.jsx)(t.td,{children:"string(20)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"(LEI) reg oversight committee assigned entity ID assigned to a firm.  20 character string, contains numbers and dashes."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"190"}),(0,i.jsx)(t.td,{children:"secLargeTraderId"}),(0,i.jsx)(t.td,{children:"string(16)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"SEC-assigned trading ID assigned to a firm.  13 character string, contains numbers and dashes."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"288"}),(0,i.jsx)(t.td,{children:"mifidFirmId"}),(0,i.jsx)(t.td,{children:"string(20)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"A MiFID II requirement, this is trading ID assigned to a firm."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"281"}),(0,i.jsx)(t.td,{children:"LtidEffectiveDate"}),(0,i.jsx)(t.td,{children:"DateTime"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"LargeTraderID Effective Date"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"282"}),(0,i.jsx)(t.td,{children:"catCaisTidType"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/CatCaisTidType",children:"enum : CatCaisTidType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"CAT CAIS TID (Transformed Identifiers) Type"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"283"}),(0,i.jsx)(t.td,{children:"catCaisTidValue"}),(0,i.jsx)(t.td,{children:"string(40)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"CAT CAIS TID Value"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"284"}),(0,i.jsx)(t.td,{children:"catCaisCustType"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/CatCaisCustType",children:"enum : CatCaisCustType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"CAT CAIS CustomerType"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"193"}),(0,i.jsx)(t.td,{children:"syncAggGroups"}),(0,i.jsx)(t.td,{children:"text1"}),(0,i.jsx)(t.td,{}),(0,i.jsxs)(t.td,{children:["[tgt",":src",",tgt",":src",",...] target agg group [usually priAggGroup]; will accumulate SR executions; will sync w/srcAggGroup; tgt will follow (be made equal to) src"]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"196"}),(0,i.jsx)(t.td,{children:"syncThreshold"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"number of idle seconds before syncing aggGroups (default: 5 seconds)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"199"}),(0,i.jsx)(t.td,{children:"viewGICS"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"client firm can see GICS codes in SRSE"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"202"}),(0,i.jsx)(t.td,{children:"viewCUSIP"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,i.jsx)(t.td,{children:"No"}),(0,i.jsx)(t.td,{children:"client firm can see CUSIP codes in SRSE"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"205"}),(0,i.jsx)(t.td,{children:"restrictLocateUpload"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"restrict all associated users' ability to upload AwayStockLocate messages"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"208"}),(0,i.jsx)(t.td,{children:"restrictAutohedge"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"restrict all associated users' ability to submit orders with autohedge enabled"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"211"}),(0,i.jsx)(t.td,{children:"cxlRiskGroupOnReviewHedgeReject"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:'behavior if the stage/review hedge order is rejected.  "Yes" cancels the entire risk group.'})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"214"}),(0,i.jsx)(t.td,{children:"userRateSource"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/RateSource",children:"enum : RateSource"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"Default GlobalRate (Discount Rate) source (uses system default curve unless otherwise specified)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"217"}),(0,i.jsx)(t.td,{children:"enableSrseProductSnapshots"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,i.jsx)(t.td,{children:"No"}),(0,i.jsx)(t.td,{children:"If enabled 'Yes' daily_snapshots.py scripts will make create clientFirm-specific snapshots of SRSE products.  Grants are matched to UserConfig.SrseProductControl."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"229"}),(0,i.jsx)(t.td,{children:"authType"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/AuthType",children:"enum : AuthType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"type of user logon allowed"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"232"}),(0,i.jsx)(t.td,{children:"authExternName"}),(0,i.jsx)(t.td,{children:"text1"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"eg.  CorpName"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"235"}),(0,i.jsx)(t.td,{children:"authExternParams"}),(0,i.jsx)(t.td,{children:"text1"}),(0,i.jsx)(t.td,{}),(0,i.jsxs)(t.td,{children:["eg. ",(0,i.jsx)(t.code,{children:"https://corp.domain.com:xxxx"})]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"238"}),(0,i.jsx)(t.td,{children:"pwFileTransfer"}),(0,i.jsx)(t.td,{children:"string(16)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"[SR] Password for securing files in transit"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"241"}),(0,i.jsx)(t.td,{children:"dropAllParentTags"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"271"}),(0,i.jsx)(t.td,{children:"enableSrseProd"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"also requires srse pool instance in schedule.txt (which advertises as SRSE-{SysRealm}-{RunStatus}-V8.services.consul...)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"274"}),(0,i.jsx)(t.td,{children:"modifiedBy"}),(0,i.jsx)(t.td,{children:"string(24)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"user who last modified this record"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"277"}),(0,i.jsx)(t.td,{children:"modifiedIn"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/SysEnvironment",children:"enum : SysEnvironment"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"280"}),(0,i.jsx)(t.td,{children:"timestamp"}),(0,i.jsx)(t.td,{children:"DateTime"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"repeating-fields",children:"REPEATING FIELDS"}),"\n",(0,i.jsx)(t.p,{children:"LocatePool"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"#"}),(0,i.jsx)(t.th,{children:"Field"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Default Value"}),(0,i.jsx)(t.th,{children:"Comment"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"223"}),(0,i.jsx)(t.td,{children:"locateFirm"}),(0,i.jsx)(t.td,{children:"string(6)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"acronym of firm used for locate requests (if any)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"226"}),(0,i.jsx)(t.td,{children:"locatePool"}),(0,i.jsx)(t.td,{children:"string(16)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"locate pool @ locate firm"})]})]})]}),"\n",(0,i.jsx)(t.p,{children:"DirectedCounterParty"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"#"}),(0,i.jsx)(t.th,{children:"Field"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Default Value"}),(0,i.jsx)(t.th,{children:"Comment"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"247"}),(0,i.jsx)(t.td,{children:"clientFirm"}),(0,i.jsx)(t.td,{children:"string(16)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"250"}),(0,i.jsx)(t.td,{children:"isCommParty"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"is a commission billing/collecting counter-party"})]})]})]}),"\n",(0,i.jsx)(t.p,{children:"ExcludeCounterParty"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"#"}),(0,i.jsx)(t.th,{children:"Field"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Default Value"}),(0,i.jsx)(t.th,{children:"Comment"})]})}),(0,i.jsx)(t.tbody,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"287"}),(0,i.jsx)(t.td,{children:"clientFirm"}),(0,i.jsx)(t.td,{children:"string(16)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{})]})})]}),"\n",(0,i.jsx)(t.p,{children:"RawDataBilling"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"#"}),(0,i.jsx)(t.th,{children:"Field"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Default Value"}),(0,i.jsx)(t.th,{children:"Comment"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"256"}),(0,i.jsx)(t.td,{children:"token"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/RawDataToken",children:"enum : RawDataToken"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"market data billing authorities (either external or internally controlled for billing purposes)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"259"}),(0,i.jsx)(t.td,{children:"scope"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/RawDataScope",children:"enum : RawDataScope"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"controls whether market data access is live or delayed"})]})]})]}),"\n",(0,i.jsx)(t.p,{children:"SourceIP"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"#"}),(0,i.jsx)(t.th,{children:"Field"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Default Value"}),(0,i.jsx)(t.th,{children:"Comment"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"265"}),(0,i.jsx)(t.td,{children:"ipV4Range"}),(0,i.jsx)(t.td,{children:"string(20)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:'Use CIDR notation. "10.40.22.16/28" for 10.40.22.16 - 10.40.22.31'})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"268"}),(0,i.jsx)(t.td,{children:"ipV6Range"}),(0,i.jsx)(t.td,{children:"string(50)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:'Use CIDR notation. "2001:4860:1723:0935:1845:9810:2960:4170/127" for 2001:4860:1723:0935:1845:9810:2960:4170 - 2001:4860:1723:0935:1845:9810:2960:4171'})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,i.jsxs)(l.Z,{children:[(0,i.jsx)(d.Z,{value:"Python",label:"Python",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'ClientFirmConfig'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n    # Required Parameters\n    \"apiKey\": API_KEY,\n    \"cmd\": 'getschema',\n    \"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,i.jsx)(d.Z,{value:"cUrl",label:"cUrl",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=ClientFirmConfig'\n\n"})})})]}),"\n",(0,i.jsx)(t.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,i.jsxs)(l.Z,{children:[(0,i.jsx)(d.Z,{value:"Python",label:"Python",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'ClientFirmConfig\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'clientFirmStatus|clientFirmStatusDttm|enabledIn|clientFirmType|clientFirmName|clientFirmShortCode|clientFirmRelationship|repCodeSR|clientTagPool|billingAccount|billingSchedule|billingAddress1|billingAddress2|billingCity|billingState|billingZipCode|billingCountry|billingPhoneNumber|billingEmailAddress|reportAddress1|reportAddress2|reportCity|reportState|reportZipCode|reportCountry|reportPhoneNumber|reportEmailAddress|coreClientFirm|sponsorClientFirm|canHaveTradingAccnt|legalEntityId|secLargeTraderId|mifidFirmId|LtidEffectiveDate|catCaisTidType|catCaisTidValue|catCaisCustType|syncAggGroups|syncThreshold|viewGICS|viewCUSIP|restrictLocateUpload|restrictAutohedge|cxlRiskGroupOnReviewHedgeReject|userRateSource|enableSrseProductSnapshots|authType|authExternName|authExternParams|pwFileTransfer|dropAllParentTags|enableSrseProd|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'clientFirm:eq:ExampleString\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,i.jsx)(d.Z,{value:"cUrl",label:"cUrl",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=ClientFirmConfig' \\\n--data-urlencode 'view=clientFirmStatus|clientFirmStatusDttm|enabledIn|clientFirmType|clientFirmName|clientFirmShortCode|clientFirmRelationship|repCodeSR|clientTagPool|billingAccount|billingSchedule|billingAddress1|billingAddress2|billingCity|billingState|billingZipCode|billingCountry|billingPhoneNumber|billingEmailAddress|reportAddress1|reportAddress2|reportCity|reportState|reportZipCode|reportCountry|reportPhoneNumber|reportEmailAddress|coreClientFirm|sponsorClientFirm|canHaveTradingAccnt|legalEntityId|secLargeTraderId|mifidFirmId|LtidEffectiveDate|catCaisTidType|catCaisTidValue|catCaisCustType|syncAggGroups|syncThreshold|viewGICS|viewCUSIP|restrictLocateUpload|restrictAutohedge|cxlRiskGroupOnReviewHedgeReject|userRateSource|enableSrseProductSnapshots|authType|authExternName|authExternParams|pwFileTransfer|dropAllParentTags|enableSrseProd|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'where=clientFirm:eq:ExampleString'\n"})})})]}),"\n",(0,i.jsx)(t.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,i.jsxs)(l.Z,{children:[(0,i.jsx)(d.Z,{value:"Python",label:"Python",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'ClientFirmConfig\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'clientFirmStatus|clientFirmStatusDttm|enabledIn|clientFirmType|clientFirmName|clientFirmShortCode|clientFirmRelationship|repCodeSR|clientTagPool|billingAccount|billingSchedule|billingAddress1|billingAddress2|billingCity|billingState|billingZipCode|billingCountry|billingPhoneNumber|billingEmailAddress|reportAddress1|reportAddress2|reportCity|reportState|reportZipCode|reportCountry|reportPhoneNumber|reportEmailAddress|coreClientFirm|sponsorClientFirm|canHaveTradingAccnt|legalEntityId|secLargeTraderId|mifidFirmId|LtidEffectiveDate|catCaisTidType|catCaisTidValue|catCaisCustType|syncAggGroups|syncThreshold|viewGICS|viewCUSIP|restrictLocateUpload|restrictAutohedge|cxlRiskGroupOnReviewHedgeReject|userRateSource|enableSrseProductSnapshots|authType|authExternName|authExternParams|pwFileTransfer|dropAllParentTags|enableSrseProd|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'clientFirm:eq:ExampleString\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'clientFirmStatus:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,i.jsx)(d.Z,{value:"cUrl",label:"cUrl",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=ClientFirmConfig' \\\n--data-urlencode 'view=clientFirmStatus|clientFirmStatusDttm|enabledIn|clientFirmType|clientFirmName|clientFirmShortCode|clientFirmRelationship|repCodeSR|clientTagPool|billingAccount|billingSchedule|billingAddress1|billingAddress2|billingCity|billingState|billingZipCode|billingCountry|billingPhoneNumber|billingEmailAddress|reportAddress1|reportAddress2|reportCity|reportState|reportZipCode|reportCountry|reportPhoneNumber|reportEmailAddress|coreClientFirm|sponsorClientFirm|canHaveTradingAccnt|legalEntityId|secLargeTraderId|mifidFirmId|LtidEffectiveDate|catCaisTidType|catCaisTidValue|catCaisCustType|syncAggGroups|syncThreshold|viewGICS|viewCUSIP|restrictLocateUpload|restrictAutohedge|cxlRiskGroupOnReviewHedgeReject|userRateSource|enableSrseProductSnapshots|authType|authExternName|authExternParams|pwFileTransfer|dropAllParentTags|enableSrseProd|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'where=clientFirm:eq:ExampleString' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=clientFirmStatus:ASC'\n"})})})]}),"\n",(0,i.jsx)(t.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,i.jsxs)(l.Z,{children:[(0,i.jsx)(d.Z,{value:"Python",label:"Python",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'ClientFirmConfig\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'clientFirmStatus|clientFirmStatusDttm|enabledIn|clientFirmType|clientFirmName|clientFirmShortCode|clientFirmRelationship|repCodeSR|clientTagPool|billingAccount|billingSchedule|billingAddress1|billingAddress2|billingCity|billingState|billingZipCode|billingCountry|billingPhoneNumber|billingEmailAddress|reportAddress1|reportAddress2|reportCity|reportState|reportZipCode|reportCountry|reportPhoneNumber|reportEmailAddress|coreClientFirm|sponsorClientFirm|canHaveTradingAccnt|legalEntityId|secLargeTraderId|mifidFirmId|LtidEffectiveDate|catCaisTidType|catCaisTidValue|catCaisCustType|syncAggGroups|syncThreshold|viewGICS|viewCUSIP|restrictLocateUpload|restrictAutohedge|cxlRiskGroupOnReviewHedgeReject|userRateSource|enableSrseProductSnapshots|authType|authExternName|authExternParams|pwFileTransfer|dropAllParentTags|enableSrseProd|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'clientFirmStatus|enabledIn|clientFirmType|canHaveTradingAccnt|catCaisTidType|catCaisCustType|viewGICS|viewCUSIP|restrictLocateUpload|restrictAutohedge|cxlRiskGroupOnReviewHedgeReject|userRateSource|enableSrseProductSnapshots|authType|dropAllParentTags|enableSrseProd|modifiedIn\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'clientFirm:eq:ExampleString\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getaggregate\',\n    "msgType": MSG_TYPE,\n    "measure": MEASURE,\n    "group": GROUP,\n    # Optional Parameters\n    "where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,i.jsx)(d.Z,{value:"cUrl",label:"cUrl",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=ClientFirmConfig' \\\n--data-urlencode 'measure=clientFirmStatus|clientFirmStatusDttm|enabledIn|clientFirmType|clientFirmName|clientFirmShortCode|clientFirmRelationship|repCodeSR|clientTagPool|billingAccount|billingSchedule|billingAddress1|billingAddress2|billingCity|billingState|billingZipCode|billingCountry|billingPhoneNumber|billingEmailAddress|reportAddress1|reportAddress2|reportCity|reportState|reportZipCode|reportCountry|reportPhoneNumber|reportEmailAddress|coreClientFirm|sponsorClientFirm|canHaveTradingAccnt|legalEntityId|secLargeTraderId|mifidFirmId|LtidEffectiveDate|catCaisTidType|catCaisTidValue|catCaisCustType|syncAggGroups|syncThreshold|viewGICS|viewCUSIP|restrictLocateUpload|restrictAutohedge|cxlRiskGroupOnReviewHedgeReject|userRateSource|enableSrseProductSnapshots|authType|authExternName|authExternParams|pwFileTransfer|dropAllParentTags|enableSrseProd|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'group=clientFirmStatus|enabledIn|clientFirmType|canHaveTradingAccnt|catCaisTidType|catCaisCustType|viewGICS|viewCUSIP|restrictLocateUpload|restrictAutohedge|cxlRiskGroupOnReviewHedgeReject|userRateSource|enableSrseProductSnapshots|authType|dropAllParentTags|enableSrseProd|modifiedIn' \\\n--data-urlencode 'where=clientFirm:eq:ExampleString'\n"})})})]}),"\n",(0,i.jsx)(t.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,i.jsxs)(l.Z,{children:[(0,i.jsx)(d.Z,{value:"Python",label:"Python",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'ClientFirmConfig\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'clientFirm:eq:ExampleString\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,i.jsx)(d.Z,{value:"cUrl",label:"cUrl",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=ClientFirmConfig' \\\n--data-urlencode 'where=clientFirm:eq:ExampleString'\n"})})})]})]})}function x(e={}){let{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},9641:function(e,t,n){n.d(t,{Z:()=>s});var r=n("52676");n("75271");var i=n("54461");function s(e){let{children:t,hidden:n,className:s}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,i.Z)("tabItem_SSzl",s),hidden:n,children:t})}},71386:function(e,t,n){n.d(t,{Z:()=>f});var r=n("52676"),i=n("75271"),s=n("54461"),l=n("52289"),d=n("3225"),a=n("42834"),c=n("40578"),o=n("35834"),h=n("79616");function u(e){return i.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||i.isValidElement(e)&&function(e){let{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function x(e){let{value:t,tabValues:n}=e;return n.some(e=>e.value===t)}var j=n("44537");function m(e){let{className:t,block:n,selectedValue:i,selectValue:d,tabValues:a}=e,c=[],{blockElementScrollPositionUntilNextRender:o}=(0,l.o5)(),h=e=>{let t=e.currentTarget,n=a[c.indexOf(t)].value;n!==i&&(o(t),d(n))},u=e=>{let t=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{let n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{let n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1]}}t?.focus()};return(0,r.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":n},t),children:a.map(e=>{let{value:t,label:n,attributes:l}=e;return(0,r.jsx)("li",{role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,ref:e=>c.push(e),onKeyDown:u,onClick:h,...l,className:(0,s.Z)("tabs__item","tabItem_aitt",l?.className,{"tabs__item--active":i===t}),children:n??t},t)})})}function p(e){let{lazy:t,children:n,selectedValue:l}=e,d=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){let e=d.find(e=>e.props.value===l);return e?(0,i.cloneElement)(e,{className:(0,s.Z)("margin-top--md",e.props.className)}):null}return(0,r.jsx)("div",{className:"margin-top--md",children:d.map((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==l}))})}function g(e){let t=function(e){let{defaultValue:t,queryString:n=!1,groupId:r}=e,s=function(e){let{values:t,children:n}=e;return(0,i.useMemo)(()=>{let e=t??u(n).map(e=>{let{props:{value:t,label:n,attributes:r,default:i}}=e;return{value:t,label:n,attributes:r,default:i}});return!function(e){let t=(0,o.lx)(e,(e,t)=>e.value===t.value);if(t.length>0)throw Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[t,n])}(e),[l,j]=(0,i.useState)(()=>(function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!x({value:t,tabValues:n}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}let r=n.find(e=>e.default)??n[0];if(!r)throw Error("Unexpected error: 0 tabValues");return r.value})({defaultValue:t,tabValues:s})),[m,p]=function(e){let{queryString:t=!1,groupId:n}=e,r=(0,d.k6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,c._X)(s),(0,i.useCallback)(e=>{if(!s)return;let t=new URLSearchParams(r.location.search);t.set(s,e),r.replace({...r.location,search:t.toString()})},[s,r])]}({queryString:n,groupId:r}),[g,f]=function(e){let{groupId:t}=e,n=t?`docusaurus.tab.${t}`:null,[r,s]=(0,h.Nk)(n);return[r,(0,i.useCallback)(e=>{n&&s.set(e)},[n,s])]}({groupId:r}),y=(()=>{let e=m??g;return x({value:e,tabValues:s})?e:null})();return(0,a.Z)(()=>{y&&j(y)},[y]),{selectedValue:l,selectValue:(0,i.useCallback)(e=>{if(!x({value:e,tabValues:s}))throw Error(`Can't select invalid tab value=${e}`);j(e),p(e),f(e)},[p,f,s]),tabValues:s}}(e);return(0,r.jsxs)("div",{className:(0,s.Z)("tabs-container","tabList_ArS0"),children:[(0,r.jsx)(m,{...t,...e}),(0,r.jsx)(p,{...t,...e})]})}function f(e){let t=(0,j.Z)();return(0,r.jsx)(g,{...e,children:u(e.children)},String(t))}},91503:function(e,t,n){n.d(t,{Z:function(){return d},a:function(){return l}});var r=n(75271);let i={},s=r.createContext(i);function l(e){let t=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);