"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[11414],{38485:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var s=t(74848),i=t(28453),r=t(11470),d=t(19365);const l={title:"ResponderMarkupVegaDir"},a="Schema: ResponderMarkupVegaDir (ID: 2500)",o={id:"MessageSchemas/Schema/Topics/liquidity-notice/ResponderMarkupVegaDir",title:"ResponderMarkupVegaDir",description:"METADATA",source:"@site/versioned_docs/version-8.5.3.1/MessageSchemas/Schema/Topics/2450-liquidity-notice/ResponderMarkupVegaDir.md",sourceDirName:"MessageSchemas/Schema/Topics/2450-liquidity-notice",slug:"/MessageSchemas/Schema/Topics/liquidity-notice/ResponderMarkupVegaDir",permalink:"/docs/8.5.3.1/MessageSchemas/Schema/Topics/liquidity-notice/ResponderMarkupVegaDir",draft:!1,unlisted:!1,tags:[],version:"8.5.3.1",frontMatter:{title:"ResponderMarkupVegaDir"},sidebar:"messageSchemasSidebar",previous:{title:"ResponderMarkupSN",permalink:"/docs/8.5.3.1/MessageSchemas/Schema/Topics/liquidity-notice/ResponderMarkupSN"},next:{title:"2510-market-data-auctions",permalink:"/docs/8.5.3.1/MessageSchemas/Schema/Topics/market-data-auctions/"}},c={},u=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3},{value:"Post Msgs API Call",id:"post-msgs-api-call",level:3}];function m(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"schema-respondermarkupvegadir-id-2500",children:["Schema: ResponderMarkupVegaDir ",(0,s.jsx)("span",{className:"small-text",children:"(ID: 2500)"})]}),"\n",(0,s.jsx)(n.h3,{id:"metadata",children:"METADATA"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Attribute"}),(0,s.jsx)(n.th,{children:"Value"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Topic"}),(0,s.jsx)(n.td,{children:"2450-liquidity-notice"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"MLink Token"}),(0,s.jsx)(n.td,{children:"SRATS"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"SRSE Product"}),(0,s.jsx)(n.td,{children:"SRTrade"})]})]})]}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note:"})," The symbol ",(0,s.jsx)(n.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"body",children:"BODY"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"#"}),(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Comment"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"10="}),(0,s.jsx)(n.td,{children:"accnt"}),(0,s.jsx)(n.td,{children:"string(16)"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"11="}),(0,s.jsx)(n.td,{children:"clientFirm"}),(0,s.jsx)(n.td,{children:"string(16)"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"15="}),(0,s.jsx)(n.td,{children:"root"}),(0,s.jsx)(n.td,{children:"TickerKey"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"13="}),(0,s.jsx)(n.td,{children:"respSide"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,s.jsx)(n.td,{children:"auction responder side (your side)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"16="}),(0,s.jsx)(n.td,{children:"responderID"}),(0,s.jsx)(n.td,{children:"int"}),(0,s.jsx)(n.td,{children:"client supplied responder ID (can be any number including zero)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"100"}),(0,s.jsx)(n.td,{children:"userName"}),(0,s.jsx)(n.td,{children:"string(24)"}),(0,s.jsx)(n.td,{children:"username used for responding to auction notices"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"101"}),(0,s.jsx)(n.td,{children:"isDisabled"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(n.td,{children:"if Yes, this auto-responder record is disabled"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"137"}),(0,s.jsx)(n.td,{children:"enabledUntil"}),(0,s.jsx)(n.td,{children:"DateTime"}),(0,s.jsx)(n.td,{children:"will be enabled up until this time"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"102"}),(0,s.jsx)(n.td,{children:"canIncludeFlex"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(n.td,{children:"if yes, can respond to auction notices that include flex option legs"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"103"}),(0,s.jsx)(n.td,{children:"canIncludeStock"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(n.td,{children:"if yes, can respond to auction notices that include a stock leg"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"104"}),(0,s.jsx)(n.td,{children:"cpFlag"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/CallPut",children:"enum : CallPut"})}),(0,s.jsx)(n.td,{children:"if not Pair must match all option legs"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"138"}),(0,s.jsx)(n.td,{children:"minNetVegaRatio"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{children:"minimum ratio of abs(netVega)/totalVega to enable a response (hard lower limit of 0.25)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"105"}),(0,s.jsx)(n.td,{children:"minYears"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{children:"both markup.minYears and markup.maxYears must be between [minYears, maxYears]"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"106"}),(0,s.jsx)(n.td,{children:"maxYears"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"107"}),(0,s.jsx)(n.td,{children:"minExpiry"}),(0,s.jsx)(n.td,{children:"DateTime"}),(0,s.jsx)(n.td,{children:"both markup.minExpiry and markup.maxExpiry must be between [minExpiry, maxExpiry]"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"108"}),(0,s.jsx)(n.td,{children:"maxExpiry"}),(0,s.jsx)(n.td,{children:"DateTime"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"109"}),(0,s.jsx)(n.td,{children:"minXDelta"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{children:"all leg xDelta must be between [minXDelta, maxXDelta]"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"110"}),(0,s.jsx)(n.td,{children:"maxXDelta"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"111"}),(0,s.jsx)(n.td,{children:"minStrike"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{children:"all leg strikes must be between [minStrike, maxStrike]"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"112"}),(0,s.jsx)(n.td,{children:"maxStrike"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"113"}),(0,s.jsx)(n.td,{children:"minSurfEdgePrem"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{children:"spread surface edge (in premium) (+ = through surface; - = behind surface)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"114"}),(0,s.jsx)(n.td,{children:"minSurfEdgeVol"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{children:"spread surface edge (in vol) (0.01 = 1.0 vol pts) (+ = through surface; - = behind surface)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"115"}),(0,s.jsx)(n.td,{children:"incFeesInResp"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(n.td,{children:"include all estimated responder fees in final response price"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"116"}),(0,s.jsx)(n.td,{children:"roundRule"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/RoundRule",children:"enum : RoundRule"})}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"117"}),(0,s.jsx)(n.td,{children:"maxResponseSize"}),(0,s.jsx)(n.td,{children:"int"}),(0,s.jsx)(n.td,{children:"maximum number of contracts per response (will respond for 100% if auction size <= maxResponseSize)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"118"}),(0,s.jsx)(n.td,{children:"maxResponseVega"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{children:"maximum total vega per response"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"119"}),(0,s.jsx)(n.td,{children:"totalResponseVega"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{children:"maximum vega (filled) all day"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"120"}),(0,s.jsx)(n.td,{children:"totalResponseWtVega"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{children:"maximum wtVega (filled) all day"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"121"}),(0,s.jsx)(n.td,{children:"autoHedge"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/AutoHedge",children:"enum : AutoHedge"})}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"122"}),(0,s.jsx)(n.td,{children:"hedgeInstrument"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/HedgeInst",children:"enum : HedgeInst"})}),(0,s.jsx)(n.td,{children:"Default=actual underlier (EQT or FUT) [IndexOptions use ETF]; FrontMonth=actual underlier (EQT) or front month (FUT) [IndexOptions use FM Fut]; Stock=hedgeSecKey.TickerKey; Future=hedgeSecKey.ExpiryKey"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"123"}),(0,s.jsx)(n.td,{children:"hedgeSecKey"}),(0,s.jsx)(n.td,{children:"ExpiryKey"}),(0,s.jsx)(n.td,{children:"autohedge instrument (can be a TickerKey (stock) or ExpiryKey (future)) [required for Stock and Future]"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"124"}),(0,s.jsx)(n.td,{children:"hedgeBetaRatio"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{children:"portion of executed $money to auto-hedge (can be 1.0 / Beta for beta hedging) [-4.0 to +4.0]"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"125"}),(0,s.jsx)(n.td,{children:"hedgeScope"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/HedgeScope",children:"enum : HedgeScope"})}),(0,s.jsx)(n.td,{children:"hedge group scope [RiskGroup or Accnt]"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"126"}),(0,s.jsx)(n.td,{children:"hedgeSession"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/MarketSession",children:"enum : MarketSession"})}),(0,s.jsx)(n.td,{children:"time in force for the autohedge order (can be Day or ExtDay) [None defaults to pOrder.timeInForce]"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"127"}),(0,s.jsx)(n.td,{children:"riskGroupId"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsxs)(n.td,{children:["Default: 0 (none).  Required to be non-zero if ",(0,s.jsx)(n.code,{children:"autoHedge"})," is something other than None."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"132"}),(0,s.jsx)(n.td,{children:"qtyTraded"}),(0,s.jsx)(n.td,{children:"int"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"133"}),(0,s.jsx)(n.td,{children:"vegaTraded"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"177"}),(0,s.jsx)(n.td,{children:"wtVegaTraded"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"129"}),(0,s.jsx)(n.td,{children:"numNotices"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{children:"number of notices that match response bucket"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"139"}),(0,s.jsx)(n.td,{children:"numNoticeSR"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{children:"number of SR auction numNotices"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"140"}),(0,s.jsx)(n.td,{children:"numNoticeAMEX"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"141"}),(0,s.jsx)(n.td,{children:"numNoticeBATS"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"142"}),(0,s.jsx)(n.td,{children:"numNoticeBOX"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"143"}),(0,s.jsx)(n.td,{children:"numNoticeCBOE"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"144"}),(0,s.jsx)(n.td,{children:"numNoticeC2"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"145"}),(0,s.jsx)(n.td,{children:"numNoticeEDGO"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"146"}),(0,s.jsx)(n.td,{children:"numNoticeEMLD"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"147"}),(0,s.jsx)(n.td,{children:"numNoticeGMNI"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"148"}),(0,s.jsx)(n.td,{children:"numNoticeISE"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"149"}),(0,s.jsx)(n.td,{children:"numNoticeMCRY"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"150"}),(0,s.jsx)(n.td,{children:"numNoticeMEMX"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"151"}),(0,s.jsx)(n.td,{children:"numNoticeMIAX"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"152"}),(0,s.jsx)(n.td,{children:"numNoticeMPRL"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"153"}),(0,s.jsx)(n.td,{children:"numNoticeNYSE"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"154"}),(0,s.jsx)(n.td,{children:"numNoticeNQBX"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"155"}),(0,s.jsx)(n.td,{children:"numNoticeNSDQ"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"156"}),(0,s.jsx)(n.td,{children:"numNoticePHLX"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"157"}),(0,s.jsx)(n.td,{children:"numNoticeSPHR"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"158"}),(0,s.jsx)(n.td,{children:"respDisabledSkips"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{children:"number skipped from isDisabled"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"159"}),(0,s.jsx)(n.td,{children:"stockDisabledSkips"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{children:"number skipped from canIncludeStock != Yes"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"160"}),(0,s.jsx)(n.td,{children:"cpFlagSkips"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{children:"number skipped from cpFlag not matching notice legs CallPut"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"161"}),(0,s.jsx)(n.td,{children:"expiryRangeSkips"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{children:"number skipped from out of range expiry value"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"162"}),(0,s.jsx)(n.td,{children:"yearsRangeSkips"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{children:"number skipped from out of range years value"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"163"}),(0,s.jsx)(n.td,{children:"listedFlexSkips"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{children:"number skipped from flex/listed filter"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"164"}),(0,s.jsx)(n.td,{children:"noticePriceSkips"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{children:"number skipped from limit price filter (exchange only)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"165"}),(0,s.jsx)(n.td,{children:"aggSizeLimitSkips"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{children:"number skipped from aggregate contract/vega size limit"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"166"}),(0,s.jsx)(n.td,{children:"riskGroupLimitSkips"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{children:"number skipped from riskGroup limits"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"167"}),(0,s.jsx)(n.td,{children:"rootSkips"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{children:"number skipped from leg root mismatch"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"168"}),(0,s.jsx)(n.td,{children:"xDeltaRangeSkips"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{children:"number skipped from out of range XDelta value"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"169"}),(0,s.jsx)(n.td,{children:"strikeRangeSkips"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{children:"number skipped from out of range strike"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"170"}),(0,s.jsx)(n.td,{children:"minVegaRatioSkips"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{children:"number skipped from not qualifying ratio netVega/sum(abs(vega))"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"131"}),(0,s.jsx)(n.td,{children:"numResponses"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{children:"number of response attempts (number of parentOrders/NoticeExecReports)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"171"}),(0,s.jsx)(n.td,{children:"numFullSize"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"172"}),(0,s.jsx)(n.td,{children:"numAllocSize"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"173"}),(0,s.jsx)(n.td,{children:"numPriceMiss"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"174"}),(0,s.jsx)(n.td,{children:"numTooLate"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"175"}),(0,s.jsx)(n.td,{children:"numOtherMiss"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"176"}),(0,s.jsx)(n.td,{children:"numDidNotTrade"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"134"}),(0,s.jsx)(n.td,{children:"modifiedBy"}),(0,s.jsx)(n.td,{children:"string(24)"}),(0,s.jsx)(n.td,{children:"user who last modified this record"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"135"}),(0,s.jsx)(n.td,{children:"modifiedIn"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/SysEnvironment",children:"enum : SysEnvironment"})}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"136"}),(0,s.jsx)(n.td,{children:"timestamp"}),(0,s.jsx)(n.td,{children:"DateTime"}),(0,s.jsx)(n.td,{children:"timestamp of last modification"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,s.jsxs)(r.A,{children:[(0,s.jsx)(d.A,{value:"Python",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'ResponderMarkupVegaDir'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n    # Required Parameters\n    \"apiKey\": API_KEY,\n    \"cmd\": 'getschema',\n    \"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,s.jsx)(d.A,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=ResponderMarkupVegaDir'\n\n"})})})]}),"\n",(0,s.jsx)(n.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,s.jsxs)(r.A,{children:[(0,s.jsx)(d.A,{value:"Python",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'ResponderMarkupVegaDir\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'userName|isDisabled|enabledUntil|canIncludeFlex|canIncludeStock|cpFlag|minNetVegaRatio|minYears|maxYears|minExpiry|maxExpiry|minXDelta|maxXDelta|minStrike|maxStrike|minSurfEdgePrem|minSurfEdgeVol|incFeesInResp|roundRule|maxResponseSize|maxResponseVega|totalResponseVega|totalResponseWtVega|autoHedge|hedgeInstrument|hedgeSecKey|hedgeBetaRatio|hedgeScope|hedgeSession|riskGroupId|qtyTraded|vegaTraded|wtVegaTraded|numNotices|numNoticeSR|numNoticeAMEX|numNoticeBATS|numNoticeBOX|numNoticeCBOE|numNoticeC2|numNoticeEDGO|numNoticeEMLD|numNoticeGMNI|numNoticeISE|numNoticeMCRY|numNoticeMEMX|numNoticeMIAX|numNoticeMPRL|numNoticeNYSE|numNoticeNQBX|numNoticeNSDQ|numNoticePHLX|numNoticeSPHR|respDisabledSkips|stockDisabledSkips|cpFlagSkips|expiryRangeSkips|yearsRangeSkips|listedFlexSkips|noticePriceSkips|aggSizeLimitSkips|riskGroupLimitSkips|rootSkips|xDeltaRangeSkips|strikeRangeSkips|minVegaRatioSkips|numResponses|numFullSize|numAllocSize|numPriceMiss|numTooLate|numOtherMiss|numDidNotTrade|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(d.A,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=ResponderMarkupVegaDir' \\\n--data-urlencode 'view=userName|isDisabled|enabledUntil|canIncludeFlex|canIncludeStock|cpFlag|minNetVegaRatio|minYears|maxYears|minExpiry|maxExpiry|minXDelta|maxXDelta|minStrike|maxStrike|minSurfEdgePrem|minSurfEdgeVol|incFeesInResp|roundRule|maxResponseSize|maxResponseVega|totalResponseVega|totalResponseWtVega|autoHedge|hedgeInstrument|hedgeSecKey|hedgeBetaRatio|hedgeScope|hedgeSession|riskGroupId|qtyTraded|vegaTraded|wtVegaTraded|numNotices|numNoticeSR|numNoticeAMEX|numNoticeBATS|numNoticeBOX|numNoticeCBOE|numNoticeC2|numNoticeEDGO|numNoticeEMLD|numNoticeGMNI|numNoticeISE|numNoticeMCRY|numNoticeMEMX|numNoticeMIAX|numNoticeMPRL|numNoticeNYSE|numNoticeNQBX|numNoticeNSDQ|numNoticePHLX|numNoticeSPHR|respDisabledSkips|stockDisabledSkips|cpFlagSkips|expiryRangeSkips|yearsRangeSkips|listedFlexSkips|noticePriceSkips|aggSizeLimitSkips|riskGroupLimitSkips|rootSkips|xDeltaRangeSkips|strikeRangeSkips|minVegaRatioSkips|numResponses|numFullSize|numAllocSize|numPriceMiss|numTooLate|numOtherMiss|numDidNotTrade|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,s.jsx)(n.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,s.jsxs)(r.A,{children:[(0,s.jsx)(d.A,{value:"Python",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'ResponderMarkupVegaDir\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'userName|isDisabled|enabledUntil|canIncludeFlex|canIncludeStock|cpFlag|minNetVegaRatio|minYears|maxYears|minExpiry|maxExpiry|minXDelta|maxXDelta|minStrike|maxStrike|minSurfEdgePrem|minSurfEdgeVol|incFeesInResp|roundRule|maxResponseSize|maxResponseVega|totalResponseVega|totalResponseWtVega|autoHedge|hedgeInstrument|hedgeSecKey|hedgeBetaRatio|hedgeScope|hedgeSession|riskGroupId|qtyTraded|vegaTraded|wtVegaTraded|numNotices|numNoticeSR|numNoticeAMEX|numNoticeBATS|numNoticeBOX|numNoticeCBOE|numNoticeC2|numNoticeEDGO|numNoticeEMLD|numNoticeGMNI|numNoticeISE|numNoticeMCRY|numNoticeMEMX|numNoticeMIAX|numNoticeMPRL|numNoticeNYSE|numNoticeNQBX|numNoticeNSDQ|numNoticePHLX|numNoticeSPHR|respDisabledSkips|stockDisabledSkips|cpFlagSkips|expiryRangeSkips|yearsRangeSkips|listedFlexSkips|noticePriceSkips|aggSizeLimitSkips|riskGroupLimitSkips|rootSkips|xDeltaRangeSkips|strikeRangeSkips|minVegaRatioSkips|numResponses|numFullSize|numAllocSize|numPriceMiss|numTooLate|numOtherMiss|numDidNotTrade|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'userName:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(d.A,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=ResponderMarkupVegaDir' \\\n--data-urlencode 'view=userName|isDisabled|enabledUntil|canIncludeFlex|canIncludeStock|cpFlag|minNetVegaRatio|minYears|maxYears|minExpiry|maxExpiry|minXDelta|maxXDelta|minStrike|maxStrike|minSurfEdgePrem|minSurfEdgeVol|incFeesInResp|roundRule|maxResponseSize|maxResponseVega|totalResponseVega|totalResponseWtVega|autoHedge|hedgeInstrument|hedgeSecKey|hedgeBetaRatio|hedgeScope|hedgeSession|riskGroupId|qtyTraded|vegaTraded|wtVegaTraded|numNotices|numNoticeSR|numNoticeAMEX|numNoticeBATS|numNoticeBOX|numNoticeCBOE|numNoticeC2|numNoticeEDGO|numNoticeEMLD|numNoticeGMNI|numNoticeISE|numNoticeMCRY|numNoticeMEMX|numNoticeMIAX|numNoticeMPRL|numNoticeNYSE|numNoticeNQBX|numNoticeNSDQ|numNoticePHLX|numNoticeSPHR|respDisabledSkips|stockDisabledSkips|cpFlagSkips|expiryRangeSkips|yearsRangeSkips|listedFlexSkips|noticePriceSkips|aggSizeLimitSkips|riskGroupLimitSkips|rootSkips|xDeltaRangeSkips|strikeRangeSkips|minVegaRatioSkips|numResponses|numFullSize|numAllocSize|numPriceMiss|numTooLate|numOtherMiss|numDidNotTrade|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'where=accnt:eq:ExampleString' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=userName:ASC'\n"})})})]}),"\n",(0,s.jsx)(n.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,s.jsxs)(r.A,{children:[(0,s.jsx)(d.A,{value:"Python",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'ResponderMarkupVegaDir\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'userName|isDisabled|enabledUntil|canIncludeFlex|canIncludeStock|cpFlag|minNetVegaRatio|minYears|maxYears|minExpiry|maxExpiry|minXDelta|maxXDelta|minStrike|maxStrike|minSurfEdgePrem|minSurfEdgeVol|incFeesInResp|roundRule|maxResponseSize|maxResponseVega|totalResponseVega|totalResponseWtVega|autoHedge|hedgeInstrument|hedgeSecKey|hedgeBetaRatio|hedgeScope|hedgeSession|riskGroupId|qtyTraded|vegaTraded|wtVegaTraded|numNotices|numNoticeSR|numNoticeAMEX|numNoticeBATS|numNoticeBOX|numNoticeCBOE|numNoticeC2|numNoticeEDGO|numNoticeEMLD|numNoticeGMNI|numNoticeISE|numNoticeMCRY|numNoticeMEMX|numNoticeMIAX|numNoticeMPRL|numNoticeNYSE|numNoticeNQBX|numNoticeNSDQ|numNoticePHLX|numNoticeSPHR|respDisabledSkips|stockDisabledSkips|cpFlagSkips|expiryRangeSkips|yearsRangeSkips|listedFlexSkips|noticePriceSkips|aggSizeLimitSkips|riskGroupLimitSkips|rootSkips|xDeltaRangeSkips|strikeRangeSkips|minVegaRatioSkips|numResponses|numFullSize|numAllocSize|numPriceMiss|numTooLate|numOtherMiss|numDidNotTrade|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'isDisabled|canIncludeFlex|canIncludeStock|cpFlag|incFeesInResp|roundRule|autoHedge|hedgeInstrument|hedgeScope|hedgeSession|modifiedIn\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getaggregate\',\n    "msgType": MSG_TYPE,\n    "measure": MEASURE,\n    "group": GROUP,\n    # Optional Parameters\n    "where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(d.A,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=ResponderMarkupVegaDir' \\\n--data-urlencode 'measure=userName|isDisabled|enabledUntil|canIncludeFlex|canIncludeStock|cpFlag|minNetVegaRatio|minYears|maxYears|minExpiry|maxExpiry|minXDelta|maxXDelta|minStrike|maxStrike|minSurfEdgePrem|minSurfEdgeVol|incFeesInResp|roundRule|maxResponseSize|maxResponseVega|totalResponseVega|totalResponseWtVega|autoHedge|hedgeInstrument|hedgeSecKey|hedgeBetaRatio|hedgeScope|hedgeSession|riskGroupId|qtyTraded|vegaTraded|wtVegaTraded|numNotices|numNoticeSR|numNoticeAMEX|numNoticeBATS|numNoticeBOX|numNoticeCBOE|numNoticeC2|numNoticeEDGO|numNoticeEMLD|numNoticeGMNI|numNoticeISE|numNoticeMCRY|numNoticeMEMX|numNoticeMIAX|numNoticeMPRL|numNoticeNYSE|numNoticeNQBX|numNoticeNSDQ|numNoticePHLX|numNoticeSPHR|respDisabledSkips|stockDisabledSkips|cpFlagSkips|expiryRangeSkips|yearsRangeSkips|listedFlexSkips|noticePriceSkips|aggSizeLimitSkips|riskGroupLimitSkips|rootSkips|xDeltaRangeSkips|strikeRangeSkips|minVegaRatioSkips|numResponses|numFullSize|numAllocSize|numPriceMiss|numTooLate|numOtherMiss|numDidNotTrade|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'group=isDisabled|canIncludeFlex|canIncludeStock|cpFlag|incFeesInResp|roundRule|autoHedge|hedgeInstrument|hedgeScope|hedgeSession|modifiedIn' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,s.jsx)(n.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,s.jsxs)(r.A,{children:[(0,s.jsx)(d.A,{value:"Python",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'ResponderMarkupVegaDir\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(d.A,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=ResponderMarkupVegaDir' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,s.jsx)(n.h3,{id:"post-msgs-api-call",children:"Post Msgs API Call"}),"\n",(0,s.jsxs)(r.A,{children:[(0,s.jsx)(d.A,{value:"Python",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import requests\n\n# Replace with your desired MLINK URL\nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Request Parameters\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'postmsgs\',\n    "postaction": "U", # (U)pdate, (I)nsert, or (R)eplace\n    "postmerge": "Y", # (Y)es or (N)o\n}\n\npayload = {\n    "header": {\n        "mTyp": "ResponderMarkupVegaDir"\n    },\n    "message": {\n        "pkey": {\n            "accnt": "exampleString", // string\n            "clientFirm": "exampleString", // string\n            "root": {\n                "at": "EQT",\n                "ts": "NMS",\n                "tk": "AAPL"\n            },\n            "respSide": "enumValue", // enum(BuySell) - None, Buy, Sell\n            "responderID": 1 // int\n        },\n        "userName": "exampleString", // string\n        "isDisabled": "enumValue", // enum(YesNo) - None, Yes, No\n        "enabledUntil": "2025-01-01 12:00:00.000000", // yyyy-MM-dd HH:mm:ss.SSSSSS\n        "canIncludeFlex": "enumValue", // enum(YesNo) - None, Yes, No\n        "canIncludeStock": "enumValue", // enum(YesNo) - None, Yes, No\n        "cpFlag": "enumValue", // enum(CallPut) - Call, Put, Pair\n        "minNetVegaRatio": 1.0, // float\n        "minYears": 1.0, // float\n        "maxYears": 1.0, // float\n        "minExpiry": "2025-01-01 12:00:00.000000", // yyyy-MM-dd HH:mm:ss.SSSSSS\n        "maxExpiry": "2025-01-01 12:00:00.000000", // yyyy-MM-dd HH:mm:ss.SSSSSS\n        "minXDelta": 1.0, // float\n        "maxXDelta": 1.0, // float\n        "minStrike": 1.0, // double\n        "maxStrike": 1.0, // double\n        "minSurfEdgePrem": 1.0, // float\n        "minSurfEdgeVol": 1.0, // float\n        "incFeesInResp": "enumValue", // enum(YesNo) - None, Yes, No\n        "roundRule": "enumValue", // enum(RoundRule) - None, Exact, Fuzzy\n        "maxResponseSize": 1, // int\n        "maxResponseVega": 1.0, // float\n        "totalResponseVega": 1.0, // float\n        "totalResponseWtVega": 1.0, // float\n        "autoHedge": "enumValue", // enum(AutoHedge) - None, Static, AutoMid, AutoCrx, AutoTrn, SpdrAuto, Spdr10S, Spdr30S, Spdr90S, Spdr5M, Spdr30M, SpdrDay, SmartFast, SmartNorm, FastCrx, FastDark, SlowDark, AlphaVwap1pct, AlphaVwap2pct, AlphaVwap5pct, AlphaVwap25pct, Custom, AwayAlgo\n        "hedgeInstrument": "enumValue", // enum(HedgeInst) - None, Default, FrontMonth, Stock, Future\n        "hedgeSecKey": {\n            "at": "EQT",\n            "ts": "NMS",\n            "tk": "AAPL",\n            "dt": "2025-01-01"\n        },\n        "hedgeBetaRatio": 1.0, // float\n        "hedgeScope": "enumValue", // enum(HedgeScope) - None, Accnt, RiskGroup\n        "hedgeSession": "enumValue", // enum(MarketSession) - None, PreMkt, RegMkt, PostMkt, PreRegMkt, RegPostMkt, AllDay\n        "riskGroupId": 1, // long\n        "qtyTraded": 1, // int\n        "vegaTraded": 1.0, // double\n        "wtVegaTraded": 1.0, // double\n        "numNotices": 1, // long\n        "numNoticeSR": 1, // long\n        "numNoticeAMEX": 1, // long\n        "numNoticeBATS": 1, // long\n        "numNoticeBOX": 1, // long\n        "numNoticeCBOE": 1, // long\n        "numNoticeC2": 1, // long\n        "numNoticeEDGO": 1, // long\n        "numNoticeEMLD": 1, // long\n        "numNoticeGMNI": 1, // long\n        "numNoticeISE": 1, // long\n        "numNoticeMCRY": 1, // long\n        "numNoticeMEMX": 1, // long\n        "numNoticeMIAX": 1, // long\n        "numNoticeMPRL": 1, // long\n        "numNoticeNYSE": 1, // long\n        "numNoticeNQBX": 1, // long\n        "numNoticeNSDQ": 1, // long\n        "numNoticePHLX": 1, // long\n        "numNoticeSPHR": 1, // long\n        "respDisabledSkips": 1, // long\n        "stockDisabledSkips": 1, // long\n        "cpFlagSkips": 1, // long\n        "expiryRangeSkips": 1, // long\n        "yearsRangeSkips": 1, // long\n        "listedFlexSkips": 1, // long\n        "noticePriceSkips": 1, // long\n        "aggSizeLimitSkips": 1, // long\n        "riskGroupLimitSkips": 1, // long\n        "rootSkips": 1, // long\n        "xDeltaRangeSkips": 1, // long\n        "strikeRangeSkips": 1, // long\n        "minVegaRatioSkips": 1, // long\n        "numResponses": 1, // long\n        "numFullSize": 1, // long\n        "numAllocSize": 1, // long\n        "numPriceMiss": 1, // long\n        "numTooLate": 1, // long\n        "numOtherMiss": 1, // long\n        "numDidNotTrade": 1, // long\n        "modifiedBy": "exampleString", // string\n        "modifiedIn": "enumValue", // enum(SysEnvironment) - None, Neptune, Pluto, V7_Stable, V7_Latest, Saturn, Venus, Mars, SysTest, V7_Current\n        "timestamp": "2025-01-01 12:00:00.000000" // yyyy-MM-dd HH:mm:ss.SSSSSS\n    }\n}\n\nresponse = requests.post(MLINK_PROD_URL, params=params, json=payload)\n'})})}),(0,s.jsx)(d.A,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'curl -X POST \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\' \\\n--data-urlencode \'apiKey=XXXX-XXXX-XXXX-XXXX\' \\\n--data-urlencode \'cmd=postmsgs\' \\\n--data-urlencode \'postaction=U\' \\ # (U)pdate, (I)nsert, or (R)eplace\n--data-urlencode \'postmerge=Y\' \\ # (Y)es or (N)o\n--header \'Content-Type: application/json\' \\\n--data \'{\n    "header": {\n        "mTyp": "ResponderMarkupVegaDir"\n    },\n    "message": {\n        "pkey": {\n            "accnt": "exampleString", // string\n            "clientFirm": "exampleString", // string\n            "root": {\n                "at": "EQT",\n                "ts": "NMS",\n                "tk": "AAPL"\n            },\n            "respSide": "enumValue", // enum(BuySell) - None, Buy, Sell\n            "responderID": 1 // int\n        },\n        "userName": "exampleString", // string\n        "isDisabled": "enumValue", // enum(YesNo) - None, Yes, No\n        "enabledUntil": "2025-01-01 12:00:00.000000", // yyyy-MM-dd HH:mm:ss.SSSSSS\n        "canIncludeFlex": "enumValue", // enum(YesNo) - None, Yes, No\n        "canIncludeStock": "enumValue", // enum(YesNo) - None, Yes, No\n        "cpFlag": "enumValue", // enum(CallPut) - Call, Put, Pair\n        "minNetVegaRatio": 1.0, // float\n        "minYears": 1.0, // float\n        "maxYears": 1.0, // float\n        "minExpiry": "2025-01-01 12:00:00.000000", // yyyy-MM-dd HH:mm:ss.SSSSSS\n        "maxExpiry": "2025-01-01 12:00:00.000000", // yyyy-MM-dd HH:mm:ss.SSSSSS\n        "minXDelta": 1.0, // float\n        "maxXDelta": 1.0, // float\n        "minStrike": 1.0, // double\n        "maxStrike": 1.0, // double\n        "minSurfEdgePrem": 1.0, // float\n        "minSurfEdgeVol": 1.0, // float\n        "incFeesInResp": "enumValue", // enum(YesNo) - None, Yes, No\n        "roundRule": "enumValue", // enum(RoundRule) - None, Exact, Fuzzy\n        "maxResponseSize": 1, // int\n        "maxResponseVega": 1.0, // float\n        "totalResponseVega": 1.0, // float\n        "totalResponseWtVega": 1.0, // float\n        "autoHedge": "enumValue", // enum(AutoHedge) - None, Static, AutoMid, AutoCrx, AutoTrn, SpdrAuto, Spdr10S, Spdr30S, Spdr90S, Spdr5M, Spdr30M, SpdrDay, SmartFast, SmartNorm, FastCrx, FastDark, SlowDark, AlphaVwap1pct, AlphaVwap2pct, AlphaVwap5pct, AlphaVwap25pct, Custom, AwayAlgo\n        "hedgeInstrument": "enumValue", // enum(HedgeInst) - None, Default, FrontMonth, Stock, Future\n        "hedgeSecKey": {\n            "at": "EQT",\n            "ts": "NMS",\n            "tk": "AAPL",\n            "dt": "2025-01-01"\n        },\n        "hedgeBetaRatio": 1.0, // float\n        "hedgeScope": "enumValue", // enum(HedgeScope) - None, Accnt, RiskGroup\n        "hedgeSession": "enumValue", // enum(MarketSession) - None, PreMkt, RegMkt, PostMkt, PreRegMkt, RegPostMkt, AllDay\n        "riskGroupId": 1, // long\n        "qtyTraded": 1, // int\n        "vegaTraded": 1.0, // double\n        "wtVegaTraded": 1.0, // double\n        "numNotices": 1, // long\n        "numNoticeSR": 1, // long\n        "numNoticeAMEX": 1, // long\n        "numNoticeBATS": 1, // long\n        "numNoticeBOX": 1, // long\n        "numNoticeCBOE": 1, // long\n        "numNoticeC2": 1, // long\n        "numNoticeEDGO": 1, // long\n        "numNoticeEMLD": 1, // long\n        "numNoticeGMNI": 1, // long\n        "numNoticeISE": 1, // long\n        "numNoticeMCRY": 1, // long\n        "numNoticeMEMX": 1, // long\n        "numNoticeMIAX": 1, // long\n        "numNoticeMPRL": 1, // long\n        "numNoticeNYSE": 1, // long\n        "numNoticeNQBX": 1, // long\n        "numNoticeNSDQ": 1, // long\n        "numNoticePHLX": 1, // long\n        "numNoticeSPHR": 1, // long\n        "respDisabledSkips": 1, // long\n        "stockDisabledSkips": 1, // long\n        "cpFlagSkips": 1, // long\n        "expiryRangeSkips": 1, // long\n        "yearsRangeSkips": 1, // long\n        "listedFlexSkips": 1, // long\n        "noticePriceSkips": 1, // long\n        "aggSizeLimitSkips": 1, // long\n        "riskGroupLimitSkips": 1, // long\n        "rootSkips": 1, // long\n        "xDeltaRangeSkips": 1, // long\n        "strikeRangeSkips": 1, // long\n        "minVegaRatioSkips": 1, // long\n        "numResponses": 1, // long\n        "numFullSize": 1, // long\n        "numAllocSize": 1, // long\n        "numPriceMiss": 1, // long\n        "numTooLate": 1, // long\n        "numOtherMiss": 1, // long\n        "numDidNotTrade": 1, // long\n        "modifiedBy": "exampleString", // string\n        "modifiedIn": "enumValue", // enum(SysEnvironment) - None, Neptune, Pluto, V7_Stable, V7_Latest, Saturn, Venus, Mars, SysTest, V7_Current\n        "timestamp": "2025-01-01 12:00:00.000000" // yyyy-MM-dd HH:mm:ss.SSSSSS\n    }\n}\'\n'})})})]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},19365:(e,n,t)=>{t.d(n,{A:()=>d});t(96540);var s=t(34164);const i={tabItem:"tabItem_Ymn6"};var r=t(74848);function d(e){let{children:n,hidden:t,className:d}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,s.A)(i.tabItem,d),hidden:t,children:n})}},11470:(e,n,t)=>{t.d(n,{A:()=>y});var s=t(96540),i=t(34164),r=t(23104),d=t(56347),l=t(205),a=t(57485),o=t(31682),c=t(70679);function u(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:n,children:t}=e;return(0,s.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:s,default:i}}=e;return{value:n,label:t,attributes:s,default:i}}))}(t);return function(e){const n=(0,o.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function h(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function p(e){let{queryString:n=!1,groupId:t}=e;const i=(0,d.W6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,a.aZ)(r),(0,s.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(i.location.search);n.set(r,e),i.replace({...i.location,search:n.toString()})}),[r,i])]}function x(e){const{defaultValue:n,queryString:t=!1,groupId:i}=e,r=m(e),[d,a]=(0,s.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const s=t.find((e=>e.default))??t[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:r}))),[o,u]=p({queryString:t,groupId:i}),[x,g]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,r]=(0,c.Dv)(t);return[i,(0,s.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:i}),j=(()=>{const e=o??x;return h({value:e,tabValues:r})?e:null})();(0,l.A)((()=>{j&&a(j)}),[j]);return{selectedValue:d,selectValue:(0,s.useCallback)((e=>{if(!h({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);a(e),u(e),g(e)}),[u,g,r]),tabValues:r}}var g=t(92303);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var S=t(74848);function N(e){let{className:n,block:t,selectedValue:s,selectValue:d,tabValues:l}=e;const a=[],{blockElementScrollPositionUntilNextRender:o}=(0,r.a_)(),c=e=>{const n=e.currentTarget,t=a.indexOf(n),i=l[t].value;i!==s&&(o(n),d(i))},u=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=a.indexOf(e.currentTarget)+1;n=a[t]??a[0];break}case"ArrowLeft":{const t=a.indexOf(e.currentTarget)-1;n=a[t]??a[a.length-1];break}}n?.focus()};return(0,S.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:r}=e;return(0,S.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>a.push(e),onKeyDown:u,onClick:c,...r,className:(0,i.A)("tabs__item",j.tabItem,r?.className,{"tabs__item--active":s===n}),children:t??n},n)}))})}function k(e){let{lazy:n,children:t,selectedValue:i}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===i));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return(0,S.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function R(e){const n=x(e);return(0,S.jsxs)("div",{className:(0,i.A)("tabs-container",j.tabList),children:[(0,S.jsx)(N,{...n,...e}),(0,S.jsx)(k,{...n,...e})]})}function y(e){const n=(0,g.A)();return(0,S.jsx)(R,{...e,children:u(e.children)},String(n))}},28453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>l});var s=t(96540);const i={},r=s.createContext(i);function d(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);