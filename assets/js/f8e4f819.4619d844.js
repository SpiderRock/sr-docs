"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[36462],{43450:(e,N,n)=>{n.r(N),n.d(N,{assets:()=>E,contentTitle:()=>L,default:()=>o,frontMatter:()=>T,metadata:()=>r,toc:()=>O});var t=n(74848),i=n(28453);const T={title:"OptionPrintSet"},L=void 0,r={id:"MessageSchemas/Schema/SRSE Products/SRAnalytics/OptionPrintSet/OptionPrintSet",title:"OptionPrintSet",description:"V8 Message Definition",source:"@site/docs/MessageSchemas/Schema/SRSE Products/SRAnalytics/OptionPrintSet/OptionPrintSet.md",sourceDirName:"MessageSchemas/Schema/SRSE Products/SRAnalytics/OptionPrintSet",slug:"/MessageSchemas/Schema/SRSE Products/SRAnalytics/OptionPrintSet/",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRAnalytics/OptionPrintSet/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"OptionPrintSet"},sidebar:"messageSchemasSidebar",previous:{title:"OptionPrintProbability",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRAnalytics/OptionPrintProbability/"},next:{title:"OptionPrintSetSummary",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRAnalytics/OptionPrintSetSummary/"}},E={},O=[];function M(e){const N={a:"a",code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(N.p,{children:(0,t.jsx)(N.a,{href:"../../../Topics/market-data-options/OptionPrintSet",children:"V8 Message Definition"})}),"\n",(0,t.jsx)(N.pre,{children:(0,t.jsx)(N.code,{className:"language-sql",children:"CREATE TABLE `SRAnalytics`.`MsgOptionPrintSet` (\n    `okey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None',\n    `okey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None',\n    `okey_tk` VARCHAR(12) NOT NULL DEFAULT '',\n    `okey_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0,\n    `okey_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0,\n    `okey_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0,\n    `okey_xx` DOUBLE NOT NULL DEFAULT 0,\n    `okey_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call',\n    `prtNumber` BIGINT NOT NULL DEFAULT 0 COMMENT 'Unique print set identifier, will increment but not guaranteed to be sequential',\n    `fkey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'underlying fkey (if any)',\n    `fkey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'underlying fkey (if any)',\n    `fkey_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'underlying fkey (if any)',\n    `fkey_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'underlying fkey (if any)',\n    `fkey_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'underlying fkey (if any)',\n    `fkey_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'underlying fkey (if any)',\n    `ticker_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'underlying ticker',\n    `ticker_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'underlying ticker',\n    `ticker_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'underlying ticker',\n    `prtExch` ENUM('None','AMEX','BOX','CBOE','ISE','NYSE','PHLX','NSDQ','BATS','C2','NQBX','MIAX','GMNI','CME','CBOT','NYMEX','COMEX','ICE','EDGO','MCRY','MPRL','SDRK','DQTE','EMLD','CFE','MEMX','EUREX','CEDX','NXAM','NXBR','NXLS','NXML','NXOS','NXP','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'exchange on which print took place',\n    `prtSize` INT NOT NULL DEFAULT 0 COMMENT 'print size [contracts]',\n    `prtPrice` FLOAT NOT NULL DEFAULT 0 COMMENT 'print price',\n    `prtType` ENUM('None','CANC','OSEQ','CNCL','LATE','CNCO','OPEN','CNOL','OPNL','AUTO','REOP','ISOI','SLAN','SLAI','SLCN','SCLI','SLFT','MLET','MLAT','MLCT','MLFT','MESL','TLAT','MASL','MFSL','TLET','TLCT','TLFT','TESL','TASL','TFSL','CBMO','MCTP','EXHT') NOT NULL DEFAULT 'None' COMMENT 'print type',\n    `prtOrders` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'number of participating orders (future exchanges only)',\n    `prtClusterNum` INT NOT NULL DEFAULT 0 COMMENT 'incremental print cluster counter (one counter per okey; used to group prints into clusters)',\n    `prtClusterSize` INT NOT NULL DEFAULT 0 COMMENT 'cumulative size of prints in this sequence (prints @ same or more aggressive price with less than 25 ms elapsing since first print; can span exchanges)',\n    `prtVolume` INT NOT NULL DEFAULT 0 COMMENT 'day print volume in contracts',\n    `cxlVolume` INT NOT NULL DEFAULT 0 COMMENT 'day print/cancel volume (num of contracts printed and then cancelled)',\n    `bidCount` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'number of bid prints',\n    `askCount` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'number of ask prints',\n    `bidVolume` INT NOT NULL DEFAULT 0 COMMENT 'bid print volume in contracts',\n    `askVolume` INT NOT NULL DEFAULT 0 COMMENT 'ask print volume in contracts',\n    `ebid` FLOAT NOT NULL DEFAULT 0 COMMENT 'exchange bid (@ print time)',\n    `eask` FLOAT NOT NULL DEFAULT 0 COMMENT 'exchange ask (@ print time)',\n    `ebsz` INT NOT NULL DEFAULT 0 COMMENT 'exchange bid size',\n    `easz` INT NOT NULL DEFAULT 0 COMMENT 'exchange ask size',\n    `eage` FLOAT NOT NULL DEFAULT 0 COMMENT 'age of prevailing quote at time of print',\n    `prtSide` ENUM('None','Mid','Bid','Ask') NOT NULL DEFAULT 'None',\n    `prtTimestamp` BIGINT NOT NULL DEFAULT 0 COMMENT 'exchange high precision timestamp (if available)',\n    `netTimestamp` BIGINT NOT NULL DEFAULT 0 COMMENT 'inbound packet PTP timestamp from SR gateway switch; usually syncronized with facility grandfather clock',\n    `timestamp` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000',\n    `oBid` FLOAT NOT NULL DEFAULT 0 COMMENT 'Option NBBO bid a the time the print was received',\n    `oAsk` FLOAT NOT NULL DEFAULT 0 COMMENT 'Option NBBO ask a the time the print was received',\n    `oBidSz` INT NOT NULL DEFAULT 0 COMMENT 'Option NBBO cumulative bid size at the time the print was received',\n    `oAskSz` INT NOT NULL DEFAULT 0 COMMENT 'Option NBBO cumulative ask size at the time the print was received',\n    `oBidEx` ENUM('None','AMEX','BOX','CBOE','ISE','NYSE','PHLX','NSDQ','BATS','C2','NQBX','MIAX','GMNI','CME','CBOT','NYMEX','COMEX','ICE','EDGO','MCRY','MPRL','SDRK','DQTE','EMLD','CFE','MEMX','EUREX','CEDX','NXAM','NXBR','NXLS','NXML','NXOS','NXP','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'First (or largest) option exchange on the bid',\n    `oAskEx` ENUM('None','AMEX','BOX','CBOE','ISE','NYSE','PHLX','NSDQ','BATS','C2','NQBX','MIAX','GMNI','CME','CBOT','NYMEX','COMEX','ICE','EDGO','MCRY','MPRL','SDRK','DQTE','EMLD','CFE','MEMX','EUREX','CEDX','NXAM','NXBR','NXLS','NXML','NXOS','NXP','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'First (or largest) option exchange on the ask',\n    `oBidExSz` INT NOT NULL DEFAULT 0 COMMENT 'Option bid size of the largest exchange on the bid at the time the print was received',\n    `oAskExSz` INT NOT NULL DEFAULT 0 COMMENT 'Option ask size of the largest exchange on the ask at the time the print was received',\n    `oBidCnt` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Number of exchanges on the NBBO bid',\n    `oAskCnt` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Number of exchanges on the NBBO ask',\n    `oBid2` FLOAT NOT NULL DEFAULT 0 COMMENT 'Second level bid price',\n    `oAsk2` FLOAT NOT NULL DEFAULT 0 COMMENT 'Second level ask price',\n    `oBidSz2` INT NOT NULL DEFAULT 0 COMMENT 'Cumulative size on the second level bid price',\n    `oAskSz2` INT NOT NULL DEFAULT 0 COMMENT 'Cumulative size on the second level ask price',\n    `oBidIv` DOUBLE NOT NULL DEFAULT 0 COMMENT 'option bid IV',\n    `oAskIv` DOUBLE NOT NULL DEFAULT 0 COMMENT 'option ask IV',\n    `uBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier bid',\n    `uAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier ask',\n    `uPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier price',\n    `yrs` FLOAT NOT NULL DEFAULT 0 COMMENT 'years to expiry',\n    `rate` FLOAT NOT NULL DEFAULT 0 COMMENT 'interest rate',\n    `sdiv` FLOAT NOT NULL DEFAULT 0 COMMENT 'continuous stock dividend',\n    `ddiv` FLOAT NOT NULL DEFAULT 0 COMMENT 'discrete stock dividend value (sum of dividends <= expiration)',\n    `xDe` FLOAT NOT NULL DEFAULT 0 COMMENT 'xDelta',\n    `xAxis` FLOAT NOT NULL DEFAULT 0 COMMENT 'SR surface xAxis value',\n    `multihedge` ENUM('None','Simple','Complex','AllCash','Binary','Fragment') NOT NULL DEFAULT 'None' COMMENT 'Distinguishes options that have a single underlying security from those that are more complex:  multiple securities,cash components, binary options,etc:  ''None'',''Simple'',''Complex'',''AllCash'',''Binary''',\n    `flexType` ENUM('None','AM_Amer','AM_Euro','PM_Amer','PM_Euro','Asian','Cliquet','Other') NOT NULL DEFAULT 'None',\n    `flexRoot` VARCHAR(12) NOT NULL DEFAULT '',\n    `prtIv` FLOAT NOT NULL DEFAULT 0 COMMENT 'print implied vol',\n    `prtDe` FLOAT NOT NULL DEFAULT 0 COMMENT 'print delta',\n    `prtGa` FLOAT NOT NULL DEFAULT 0 COMMENT 'print gamma',\n    `prtTh` FLOAT NOT NULL DEFAULT 0 COMMENT 'print theta',\n    `prtVe` FLOAT NOT NULL DEFAULT 0 COMMENT 'print vega',\n    `prtRo` FLOAT NOT NULL DEFAULT 0 COMMENT 'print rho',\n    `calcErr` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'calc error flag',\n    `surfVol` FLOAT NOT NULL DEFAULT 0 COMMENT 'SR surface volatility',\n    `surfOpx` FLOAT NOT NULL DEFAULT 0 COMMENT 'SR surface price',\n    `surfAtm` FLOAT NOT NULL DEFAULT 0 COMMENT 'SR surface ATM vol',\n    `prtProbability` FLOAT NOT NULL DEFAULT 0 COMMENT '[M1] probability that buying prtSize contracts @ prtPrice will have positive m10 pnl (prtPriceM10 >= prtPrice) [recorded at time of print]',\n    `prtProbabilityM2` FLOAT NOT NULL DEFAULT 0 COMMENT 'alternate probability model',\n    `prtProbabilityM3` FLOAT NOT NULL DEFAULT 0 COMMENT 'alternate probability model',\n    `oBidM1` FLOAT NOT NULL DEFAULT 0 COMMENT 'NBBO option bid 1 minute after print was received',\n    `oAskM1` FLOAT NOT NULL DEFAULT 0 COMMENT 'NBBO option ask 1 minute after print was received',\n    `uBidM1` DOUBLE NOT NULL DEFAULT 0 COMMENT 'NBBO underlying bid 1 minute after print was received',\n    `uAskM1` DOUBLE NOT NULL DEFAULT 0 COMMENT 'NBBO underlying ask 1 minute after print was received',\n    `uPrcM1` DOUBLE NOT NULL DEFAULT 0 COMMENT 'Underlying price 1 minute after print was received',\n    `sVolM1` FLOAT NOT NULL DEFAULT 0 COMMENT 'Suface volatility 1 minute after print was received',\n    `sOpxM1` FLOAT NOT NULL DEFAULT 0 COMMENT 'Surface option price 1 minute after print was received',\n    `sDivM1` FLOAT NOT NULL DEFAULT 0 COMMENT 'sDiv 1 minute after print was received',\n    `sErrM1` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'Surface error condition (if any) 1 minute after print was received',\n    `pnlM1` FLOAT NOT NULL DEFAULT 0 COMMENT 'pnl after 1 minute',\n    `pnlM1Err` ENUM('None','Yes','No') NOT NULL DEFAULT 'None' COMMENT 'Error condition for PnL calculated over the first 1 minute after the print was received',\n    `oBidM10` FLOAT NOT NULL DEFAULT 0 COMMENT 'NBBO option bid 10 minutes after print was received',\n    `oAskM10` FLOAT NOT NULL DEFAULT 0 COMMENT 'NBBO option ask 10 minutes after print was received',\n    `uBidM10` DOUBLE NOT NULL DEFAULT 0 COMMENT 'NBBO underlying bid 10 minutes after print was received',\n    `uAskM10` DOUBLE NOT NULL DEFAULT 0 COMMENT 'NBBO underlying ask 10 minutes after print was received',\n    `uPrcM10` DOUBLE NOT NULL DEFAULT 0 COMMENT 'Underlying price 10 minutes after print was received',\n    `sVolM10` FLOAT NOT NULL DEFAULT 0 COMMENT 'Suface volatility 10 minutes after print was received',\n    `sOpxM10` FLOAT NOT NULL DEFAULT 0 COMMENT 'Surface option price 10 minutes after print was received',\n    `sDivM10` FLOAT NOT NULL DEFAULT 0 COMMENT 'sDiv 10 minutes after print was received',\n    `sErrM10` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'Surface error condition (if any) 10 minutes after print was received',\n    `pnlM10` FLOAT NOT NULL DEFAULT 0 COMMENT 'pnl after 10 minutes',\n    `pnlM10Err` ENUM('None','Yes','No') NOT NULL DEFAULT 'None' COMMENT 'Error condition for PnL calculated 10 minutes after the print was received',\n    `oBidS1` FLOAT NOT NULL DEFAULT 0 COMMENT 'NBBO option bid 1 second after print was received',\n    `oAskS1` FLOAT NOT NULL DEFAULT 0 COMMENT 'NBBO option ask 1 second after print was received',\n    `uBidS1` DOUBLE NOT NULL DEFAULT 0 COMMENT 'NBBO underlying bid 1 second after print was received',\n    `uAskS1` DOUBLE NOT NULL DEFAULT 0 COMMENT 'NBBO underlying ask 1 second after print was received',\n    `uPrcS1` DOUBLE NOT NULL DEFAULT 0 COMMENT 'Underlying price 1 second after print was received',\n    `sVolS1` FLOAT NOT NULL DEFAULT 0 COMMENT 'Suface volatility 1 second after print was received',\n    `sOpxS1` FLOAT NOT NULL DEFAULT 0 COMMENT 'Surface option price 1 second after print was received',\n    `sDivS1` FLOAT NOT NULL DEFAULT 0 COMMENT 'sDiv 1 second after print was received',\n    `sErrS1` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'Surface error condition (if any) 1 second after print was received',\n    `pnlS1` FLOAT NOT NULL DEFAULT 0 COMMENT 'pnl after 1 second',\n    `pnlS1Err` ENUM('None','Yes','No') NOT NULL DEFAULT 'None' COMMENT 'Error condition for PnL calculated over the first 1 second after the print was received',\n    `oBidNext` FLOAT NOT NULL DEFAULT 0 COMMENT 'next NBBO option bid after print was received',\n    `oAskNext` FLOAT NOT NULL DEFAULT 0 COMMENT 'next NBBO option ask after print was received',\n    PRIMARY KEY USING HASH (`okey_tk`,`okey_yr`,`okey_mn`,`okey_dy`,`okey_xx`,`okey_cp`,`okey_at`,`okey_ts`,`prtNumber`)\n) ENGINE=SRSE DEFAULT CHARSET=LATIN1 COMMENT='OptionPrintSet records contain every option print along with quote, surface, and SR probability details at print time.  These records also contain T+1M and T+10M forward mark details.   These records are created for every print at the time of print and are published to the SpiderRock elastic cluster 10 minutes later when T + 10M forward marks are available.';\n\n"})})]})}function o(e={}){const{wrapper:N}={...(0,i.R)(),...e.components};return N?(0,t.jsx)(N,{...e,children:(0,t.jsx)(M,{...e})}):M(e)}},28453:(e,N,n)=>{n.d(N,{R:()=>L,x:()=>r});var t=n(96540);const i={},T=t.createContext(i);function L(e){const N=t.useContext(T);return t.useMemo((function(){return"function"==typeof e?e(N):{...N,...e}}),[N,e])}function r(e){let N;return N=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:L(e.components),t.createElement(T.Provider,{value:N},e.children)}}}]);