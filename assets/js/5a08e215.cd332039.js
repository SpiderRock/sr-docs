"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[48374],{36079:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>l,frontMatter:()=>s,metadata:()=>c,toc:()=>a});var i=n(74848),o=n(28453);const s={sidebar_position:1},r=void 0,c={id:"Schema/MLink Tokens/FutureDefinition",title:"FutureDefinition",description:"| # | Message Name | Description |",source:"@site/docs/Schema/MLink Tokens/FutureDefinition.md",sourceDirName:"Schema/MLink Tokens",slug:"/Schema/MLink Tokens/FutureDefinition",permalink:"/sr-docs/docs/Schema/MLink Tokens/FutureDefinition",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"schemaSidebar",previous:{title:"FutSummaryData",permalink:"/sr-docs/docs/Schema/MLink Tokens/FutSummaryData"},next:{title:"GlobalDefinition",permalink:"/sr-docs/docs/Schema/MLink Tokens/GlobalDefinition"}},d={},a=[];function u(e){const t={a:"a",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"#"}),(0,i.jsx)(t.th,{children:"Message Name"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"4335"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../Topics/product-definition/CCodeDefinition",children:"CCodeDefinition"})}),(0,i.jsxs)(t.td,{children:["Commodity code (product code) definitions for all futures.  Also maps future ccodes to SpiderRock tickers. Information is sourced from listing exchange product definitions.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"This table also contains definitions for exchange and user-defined spreads including spreads used as option underliers. SpiderRock typically uses a compact form of the exchange (spread) product ID as the ccode for these products if there is no natural (human-readable) exchange spread ticker issued for the spread.  Note that the full spread definition can be found in the ProductDefinition and human-readable version in the description field below.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"Note that SpiderRock tickers below are synthetic and are created for organizational purposes only.  SpiderRock synthetic tickers typically begin with a '@' character."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"4360"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../Topics/product-definition/ProductDefinitionV2",children:"ProductDefinitionV2"})}),(0,i.jsx)(t.td,{children:"SpiderRock normalized exchange product definitions.  Includes future, option, and spread definitions from a number of exchanges.  TickerDefinitions, RootDefinitions and CCodeDefinitions are consistent with these records."})]})]})]})}function l(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>c});var i=n(96540);const o={},s=i.createContext(o);function r(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);