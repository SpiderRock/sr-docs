"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[65662],{3224:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>L,frontMatter:()=>a,metadata:()=>r,toc:()=>E});var s=n(74848),o=n(28453);const a={title:"OptionFlexEvent"},i=void 0,r={id:"MessageSchemas/Schema/SRSE Products/SRLive/OptionFlexEvent/OptionFlexEvent",title:"OptionFlexEvent",description:"V8 Message Definition",source:"@site/docs/MessageSchemas/Schema/SRSE Products/SRLive/OptionFlexEvent/OptionFlexEvent.md",sourceDirName:"MessageSchemas/Schema/SRSE Products/SRLive/OptionFlexEvent",slug:"/MessageSchemas/Schema/SRSE Products/SRLive/OptionFlexEvent/",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRLive/OptionFlexEvent/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"OptionFlexEvent"},sidebar:"messageSchemasSidebar",previous:{title:"OptionEOP",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRLive/OptionEOP/"},next:{title:"OptionLookback",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRLive/OptionLookback/"}},c={},E=[];function N(e){const t={a:"a",code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"../../../Topics/market-data-options/OptionFlexEvent",children:"V8 Message Definition"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sql",children:"CREATE TABLE `SRLive`.`MsgOptionFlexEvent` (\n    `sequenceNumber` INT NOT NULL DEFAULT 0 COMMENT 'sequence of the flex event message counting from the start of day or last restart of the feed handler',\n    `eventId` INT NOT NULL DEFAULT 0 COMMENT 'unique id of the event assigned by SpiderRock, subsequent messages on the event will use the same id',\n    `prtExch` ENUM('None','AMEX','BOX','CBOE','ISE','NYSE','PHLX','NSDQ','BATS','C2','NQBX','MIAX','GMNI','CME','CBOT','NYMEX','COMEX','ICE','EDGO','MCRY','MPRL','SDRK','DQTE','EMLD','CFE','MEMX','EUREX','CEDX','NXAM','NXBR','NXLS','NXML','NXOS','NXP','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'exchange code that produced this flex event',\n    `prtRoot` VARCHAR(6) NOT NULL DEFAULT '' COMMENT 'security symbol of the FLEX option',\n    `requestId` INT NOT NULL DEFAULT 0 COMMENT 'request identifier associated with this trade assigned by the exchange (these appear to not be 100% reliable, particularly for PHLX)',\n    `eventType` ENUM('None','RFQ','QTE','LST','CXL','ADM','IND') NOT NULL DEFAULT 'None' COMMENT 'type of event this message represents, e.g., RFQ, QTE, LST',\n    `totalQuantity` INT NOT NULL DEFAULT 0 COMMENT 'total quantity of the flex trade',\n    `packagePrice` DOUBLE NOT NULL DEFAULT 0 COMMENT 'total price of the flex trade inclusive of all legs',\n    `netTimestamp` BIGINT NOT NULL DEFAULT 0 COMMENT 'timestamp of when this message was received',\n    `srcTimestamp` BIGINT NOT NULL DEFAULT 0 COMMENT 'timestamp from the exchange of when this message was sent',\n    `LegsList` JSON NOT NULL DEFAULT JSON_OBJECT() CHECK(JSON_VALID(LegsList)),\n    PRIMARY KEY USING HASH (`sequenceNumber`)\n) ENGINE=SRSE DEFAULT CHARSET=LATIN1 COMMENT='The most recent (last) record for each active FLEX option.';\n\n"})})]})}function L(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(N,{...e})}):N(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>r});var s=n(96540);const o={},a=s.createContext(o);function i(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);