"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[60699],{3396:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>n,default:()=>x,frontMatter:()=>s,metadata:()=>l,toc:()=>a});var i=r(74848),d=r(28453);const s={title:"SpdrParentBrkrDetail"},n="Schema: SpdrParentBrkrDetail (ID: 4060)",l={id:"MessageSchemas/Schema/Topics/parent-orders/SpdrParentBrkrDetail",title:"SpdrParentBrkrDetail",description:"SpdrParentBrkrDetail records are created/published by SpiderRock Execution Engines. Each record describes the current active detail of a single parent broker.",source:"@site/docs/MessageSchemas/Schema/Topics/3985-parent-orders/SpdrParentBrkrDetail.md",sourceDirName:"MessageSchemas/Schema/Topics/3985-parent-orders",slug:"/MessageSchemas/Schema/Topics/parent-orders/SpdrParentBrkrDetail",permalink:"/docs/MessageSchemas/Schema/Topics/parent-orders/SpdrParentBrkrDetail",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"SpdrParentBrkrDetail"},sidebar:"messageSchemasSidebar",previous:{title:"SpdrMLegBrkrState",permalink:"/docs/MessageSchemas/Schema/Topics/parent-orders/SpdrMLegBrkrState"},next:{title:"SpdrParentBrkrEvent",permalink:"/docs/MessageSchemas/Schema/Topics/parent-orders/SpdrParentBrkrEvent"}},c={},a=[{value:"METADATA",id:"metadata",level:3},{value:"PRIMARY KEY",id:"primary-key",level:3},{value:"BODY",id:"body",level:3}];function h(e){const t={a:"a",h1:"h1",h3:"h3",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.h1,{id:"schema-spdrparentbrkrdetail-id-4060",children:["Schema: SpdrParentBrkrDetail ",(0,i.jsx)("span",{className:"small-text",children:"(ID: 4060)"})]}),"\n",(0,i.jsx)(t.p,{children:"SpdrParentBrkrDetail records are created/published by SpiderRock Execution Engines. Each record describes the current active detail of a single parent broker."}),"\n",(0,i.jsxs)("div",{className:"single-message-meta",children:[(0,i.jsx)(t.h3,{id:"metadata",children:"METADATA"}),(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Attribute"}),(0,i.jsx)(t.th,{children:"Value"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"MLink Token"}),(0,i.jsx)(t.td,{children:"SystemData"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Topic"}),(0,i.jsx)(t.td,{children:"parent-orders"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"SRSE Product"}),(0,i.jsx)(t.td,{children:"SRTrade"})]})]})]})]}),"\n",(0,i.jsxs)("div",{className:"single-message-primarykey",children:[(0,i.jsx)(t.h3,{id:"primary-key",children:"PRIMARY KEY"}),(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Field"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Comment"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"accnt"}),(0,i.jsx)(t.td,{children:"string(16)"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"secKey"}),(0,i.jsx)(t.td,{children:"OptionKey"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"secType"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/SpdrKeyType",children:"enum : SpdrKeyType"})}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"spdrSource"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/SpdrSource",children:"enum : SpdrSource"})}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"groupingCode"}),(0,i.jsx)(t.td,{children:"long"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderSide"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"clientFirm"}),(0,i.jsx)(t.td,{children:"string(16)"}),(0,i.jsx)(t.td,{children:"SR client firm"})]})]})]})]}),"\n",(0,i.jsxs)("div",{className:"single-message-body",children:[(0,i.jsx)(t.h3,{id:"body",children:"BODY"}),(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Field"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Comment"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"arriveAsk"}),(0,i.jsx)(t.td,{children:"double"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"arriveBid"}),(0,i.jsx)(t.td,{children:"double"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"arriveSweepCount"}),(0,i.jsx)(t.td,{children:"int"}),(0,i.jsx)(t.td,{children:"number of parent orders arriving with immediately available sweep qty"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"arriveSweepFillQty"}),(0,i.jsx)(t.td,{children:"int"}),(0,i.jsx)(t.td,{children:"total fill size due to parent order arrival sweep"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"arriveSweepOrderQty"}),(0,i.jsx)(t.td,{children:"int"}),(0,i.jsx)(t.td,{children:"total size of all child orders generated due to parent order arrival sweep"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"auctionFace"}),(0,i.jsx)(t.td,{children:"int"}),(0,i.jsx)(t.td,{children:"total facilitation auction contracts while parent order was active"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"auctionLink"}),(0,i.jsx)(t.td,{children:"int"}),(0,i.jsx)(t.td,{children:"total linkage auction contracts while parent order was active"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"auctionResp"}),(0,i.jsx)(t.td,{children:"int"}),(0,i.jsx)(t.td,{children:"total auction response contracts"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"avgMkProb"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"average make probability while broker active"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"avgQteSzRatio"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"average ratio of child size / nbbo size during the life of the working order when child order is at nbbo"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"avgQteWidth"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"average quote width (during active order window)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"avgTkProb"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"average take probability while broker active"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"baseParentNumber"}),(0,i.jsx)(t.td,{children:"long"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"blockVisibility"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/BlockVisibility",children:"enum : BlockVisibility"})}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"canOverlapCxlRepl"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,i.jsx)(t.td,{children:"can execution engines overlap cancel/replace operations [order can overfill if YES] (at most one active overlapping cxl/replace operation for each parent order)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"cntQteSzRatio"}),(0,i.jsx)(t.td,{children:"int"}),(0,i.jsx)(t.td,{children:"sample counter for above [1 second intervals]; qteCnRatio / qteCnRatioCnt = avg of child size / nbbo size while broker active"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"cntQteWidth"}),(0,i.jsx)(t.td,{children:"int"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"curMkProb"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"current make probability"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"curTkProb"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"current take probability"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"cxlUPrcRange"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/UPrcCxl",children:"enum : UPrcCxl"})}),(0,i.jsx)(t.td,{children:"cancel spdr order if/when outside stock price range"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"ddivOverride"}),(0,i.jsx)(t.td,{children:"text2"}),(0,i.jsxs)(t.td,{children:["discrete dividend string override ([yearsToExpiry,divYears",":divAmount",",divYears",":divAmount",", ...])"]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"engineName"}),(0,i.jsx)(t.td,{children:"text1"}),(0,i.jsx)(t.td,{children:"server stripe"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"exchMask"}),(0,i.jsx)(t.td,{children:"uint"}),(0,i.jsx)(t.td,{children:"eligible exchanges (0 = all)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"execBrkrCode"}),(0,i.jsx)(t.td,{children:"string(16)"}),(0,i.jsx)(t.td,{children:"execBrkrCode attached to parent order (if any)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"expDayWtVegaOffset"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max acct+symbol day wtVega offset (target)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"expireDttm"}),(0,i.jsx)(t.td,{children:"DateTime"}),(0,i.jsx)(t.td,{children:"EE Parent Order Expiry Dttm"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"externExDest"}),(0,i.jsx)(t.td,{children:"string(12)"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"goodTillDttm"}),(0,i.jsx)(t.td,{children:"DateTime"}),(0,i.jsx)(t.td,{children:"[optional] (default: 2099-01-01)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"grpDayRMetric1Ratio"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"target bot / sld ratio (eg ratio=0.5 means that neutral is bot rMetric1 = 0.5x sld rMetric1)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"grpDayVegaRatio"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"target bot / sld ratio (eg ratio=2.0 means that neutral is bot vega = 2x sld vega)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"locateFirm"}),(0,i.jsx)(t.td,{children:"string(6)"}),(0,i.jsx)(t.td,{children:"firm granting the locate (also locate firm used on street FIX orders)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"locatePool"}),(0,i.jsx)(t.td,{children:"string(16)"}),(0,i.jsx)(t.td,{children:"locate pool @ firm granting the locate"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"locateQuan"}),(0,i.jsx)(t.td,{children:"int"}),(0,i.jsx)(t.td,{children:"available locate quantity (if selling short) @ child order send time"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"makeAlphaFactor"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"[-2,+2] makeProbLimit = MAX(makeProbability, makeProbAvg + makeAlphaFactor * makeProbStd) [if makeAlphaType = Relative]"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"makeAlphaType"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/AlphaType",children:"enum : AlphaType"})}),(0,i.jsx)(t.td,{children:"Applies if makeLimitClass = Probability"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"makeLimitClass"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/SpdrLimitClass",children:"enum : SpdrLimitClass"})}),(0,i.jsx)(t.td,{children:"Simple = LimitPrice, Surface = BEST(LimitPrice, SurfLimit), Probability = BEST(LimitPrice, ProbLimit)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"makeProbability"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"makeProbLimit = makeProbability [if makeAlphaType = Static]"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"makeSurfPrcOffset"}),(0,i.jsx)(t.td,{children:"double"}),(0,i.jsx)(t.td,{children:"default=0"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"makeSurfVolOffset"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"default=0"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"makeSurfWidthOffset"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"[-1.x to +1.x]       -1.0 = -0.5 * avgMktWidth, +1.0 = +0.5 * avgMktWidth"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"marketSession"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/MarketSession",children:"enum : MarketSession"})}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxChildOrders"}),(0,i.jsx)(t.td,{children:"int"}),(0,i.jsx)(t.td,{children:"maximum number of child orders that can be generated by this parent order [order will terminate if/when this cap is reached;zero or neg = unlimited]"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxExpDayRMetric6Ln"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max acct+expiration day rMetric6 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxExpDayRMetric6Sh"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max acct+expiration day rMetric6 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxExpDayWtVegaLn"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max accnt+expiration day (time weighted) vega long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxExpDayWtVegaSh"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max accnt+expiration day (time weighted) vega short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxExposureSize"}),(0,i.jsx)(t.td,{children:"int"}),(0,i.jsx)(t.td,{children:"maximum simultaneous cumulative child order public size exposure (-1 = orderActiveSize) [order can overfill if > orderActiveSize and numMakeExchanges > 1]"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayContractsAbs"}),(0,i.jsx)(t.td,{children:"int"}),(0,i.jsx)(t.td,{children:"max acct+riskGroup day opt contracts abs (positive number;-1=no limit);risk limit = max limit - abs(current net counter)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayContractsLn"}),(0,i.jsx)(t.td,{children:"int"}),(0,i.jsx)(t.td,{children:"max acct+riskGroup day opt contracts long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayContractsSh"}),(0,i.jsx)(t.td,{children:"int"}),(0,i.jsx)(t.td,{children:"max acct+riskGroup day opt contracts short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayDDeltaLn"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max acct+riskGroup day $delta long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayDDeltaSh"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max acct+riskGroup day $delta short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayRMetric1Abs"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max acct+riskGroup day rMetric1 abs (positive number;-1=no limit);risk limit = max limit - abs(current net counter)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayRMetric1Ln"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max acct+riskGroup day rMetric1 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayRMetric1Sh"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max acct+riskGroup day rMetric1 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayRMetric2Ln"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max acct+riskGroup day rMetric2 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayRMetric2Sh"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max acct+riskGroup day rMetric2 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayRMetric3Ln"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max acct+riskGroup day rMetric3 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayRMetric3Sh"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max acct+riskGroup day rMetric3 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayRMetric4Ln"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max acct+riskGroup day rMetric4 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayRMetric4Sh"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max acct+riskGroup day rMetric4 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayRMetric5Ln"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max acct+riskGroup day rMetric5 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayRMetric5Sh"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max acct+riskGroup day rMetric5 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayVegaAbs"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max acct+riskGroup day vega abs (positive number;-1=no limit);risk limit = max limit - abs(current net counter)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayVegaLn"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max acct+riskGroup day vega long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayVegaSh"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max acct+riskGroup day vega short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxSymDayDDeltaLn"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max acct+symbol day $delta long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxSymDayDDeltaSh"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max acct+symbol day $delta short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxSymDayRMetric7Ln"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max acct+symbol day rMetric7 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxSymDayRMetric7Sh"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max acct+symbol day rMetric7 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxSymDayVegaLn"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max acct+symbol day vega long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxSymDayVegaSh"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max acct+symbol day vega short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxSymDayWtVegaLn"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max acct+symbol day (time weighted) vega long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxSymDayWtVegaSh"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max acct+symbol day (time weighted) vega short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxTkProb"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max take probability while broker active"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxUAsk"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"[optional] (< $0.01 = none)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"minMaxType"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/MinMaxType",children:"enum : MinMaxType"})}),(0,i.jsx)(t.td,{children:"if Prc minUBid/maxUAsk are expressed as prices; if Pct then they are expresses as pct change since parent order arrival"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"minMkProb"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"min make probability while broker active"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"minMktOnClosePct"}),(0,i.jsx)(t.td,{children:"byte"}),(0,i.jsx)(t.td,{children:"Minimum pct [0 - 100] of order reserved for the on-close auction"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"minOptionPx"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"[optional] option price floor for tied to stock orders"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"minQteWidth"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"minimum quote width during active order window"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"minUBid"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"[optional]"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"mkCheckCnt"}),(0,i.jsx)(t.td,{children:"int"}),(0,i.jsx)(t.td,{children:"total number of times order was checked for making"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"numMakeExchanges"}),(0,i.jsx)(t.td,{children:"byte"}),(0,i.jsx)(t.td,{children:"number of exchanges (1 - 4) on which to publish public making orders.  Effective number might be less than requested number if sufficient exchanges are not available."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"numSweepChildOrders"}),(0,i.jsx)(t.td,{children:"int"}),(0,i.jsx)(t.td,{children:"child orders generated in initial arrival sweep"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"numUpdates"}),(0,i.jsx)(t.td,{children:"int"}),(0,i.jsx)(t.td,{children:"number of record updates (cumulative for the day)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderDuration"}),(0,i.jsx)(t.td,{children:"int"}),(0,i.jsx)(t.td,{children:"[optional] (number of seconds)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderLimitType"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/SpdrLimitType",children:"enum : SpdrLimitType"})}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderPrcLimit"}),(0,i.jsx)(t.td,{children:"double"}),(0,i.jsx)(t.td,{children:"Applies if LimitType = Prc[]"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderPrcOffset"}),(0,i.jsx)(t.td,{children:"double"}),(0,i.jsx)(t.td,{children:"default=0"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderRefDelta"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"default=option.delta"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderRefGamma"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"default=option.gamma"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderRefTheta"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderRefUPrc"}),(0,i.jsx)(t.td,{children:"double"}),(0,i.jsx)(t.td,{children:"default=underlier.mid"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderRefYears"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderVolLimit"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"Applies if LimitType = Vol[] [uses SR dividends and borrow rates]"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"overrideCode"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/OverrideCode",children:"enum : OverrideCode"})}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"parentBalanceHandling"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/ParentBalanceHandling",children:"enum : ParentBalanceHandling"})}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"parentNumber"}),(0,i.jsx)(t.td,{children:"long"}),(0,i.jsx)(t.td,{children:"SR parent number"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"parentOrderHandling"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/ParentOrderHandling",children:"enum : ParentOrderHandling"})}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"positionType"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/PositionType",children:"enum : PositionType"})}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"progressExposeTime"}),(0,i.jsx)(t.td,{children:"int"}),(0,i.jsx)(t.td,{children:"minimum time (secs) to expose order (0 = no minimum; used to guarantee that the order is exposed at mid-market for some time before actively taking)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"progressRule"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/ProgressRule",children:"enum : ProgressRule"})}),(0,i.jsx)(t.td,{children:"Immediate = all size immediately available;TWAP = size released in time intervals;VWAP = size released in volume intervals;"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"progressSliceCnt"}),(0,i.jsx)(t.td,{children:"byte"}),(0,i.jsx)(t.td,{children:"number of progress slices to use (default = 4 or 8) [max 20]"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"prtActiveCnt"}),(0,i.jsx)(t.td,{children:"int"}),(0,i.jsx)(t.td,{children:"total print events while parent order was active; [any exchange; all prints]"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"prtEligibleCnt"}),(0,i.jsx)(t.td,{children:"int"}),(0,i.jsx)(t.td,{children:"total eligible (public) print events while parent order was active; [any exchange; all eligible prints]"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"prtPrbCheck"}),(0,i.jsx)(t.td,{children:"int"}),(0,i.jsx)(t.td,{children:"number of print probability records with active probability printTake handler"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"prtPrbCnt"}),(0,i.jsx)(t.td,{children:"int"}),(0,i.jsx)(t.td,{children:"total number of print probability records while broker active (all limit types)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"prtPrbLmtOK"}),(0,i.jsx)(t.td,{children:"int"}),(0,i.jsx)(t.td,{children:"number of print probability records that pass broker takeLimit"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"prtQtyActive"}),(0,i.jsx)(t.td,{children:"int"}),(0,i.jsx)(t.td,{children:"total quantity printed while parent order was active; [any exchange; all prints]"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"prtQtyActiveMny"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"total of (quantity printed x print price) while parent order was active"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"prtQtyAwayChld"}),(0,i.jsx)(t.td,{children:"int"}),(0,i.jsx)(t.td,{children:"total quantity printed on an away exchange when we had a competitive child order(s) in the market and the away exchange was competitive prior to the print; SUM(MIN(PrintSize, OpenChildOrderSize)) [childOrder.exch != print.exch]"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"prtQtyCompete"}),(0,i.jsx)(t.td,{children:"int"}),(0,i.jsx)(t.td,{children:"total quantity printed on an exchange on which we had a competitive child order on that exchange; SUM(MIN(PrintSize, OpenChildOrderSize)) [childOrder.exch = print.exch]"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"prtQtyEligible"}),(0,i.jsx)(t.td,{children:"int"}),(0,i.jsx)(t.td,{children:"total eligible (public) quantity printed while parent order was active; [any exchange; all eligible prints]"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"prtQtyLimitOK"}),(0,i.jsx)(t.td,{children:"int"}),(0,i.jsx)(t.td,{children:"total quantity printed at or better than parent limit while parent was active; SUM(MIN(PrintSize,OpenParentOrderSize)) [any exchange]"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"prtQtyNoCompNbbo"}),(0,i.jsx)(t.td,{children:"int"}),(0,i.jsx)(t.td,{children:"total quantity printed on an exchange when the NBBO was not competitive prior to the print (non nbbo-competitive prints)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"prtQtyNoCompete"}),(0,i.jsx)(t.td,{children:"int"}),(0,i.jsx)(t.td,{children:"total quantity printed on an exchange when the print exchange was not competitive prior to the print (non quote-competitive prints)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"publicSize"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/PublicSizeHandling",children:"enum : PublicSizeHandling"})}),(0,i.jsx)(t.td,{children:"public order size handling"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"rateOverride"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"zero = ignore;> zero = override"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"riskGroupId"}),(0,i.jsx)(t.td,{children:"long"}),(0,i.jsx)(t.td,{children:"all orders with the same riskGroupId share a common set of risk counters;.Grp. risk limits apply to these shared counters"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"sdivOverride"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"spdrStageType"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/SpdrStageType",children:"enum : SpdrStageType"})}),(0,i.jsx)(t.td,{children:"parent is a staged order [ToolVisible]"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"ssaleFlag"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/ShortSaleFlag",children:"enum : ShortSaleFlag"})}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"startDttm"}),(0,i.jsx)(t.td,{children:"DateTime"}),(0,i.jsx)(t.td,{children:"[optional] (parent order start time)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"startType"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/StartType",children:"enum : StartType"})}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"strategy"}),(0,i.jsx)(t.td,{children:"string(36)"}),(0,i.jsx)(t.td,{children:"parent order strategy (description only)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"symDayDDeltaOffset"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max acct+symbol day $delta offset (target)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"symDayVegaOffset"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max acct+symbol day vega offset (target)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"symDayWtVegaOffset"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max acct+symbol day wtVega offset (target)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"symEmaCxlDDeltaLn"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max acct+symbol 60s EMA $delta long (positive number; <= 0 is no limit) [will immediately cxl all option orders in a symbol if any order in the symbol breaches]"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"symEmaCxlDDeltaSh"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max acct+symbol 60s EMA $delta short (positive number; <= 0 is no limit)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"symEmaCxlWtVegaLn"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max acct+symbol 60s EMA wtVega long (positive number; <= 0 is no limit) [will immediately cxl all option orders in a symbol if any order in the symbol breaches]"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"symEmaCxlWtVegaSh"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"max acct+symbol 60s EMA wtVega short (positive number; <= 0 is no limit)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"takeAlphaFactor"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"[-2,+2] takeProbLimit = MAX(takeProbability, takeProbAvg + takeAlphaFactor * takeProbStd) [if takeAlphaType = Relative]"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"takeAlphaType"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/AlphaType",children:"enum : AlphaType"})}),(0,i.jsx)(t.td,{children:"Applies if takeLimitClass = Probability"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"takeLimitClass"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/SpdrLimitClass",children:"enum : SpdrLimitClass"})}),(0,i.jsx)(t.td,{children:"Simple = LimitPrice, Surface = BEST(LimitPrice, SurfLimit), Probability = BEST(LimitPrice, ProbLimit)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"takeProbability"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"takeProbLimit = takeProbability [if takeAlphaType = Static]"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"takeReachRule"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/ReachRule",children:"enum : ReachRule"})}),(0,i.jsx)(t.td,{children:"Immediate = reach room immediately available; Delayed = available after [1-3] seconds; Passive = available if contra side aggresses; WeakOnly = only take if available size < avgMarketSize; ISOSweep = Intermarket Sweep [requires WaitTrigger]"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"takeSurfPrcOffset"}),(0,i.jsx)(t.td,{children:"double"}),(0,i.jsx)(t.td,{children:"default=0"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"takeSurfVolOffset"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"default=0"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"takeSurfWidthOffset"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"[-1.x to +1.x]       -1.0 = -0.5 * avgMktWidth, +1.0 = +0.5 * avgMktWidth"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"timestamp"}),(0,i.jsx)(t.td,{children:"DateTime"}),(0,i.jsx)(t.td,{children:"SR system timestamp"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"tkCheckCnt"}),(0,i.jsx)(t.td,{children:"int"}),(0,i.jsx)(t.td,{children:"total number of times order was checked for taking"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"tkQtyLmtOK"}),(0,i.jsx)(t.td,{children:"int"}),(0,i.jsx)(t.td,{children:"total quantity available to take at parent limit or better while broker active"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"triggerGroupId"}),(0,i.jsx)(t.td,{children:"long"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"triggerLevel"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"stop/trigger price for parent order to go active"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"triggerType"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/TriggerType",children:"enum : TriggerType"})}),(0,i.jsx)(t.td,{children:"type of trigger (PrintVol/SurfVol only for options) [print = print or actionable quote]"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"updateSrc"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/UpdateSource",children:"enum : UpdateSource"})}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"userName"}),(0,i.jsx)(t.td,{children:"string(24)"}),(0,i.jsx)(t.td,{children:"SR user name string"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"vwapParticipation"}),(0,i.jsx)(t.td,{children:"float"}),(0,i.jsx)(t.td,{children:"target vwap participation rate (target % of trade activity)"})]})]})]})]})]})}function x(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>n,x:()=>l});var i=r(96540);const d={},s=i.createContext(d);function n(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:n(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);