"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[98429],{25352:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var s=n(74848),o=n(28453);const i={title:"FLASH Responder Guide",sidebar_position:7},r=void 0,a={id:"SpiderRockConnectATS/FlashResponders",title:"FLASH Responder Guide",description:"Responding to Flash Auctions",source:"@site/docs/SpiderRockConnectATS/7.FlashResponders.md",sourceDirName:"SpiderRockConnectATS",slug:"/SpiderRockConnectATS/FlashResponders",permalink:"/docs/SpiderRockConnectATS/FlashResponders",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{title:"FLASH Responder Guide",sidebar_position:7},sidebar:"spiderRockConnectATSSidebar",previous:{title:"BLOCK Responder Guide",permalink:"/docs/SpiderRockConnectATS/BlockResponders"},next:{title:"ICE Chat Bot",permalink:"/docs/SpiderRockConnectATS/ICEChatBot"}},c={},d=[{value:"Responding to Flash Auctions",id:"responding-to-flash-auctions",level:2},{value:"MLink Subscriptions",id:"mlink-subscriptions",level:3},{value:"FIX Subscriptions",id:"fix-subscriptions",level:3},{value:"Auto-Responders",id:"auto-responders",level:3},{value:"Latency Considerations",id:"latency-considerations",level:3}];function l(e){const t={h2:"h2",h3:"h3",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"responding-to-flash-auctions",children:"Responding to Flash Auctions"}),"\n",(0,s.jsxs)(t.p,{children:["At the start of each flash auction an ",(0,s.jsx)(t.strong,{children:"AuctionNotice"})," message will be sent to all eligible responders. In addition, an ",(0,s.jsx)(t.strong,{children:"AuctionState"})," message will be sent at the conclusion of the flash trial match."]}),"\n",(0,s.jsx)(t.p,{children:"SpiderRock AuctionNotice messages typically contain a significant amount of markup detail such as OPRA and Stock NBBO levels, surface volatilities, prices, and associated greeks.  This information is provided on a best effort basis and is believed to be accurate enough to allow auction responding without reference to other systems. However, clients are always encouraged to use whatever information is available in order to make the most accurate decisions possible."}),"\n",(0,s.jsx)(t.p,{children:"These notice messages are the primary mechanism through which information about an auction is communicated to responders."}),"\n",(0,s.jsx)(t.h3,{id:"mlink-subscriptions",children:"MLink Subscriptions"}),"\n",(0,s.jsxs)(t.p,{children:["Both AuctionNotice and AuctionState messages are available via the SpiderRock ",(0,s.jsx)(t.strong,{children:"MLink/WebSocket API"}),". To get access you will need to secure and MLink API Key (contact us for more information), connect to an MLink/WebSocket server and make a subscription for both AuctionNotice and AuctionState messages. Optionally, you can 'narrow' the set of messages you receive by setting a UserAuctionFilter prior to subscribing."]}),"\n",(0,s.jsx)(t.p,{children:"When subscribed, all auction messages for which you are eligible will be forward immediately.  Also, AuctionNotice messages that you receive will contain as much information as the initiator has chosen to reveal. For example, if the initiator has chosen to reveal their identity to you then their identity will be contained in the AuctionNotice message you receive."}),"\n",(0,s.jsx)(t.p,{children:"If you receive a notice for an auction for which you have interest you may respond directly back via the MLink/WebSocket API by sending an NoticeResponse message and processing the associated NoticeExecReport messages. This is a somewhat simplied (relative to FIX) method of responding to auction notices, particularly for clients that do not currently operate production quality live FIX infrastructure."}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Message"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"AuctionNotice"})}),(0,s.jsx)(t.td,{children:"Alerts potential responders to relevant auctions based on established filters."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"AuctionState"})}),(0,s.jsx)(t.td,{children:"Contains the state of the most recent auction trial match"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"NoticeResponse"})}),(0,s.jsx)(t.td,{children:"Message used to participate/respond to Auction Notices"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"NoticeExecReport"})}),(0,s.jsxs)(t.td,{children:["Sends confirmation/status of the action taken on ",(0,s.jsx)(t.strong,{children:"NoticeResponse"}),". Similar to a FIX exec report."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"NoticeCancel"})}),(0,s.jsxs)(t.td,{children:["Cancels a previous ",(0,s.jsx)(t.strong,{children:"NoticeResponse"}),"."]})]})]})]}),"\n",(0,s.jsx)(t.p,{children:"Alternatively, you may respond by sending a FIX NewOrderSingle or NewOrderMultileg message to a SpiderRock Order Entry Gateway and processing the resulting ExecReport messages for that order."}),"\n",(0,s.jsx)(t.p,{children:"In either case, you will need to include the AuctionNoticeID from the auction notice in your response alone with all required responder parameters."}),"\n",(0,s.jsx)(t.p,{children:"Any auction response can be cancelled at any time."}),"\n",(0,s.jsx)(t.h3,{id:"fix-subscriptions",children:"FIX Subscriptions"}),"\n",(0,s.jsx)(t.p,{children:"As a convenience, it is possible to subscribe to flash auction notices via a FIX session. These FIX notices are the equivalent of the AuctionNotice messages sent via the MLink/WebSocket API. There is no FIX equivalent for the corresponding AuctionState messages at the end of a flash trial auction."}),"\n",(0,s.jsx)(t.p,{children:"For more information see our FIX Responder Spec."}),"\n",(0,s.jsx)(t.h3,{id:"auto-responders",children:"Auto-Responders"}),"\n",(0,s.jsx)(t.p,{children:"It is possible to pre-register auction auto-responders for single option series and option spreads in which all leg sides are the same (all BUY or all SELL).  These auto-responders are configured by pre-staging AutoResponder records in SpiderRock systems before compatible auction notices are sent.  These AutoResponder records can be loaded via SRSE or MLink APIs."}),"\n",(0,s.jsxs)(t.p,{children:["For more information see the ",(0,s.jsx)(t.strong,{children:"Auto Responder Guide"})," elsewhere on this site."]}),"\n",(0,s.jsx)(t.h3,{id:"latency-considerations",children:"Latency Considerations"}),"\n",(0,s.jsx)(t.p,{children:"SpiderRock Connect flash auction typically run for their entire 100ms alloted time and do not feature a hyper time sensitive (first in wins) component. However, responses must be received prior to the running of the flash trial match to be considered. As a result, best practice would be to locate your responding gear somewhat close to the SpiderRock NY5 datacenter in which SpiderRock Connect operates and ensure that your response decision tree code can run as quickly as possible."}),"\n",(0,s.jsx)(t.p,{children:"Both cross connect and VPN style network connections are available and either can be competitive."}),"\n",(0,s.jsx)(t.p,{children:"It is possible to respond from high performance servers (C++ or C#) as well as simpler script style languages (python) and be equally competitive.  Our MLink/WebSocket API as well as our FIX OrderEntry Gateway will both, on average, add about 1 ms both directions to your notices and responses so plan accordingly."})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var s=n(96540);const o={},i=s.createContext(o);function r(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);