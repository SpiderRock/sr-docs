"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[77082],{28038:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>T,toc:()=>L});var n=t(74848),N=t(28453);const i={title:"SpdrDropExecution"},o=void 0,T={id:"MessageSchemas/Schema/SRSE Products/SRTrade/SpdrDropExecution/SpdrDropExecution",title:"SpdrDropExecution",description:"V8 Message Definition",source:"@site/docs/MessageSchemas/Schema/SRSE Products/SRTrade/SpdrDropExecution/SpdrDropExecution.md",sourceDirName:"MessageSchemas/Schema/SRSE Products/SRTrade/SpdrDropExecution",slug:"/MessageSchemas/Schema/SRSE Products/SRTrade/SpdrDropExecution/",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRTrade/SpdrDropExecution/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"SpdrDropExecution"},sidebar:"messageSchemasSidebar",previous:{title:"SpdrClientFirmRiskMgmt",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRTrade/SpdrClientFirmRiskMgmt/"},next:{title:"SpdrDropExecutionAck",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRTrade/SpdrDropExecutionAck/"}},l={},L=[];function a(e){const r={a:"a",code:"code",p:"p",pre:"pre",...(0,N.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.p,{children:(0,n.jsx)(r.a,{href:"../../../Topics/away-drop/SpdrDropExecution",children:"V8 Message Definition"})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-sql",children:"CREATE TABLE `SRTrade`.`MsgSRDropExecution` (\n    `dropNumber` BIGINT NOT NULL DEFAULT 0 COMMENT 'SR drop record number',\n    `sysEnvironment` ENUM('None','Neptune','Pluto','V7_Stable','V7_Latest','Saturn','Venus','Mars','SysTest','V7_Current') NOT NULL DEFAULT 'None' COMMENT 'original (source) sys environment [Stable, Current, etc]',\n    `runStatus` ENUM('None','Prod','Beta','UAT','SysTest') NOT NULL DEFAULT 'None' COMMENT 'original (source) run status [Prod,Beta]',\n    `routingCode` VARCHAR(255) NOT NULL DEFAULT '',\n    `routingSeqNum` INT NOT NULL DEFAULT 0,\n    `secKey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None',\n    `secKey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None',\n    `secKey_tk` VARCHAR(12) NOT NULL DEFAULT '',\n    `secKey_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0,\n    `secKey_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0,\n    `secKey_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0,\n    `secKey_xx` DOUBLE NOT NULL DEFAULT 0,\n    `secKey_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call',\n    `secType` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None',\n    `securityDesc` VARCHAR(16) NOT NULL DEFAULT '',\n    `securityType` VARCHAR(4) NOT NULL DEFAULT '',\n    `symbol` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'symbol (+ ''.'' + symbolSfx)',\n    `maturityDate` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000',\n    `strike` DOUBLE NOT NULL DEFAULT 0,\n    `callPut` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call',\n    `account` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'FixTag.1',\n    `giveupFirm` VARCHAR(6) NOT NULL DEFAULT '',\n    `giveupAccnt` VARCHAR(255) NOT NULL DEFAULT '',\n    `clearingFirm` VARCHAR(6) NOT NULL DEFAULT '',\n    `clearingAccnt` VARCHAR(255) NOT NULL DEFAULT '',\n    `dropData1` VARCHAR(255) NOT NULL DEFAULT '',\n    `dropData2` VARCHAR(255) NOT NULL DEFAULT '',\n    `clOrdId` VARCHAR(32) NOT NULL DEFAULT '' COMMENT 'child order clOrdId (if available)',\n    `fillVersion` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'cancel/correct version number (initial fill is version=1)',\n    `fillExecStatus` ENUM('None','Fill','Bust','Correct','Reject','SysRej') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock execution status (Fill,Bust,Correct,Reject,SysRej)',\n    `fillDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'fill DateTime (from SRDateTime)',\n    `fillQuantity` INT NOT NULL DEFAULT 0 COMMENT 'fill size (from execReport.lastSize)',\n    `fillSide` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'None' COMMENT 'fill side (from execReport.side)',\n    `fillSSaleFlag` ENUM('None','Long','Short','Exempt','Auto','Open','Close','Cover','NA') NOT NULL DEFAULT 'None' COMMENT 'fill side (from execReport.side)',\n    `fillPositionType` ENUM('None','Opening','Closing','Auto') NOT NULL DEFAULT 'None',\n    `fillPrice` DOUBLE NOT NULL DEFAULT 0 COMMENT 'fill price (from execReport.lastPrice)',\n    `fillTransactDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'fill DateTime (from execReport.fillDttm)',\n    `fillMarket` VARCHAR(8) NOT NULL DEFAULT '' COMMENT 'fill market (from execReport.lastMarket)',\n    `fillSRLiqTag` VARCHAR(2) NOT NULL DEFAULT '' COMMENT 'fill SR normalized liquidity tag',\n    `fillExchLiqTag` VARCHAR(4) NOT NULL DEFAULT '' COMMENT 'fill exchange liquidity code',\n    `fillExchFee` FLOAT NOT NULL DEFAULT 0 COMMENT 'fill exchange fee (if available)',\n    `fillExecId` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'fill execution id (from execReport.execId)',\n    `fillRefExecId` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'fill ref execution id (from execReport.refExecId) [only set on a cancel or correct]',\n    `fillLegRefId` BIGINT NOT NULL DEFAULT 0 COMMENT 'fill leg ref id (from execReport.legRefId)',\n    `fillFirmType` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'fill firm type (as reported from street side)',\n    `fillExecBroker` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'fill execution broker (as reported from street side)',\n    `fillOrderCapacity` ENUM('None','Agency','Principal','Individual','Proprietary','AgentOtherMember','RisklessPrincipal') NOT NULL DEFAULT 'None' COMMENT 'fill order capacity (as reported from street side)',\n    `fillContraDetail` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'fill contra party additional detail (if available)',\n    `fillContraCapacity` ENUM('None','Agency','Principal','Individual','Proprietary','AgentOtherMember','RisklessPrincipal') NOT NULL DEFAULT 'None' COMMENT 'fill order capacity of contra party (if available)',\n    `fillStreetText` VARCHAR(255) NOT NULL DEFAULT '',\n    `netTimestamp` BIGINT NOT NULL DEFAULT 0 COMMENT 'drop gateway arrival timestamp',\n    `timestamp` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000',\n    `dataCenter_V7` ENUM('None','NY4','NY5','CH2','CH3') NOT NULL DEFAULT 'None' COMMENT 'only v7: enum values do not match with v8: V7[None=0,NY4=1,NY5=2,CH2=3,CH3=4], V8[Does Not Exist]',\n    PRIMARY KEY USING HASH (`dropNumber`)\n) ENGINE=SRSE DEFAULT CHARSET=LATIN1 COMMENT='';\n\n"})})]})}function c(e={}){const{wrapper:r}={...(0,N.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},28453:(e,r,t)=>{t.d(r,{R:()=>o,x:()=>T});var n=t(96540);const N={},i=n.createContext(N);function o(e){const r=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function T(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(N):e.components||N:o(e.components),n.createElement(i.Provider,{value:r},e.children)}}}]);