"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[84880],{3961:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>o,contentTitle:()=>T,default:()=>M,frontMatter:()=>N,metadata:()=>L,toc:()=>a});var i=t(74848),n=t(28453);const N={title:"TradeCubeDetailV5"},T=void 0,L={id:"MessageSchemas/Schema/SRSE Products/SRRisk/TradeCubeDetailV5/TradeCubeDetailV5",title:"TradeCubeDetailV5",description:"V8 Message Definition",source:"@site/docs/MessageSchemas/Schema/SRSE Products/SRRisk/TradeCubeDetailV5/TradeCubeDetailV5.md",sourceDirName:"MessageSchemas/Schema/SRSE Products/SRRisk/TradeCubeDetailV5",slug:"/MessageSchemas/Schema/SRSE Products/SRRisk/TradeCubeDetailV5/",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRRisk/TradeCubeDetailV5/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"TradeCubeDetailV5"},sidebar:"messageSchemasSidebar",previous:{title:"SymbolRiskSummaryV5",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRRisk/SymbolRiskSummaryV5/"},next:{title:"SRSpread",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRSpread/"}},o={},a=[];function l(e){const r={a:"a",code:"code",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.p,{children:(0,i.jsx)(r.a,{href:"../../../Topics/risk-v5/TradeCubeDetailV5",children:"V8 Message Definition"})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-sql",children:"CREATE TABLE `SRRisk`.`MsgTradeCubeDetailV5` (\n    `fillNumber` BIGINT NOT NULL DEFAULT 0 COMMENT 'SpiderRock execution number (globally unique over trailing 10 days)',\n    `tradeDate` DATE NOT NULL DEFAULT '1900-01-01' COMMENT 'trade date',\n    `runStatus` ENUM('None','Prod','Beta','UAT','SysTest') NOT NULL DEFAULT 'None',\n    `sysEnvironment` ENUM('None','Neptune','Pluto','V7_Stable','V7_Latest','Saturn','Venus','Mars','SysTest','V7_Current') NOT NULL DEFAULT 'None',\n    `version` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'record version number; starts at zero and goes up every time an execution record is re-published (eg, bust, +1m marks, +10m marks, etc)',\n    `clOrdId` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'clOrdId resulting in fill (child order)',\n    `parentNumber` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'SpiderRock parent number',\n    `packageId` BIGINT NOT NULL DEFAULT 0 COMMENT 'groups related order/brokers together (eg. Legger w/MLeg Parent)',\n    `altOrderId` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'alternate order ID (usually clOrdId from client)',\n    `srcRoutingCode` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'inbound FIX routing code, if any',\n    `spdrSource` ENUM('None','SpdrTicket','SpdrSingle','SRSE','FIX','HedgeTool','TradeHedge','OpenHedge','AutoHedge','Orphan','RiskManager','OrderManager','ManagedOrder','RFQRespSrvr','Legger','SRSEDrop','FixDrop','TicketDrop','SysTest','RFRResponse','AllocOmni','AllocClient','CertGateway','MLegResponse','LeggerX','DropManager','AutoHedgeSrvr','AuctionStrategySrvr','AllocBlockFace','AllocBlockCust','IceChatGateway','EXS2SRC','MLinkResponse','AutoResponderVD','AutoResponderRC','AutoResponderSN','AutoResponderBX') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock parent order source code [broker pkey]',\n    `groupingCode` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'SpiderRock parent broker number [broker pkey]',\n    `accnt` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'SpiderRock Accnt Code',\n    `clientFirm` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'SpiderRock ClientFirm Code',\n    `priAggGroup` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'primary aggregation group',\n    `secAggGroup` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'secondary aggregation group',\n    `riskServerCode` VARCHAR(6) NOT NULL DEFAULT '',\n    `secKey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'security key',\n    `secKey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'security key',\n    `secKey_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'security key',\n    `secKey_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'security key',\n    `secKey_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'security key',\n    `secKey_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'security key',\n    `secKey_xx` DOUBLE NOT NULL DEFAULT 0 COMMENT 'security key',\n    `secKey_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call' COMMENT 'security key',\n    `secType` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None' COMMENT 'security type [Stock, Future, Option]',\n    `ticker_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'base ticker',\n    `ticker_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'base ticker',\n    `ticker_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'base ticker',\n    `viewGroup1` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'viewGroup1 (user supplied; if any)',\n    `viewGroup2` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'viewGroup2 (user supplied; if any)',\n    `viewGroup3` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'viewGroup3 (user supplied; if any)',\n    `riskClass` VARCHAR(8) NOT NULL DEFAULT '' COMMENT 'user supplied risk class code (from SymbolControl record)',\n    `symbolType` ENUM('None','Equity','ADR','ETF','CashIndex','MutualFund','ShortETF','Future','Bond','DepReceipts','PreferredSec','PreferenceShare','StructuredProd','StapledSec','TradeableRights','Unit','Warrant','WhenIssued','ForeignIssue') NOT NULL DEFAULT 'None' COMMENT 'symbol type',\n    `sector` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'user supplied sector code (from SymbolControl record)',\n    `indNum` INT NOT NULL DEFAULT 0 COMMENT 'ind num (00)',\n    `subNum` INT NOT NULL DEFAULT 0 COMMENT 'sub num (0000)',\n    `grpNum` INT NOT NULL DEFAULT 0 COMMENT 'grp num (000000)',\n    `nbrNum` INT NOT NULL DEFAULT 0 COMMENT 'nbr num (00000000)',\n    `edays` SMALLINT NOT NULL DEFAULT 0 COMMENT 'days to next earnings [-5, +60]',\n    `expCode` ENUM('None','W1','W2','M1','M2','M34','M56','M7C','Y1','Y2') NOT NULL DEFAULT 'None' COMMENT 'expiration tenor code',\n    `skewCode` ENUM('None','DD','DN','AT','UP','DU') NOT NULL DEFAULT 'None' COMMENT 'strike skew code',\n    `widthCode` ENUM('None','Pv1','Pv2','Pv3','Pv5','Pv10','Pv15','Pv20','Pv25','Wide') NOT NULL DEFAULT 'None' COMMENT 'market width code',\n    `priceFormat` ENUM('None','N0','N1','N2','N3','N4','N5','N6','N7','F4','F8','Q8','F16','F32','H32','Q32','F64','H64','FullPenny','PartPenny','PartNickle','EQT','V1','V2','V3','V4','V5','V6','V7','V8','V9','V10','V11','V12','V13','V14','V15','A0','A1','A2','A3','A4','A5','A6','A7','E32') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock price display format code',\n    `uPriceFormat` ENUM('None','N0','N1','N2','N3','N4','N5','N6','N7','F4','F8','Q8','F16','F32','H32','Q32','F64','H64','FullPenny','PartPenny','PartNickle','EQT','V1','V2','V3','V4','V5','V6','V7','V8','V9','V10','V11','V12','V13','V14','V15','A0','A1','A2','A3','A4','A5','A6','A7','E32') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock underlier price display code',\n    `years` FLOAT NOT NULL DEFAULT 0 COMMENT 'years to expiration',\n    `underliersPerCn` INT NOT NULL DEFAULT 0 COMMENT 'underliers per contract (futures and options)',\n    `underlierType` ENUM('None','Equity','Other','FX') NOT NULL DEFAULT 'None' COMMENT 'underlier type (affects $greek calcs)',\n    `tickValue` FLOAT NOT NULL DEFAULT 0 COMMENT '$NLV value of a single tick change in display premium\t(pointValue = tickValue / tickSize)',\n    `pointValue` FLOAT NOT NULL DEFAULT 0 COMMENT '$NLV value of a point',\n    `pointCurrency` ENUM('None','AUD','BRL','CAD','CHF','CNH','CNY','EUR','GBP','JPY','KRW','MXN','MYR','NOK','NZD','SEK','TRY','USD','USDCents','CZK','ZAR','HUF','USX','GBX') NOT NULL DEFAULT 'None',\n    `uPrcRatio` FLOAT NOT NULL DEFAULT 0 COMMENT 'UPrcRatio (SymbolRatio) from product definition',\n    `minTickSize` FLOAT NOT NULL DEFAULT 0,\n    `routingCode` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'SpiderRock market routing code',\n    `origExecID` VARCHAR(20) NOT NULL DEFAULT '' COMMENT 'original execution ID string (child order)',\n    `lastExecID` VARCHAR(20) NOT NULL DEFAULT '' COMMENT 'most recent execution ID (same as origExecID unless CANCEL/CORRECTION has been processed)',\n    `transactDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'transaction date/time as reported by exchange or down stream broker',\n    `execStatus` ENUM('None','Fill','Bust','Correct','Reject','SysRej') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock execution status (Fill,Bust,Correct,Reject,SysRej)',\n    `remoteText` VARCHAR(64) NOT NULL DEFAULT '' COMMENT 'text comment from endpoint (if any)',\n    `orderLimitType` ENUM('None','Market','MarketArrival','Prc','PrcDe','PrcDeX','PrcDeT','PrcDeP','PrcDeXT','PrcDeXP','Vol','VolX','PrcV','PrcVX','NoLimit','RelMid','RelJoin','RelCross','SmrtFast','SmrtNorm','RelTurn','PrcDeEm','VolEm','Aux','UPrcPct','PkgNeutral','RcPrem','SynthLimitMM','SynthLimitBW','SynthLimitWW') NOT NULL DEFAULT 'None' COMMENT 'parent order limit type [Vol, VolX, PrcDe, PrcDeX, etc]',\n    `orderLimitClass` ENUM('Simple','Surface','Probability','SurfProb') NOT NULL DEFAULT 'Simple' COMMENT 'parent order limit class (makeLimitClass if fill was from making; takeLimitClass if fill was from taking)',\n    `parentShape` ENUM('None','Single','Cross','MLeg','MLegCross') NOT NULL DEFAULT 'None',\n    `parentOrderHandling` ENUM('None','ActiveTaker','PostOnly','DMA','MktOnOpn','MktOnCls','Facilitate','Matrix','Legger','Seeker','SeekerLegger','CrossResponse','AuctionResponse','MLegAuctionResp','RFQRequest','AwayAlgo','ExchPing','BlockAuction','BlockResponse','SweepTake','CobMaker','FaceOmni','TestParent') NOT NULL DEFAULT 'None' COMMENT 'base parent order algo [take style algo]',\n    `parentBalanceHandling` ENUM('None','PostWith','PostTurn','PostImprove','PostLimit','MaxIntern','PostWthF','PostImprvR','PostFlash','PostFlashW','PostPeg','PostFlashI') NOT NULL DEFAULT 'None' COMMENT 'base parent order balance handling [make style algo]',\n    `parentOrderSize` INT NOT NULL DEFAULT 0 COMMENT 'parent order size',\n    `method` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'execution method string',\n    `strategy` VARCHAR(36) NOT NULL DEFAULT '' COMMENT 'client strategy [usually client supplied]',\n    `userName` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'SpiderRock user name associated with the parent order',\n    `origin` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'parent order origin string',\n    `source` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'execution source string',\n    `server` VARCHAR(20) NOT NULL DEFAULT '' COMMENT 'SpiderRock execution engine that handled the parent order',\n    `clearingFirm` VARCHAR(8) NOT NULL DEFAULT '' COMMENT 'clearing firm (delivery)',\n    `clearingAccnt` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'clearing firm account (if any)',\n    `lastCapacity` ENUM('None','Agency','Principal','Individual','Proprietary','AgentOtherMember','RisklessPrincipal') NOT NULL DEFAULT 'None' COMMENT 'child order capacity',\n    `execRole` ENUM('None','DirectAccnt','AwayGiveup','RiskDrop','AwayDrop','PullDrop') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock relationship to this execution record (Direct, Drop, etc)',\n    `execBrkrCode` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'SR exec broker acronym',\n    `execBrkrAccnt` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'account at executing broker/prime (if any)',\n    `execBrkrClFirm` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'client/firm at executing broker/prime (if any)',\n    `execBrkrUserName` VARCHAR(16) NOT NULL DEFAULT '',\n    `clearingFlipType` ENUM('None','CMTA','Giveup','QSR','NSCC_Flip','DVP','BrkrAccnt') NOT NULL DEFAULT 'None' COMMENT 'clearingFlip Type (CMTA or Giveup)',\n    `clearingFlipFirm` VARCHAR(6) NOT NULL DEFAULT '' COMMENT 'clearingFlip Broker/MPID/CMTA',\n    `clearingFlipAccnt` VARCHAR(10) NOT NULL DEFAULT '' COMMENT 'clearingFlip additional detail (sub-accnt)',\n    `riskGroupId` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'riskGroupId (parent order group ID) for this execution report',\n    `fillBrkrRate` FLOAT NOT NULL DEFAULT 0 COMMENT 'billing brokerage rate (tier 1)',\n    `fillRoutingRate` FLOAT NOT NULL DEFAULT 0 COMMENT 'billing routing rate (tier 1)',\n    `billingSecType` ENUM('None','Equity','Future','EqtOption','FutOption') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock billing security type',\n    `billingCategory` ENUM('None','Alpha','AlphaTop50','TiedMaker','TiedTaker','SOR','DMA','AuctionResponse','Facilitate','AlphaFacilitate','AwayTrade','SymOverride','Extern','NonBillable','Seeker','Legger','Drop','AwayAlgo','IsoSweep','SpdrSweep','GTH','AlphaGTH','BlockAuction','BlockResponse') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock billing category',\n    `firmType` ENUM('None','Customer','Firm','MarketMaker','ProCustomer','BrokerDealer','AwayMM','FirmJBO','BrkrDlrCust') NOT NULL DEFAULT 'None' COMMENT 'chld order firm type [Customer, ProCust, Firm, MM, etc]',\n    `side` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'None' COMMENT 'parent/child order side',\n    `priceType` ENUM('None','Explicit','Offset','Zero') NOT NULL DEFAULT 'None' COMMENT 'order limit price type',\n    `ssaleFlag` ENUM('None','Long','Short','Exempt','Auto','Open','Close','Cover','NA') NOT NULL DEFAULT 'None' COMMENT 'child order short sale flag',\n    `spdrSSaleFlag` ENUM('None','Long','Short','Exempt','Auto','Open','Close','Cover','NA') NOT NULL DEFAULT 'None' COMMENT 'parent order short sale flag',\n    `positionType` ENUM('None','Opening','Closing','Auto') NOT NULL DEFAULT 'None' COMMENT 'child order position type',\n    `autoHedge` ENUM('None','Static','AutoMid','AutoCrx','AutoTrn','SpdrAuto','Spdr10S','Spdr30S','Spdr90S','Spdr5M','Spdr30M','SpdrDay','SmartFast','SmartNorm','FastCrx','FastDark','SlowDark','AlphaVwap1pct','AlphaVwap2pct','AlphaVwap5pct','AlphaVwap25pct','Custom','AwayAlgo') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock auto-hedge algorithm (if any)',\n    `orderDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'Date/time of parent order arrival',\n    `orderUBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier market bid @ parent order arrival',\n    `orderUAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier market ask @ parent order arrival',\n    `orderBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'option market bid @ parent order arrival (options only)',\n    `orderAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'option market ask @ parent order arrival (options only)',\n    `orderSurfPrc` FLOAT NOT NULL DEFAULT 0 COMMENT 'SpiderRock surface price @ parent order arrival (options only)',\n    `orderSurfVol` FLOAT NOT NULL DEFAULT 0,\n    `orderLimitVol` FLOAT NOT NULL DEFAULT 0 COMMENT 'parent order limit volatilty (options only)',\n    `orderLimitPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'parent order limit price @ parent order arrival',\n    `orderLimitRefUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'limit reference underlier price @ parent order arrival (options only)',\n    `childShape` ENUM('None','Single','Cross','MLeg','MLegCross') NOT NULL DEFAULT 'None',\n    `childSize` INT NOT NULL DEFAULT 0 COMMENT 'child order size',\n    `childPrice` DOUBLE NOT NULL DEFAULT 0 COMMENT 'child order price',\n    `childExch` VARCHAR(6) NOT NULL DEFAULT '' COMMENT 'child order exchange code (SpiderRock)',\n    `childExDest` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'child order exchange code (downstream)',\n    `childDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'child order send date/time',\n    `childUBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier market bid @ child order send time',\n    `childUAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier market bid @ child order send time',\n    `childBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'option market bid @ child order send time (options only)',\n    `childAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'option market ask @ child order send time (options only)',\n    `childSurfPrc` FLOAT NOT NULL DEFAULT 0 COMMENT 'SpiderRock surface price @ child order send time (options only)',\n    `childVol` FLOAT NOT NULL DEFAULT 0 COMMENT 'child order volatilty (options only)',\n    `childProb` FLOAT NOT NULL DEFAULT 0 COMMENT 'child order probability (T+x)',\n    `childLimitPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'parent order limit price @ child order send time',\n    `childLimitRefUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'limit reference underlier price @ child order send time (options only)',\n    `childLimitPnl` FLOAT NOT NULL DEFAULT 0 COMMENT 'child limit improvement pnl (childLimitPrc to fillPrice)',\n    `childAlgoHandler` ENUM('None','ActiveTaker','ActiveMaker','Auction','Responder','Matrix','Cross','Face','Extern','MLegHandler','AutoHedge','Sprayer','Legger','Restart','Orphan','UDefSpread','RFQRequest','MLegResponder','LeggerX','ExchPing','BrkrReview','AuctionResponder','TakeSweep','TestChild') NOT NULL DEFAULT 'None' COMMENT 'algo that generated the child order responsible for this fill',\n    `childOrderHandling` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'algo that generated the child order responsible for this fill',\n    `childCreateReason` ENUM('None','CheckAddExch','DarkCross','DmaExtern','DmaSmart','MakeJoin','MakeNbboImpr','MakePostLimit','MakeSelfImpr','MarketAuction','MatrixImpr','MatrixJoin','MatrixLvlSweep','MatrixMaxSweep','MLegSeeker','OptAuctionResp','OptFaceHandler','RelWaitTrigger','SprdDma','SprdFace','SprdSeeker','TakeBrkr','TakeExch','TakeNbbo','RFQRequest','MLegResponse','BrkrCross','PostFlash','MakeOff','MakeFlashImprv','AwayExtern','MatrixCross','ExchPing','BrkrReview','AuctionResponse','SweepTake','TestChild') NOT NULL DEFAULT 'None' COMMENT 'child order create reason code',\n    `childCancelReason` ENUM('None','MakeException','MakeMaxRiskSize','MakeLimitError','MakeCxlImpr','MakeLmtPrc','MakeSelfImpr','MakeJoinImprv','MakeReJoin','MakeBhnd','MakeAlone','MakeAloneF','MakeOffMkt','MakeMaxExpose','MakeJoinImpr','ContLmtPrc','ChildCxlAll','ChildFlashCxl','ChildIOCTimeout','ForceRetry','StkCxlAll','FutCxlAll','OptCxlAll','FastCxlUBid','FastCxlUAsk','FastCxlUMin','FastCxlUMax','MktMiss','CxlClear','CxlRplDMA','CxlRplTurn','CxlRplSize','CxlRplPrc','CxlRplMake','CxlRplExch','MLegSeekSwitch','MLegSeekChange','MLegSeekND','MLegSeekLimit','MLegDMA','MLegSprdLimit','ParentRplRej','ParentReject','ParentClose','LeggerSwitch','AccelTake','EnginePreOpen','LegLmtPrcRng','MakeLmtPrcErr','ProgTerminate','TickSzErr','ContBrkrTerm','ContCancelHold','ContLimitErr','ContMaxUPrc','ContMinUPrc','ContMktData','ContMktHalt','ContRiskHold','ContSecType','ContStkData','ContStkState','ContFutData','ContFutState','ContOptData','ContOptState','ContUFutData','ContUFutState','ContUMktData','ContUMktState','LegExposeSize','LegLimitErr','LegMarketPrc','MLegCobLmtPrc','MLegLeggerChange','MLegLeggerSwitch','MLegSprdLmtPrc','SprdMktPrc','ContUMktPrc','ContUMktQte','SGContCxl','SGSysCxl','CxlRplPart','CxlRplAlgo','ContingentCancel','SwitchMOC','CxlRplReview','CxlRplAltR','SurfPrcErr','UserHold','DayClose','PendNewTimeout','ActiveHold') NOT NULL DEFAULT 'None' COMMENT 'child order cancel reason code',\n    `childMktStance` ENUM('None','ExchMrkt','NbboMrkt','ExchImpr','NbboImpr','ExchJoin','NbboJoin','Away') NOT NULL DEFAULT 'None' COMMENT 'child order was expected to be marketable @ child send time',\n    `childCxlAttempted` ENUM('None','Yes','No') NOT NULL DEFAULT 'None' COMMENT 'cancel attempt was made on the child order prior to receiving this fill',\n    `childCxlFillLatency` FLOAT NOT NULL DEFAULT 0 COMMENT 'cancel latency (for fills with a cancel attempt)',\n    `fillExch` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'ExDest code from child order execution report (lastMkt)',\n    `fillPrice` DOUBLE NOT NULL DEFAULT 0 COMMENT 'fill price',\n    `fillTs` DOUBLE NOT NULL DEFAULT 0 COMMENT 'fill report ts (seconds since startup; 100 nanosec resolution)',\n    `fillDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'Date/time of fill arrival',\n    `fillSize` INT NOT NULL DEFAULT 0 COMMENT 'fill quantity',\n    `effFillSize` INT NOT NULL DEFAULT 0 COMMENT 'fill size x underliers per contract',\n    `fillVol` FLOAT NOT NULL DEFAULT 0 COMMENT 'fill volatilty (options only)',\n    `fillProb` FLOAT NOT NULL DEFAULT 0 COMMENT 'fill order probability (T+x)',\n    `fillLimitPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'parent order limit price @ fill arrival time',\n    `fillLimitRefUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'limit reference underlier price @ fill arrival time (options only)',\n    `fillLimitPnl` FLOAT NOT NULL DEFAULT 0 COMMENT 'fill limit improvement pnl (fillLimitPrc to fillPrice)',\n    `fillDe` FLOAT NOT NULL DEFAULT 0 COMMENT 'fill delta',\n    `fillVe` FLOAT NOT NULL DEFAULT 0 COMMENT 'fill vega',\n    `fillTh` FLOAT NOT NULL DEFAULT 0 COMMENT 'fill theta',\n    `fillUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'fill underlier mid-market',\n    `fillBeta` FLOAT NOT NULL DEFAULT 0 COMMENT 'SpiderRock estimate of beta to SPX',\n    `fillTv` FLOAT NOT NULL DEFAULT 0 COMMENT 'theo vol (user supplied)',\n    `fillTp` FLOAT NOT NULL DEFAULT 0 COMMENT 'theo price',\n    `fillUBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier market bid @ fill arrival',\n    `fillUAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier market ask @ fill arrival',\n    `fillBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'option market bid @ fill arrival',\n    `fillAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'option market ask @ fill arrival',\n    `fillSurfPrc` FLOAT NOT NULL DEFAULT 0 COMMENT 'SpiderRock surface price @ fill arrival',\n    `fillPostUMark1M` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier mark @ fill arrival + 1M',\n    `fillPostUMark10M` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier mark @ fill arrival + 10M',\n    `fillPostMark1M` DOUBLE NOT NULL DEFAULT 0 COMMENT 'SpiderRock mid or surface mark @ fill arrival + 1M',\n    `fillPostMark10M` DOUBLE NOT NULL DEFAULT 0 COMMENT 'SpiderRock mid or surface mark @ fill arrival + 10M',\n    `marginUDnVDn` FLOAT NOT NULL DEFAULT 0 COMMENT 'Aggregate RiskSlide: uPrc dn, vol dn',\n    `marginUDnVUp` FLOAT NOT NULL DEFAULT 0 COMMENT 'Aggregate RiskSlide: uPrc dn, vol up',\n    `marginUUpVDn` FLOAT NOT NULL DEFAULT 0 COMMENT 'Aggregate RiskSlide: uPrc up, vol dn',\n    `marginUUpVUp` FLOAT NOT NULL DEFAULT 0 COMMENT 'Aggregate RiskSlide: uPrc up, vol up',\n    `riskCode` ENUM('None','R1','R2','R3','R4','R5','R6','R7','R8') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock Risk Code (if any)',\n    `exchLiquidityTag` VARCHAR(4) NOT NULL DEFAULT '' COMMENT 'liquidity tag (exchange)',\n    `spdrLiquidityTag` VARCHAR(2) NOT NULL DEFAULT '' COMMENT 'SpiderRock normalized liquidity tag',\n    `fillExchDetail` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'other fix tags (tag:value#tag:value) [additional detail used for analysis]',\n    `notionalValue` FLOAT NOT NULL DEFAULT 0 COMMENT 'cn * mult * uPrc',\n    `marketValue` FLOAT NOT NULL DEFAULT 0 COMMENT 'cn * mult * fillPrice',\n    `orderMktWidth` FLOAT NOT NULL DEFAULT 0 COMMENT 'market width @ parent order arrival',\n    `childMktWidth` FLOAT NOT NULL DEFAULT 0 COMMENT 'market width @ child order send time',\n    `fillMktWidth` FLOAT NOT NULL DEFAULT 0 COMMENT 'market width @ fill arrival',\n    `parentOrderAge` FLOAT NOT NULL DEFAULT 0 COMMENT 'elaspsed time from parent order entry/update to this fill event',\n    `parentAgeCode` ENUM('None','Sec1','Sec5','Sec20','Sec60','Min5','Min30','Hour2','LT') NOT NULL DEFAULT 'None' COMMENT 'elaspsed time from parent order entry/update to this fill event [coded]',\n    `trdDelta` FLOAT NOT NULL DEFAULT 0 COMMENT 'trade delta',\n    `trdDDelta` FLOAT NOT NULL DEFAULT 0 COMMENT 'trade $delta',\n    `trdGamma` FLOAT NOT NULL DEFAULT 0 COMMENT 'trade gamma',\n    `trdVega` FLOAT NOT NULL DEFAULT 0 COMMENT 'trade vega',\n    `trdWtVega` FLOAT NOT NULL DEFAULT 0 COMMENT 'trade wtVega (vega * vol / sqrt(max(0.1, years * 4)))',\n    `trdTheta` FLOAT NOT NULL DEFAULT 0 COMMENT 'trade theta',\n    `trdPrem` FLOAT NOT NULL DEFAULT 0 COMMENT 'trade premium over parity',\n    `trdBeta` FLOAT NOT NULL DEFAULT 0 COMMENT 'trade beta',\n    `trdDBeta` FLOAT NOT NULL DEFAULT 0 COMMENT 'trade $beta',\n    `surfEdge` FLOAT NOT NULL DEFAULT 0 COMMENT 'SR surface edge (user supplied theo vol/prc to SpiderRock surface price)',\n    `surfEdgeUnit` FLOAT NOT NULL DEFAULT 0 COMMENT 'SR surface edge normalized to $100 underlier',\n    `theoEdge` FLOAT NOT NULL DEFAULT 0 COMMENT 'theo edge (user supplied theo vol/prc to SpiderRock surface price)',\n    `theoEdgeUnit` FLOAT NOT NULL DEFAULT 0 COMMENT 'theo edge normalized to $100 underlier',\n    `exchFee` FLOAT NOT NULL DEFAULT 0 COMMENT 'SpiderRock exchange fee estimate',\n    `halfWidthPnl` FLOAT NOT NULL DEFAULT 0 COMMENT 'estimated half-width Pnl',\n    `clArrivePnl` FLOAT NOT NULL DEFAULT 0 COMMENT '-dir * qty * (fillPrice - clArriveMark)  # maybe use orderSurfPrc instead',\n    `arrivePnl` FLOAT NOT NULL DEFAULT 0 COMMENT '-dir * qty * (fillPrice - 0.5 * (orderBid + orderAsk))  # maybe use orderSurfPrc instead',\n    `arriveDnPnl` FLOAT NOT NULL DEFAULT 0 COMMENT 'arrivePnl - uDriftArrivePnl',\n    `uDriftArrivePnl` FLOAT NOT NULL DEFAULT 0 COMMENT '-dir * qty * fillDe * (0.5 * (fillUBid + fillUAsk) - 0.5 * (orderUBid + orderUAsk))',\n    `dayDnPnl` FLOAT NOT NULL DEFAULT 0 COMMENT 'delta neutral Pnl (to EOD)',\n    `dayM1Pnl` FLOAT NOT NULL DEFAULT 0 COMMENT 'delta neutral Pnl (Fill + 1M)',\n    `dayM10Pnl` FLOAT NOT NULL DEFAULT 0 COMMENT 'delta neutral Pnl (Fill + 10M)',\n    `uDriftDayPnl` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier delta drift Pnl (to EOD)',\n    `uDriftM1Pnl` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier delta drift Pnl (Fill + 1M)',\n    `uDriftM10Pnl` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier delta drift Pnl (Fill + 10M)',\n    `dayPnl` FLOAT NOT NULL DEFAULT 0 COMMENT 'actual Pnl to EOD',\n    `liveMark` DOUBLE NOT NULL DEFAULT 0 COMMENT 'SpiderRock internal use',\n    `liveUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'SpiderRock internal use',\n    `pendMark` DOUBLE NOT NULL DEFAULT 0 COMMENT 'SpiderRock internal use',\n    `pendUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'SpiderRock internal use',\n    `trdMarkError` VARCHAR(8) NOT NULL DEFAULT '' COMMENT 'trade mark error code',\n    `dayMarkError` VARCHAR(8) NOT NULL DEFAULT '' COMMENT 'day mark error code',\n    `userData1` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'client supplied data field; passes through to parent and child executions and reports as well as FIX drops',\n    `userData2` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'client supplied data field; passes through to parent and child executions and reports as well as FIX drops',\n    `timestamp` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'SR system timestamp',\n    CONSTRAINT nonnegative_parentNumber CHECK(ASCII(parentNumber) < 56),\n    CONSTRAINT nonnegative_groupingCode CHECK(ASCII(groupingCode) < 56),\n    CONSTRAINT nonnegative_riskGroupId CHECK(ASCII(riskGroupId) < 56),\n    PRIMARY KEY USING HASH (`fillNumber`,`tradeDate`)\n) ENGINE=SRSE DEFAULT CHARSET=LATIN1 COMMENT='TradeCubeDetail records are published by CoreRiskServers and are visible in SRSE throughout the day.  They are designed to be aggregated and analyzed over time.\\nTradeCubeDetail records are published to the SpiderRock Archive Host data pipeline after all markup detail is complete.';\n\n"})})]})}function M(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,r,t)=>{t.d(r,{R:()=>T,x:()=>L});var i=t(96540);const n={},N=i.createContext(n);function T(e){const r=i.useContext(N);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function L(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:T(e.components),i.createElement(N.Provider,{value:r},e.children)}}}]);