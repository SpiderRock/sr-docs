"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[85141],{50945:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>r,frontMatter:()=>i,metadata:()=>s,toc:()=>T});var N=n(74848),a=n(28453);const i={title:"SpdrAuctionState"},o=void 0,s={id:"MessageSchemas/Schema/SRSE Products/SRAuction/SpdrAuctionState/SpdrAuctionState",title:"SpdrAuctionState",description:"V8 Message Definition",source:"@site/docs/MessageSchemas/Schema/SRSE Products/SRAuction/SpdrAuctionState/SpdrAuctionState.md",sourceDirName:"MessageSchemas/Schema/SRSE Products/SRAuction/SpdrAuctionState",slug:"/MessageSchemas/Schema/SRSE Products/SRAuction/SpdrAuctionState/",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRAuction/SpdrAuctionState/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"SpdrAuctionState"},sidebar:"messageSchemasSidebar",previous:{title:"SRAuction",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRAuction/"},next:{title:"SRControl",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRControl/"}},c={},T=[];function L(e){const t={a:"a",code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,N.jsxs)(N.Fragment,{children:[(0,N.jsx)(t.p,{children:(0,N.jsx)(t.a,{href:"../../../Topics/market-data-auctions/SpdrAuctionState",children:"V8 Message Definition"})}),"\n",(0,N.jsx)(t.pre,{children:(0,N.jsx)(t.code,{className:"language-sql",children:"CREATE TABLE `SRAuction`.`MsgSRAuctionState` (\n    `secKey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None',\n    `secKey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None',\n    `secKey_tk` VARCHAR(12) NOT NULL DEFAULT '',\n    `secKey_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0,\n    `secKey_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0,\n    `secKey_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0,\n    `secKey_xx` DOUBLE NOT NULL DEFAULT 0,\n    `secKey_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call',\n    `secType` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None',\n    `auctionExch` ENUM('None','AMEX','BOX','CBOE','ISE','NYSE','PHLX','NSDQ','BATS','C2','NQBX','MIAX','GMNI','CME','CBOT','NYMEX','COMEX','ICE','EDGO','MCRY','MPRL','SDRK','DQTE','EMLD','CFE','MEMX','EUREX','CEDX','NXAM','NXBR','NXLS','NXML','NXOS','NXP','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'exchange handling the auction',\n    `auctionExDest` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'external exDest of auction (usually means auction is off-exchange)',\n    `srAuctionID` BIGINT NOT NULL DEFAULT 0 COMMENT 'unique SR AUCTION ID (required when responding to an auction notice)',\n    `exchAuctionId` VARCHAR(20) NOT NULL DEFAULT '',\n    `exchAuctionType` VARCHAR(4) NOT NULL DEFAULT '',\n    `isTestAuction` ENUM('None','Yes','No') NOT NULL DEFAULT 'None' COMMENT 'test auction (should only respond from T.accnts)',\n    `auctionEvent` ENUM('None','Start','Update','End') NOT NULL DEFAULT 'None',\n    `auctionShape` ENUM('None','Single','MLeg') NOT NULL DEFAULT 'None',\n    `auctionType` ENUM('None','Exposure','Improvement','Facilitation','Solicitation','Opening','Closing','RFQ','Block','Flash') NOT NULL DEFAULT 'None',\n    `auctionSide` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'None' COMMENT 'Market side (client/imbalance side of auction; if known) [responder should be opposite side]',\n    `auctionSize` INT NOT NULL DEFAULT 0 COMMENT 'size available to trade',\n    `auctionPrice` DOUBLE NOT NULL DEFAULT 0 COMMENT 'auction price (can be positive or negative)',\n    `isAuctionPriceValid` ENUM('None','Yes','No') NOT NULL DEFAULT 'None',\n    `auctionDuration` INT NOT NULL DEFAULT 0 COMMENT 'expected auction / imbalance action duration (ms)',\n    `auctionStartSize` INT NOT NULL DEFAULT 0 COMMENT 'initial (starting) auction size',\n    `auctionStartPrice` DOUBLE NOT NULL DEFAULT 0 COMMENT 'initial (starting) auction price',\n    `auctionStartTimestamp` BIGINT NOT NULL DEFAULT 0 COMMENT 'auction start timestamp',\n    `minResponseSize` INT NOT NULL DEFAULT 0 COMMENT 'minimum size of the response order',\n    `limitType` ENUM('None','Market','Limit') NOT NULL DEFAULT 'None' COMMENT 'client / imbalance limit type (if available)',\n    `firmType` ENUM('None','Customer','Firm','MarketMaker','ProCustomer','BrokerDealer','AwayMM','FirmJBO','BrkrDlrCust') NOT NULL DEFAULT 'None' COMMENT 'firm type of the client side of auction (if available)',\n    `memberMPID` VARCHAR(10) NOT NULL DEFAULT '' COMMENT 'exchange member initiating auction (if available)',\n    `clientAccnt` VARCHAR(10) NOT NULL DEFAULT '' COMMENT 'client account designation (if known)',\n    `otherDetail` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'additional auction detail (exchange specific)',\n    `matchedSize` INT NOT NULL DEFAULT 0 COMMENT 'size already matched (may still be available to trade at a better price)',\n    `numUpdates` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'number of auction updates received (not counting auction termination message)',\n    `numResponses` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'as reported by exchange (if available)',\n    `bestResponseSize` INT NOT NULL DEFAULT 0,\n    `bestResponsePrice` DOUBLE NOT NULL DEFAULT 0,\n    `cumFillQuantity` INT NOT NULL DEFAULT 0 COMMENT 'as reported by exchange (if available)',\n    `avgFillPrice` DOUBLE NOT NULL DEFAULT 0,\n    `marketStatus` ENUM('None','PreOpen','PreCross','Cross','Open','Closed','Halted','AfterHours') NOT NULL DEFAULT 'None' COMMENT 'market status (pre-open, open, closed, etc)',\n    `srcTimestamp` BIGINT NOT NULL DEFAULT 0 COMMENT 'source timestamp (nanoseconds) if available',\n    `netTimestamp` BIGINT NOT NULL DEFAULT 0 COMMENT 'network timestamp message arrival @ direct exchange gateway',\n    `dgwTimestamp` BIGINT NOT NULL DEFAULT 0 COMMENT 'network timestamp mbus message send @ direct exchange gateway',\n    `timestamp` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000',\n    `LegsList` JSON NOT NULL DEFAULT JSON_OBJECT() CHECK(JSON_VALID(LegsList)),\n    PRIMARY KEY USING HASH (`secKey_tk`,`secKey_yr`,`secKey_mn`,`secKey_dy`,`secKey_xx`,`secKey_cp`,`secKey_at`,`secKey_ts`,`secType`,`auctionExch`,`auctionExDest`)\n) ENGINE=SRSE DEFAULT CHARSET=LATIN1 COMMENT='';\n\n"})})]})}function r(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,N.jsx)(t,{...e,children:(0,N.jsx)(L,{...e})}):L(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>s});var N=n(96540);const a={},i=N.createContext(a);function o(e){const t=N.useContext(i);return N.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),N.createElement(i.Provider,{value:t},e.children)}}}]);