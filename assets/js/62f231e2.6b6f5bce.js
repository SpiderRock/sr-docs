"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[96070],{48845:(e,r,d)=>{d.r(r),d.d(r,{assets:()=>c,contentTitle:()=>s,default:()=>j,frontMatter:()=>l,metadata:()=>n,toc:()=>h});var i=d(74848),t=d(28453);const l={title:"TradeCubeDetailV5"},s="Schema: TradeCubeDetailV5 (ID: 4870)",n={id:"MessageSchemas/Schema/Topics/risk-v5/TradeCubeDetailV5",title:"TradeCubeDetailV5",description:"TradeCubeDetail records are published by CoreRiskServers and are visible in SRSE throughout the day.  They are designed to be aggregated and analyzed over time.TradeCubeDetail records are published to the SpiderRock Archive Host data pipeline after all markup detail is complete.",source:"@site/docs/MessageSchemas/Schema/Topics/4740-risk-v5/TradeCubeDetailV5.md",sourceDirName:"MessageSchemas/Schema/Topics/4740-risk-v5",slug:"/MessageSchemas/Schema/Topics/risk-v5/TradeCubeDetailV5",permalink:"/docs/MessageSchemas/Schema/Topics/risk-v5/TradeCubeDetailV5",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"TradeCubeDetailV5"},sidebar:"messageSchemasSidebar",previous:{title:"SymbolRiskSummaryV5",permalink:"/docs/MessageSchemas/Schema/Topics/risk-v5/SymbolRiskSummaryV5"},next:{title:"OptionCalculator",permalink:"/docs/MessageSchemas/Schema/Topics/srse-calculators/OptionCalculator"}},c={},h=[{value:"METADATA",id:"metadata",level:3},{value:"PRIMARY KEY",id:"primary-key",level:3},{value:"BODY",id:"body",level:3}];function x(e){const r={a:"a",h1:"h1",h3:"h3",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(r.h1,{id:"schema-tradecubedetailv5-id-4870",children:["Schema: TradeCubeDetailV5 ",(0,i.jsx)("span",{className:"small-text",children:"(ID: 4870)"})]}),"\n",(0,i.jsxs)(r.p,{children:["TradeCubeDetail records are published by CoreRiskServers and are visible in SRSE throughout the day.  They are designed to be aggregated and analyzed over time.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"TradeCubeDetail records are published to the SpiderRock Archive Host data pipeline after all markup detail is complete."]}),"\n",(0,i.jsxs)("div",{className:"single-message-meta",children:[(0,i.jsx)(r.h3,{id:"metadata",children:"METADATA"}),(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Attribute"}),(0,i.jsx)(r.th,{children:"Value"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"MLink Token"}),(0,i.jsx)(r.td,{children:"SystemData"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"Topic"}),(0,i.jsx)(r.td,{children:"risk-v5"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"SRSE Product"}),(0,i.jsx)(r.td,{children:"SRRisk"})]})]})]})]}),"\n",(0,i.jsxs)("div",{className:"single-message-primarykey",children:[(0,i.jsx)(r.h3,{id:"primary-key",children:"PRIMARY KEY"}),(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Field"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Comment"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillNumber"}),(0,i.jsx)(r.td,{children:"long"}),(0,i.jsx)(r.td,{children:"SpiderRock execution number (globally unique over trailing 10 days)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"tradeDate"}),(0,i.jsx)(r.td,{children:"DateKey"}),(0,i.jsx)(r.td,{children:"trade date"})]})]})]})]}),"\n",(0,i.jsxs)("div",{className:"single-message-body",children:[(0,i.jsx)(r.h3,{id:"body",children:"BODY"}),(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Field"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Comment"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"accnt"}),(0,i.jsx)(r.td,{children:"string(16)"}),(0,i.jsx)(r.td,{children:"SpiderRock Accnt Code"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"altOrderId"}),(0,i.jsx)(r.td,{children:"string(24)"}),(0,i.jsx)(r.td,{children:"alternate order ID (usually clOrdId from client)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"arriveDnPnl"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"arrivePnl - uDriftArrivePnl"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"arrivePnl"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"-dir * qty * (fillPrice - 0.5 * (orderBid + orderAsk))  # maybe use orderSurfPrc instead"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"autoHedge"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/AutoHedge",children:"enum : AutoHedge"})}),(0,i.jsx)(r.td,{children:"SpiderRock auto-hedge algorithm (if any)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"billingCategory"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/BillingCategory",children:"enum : BillingCategory"})}),(0,i.jsx)(r.td,{children:"SpiderRock billing category"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"billingSecType"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/BillingSecType",children:"enum : BillingSecType"})}),(0,i.jsx)(r.td,{children:"SpiderRock billing security type"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"childAlgoHandler"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/ChildHandler",children:"enum : ChildHandler"})}),(0,i.jsx)(r.td,{children:"algo that generated the child order responsible for this fill"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"childAsk"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"option market ask @ child order send time (options only)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"childBid"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"option market bid @ child order send time (options only)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"childCancelReason"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/ChildCancelReason",children:"enum : ChildCancelReason"})}),(0,i.jsx)(r.td,{children:"child order cancel reason code"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"childCreateReason"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/ChildCreateReason",children:"enum : ChildCreateReason"})}),(0,i.jsx)(r.td,{children:"child order create reason code"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"childCxlAttempted"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,i.jsx)(r.td,{children:"cancel attempt was made on the child order prior to receiving this fill"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"childCxlFillLatency"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"cancel latency (for fills with a cancel attempt)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"childDttm"}),(0,i.jsx)(r.td,{children:"DateTime"}),(0,i.jsx)(r.td,{children:"child order send date/time"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"childExDest"}),(0,i.jsx)(r.td,{children:"string(12)"}),(0,i.jsx)(r.td,{children:"child order exchange code (downstream)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"childExch"}),(0,i.jsx)(r.td,{children:"string(6)"}),(0,i.jsx)(r.td,{children:"child order exchange code (SpiderRock)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"childLimitPnl"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"child limit improvement pnl (childLimitPrc to fillPrice)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"childLimitPrc"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"parent order limit price @ child order send time"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"childLimitRefUPrc"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"limit reference underlier price @ child order send time (options only)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"childMktStance"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/MktStance",children:"enum : MktStance"})}),(0,i.jsx)(r.td,{children:"child order was expected to be marketable @ child send time"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"childMktWidth"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"market width @ child order send time"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"childOrderHandling"}),(0,i.jsx)(r.td,{children:"string(24)"}),(0,i.jsx)(r.td,{children:"algo that generated the child order responsible for this fill"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"childPrice"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"child order price"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"childProb"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"child order probability (T+x)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"childShape"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/SpdrOrderShape",children:"enum : SpdrOrderShape"})}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"childSize"}),(0,i.jsx)(r.td,{children:"int"}),(0,i.jsx)(r.td,{children:"child order size"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"childSurfPrc"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"SpiderRock surface price @ child order send time (options only)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"childUAsk"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"underlier market bid @ child order send time"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"childUBid"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"underlier market bid @ child order send time"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"childVol"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"child order volatilty (options only)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"clArrivePnl"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"-dir * qty * (fillPrice - clArriveMark)  # maybe use orderSurfPrc instead"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"clOrdId"}),(0,i.jsx)(r.td,{children:"string(24)"}),(0,i.jsx)(r.td,{children:"clOrdId resulting in fill (child order)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"clearingAccnt"}),(0,i.jsx)(r.td,{children:"string(16)"}),(0,i.jsx)(r.td,{children:"clearing firm account (if any)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"clearingFirm"}),(0,i.jsx)(r.td,{children:"string(8)"}),(0,i.jsx)(r.td,{children:"clearing firm (delivery)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"clearingFlipAccnt"}),(0,i.jsx)(r.td,{children:"string(10)"}),(0,i.jsx)(r.td,{children:"clearingFlip additional detail (sub-accnt)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"clearingFlipFirm"}),(0,i.jsx)(r.td,{children:"string(6)"}),(0,i.jsx)(r.td,{children:"clearingFlip Broker/MPID/CMTA"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"clearingFlipType"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/FlipType",children:"enum : FlipType"})}),(0,i.jsx)(r.td,{children:"clearingFlip Type (CMTA or Giveup)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"clientFirm"}),(0,i.jsx)(r.td,{children:"string(16)"}),(0,i.jsx)(r.td,{children:"SpiderRock ClientFirm Code"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"dayDnPnl"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"delta neutral Pnl (to EOD)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"dayM10Pnl"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"delta neutral Pnl (Fill + 10M)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"dayM1Pnl"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"delta neutral Pnl (Fill + 1M)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"dayMarkError"}),(0,i.jsx)(r.td,{children:"string(8)"}),(0,i.jsx)(r.td,{children:"day mark error code"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"dayPnl"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"actual Pnl to EOD"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"edays"}),(0,i.jsx)(r.td,{children:"short"}),(0,i.jsx)(r.td,{children:"days to next earnings [-5, +60]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"effFillSize"}),(0,i.jsx)(r.td,{children:"int"}),(0,i.jsx)(r.td,{children:"fill size x underliers per contract"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"exchFee"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"SpiderRock exchange fee estimate"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"exchLiquidityTag"}),(0,i.jsx)(r.td,{children:"string(4)"}),(0,i.jsx)(r.td,{children:"liquidity tag (exchange)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"execBrkrAccnt"}),(0,i.jsx)(r.td,{children:"string(16)"}),(0,i.jsx)(r.td,{children:"account at executing broker/prime (if any)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"execBrkrClFirm"}),(0,i.jsx)(r.td,{children:"string(16)"}),(0,i.jsx)(r.td,{children:"client/firm at executing broker/prime (if any)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"execBrkrCode"}),(0,i.jsx)(r.td,{children:"string(16)"}),(0,i.jsx)(r.td,{children:"SR exec broker acronym"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"execBrkrUserName"}),(0,i.jsx)(r.td,{children:"string(16)"}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"execRole"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/ExecRole",children:"enum : ExecRole"})}),(0,i.jsx)(r.td,{children:"SpiderRock relationship to this execution record (Direct, Drop, etc)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"execStatus"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/ExecStatus",children:"enum : ExecStatus"})}),(0,i.jsx)(r.td,{children:"SpiderRock execution status (Fill,Bust,Correct,Reject,SysRej)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"expCode"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/ExpCode",children:"enum : ExpCode"})}),(0,i.jsx)(r.td,{children:"expiration tenor code"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillAsk"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"option market ask @ fill arrival"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillBeta"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"SpiderRock estimate of beta to SPX"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillBid"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"option market bid @ fill arrival"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillBrkrRate"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"billing brokerage rate (tier 1)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillDe"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"fill delta"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillDttm"}),(0,i.jsx)(r.td,{children:"DateTime"}),(0,i.jsx)(r.td,{children:"Date/time of fill arrival"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillExch"}),(0,i.jsx)(r.td,{children:"string(12)"}),(0,i.jsx)(r.td,{children:"ExDest code from child order execution report (lastMkt)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillExchDetail"}),(0,i.jsx)(r.td,{children:"text1"}),(0,i.jsxs)(r.td,{children:["other fix tags (tag",":value","#tag",":value",") [additional detail used for analysis]"]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillLimitPnl"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"fill limit improvement pnl (fillLimitPrc to fillPrice)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillLimitPrc"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"parent order limit price @ fill arrival time"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillLimitRefUPrc"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"limit reference underlier price @ fill arrival time (options only)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillMktWidth"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"market width @ fill arrival"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillPostMark10M"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"SpiderRock mid or surface mark @ fill arrival + 10M"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillPostMark1M"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"SpiderRock mid or surface mark @ fill arrival + 1M"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillPostUMark10M"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"underlier mark @ fill arrival + 10M"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillPostUMark1M"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"underlier mark @ fill arrival + 1M"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillPrice"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"fill price"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillProb"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"fill order probability (T+x)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillRoutingRate"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"billing routing rate (tier 1)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillSize"}),(0,i.jsx)(r.td,{children:"int"}),(0,i.jsx)(r.td,{children:"fill quantity"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillSurfPrc"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"SpiderRock surface price @ fill arrival"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillTh"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"fill theta"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillTp"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"theo price"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillTs"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"fill report ts (seconds since startup; 100 nanosec resolution)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillTv"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"theo vol (user supplied)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillUAsk"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"underlier market ask @ fill arrival"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillUBid"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"underlier market bid @ fill arrival"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillUPrc"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"fill underlier mid-market"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillVe"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"fill vega"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillVol"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"fill volatilty (options only)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"firmType"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/FirmType",children:"enum : FirmType"})}),(0,i.jsx)(r.td,{children:"chld order firm type [Customer, ProCust, Firm, MM, etc]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"groupingCode"}),(0,i.jsx)(r.td,{children:"long"}),(0,i.jsx)(r.td,{children:"SpiderRock parent broker number [broker pkey]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"grpNum"}),(0,i.jsx)(r.td,{children:"int"}),(0,i.jsx)(r.td,{children:"grp num (000000)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"halfWidthPnl"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"estimated half-width Pnl"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"indNum"}),(0,i.jsx)(r.td,{children:"int"}),(0,i.jsx)(r.td,{children:"ind num (00)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"lastCapacity"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/OrderCapacity",children:"enum : OrderCapacity"})}),(0,i.jsx)(r.td,{children:"child order capacity"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"lastExecID"}),(0,i.jsx)(r.td,{children:"string(20)"}),(0,i.jsx)(r.td,{children:"most recent execution ID (same as origExecID unless CANCEL/CORRECTION has been processed)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"liveMark"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"SpiderRock internal use"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"liveUPrc"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"SpiderRock internal use"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"marginUDnVDn"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"Aggregate RiskSlide: uPrc dn, vol dn"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"marginUDnVUp"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"Aggregate RiskSlide: uPrc dn, vol up"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"marginUUpVDn"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"Aggregate RiskSlide: uPrc up, vol dn"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"marginUUpVUp"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"Aggregate RiskSlide: uPrc up, vol up"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"marketValue"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"cn * mult * fillPrice"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"method"}),(0,i.jsx)(r.td,{children:"string(16)"}),(0,i.jsx)(r.td,{children:"execution method string"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"minTickSize"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"nbrNum"}),(0,i.jsx)(r.td,{children:"int"}),(0,i.jsx)(r.td,{children:"nbr num (00000000)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"notionalValue"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"cn * mult * uPrc"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"orderAsk"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"option market ask @ parent order arrival (options only)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"orderBid"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"option market bid @ parent order arrival (options only)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"orderDttm"}),(0,i.jsx)(r.td,{children:"DateTime"}),(0,i.jsx)(r.td,{children:"Date/time of parent order arrival"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"orderLimitClass"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/SpdrLimitClass",children:"enum : SpdrLimitClass"})}),(0,i.jsx)(r.td,{children:"parent order limit class (makeLimitClass if fill was from making; takeLimitClass if fill was from taking)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"orderLimitPrc"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"parent order limit price @ parent order arrival"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"orderLimitRefUPrc"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"limit reference underlier price @ parent order arrival (options only)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"orderLimitType"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/SpdrLimitType",children:"enum : SpdrLimitType"})}),(0,i.jsx)(r.td,{children:"parent order limit type [Vol, VolX, PrcDe, PrcDeX, etc]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"orderLimitVol"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"parent order limit volatilty (options only)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"orderMktWidth"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"market width @ parent order arrival"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"orderSurfPrc"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"SpiderRock surface price @ parent order arrival (options only)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"orderSurfVol"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"orderUAsk"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"underlier market ask @ parent order arrival"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"orderUBid"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"underlier market bid @ parent order arrival"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"origExecID"}),(0,i.jsx)(r.td,{children:"string(20)"}),(0,i.jsx)(r.td,{children:"original execution ID string (child order)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"origin"}),(0,i.jsx)(r.td,{children:"string(16)"}),(0,i.jsx)(r.td,{children:"parent order origin string"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"packageId"}),(0,i.jsx)(r.td,{children:"long"}),(0,i.jsx)(r.td,{children:"groups related order/brokers together (eg. Legger w/MLeg Parent)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"parentAgeCode"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/ParentAge",children:"enum : ParentAge"})}),(0,i.jsx)(r.td,{children:"elaspsed time from parent order entry/update to this fill event [coded]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"parentBalanceHandling"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/ParentBalanceHandling",children:"enum : ParentBalanceHandling"})}),(0,i.jsx)(r.td,{children:"base parent order balance handling [make style algo]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"parentNumber"}),(0,i.jsx)(r.td,{children:"long"}),(0,i.jsx)(r.td,{children:"SpiderRock parent number"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"parentOrderAge"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"elaspsed time from parent order entry/update to this fill event"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"parentOrderHandling"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/ParentOrderHandling",children:"enum : ParentOrderHandling"})}),(0,i.jsx)(r.td,{children:"base parent order algo [take style algo]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"parentOrderSize"}),(0,i.jsx)(r.td,{children:"int"}),(0,i.jsx)(r.td,{children:"parent order size"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"parentShape"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/SpdrOrderShape",children:"enum : SpdrOrderShape"})}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"pendMark"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"SpiderRock internal use"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"pendUPrc"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"SpiderRock internal use"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"pointCurrency"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/Currency",children:"enum : Currency"})}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"pointValue"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"$NLV value of a point"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"positionType"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/PositionType",children:"enum : PositionType"})}),(0,i.jsx)(r.td,{children:"child order position type"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"priAggGroup"}),(0,i.jsx)(r.td,{children:"string(16)"}),(0,i.jsx)(r.td,{children:"primary aggregation group"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"priceFormat"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/PriceFormat",children:"enum : PriceFormat"})}),(0,i.jsx)(r.td,{children:"SpiderRock price display format code"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"priceType"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/PriceType",children:"enum : PriceType"})}),(0,i.jsx)(r.td,{children:"order limit price type"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"remoteText"}),(0,i.jsx)(r.td,{children:"string(64)"}),(0,i.jsx)(r.td,{children:"text comment from endpoint (if any)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"riskClass"}),(0,i.jsx)(r.td,{children:"string(8)"}),(0,i.jsx)(r.td,{children:"user supplied risk class code (from SymbolControl record)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"riskCode"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/RiskCode",children:"enum : RiskCode"})}),(0,i.jsx)(r.td,{children:"SpiderRock Risk Code (if any)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"riskGroupId"}),(0,i.jsx)(r.td,{children:"long"}),(0,i.jsx)(r.td,{children:"riskGroupId (parent order group ID) for this execution report"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"riskServerCode"}),(0,i.jsx)(r.td,{children:"string(6)"}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"routingCode"}),(0,i.jsx)(r.td,{children:"text1"}),(0,i.jsx)(r.td,{children:"SpiderRock market routing code"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"runStatus"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/RunStatus",children:"enum : RunStatus"})}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"secAggGroup"}),(0,i.jsx)(r.td,{children:"string(16)"}),(0,i.jsx)(r.td,{children:"secondary aggregation group"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"secKey"}),(0,i.jsx)(r.td,{children:"OptionKey"}),(0,i.jsx)(r.td,{children:"security key"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"secType"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/SpdrKeyType",children:"enum : SpdrKeyType"})}),(0,i.jsx)(r.td,{children:"security type [Stock, Future, Option]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"sector"}),(0,i.jsx)(r.td,{children:"string(16)"}),(0,i.jsx)(r.td,{children:"user supplied sector code (from SymbolControl record)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"server"}),(0,i.jsx)(r.td,{children:"string(20)"}),(0,i.jsx)(r.td,{children:"SpiderRock execution engine that handled the parent order"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"side"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,i.jsx)(r.td,{children:"parent/child order side"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"skewCode"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/SkewCode",children:"enum : SkewCode"})}),(0,i.jsx)(r.td,{children:"strike skew code"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"source"}),(0,i.jsx)(r.td,{children:"string(16)"}),(0,i.jsx)(r.td,{children:"execution source string"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"spdrLiquidityTag"}),(0,i.jsx)(r.td,{children:"string(2)"}),(0,i.jsx)(r.td,{children:"SpiderRock normalized liquidity tag"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"spdrSSaleFlag"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum : ShortSaleFlag"})}),(0,i.jsx)(r.td,{children:"parent order short sale flag"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"spdrSource"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/SpdrSource",children:"enum : SpdrSource"})}),(0,i.jsx)(r.td,{children:"SpiderRock parent order source code [broker pkey]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"srcRoutingCode"}),(0,i.jsx)(r.td,{children:"text1"}),(0,i.jsx)(r.td,{children:"inbound FIX routing code, if any"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"ssaleFlag"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum : ShortSaleFlag"})}),(0,i.jsx)(r.td,{children:"child order short sale flag"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"strategy"}),(0,i.jsx)(r.td,{children:"string(36)"}),(0,i.jsx)(r.td,{children:"client strategy [usually client supplied]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"subNum"}),(0,i.jsx)(r.td,{children:"int"}),(0,i.jsx)(r.td,{children:"sub num (0000)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"surfEdge"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"SR surface edge (user supplied theo vol/prc to SpiderRock surface price)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"surfEdgeUnit"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"SR surface edge normalized to $100 underlier"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"symbolType"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/SymbolType",children:"enum : SymbolType"})}),(0,i.jsx)(r.td,{children:"symbol type"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"sysEnvironment"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/SysEnvironment",children:"enum : SysEnvironment"})}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"theoEdge"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"theo edge (user supplied theo vol/prc to SpiderRock surface price)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"theoEdgeUnit"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"theo edge normalized to $100 underlier"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"tickValue"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"$NLV value of a single tick change in display premium\t(pointValue = tickValue / tickSize)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"ticker"}),(0,i.jsx)(r.td,{children:"TickerKey"}),(0,i.jsx)(r.td,{children:"base ticker"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"timestamp"}),(0,i.jsx)(r.td,{children:"DateTime"}),(0,i.jsx)(r.td,{children:"SR system timestamp"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"transactDttm"}),(0,i.jsx)(r.td,{children:"DateTime"}),(0,i.jsx)(r.td,{children:"transaction date/time as reported by exchange or down stream broker"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"trdBeta"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"trade beta"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"trdDBeta"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"trade $beta"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"trdDDelta"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"trade $delta"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"trdDelta"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"trade delta"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"trdGamma"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"trade gamma"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"trdMarkError"}),(0,i.jsx)(r.td,{children:"string(8)"}),(0,i.jsx)(r.td,{children:"trade mark error code"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"trdPrem"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"trade premium over parity"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"trdTheta"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"trade theta"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"trdVega"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"trade vega"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"trdWtVega"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"trade wtVega (vega * vol / sqrt(max(0.1, years * 4)))"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"uDriftArrivePnl"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"-dir * qty * fillDe * (0.5 * (fillUBid + fillUAsk) - 0.5 * (orderUBid + orderUAsk))"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"uDriftDayPnl"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"underlier delta drift Pnl (to EOD)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"uDriftM10Pnl"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"underlier delta drift Pnl (Fill + 10M)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"uDriftM1Pnl"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"underlier delta drift Pnl (Fill + 1M)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"uPrcRatio"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"UPrcRatio (SymbolRatio) from product definition"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"uPriceFormat"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/PriceFormat",children:"enum : PriceFormat"})}),(0,i.jsx)(r.td,{children:"SpiderRock underlier price display code"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"underlierType"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/UnderlierType",children:"enum : UnderlierType"})}),(0,i.jsx)(r.td,{children:"underlier type (affects $greek calcs)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"underliersPerCn"}),(0,i.jsx)(r.td,{children:"int"}),(0,i.jsx)(r.td,{children:"underliers per contract (futures and options)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"userData1"}),(0,i.jsx)(r.td,{children:"text1"}),(0,i.jsx)(r.td,{children:"client supplied data field; passes through to parent and child executions and reports as well as FIX drops"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"userData2"}),(0,i.jsx)(r.td,{children:"text1"}),(0,i.jsx)(r.td,{children:"client supplied data field; passes through to parent and child executions and reports as well as FIX drops"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"userName"}),(0,i.jsx)(r.td,{children:"string(24)"}),(0,i.jsx)(r.td,{children:"SpiderRock user name associated with the parent order"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"version"}),(0,i.jsx)(r.td,{children:"byte"}),(0,i.jsx)(r.td,{children:"record version number; starts at zero and goes up every time an execution record is re-published (eg, bust, +1m marks, +10m marks, etc)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"viewGroup1"}),(0,i.jsx)(r.td,{children:"string(12)"}),(0,i.jsx)(r.td,{children:"viewGroup1 (user supplied; if any)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"viewGroup2"}),(0,i.jsx)(r.td,{children:"string(12)"}),(0,i.jsx)(r.td,{children:"viewGroup2 (user supplied; if any)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"viewGroup3"}),(0,i.jsx)(r.td,{children:"string(12)"}),(0,i.jsx)(r.td,{children:"viewGroup3 (user supplied; if any)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"widthCode"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/WidthCode",children:"enum : WidthCode"})}),(0,i.jsx)(r.td,{children:"market width code"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"years"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"years to expiration"})]})]})]})]})]})}function j(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(x,{...e})}):x(e)}},28453:(e,r,d)=>{d.d(r,{R:()=>s,x:()=>n});var i=d(96540);const t={},l=i.createContext(t);function s(e){const r=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function n(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(l.Provider,{value:r},e.children)}}}]);