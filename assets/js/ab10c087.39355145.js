"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[82103],{69053:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var n=i(74848),s=i(28453);const o={sidebar_position:1,title:"FutureDefinition"},r=void 0,a={id:"MessageSchemas/Schema/MLink Tokens/FutureDefinition",title:"FutureDefinition",description:"| # | Message Name | Description |",source:"@site/docs/MessageSchemas/Schema/MLink Tokens/FutureDefinition.md",sourceDirName:"MessageSchemas/Schema/MLink Tokens",slug:"/MessageSchemas/Schema/MLink Tokens/FutureDefinition",permalink:"/docs/MessageSchemas/Schema/MLink Tokens/FutureDefinition",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"FutureDefinition"},sidebar:"messageSchemasSidebar",previous:{title:"FutSummaryData",permalink:"/docs/MessageSchemas/Schema/MLink Tokens/FutSummaryData"},next:{title:"GlobalDefinition",permalink:"/docs/MessageSchemas/Schema/MLink Tokens/GlobalDefinition"}},c={},d=[];function u(e){const t={a:"a",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"#"}),(0,n.jsx)(t.th,{children:"Message Name"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"4335"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../Topics/product-definition/CCodeDefinition",children:"CCodeDefinition"})}),(0,n.jsxs)(t.td,{children:["Commodity code (product code) definitions for all futures.  Also maps future ccodes to SpiderRock tickers. Information is sourced from listing exchange product definitions.",(0,n.jsx)("br",{}),(0,n.jsx)("br",{}),"This table also contains definitions for exchange and user-defined spreads including spreads used as option underliers. SpiderRock typically uses a compact form of the exchange (spread) product ID as the ccode for these products if there is no natural (human-readable) exchange spread ticker issued for the spread.  Note that the full spread definition can be found in the ProductDefinition and human-readable version in the description field below.",(0,n.jsx)("br",{}),(0,n.jsx)("br",{}),"Note that SpiderRock tickers below are synthetic and are created for organizational purposes only.  SpiderRock synthetic tickers typically begin with a '@' character."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"4360"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../Topics/product-definition/ProductDefinitionV2",children:"ProductDefinitionV2"})}),(0,n.jsx)(t.td,{children:"SpiderRock normalized exchange product definitions.  Includes future, option, and spread definitions from a number of exchanges.  TickerDefinitions, RootDefinitions and CCodeDefinitions are consistent with these records."})]})]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>a});var n=i(96540);const s={},o=n.createContext(s);function r(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);