"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([["7515"],{34362:function(e,i,t){t.r(i),t.d(i,{default:()=>a,frontMatter:()=>l,metadata:()=>s,assets:()=>c,toc:()=>o,contentTitle:()=>d});var s=JSON.parse('{"id":"Documentation/Products/ToolSuite/TradeApp/OrderParameters","title":"Order Parameters","description":"This page summarizes the different parameters associated with each order type and provides brief descriptions for each parameter.","source":"@site/versioned_docs/version-8.5.8.1/Documentation/Products/ToolSuite/TradeApp/OrderParameters.md","sourceDirName":"Documentation/Products/ToolSuite/TradeApp","slug":"/Documentation/Products/ToolSuite/TradeApp/OrderParameters","permalink":"/docs/8.5.8.1/Documentation/Products/ToolSuite/TradeApp/OrderParameters","draft":false,"unlisted":false,"tags":[],"version":"8.5.8.1","sidebarPosition":2,"frontMatter":{"title":"Order Parameters","sidebar_position":2},"sidebar":"documentationSidebar","previous":{"title":"Trade App Manual","permalink":"/docs/8.5.8.1/Documentation/Products/ToolSuite/TradeApp/"},"next":{"title":"Example - Initiating a Block Auction","permalink":"/docs/8.5.8.1/Documentation/Products/ToolSuite/TradeApp/BlockInitiatingExample"}}'),r=t("52676"),n=t("91503");let l={title:"Order Parameters",sidebar_position:2},d=void 0,c={},o=[{value:"Parameter Summary by Order Type",id:"parameter-summary-by-order-type",level:2},{value:"Parameter Descriptions",id:"parameter-descriptions",level:2},{value:"Active Size",id:"active-size",level:3},{value:"Auto Hedge",id:"auto-hedge",level:3},{value:"Best Px Offset",id:"best-px-offset",level:3},{value:"Counterparties",id:"counterparties",level:3},{value:"Delta",id:"delta",level:3},{value:"Direction",id:"direction",level:3},{value:"FV Offset",id:"fv-offset",level:3},{value:"Gamma",id:"gamma",level:3},{value:"Limit Price",id:"limit-price",level:3},{value:"Limit Px",id:"limit-px",level:3},{value:"Limit Type",id:"limit-type",level:3},{value:"Market Session",id:"market-session",level:3},{value:"NBBO Cap",id:"nbbo-cap",level:3},{value:"Order Size",id:"order-size",level:3},{value:"Posting Logic",id:"posting-logic",level:3},{value:"Public Price",id:"public-price",level:3},{value:"Rounded Px",id:"rounded-px",level:3},{value:"Secondary Limit",id:"secondary-limit",level:3},{value:"Size Condition",id:"size-condition",level:3},{value:"Taking Logic",id:"taking-logic",level:3},{value:"Time",id:"time",level:3},{value:"uRef",id:"uref",level:3},{value:"uRef Bound",id:"uref-bound",level:3}];function h(e){let i={h2:"h2",h3:"h3",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.p,{children:"This page summarizes the different parameters associated with each order type and provides brief descriptions for each parameter."}),"\n",(0,r.jsx)(i.h2,{id:"parameter-summary-by-order-type",children:"Parameter Summary by Order Type"}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{}),(0,r.jsx)(i.th,{children:"Block Auction"}),(0,r.jsx)(i.th,{children:"Flash Auction"}),(0,r.jsx)(i.th,{children:"Spider Sweep"}),(0,r.jsx)(i.th,{children:"Spider Progression"}),(0,r.jsx)(i.th,{children:"Active Maker"}),(0,r.jsx)(i.th,{children:"Active Taker"})]})}),(0,r.jsxs)(i.tbody,{children:[(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Active Size"})}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Autohedge"})}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Best Px Offset"})}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Counterparties"})}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Delta"})}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Direction"})}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Duration"})}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"FV Offset"})}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Gamma"})}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Limit Price"})}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Limit Px"})}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Limit Type"})}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Market Session"})}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"NBBO Cap"})}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Order Size"})}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Posting Logic"})}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Public Price"})}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Rounded Px"})}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Secondary Limit"})}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Size Condition"})}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Taking Logic"})}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{children:"X"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Time"})}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"uRef"})}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"uRef Bound"})}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"}),(0,r.jsx)(i.td,{children:"X"})]})]})]}),"\n",(0,r.jsx)(i.h2,{id:"parameter-descriptions",children:"Parameter Descriptions"}),"\n",(0,r.jsx)(i.h3,{id:"active-size",children:"Active Size"}),"\n",(0,r.jsx)(i.p,{children:"If this is a staged order, this will set the how much of that original order size is being worked."}),"\n",(0,r.jsx)(i.h3,{id:"auto-hedge",children:"Auto Hedge"}),"\n",(0,r.jsxs)("ul",{children:[(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"None"})," - Auto-hedging is not enabled. This is the default option."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"FastCrx"})," - This will send a dynamic hedge with a price that crosses the market one tick through. If the first hedge misses, another IOC order is sent immediately."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"10 Sec"})," - The order will work for 10 seconds, number of slices depends on order size."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"60 Sec"})," - The order will work for 60 seconds, number of slices depends on order size."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"5 Min"})," - The order will work for 5 minutes, number of slices depends on order size."]})]}),"\n",(0,r.jsx)(i.h3,{id:"best-px-offset",children:"Best Px Offset"}),"\n",(0,r.jsx)(i.p,{children:"The initiator has the option to enter a Best Price Offset, which is a hidden ultimate limit (represented as an offset to the Public Price).  For initiators, this Best Price Offset will only be used at the completion of the auction time."}),"\n",(0,r.jsx)(i.p,{children:"If there is no match of Public Prices of initiating and responding clients during the set auction time, the Best Price of the initiator may be matched with the Public Price or Best Price of a responding client (the Best Price of a responding client may also be matched with the Public Price of the initiating client)."}),"\n",(0,r.jsx)(i.p,{children:"For auction responders, the Best Price Offset will automatically update the responder\u2019s Public Price as other responders show responses that are more aggressive. This is under the assumption that the more aggressive responses are within the responder\u2019s Best Price Offset bound."}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Note:"})," A responder\u2019s Best Price Offset will only be used to match a more aggressive responder\u2019s price that does not result in an immediate trade."]}),"\n",(0,r.jsx)(i.h3,{id:"counterparties",children:"Counterparties"}),"\n",(0,r.jsx)(i.p,{children:"The counterparty menu allows the initiator to customize the recipients of their auction notices and is a key value-added feature of the Block Auction.  The initiator may choose any combination of the below from the counterparty menu:"}),"\n",(0,r.jsxs)("ul",{children:[(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"SR Network"})," - This is comprised of all clients of SpiderRock Connect.  By choosing the SR Network, the initiator can choose to anonymously broadcast their auction notice to all SpiderRock Connect clients OR to disclose their identity."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"Direct Counterparties"})," - These are the established trading relationships of the initiator.  The initiator can choose to send their auction to any counterparty anonymously or select the Disclose toggle to reveal their identity to that counterparty.  Direct counterparties are organized into two distinct groups:"]}),(0,r.jsxs)("ul",{children:[(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"Paid Counterparties"})," - These are firms that have an existing trading relationship with the initiating client where a signed trading agreement between the two firms exists.  When the initiating client chooses to trade with this type of counterparty, they will be paying commission directly to the counterparty based on their prearranged agreement.  These counterparties are differentiated on the application by using a yellow $ icon. ",(0,r.jsx)("b",{children:"Note:"})," Paid counterparties have to be set to Disclose."]}),"\n",(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"Unpaid Counterparties"})," - These are firms that have a relationship with the initiating customer but do not have a signed trading agreement.  Both the initiating client and the responding liquidity provider pay commission to SpiderRock Connect on successful auctions."]})]})]}),"\n",(0,r.jsx)(i.h3,{id:"delta",children:"Delta"}),"\n",(0,r.jsx)(i.p,{children:"This field sets the delta of the order."}),"\n",(0,r.jsx)(i.h3,{id:"direction",children:"Direction"}),"\n",(0,r.jsxs)(i.p,{children:["The direction of the order. For details on how order direction works for multi-leg orders, ",(0,r.jsx)("a",{href:"https://docs.spiderrockconnect.com/docs/next/Documentation/Products/ToolSuite/TradeApp/#multi-leg-perspective",children:"read more here."})]}),"\n",(0,r.jsx)(i.h3,{id:"fv-offset",children:"FV Offset"}),"\n",(0,r.jsx)(i.p,{children:"This field sets the Fair Value offset value."}),"\n",(0,r.jsx)(i.h3,{id:"gamma",children:"Gamma"}),"\n",(0,r.jsx)(i.p,{children:"This field sets the gamma of the order."}),"\n",(0,r.jsx)(i.h3,{id:"limit-price",children:"Limit Price"}),"\n",(0,r.jsx)(i.p,{children:"This field lets clients input a specified limit price value."}),"\n",(0,r.jsx)(i.h3,{id:"limit-px",children:"Limit Px"}),"\n",(0,r.jsx)(i.p,{children:"This is a display only field to show what SpiderRock's default limit price would be when affected by other parameters. Limit Price will override Limit Px."}),"\n",(0,r.jsx)(i.h3,{id:"limit-type",children:"Limit Type"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Note:"})," The options available in the Limit Type dropdown will change depending on the order type. Described here are all possible options the dropdown could display and organized alphabetically."]}),"\n",(0,r.jsx)(i.p,{children:"Users have the ability to adjust their Public Price by selecting from the Limit Type pulldown.  Below is the available list of limit types:"}),"\n",(0,r.jsxs)("ul",{children:[(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"Delta (1-way) / PriceDe1Way"})," - This adjustment type differs from Delta (2-way) in that the adjustment only happens in one direction.  The use of Delta (1-way) is most easily illustrated in an example.  If an initiating customer wanted to overwrite an existing stock position by selling a call option, and they had a level below which they would not want to sell the call option, Delta (1-way) would be an appropriate choice.  This initiator could choose a Public Price (which represents their limit) and select Delta (1-way) allowing their Public Price to be adjusted higher on their desired delta/gamma as the stock moves higher, yet protecting them at their Public Price if the stock were to move lower.  This client would benefit from adjustment as the stock moved higher, and their Public Price would be held constant if the stock moved lower than the selected uRef value."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"Delta (2-way)"})," - This method is used to adjust limit prices on outright option transactions (without a stock leg), as well as option packages that include a stock leg.  Delta (2-way) will apply a delta/gamma adjustment if the stock moves higher or the stock moves lower.  For packages that include a stock leg Delta (2-way) will allow the user to adjust on delta that is different from the stock ratio used on the package.  For single options or packages that are outright (no stock leg), SpiderRock will adjust the user\u2019s Public Price and Best Price Offset either higher or lower on the user\u2019s defined delta as the underlying stock moves."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"Market"})," - Client limit will be set to several increment through the prevailing BBO market. Not available if there is no BBO market or the market is halted."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"Neutral"})," - This is an adjustment method only relevant for option structures that are tied to stock.  This approach uses the equity ratio (package delta) from the package as limit adjustment.  If the initiating user has selected the Limit Type Neutral, the auction responder\u2019s Limit Type will default to Neutral and the responder\u2019s uRef will match the initiator\u2019s uRef."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"PkgNeutral"})," - The limit is described as: effective limit price = orderPrcLimit + 0.01 * stockDir * stockShares * orderRefUPrc."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"Price"})," - Client limit is the Limit Price value."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"PriceDe"})," - Client limit is initially the Limit Price value but then delta/gamma adjusted based on underlier BBO mid-market, orderRefUPrc, orderRefDelta, and orderRefGamma. xRef values will default to SpiderRock values on arrival if not supplied."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"RC Premium / RcPrem"})," - This limit type is only available for reversal/conversion strategies which are not currently enabled but are coming soon to SpiderRock Connect."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"SnLimit"})," - This limit type is only available for a synthetic orders. The limit is described as: effective limit price = underlier BBO + orderPrcLimit."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"Static"})," - Maintains an unadjusted price for the user.  "]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"Volatility"})," - Client limit is the price calculated from orderVolLimit using underlier BBO mid-market and SpiderRock default pricing values including years, rate, sdiv, and discrete dividends. Pricing displayed on SR tools will generally match pricing in our execution engines, including if pricing overrides have been applied at the point where the order was created."]})]}),"\n",(0,r.jsx)(i.h3,{id:"market-session",children:"Market Session"}),"\n",(0,r.jsxs)("ul",{children:[(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"PreMkt"})," - Eligible for exchange pre-market session"]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"RegMkt"})," - Eligible for exchange regular market session"]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"PostMkt"})," - Eligible for exchange post market session"]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"PreRegMkt"})," - Eligible for exchange pre-market session or regular market session"]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"RegPostMkt"})," - Eligible for exchange regular market session or post market session"]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"AllDay"})," - Eligible for any exchange market session"]})]}),"\n",(0,r.jsx)(i.h3,{id:"nbbo-cap",children:"NBBO Cap"}),"\n",(0,r.jsx)(i.p,{children:"If an NBBO cap is selected, the price shown to responders \u2013 regardless of what was initially inputted by the initiator \u2013 will be the NBBO or NBBO plus the selected amount of cents. If the market moves while the order is still active, the shown price will move to match the selected NBBO cap."}),"\n",(0,r.jsxs)("ul",{children:[(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"NBBO"})," - The displayed price will be the current NBBO price."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"NBBO + 0.01"})," - The displayed price will be the current NBBO price plus 1 cent."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"NBBO + 0.05"})," - The displayed price will be the current NBBO price plus 5 cents."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"NBBO + 0.10"})," - The displayed price will be the current NBBO price plus 10 cents."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"None"})," - Default; this will display the original price inputted by initiator and will not adjust if the NBBO changes."]})]}),"\n",(0,r.jsx)(i.h3,{id:"order-size",children:"Order Size"}),"\n",(0,r.jsx)(i.p,{children:"This will simply set the size of the order."}),"\n",(0,r.jsx)(i.h3,{id:"posting-logic",children:"Posting Logic"}),"\n",(0,r.jsxs)("ul",{children:[(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"PostLimit"})," - Immediately post a public order at the limit price. Will improve or fade as limit price moves. Will be dynamically sized if the child order will outside the prevailing market size."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"PostWith"})," - Join existing markets if there is sufficient limit room to do so. Will not improve an existing market. Will fade when alone and will be dynamically sized if child order would outsize the prevailing market size."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"PostTurn"})," - Join or improve existing markets if there is sufficient limit room to do so. Will not improve own order unless joined with sufficient size. Will be dynamically sized if the child order would outsize the prevailing market size."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"PostFlash"})," - Same as post limit, but flashes the order in the market for a 1 second and then is removed from the market. It will only flash if the child order is improving the market. It will flash again at a random time between 45 seconds."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"PostFlashW"})," - This is as PostFlash, where the order will flash in the market for 1 second, but will post on the bid for the remaining time."]})]}),"\n",(0,r.jsx)(i.h3,{id:"public-price",children:"Public Price"}),"\n",(0,r.jsx)(i.p,{children:"Public Price is the user\u2019s limit price, which is visible to all participants.  The user can choose to update their Public Price at any point during the auction duration, making the auction process interactive for both the initiating and responding clients."}),"\n",(0,r.jsx)(i.p,{children:"SpiderRock provides price guidance by automatically populating the Public Price field with our fair value calculation.  The user can choose to override this value at any time with a price of their own."}),"\n",(0,r.jsx)(i.p,{children:"Initiating clients can also uncheck the box to the left of Public Price to start a one-sided RFQ in which SpiderRock notifies responders of their direction and size, but not price."}),"\n",(0,r.jsx)(i.h3,{id:"rounded-px",children:"Rounded Px"}),"\n",(0,r.jsx)(i.p,{children:"This is a display only field to show what SpiderRock's default limit price would be when affected by other parameters. Rounded Px differs from Limit Px in that Rounded Px is rounded to 3 decimal places if Limit Px goes beyond 3 decimal places."}),"\n",(0,r.jsx)(i.h3,{id:"secondary-limit",children:"Secondary Limit"}),"\n",(0,r.jsxs)("ul",{children:[(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"None"})," - A secondary limit is NOT in place."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"Surf PrcOffset"})," - Secondary limit is set relative to the price offset surface."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"Surf VolOffset"})," - Secondary limit is set relative to the volatility offset surface."]})]}),"\n",(0,r.jsx)(i.h3,{id:"size-condition",children:"Size Condition"}),"\n",(0,r.jsxs)("ul",{children:[(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"AllOrNone"})," - When selected, a trade may only occur with a response that matches the initiator\u2019s full size."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"QtyOrMore"})," - When selected, a trade may occur with a response that has a size greater than the initiator\u2019s displayed size."]})]}),"\n",(0,r.jsx)(i.h3,{id:"taking-logic",children:"Taking Logic"}),"\n",(0,r.jsxs)("ul",{children:[(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"PostLimit"})," - Immediately post a public order at the limit price. Will improve or fade as limit price moves. Will be dynamically sized if the child order will outside the prevailing market size."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"PostWith"})," - Join existing markets if there is sufficient limit room to do so. Will not improve an existing market. Will fade when alone and will be dynamically sized if child order would outsize the prevailing market size."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"PostTurn"})," - Join or improve existing markets if there is sufficient limit room to do so. Will not improve own order unless joined with sufficient size. Will be dynamically sized if the child order would outsize the prevailing market size."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"PostFlash"})," - Same as PostLimit but flashes the order in the market for a 1 second and then is removed from the market. It will only flash if the child order is improving the market. It will flash again at a random time between 45 seconds."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"PostFlashW"})," - This is as PostFlash, where the order will flash in the market for 1 second but will post on the bid for the remaining time."]})]}),"\n",(0,r.jsx)(i.h3,{id:"time",children:"Time"}),"\n",(0,r.jsx)(i.p,{children:"Each Block Auction has a set time determined by the initiating client.  The initiating client can choose from a list of auction durations. This time selection acts as the ultimate duration of the auction and encourages participants to negotiate price levels accordingly.  All Block Auctions can be executed immediately at the Public Price which may result in the auction terminating before the Auction Time has elapsed.  The time remaining on each auction is displayed on the order cards, the auction cards, as well as on the order ticket itself."}),"\n",(0,r.jsxs)("ul",{children:[(0,r.jsx)("li",{children:(0,r.jsx)("b",{children:"15 Sec"})}),(0,r.jsx)("li",{children:(0,r.jsx)("b",{children:"30 Sec"})}),(0,r.jsx)("li",{children:(0,r.jsx)("b",{children:"60 Sec"})}),(0,r.jsx)("li",{children:(0,r.jsx)("b",{children:"2 Min"})}),(0,r.jsx)("li",{children:(0,r.jsx)("b",{children:"5 Min"})})]}),"\n",(0,r.jsx)(i.p,{children:'In the case of Spider Sweep order types, the Time field is defaulted to IOC ("Immediate or Cancel").'}),"\n",(0,r.jsx)(i.h3,{id:"uref",children:"uRef"}),"\n",(0,r.jsx)(i.p,{children:"This is the underlier reference price."}),"\n",(0,r.jsx)(i.h3,{id:"uref-bound",children:"uRef Bound"}),"\n",(0,r.jsxs)("ul",{children:[(0,r.jsx)("li",{children:(0,r.jsx)("b",{children:"None"})}),(0,r.jsx)("li",{children:(0,r.jsx)("b",{children:"50 bp"})}),(0,r.jsx)("li",{children:(0,r.jsx)("b",{children:"100 bp"})}),(0,r.jsx)("li",{children:(0,r.jsx)("b",{children:"150 bp"})}),(0,r.jsx)("li",{children:(0,r.jsx)("b",{children:"200 bp"})}),(0,r.jsx)("li",{children:(0,r.jsx)("b",{children:"250 bp"})}),(0,r.jsx)("li",{children:(0,r.jsx)("b",{children:"300 bp"})}),(0,r.jsx)("li",{children:(0,r.jsx)("b",{children:"400 bp"})}),(0,r.jsx)("li",{children:(0,r.jsx)("b",{children:"500 bp"})}),(0,r.jsx)("li",{children:(0,r.jsx)("b",{children:"600 bp"})})]})]})}function a(e={}){let{wrapper:i}={...(0,n.a)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},91503:function(e,i,t){t.d(i,{Z:function(){return d},a:function(){return l}});var s=t(75271);let r={},n=s.createContext(r);function l(e){let i=s.useContext(n);return s.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(n.Provider,{value:i},e.children)}}}]);