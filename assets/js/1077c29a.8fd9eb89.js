"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[93375],{13368:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>N,contentTitle:()=>s,default:()=>T,frontMatter:()=>a,metadata:()=>d,toc:()=>c});var n=r(74848),o=r(28453);const a={title:"SpdrStrategyOrderLeggerX"},s=void 0,d={id:"MessageSchemas/Schema/SRSE Products/SRTrade/SpdrStrategyOrderLeggerX/SpdrStrategyOrderLeggerX",title:"SpdrStrategyOrderLeggerX",description:"V8 Message Definition",source:"@site/docs/MessageSchemas/Schema/SRSE Products/SRTrade/SpdrStrategyOrderLeggerX/SpdrStrategyOrderLeggerX.md",sourceDirName:"MessageSchemas/Schema/SRSE Products/SRTrade/SpdrStrategyOrderLeggerX",slug:"/MessageSchemas/Schema/SRSE Products/SRTrade/SpdrStrategyOrderLeggerX/",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRTrade/SpdrStrategyOrderLeggerX/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"SpdrStrategyOrderLeggerX"},sidebar:"messageSchemasSidebar",previous:{title:"SpdrSetActiveSize",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRTrade/SpdrSetActiveSize/"},next:{title:"SpdrStrategyReportLegX",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRTrade/SpdrStrategyReportLegX/"}},N={},c=[];function i(e){const t={a:"a",code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"../../../Topics/strategy-legger/SpdrStrategyOrderLeggerX",children:"V8 Message Definition"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sql",children:"CREATE TABLE `SRTrade`.`MsgSRStrategyOrderLeggerX` (\n    `strategyNumber` BIGINT NOT NULL DEFAULT 0 COMMENT 'strategy order number',\n    `spdrSource` ENUM('None','SpdrTicket','SpdrSingle','SRSE','FIX','HedgeTool','TradeHedge','OpenHedge','AutoHedge','Orphan','RiskManager','OrderManager','ManagedOrder','RFQRespSrvr','Legger','SRSEDrop','FixDrop','TicketDrop','SysTest','RFRResponse','AllocOmni','AllocClient','CertGateway','MLegResponse','LeggerX','DropManager','AutoHedgeSrvr','AuctionStrategySrvr','AllocBlockFace','AllocBlockCust','IceChatGateway','EXS2SRC','MLinkResponse','AutoResponderVD','AutoResponderRC','AutoResponderSN','AutoResponderBX') NOT NULL DEFAULT 'None',\n    `accnt` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'SR trading account',\n    `clientFirm` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'SR client firm',\n    `strategyStatus` ENUM('None','Active','Hold','Closed') NOT NULL DEFAULT 'None',\n    `execBrkrCode` VARCHAR(16) NOT NULL DEFAULT '' COMMENT '(optional) override the default execBrkrCode for this order',\n    `externExDest` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'routing code for orders directed to an external order router (default = null); should match FixRoutingTable.destination (in SR accnt config)',\n    `externParams` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'external algo names/parameters (usually just an algo name)',\n    `strategy` VARCHAR(36) NOT NULL DEFAULT '' COMMENT 'client-supplied strategy string; visible on SpiderRock GUI tools and other order reports.',\n    `userName` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'name of the user entering the order',\n    `orderSize` INT NOT NULL DEFAULT 0 COMMENT 'strategy size (number of complete spreads)',\n    `leggerLimit` DOUBLE NOT NULL DEFAULT 0 COMMENT 'strategy limit',\n    `leggerLimitType` ENUM('None','Prc','PrcDe','PrcDeX') NOT NULL DEFAULT 'None' COMMENT 'strategy limit type',\n    `leggerAlgo` ENUM('None','LegCrossOnly','LegOutLoud') NOT NULL DEFAULT 'None',\n    `balanceHandling` ENUM('None','PostWith','PostTurn','PostImprove','PostLimit','MaxIntern','PostWthF','PostImprvR','PostFlash','PostFlashW','PostPeg','PostFlashI') NOT NULL DEFAULT 'None' COMMENT 'base parent order balance handling [make style algo]',\n    `legExposurePct` FLOAT NOT NULL DEFAULT 0 COMMENT 'percentage of legger order than can be exposed on a single leg without completing related legs',\n    `legCompletionSlippage` DOUBLE NOT NULL DEFAULT 0 COMMENT 'maximum leg price slippage to complete an open strategy order',\n    `marketSession` ENUM('None','PreMkt','RegMkt','PostMkt','PreRegMkt','RegPostMkt','AllDay') NOT NULL DEFAULT 'None',\n    `startDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT '[optional] (parent order start time)',\n    `orderDuration` INT NOT NULL DEFAULT 0 COMMENT '[optional] (number of seconds)',\n    `goodTillDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT '[optional] (default: 2099-01-01)',\n    `autoHedge` ENUM('None','Static','AutoMid','AutoCrx','AutoTrn','SpdrAuto','Spdr10S','Spdr30S','Spdr90S','Spdr5M','Spdr30M','SpdrDay','SmartFast','SmartNorm','FastCrx','FastDark','SlowDark','AlphaVwap1pct','AlphaVwap2pct','AlphaVwap5pct','AlphaVwap25pct','Custom','AwayAlgo') NOT NULL DEFAULT 'None',\n    `hedgeInstrument` ENUM('None','Default','FrontMonth','Stock','Future') NOT NULL DEFAULT 'None',\n    `hedgeSecKey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'autohedge instrument (can be a TickerKey (stock) or ExpiryKey (future)) [required for Stock and Future]',\n    `hedgeSecKey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'autohedge instrument (can be a TickerKey (stock) or ExpiryKey (future)) [required for Stock and Future]',\n    `hedgeSecKey_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'autohedge instrument (can be a TickerKey (stock) or ExpiryKey (future)) [required for Stock and Future]',\n    `hedgeSecKey_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'autohedge instrument (can be a TickerKey (stock) or ExpiryKey (future)) [required for Stock and Future]',\n    `hedgeSecKey_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'autohedge instrument (can be a TickerKey (stock) or ExpiryKey (future)) [required for Stock and Future]',\n    `hedgeSecKey_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'autohedge instrument (can be a TickerKey (stock) or ExpiryKey (future)) [required for Stock and Future]',\n    `hedgeBetaRatio` FLOAT NOT NULL DEFAULT 0 COMMENT 'portion of executed $money to auto-hedge (can be 1.0 / Beta for beta hedging) [-4.0 to +4.0]',\n    `hedgeScope` ENUM('None','Accnt','RiskGroup') NOT NULL DEFAULT 'None' COMMENT 'hedge group scope [RiskGroup or Accnt]',\n    `hedgeSession` ENUM('None','PreMkt','RegMkt','PostMkt','PreRegMkt','RegPostMkt','AllDay') NOT NULL DEFAULT 'None',\n    `externHedgeExDest` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'external broker exDest (only used if orderHandling=Extern)\t\t\t# Should match FixRoutingTable.destination type',\n    `externHedgeParams` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'external algo names/parameters (usually just an algo name)',\n    `userData1` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'client supplied data field; passes through to parent and child executions and reports as well as FIX drops',\n    `userData2` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'client supplied data field; passes through to parent and child executions and reports as well as FIX drops',\n    `childData` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'client supplied data field; passes through to down stream child orders',\n    `timestamp` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000',\n    `LegsList` JSON NOT NULL DEFAULT JSON_OBJECT() CHECK(JSON_VALID(LegsList)),\n    PRIMARY KEY USING HASH (`strategyNumber`)\n) ENGINE=SRSE DEFAULT CHARSET=LATIN1 COMMENT='';\n\n"})})]})}function T(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(i,{...e})}):i(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>s,x:()=>d});var n=r(96540);const o={},a=n.createContext(o);function s(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);