"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([["94772"],{126:function(e,r,d){d.r(r),d.d(r,{default:()=>h,frontMatter:()=>s,metadata:()=>n,assets:()=>c,toc:()=>x,contentTitle:()=>l});var n=JSON.parse('{"id":"MessageSchemas/Schema/SRSE Products/SRTrade/SRRiskExecution/SRRiskExecution","title":"SRRiskExecution","description":"V8 Message Definiton","source":"@site/docs/MessageSchemas/Schema/SRSE Products/SRTrade/SRRiskExecution/SRRiskExecution.md","sourceDirName":"MessageSchemas/Schema/SRSE Products/SRTrade/SRRiskExecution","slug":"/MessageSchemas/Schema/SRSE Products/SRTrade/SRRiskExecution/","permalink":"/docs/next/MessageSchemas/Schema/SRSE Products/SRTrade/SRRiskExecution/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"messageSchemasSidebar","previous":{"title":"SRReleaseWaitTrigger","permalink":"/docs/next/MessageSchemas/Schema/SRSE Products/SRTrade/SRReleaseWaitTrigger/"},"next":{"title":"SRRiskGroupCancel","permalink":"/docs/next/MessageSchemas/Schema/SRSE Products/SRTrade/SRRiskGroupCancel/"}}'),i=d("52676"),t=d("91503");let s={},l=void 0,c={},x=[{value:"METADATA",id:"metadata",level:3},{value:"Table Definition",id:"table-definition",level:3},{value:"PRIMARY KEY DEFINITION (Unique)",id:"primary-key-definition-unique",level:3},{value:"SECONDARY INDEX (AccntIndex) (Not Unique)",id:"secondary-index-accntindex-not-unique",level:3},{value:"SECONDARY INDEX (ClientFirmIndex) (Not Unique)",id:"secondary-index-clientfirmindex-not-unique",level:3},{value:"CREATE TABLE EXAMPLE QUERY",id:"create-table-example-query",level:3},{value:"SELECT TABLE EXAMPLE QUERY",id:"select-table-example-query",level:3},{value:"Doc Columns Query",id:"doc-columns-query",level:3}];function a(e){let r={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.p,{children:(0,i.jsx)(r.a,{href:"../../../Topics/execution-engine/SpdrRiskExecution",children:"V8 Message Definiton"})}),"\n",(0,i.jsx)(r.p,{children:"SpdrRiskExecution records are published every time a SpdrParentExecution record is published"}),"\n",(0,i.jsx)(r.h3,{id:"metadata",children:"METADATA"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Attribute"}),(0,i.jsx)(r.th,{children:"Value"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"Topic"}),(0,i.jsx)(r.td,{children:"2270-execution-engine"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"MLink Token"}),(0,i.jsx)(r.td,{children:"ClientTrading"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"Product"}),(0,i.jsx)(r.td,{children:"SRTrade"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"accessType"}),(0,i.jsx)(r.td,{children:"SELECT"})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"table-definition",children:"Table Definition"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Field"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Key"}),(0,i.jsx)(r.th,{children:"Default Value"}),(0,i.jsx)(r.th,{children:"Comment"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillNumber"}),(0,i.jsx)(r.td,{children:"BIGINT"}),(0,i.jsx)(r.td,{children:"PRI"}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"SpiderRock execution number globally unique over trailing 10 days"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"sysRealm"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/SysRealm",children:"enum - SysRealm"})}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"'None'"}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"sysEnvironment"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/SysEnvironment",children:"enum - SysEnvironment"})}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"'None'"}),(0,i.jsx)(r.td,{children:"original source sys environment Stable Current etc"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"runStatus"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/RunStatus",children:"enum - RunStatus"})}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"'None'"}),(0,i.jsx)(r.td,{children:"original source run status ProdBeta"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"version"}),(0,i.jsx)(r.td,{children:"TINYINT UNSIGNED"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"record version numberstarts at zero and goes up every time an execution record is republished eg bust 1m marks 10m marks etc"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"execStatus"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/ExecStatus",children:"enum - ExecStatus"})}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"'None'"}),(0,i.jsx)(r.td,{children:"SpiderRock execution status FillBustCorrectRejectSysRej"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"execShape"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/ExecShape",children:"enum - ExecShape"})}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"'None'"}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"packageId"}),(0,i.jsx)(r.td,{children:"BIGINT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"SR package Id"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"parentNumber"}),(0,i.jsx)(r.td,{children:"CHAR(19)"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"'0000-0000-0000-0000'"}),(0,i.jsx)(r.td,{children:"SR parent number"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"parentVersion"}),(0,i.jsx)(r.td,{children:"SMALLINT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"SPDR order instance number 1  original order 2  1st cancelreplace etc"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"baseParentNumber"}),(0,i.jsx)(r.td,{children:"CHAR(19)"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"'0000-0000-0000-0000'"}),(0,i.jsx)(r.td,{children:"SPDR order number initial number in cancelreplace sequence also source parent for dynamically generated orderseg autohedges"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"clOrdId"}),(0,i.jsx)(r.td,{children:"CHAR(19)"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"'0000-0000-0000-0000'"}),(0,i.jsx)(r.td,{children:"SR child order clOrdID resulting in fill"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"riskGroupId"}),(0,i.jsx)(r.td,{children:"CHAR(19)"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"'0000-0000-0000-0000'"}),(0,i.jsx)(r.td,{children:"riskGroupId parent order group ID for this execution report"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"parentShape"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/SpdrOrderShape",children:"enum - SpdrOrderShape"})}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"'None'"}),(0,i.jsx)(r.td,{children:"shape of originating parent order"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"secKey_at"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"'None'"}),(0,i.jsx)(r.td,{children:"execution security key"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"secKey_ts"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"'None'"}),(0,i.jsx)(r.td,{children:"execution security key"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"secKey_tk"}),(0,i.jsx)(r.td,{children:"VARCHAR(12)"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"''"}),(0,i.jsx)(r.td,{children:"execution security key"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"secKey_yr"}),(0,i.jsx)(r.td,{children:"SMALLINT UNSIGNED"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"execution security key"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"secKey_mn"}),(0,i.jsx)(r.td,{children:"TINYINT UNSIGNED"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"execution security key"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"secKey_dy"}),(0,i.jsx)(r.td,{children:"TINYINT UNSIGNED"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"execution security key"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"secKey_xx"}),(0,i.jsx)(r.td,{children:"DOUBLE"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"execution security key"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"secKey_cp"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/CallPut",children:"enum - CallPut"})}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"'Call'"}),(0,i.jsx)(r.td,{children:"execution security key"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"secType"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/SpdrKeyType",children:"enum - SpdrKeyType"})}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"'None'"}),(0,i.jsx)(r.td,{children:"execution security type Stock Future Option"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"ticker_at"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"'None'"}),(0,i.jsx)(r.td,{children:"base stock key used for symbol risk aggregation"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"ticker_ts"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"'None'"}),(0,i.jsx)(r.td,{children:"base stock key used for symbol risk aggregation"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"ticker_tk"}),(0,i.jsx)(r.td,{children:"VARCHAR(12)"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"''"}),(0,i.jsx)(r.td,{children:"base stock key used for symbol risk aggregation"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"accnt"}),(0,i.jsx)(r.td,{children:"VARCHAR(16)"}),(0,i.jsx)(r.td,{children:"SEC"}),(0,i.jsx)(r.td,{children:"''"}),(0,i.jsx)(r.td,{children:"SpiderRock trading accnt broker pkey"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"clientFirm"}),(0,i.jsx)(r.td,{children:"VARCHAR(16)"}),(0,i.jsx)(r.td,{children:"SEC"}),(0,i.jsx)(r.td,{children:"''"}),(0,i.jsx)(r.td,{children:"SR client firm"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"spdrSource"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/SpdrSource",children:"enum - SpdrSource"})}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"'None'"}),(0,i.jsx)(r.td,{children:"SpiderRock parent order source code broker pkey"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"groupingCode"}),(0,i.jsx)(r.td,{children:"CHAR(19)"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"'0000-0000-0000-0000'"}),(0,i.jsx)(r.td,{children:"SpiderRock parent broker number broker pkey"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"engineName"}),(0,i.jsx)(r.td,{children:"VARCHAR(32)"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"''"}),(0,i.jsx)(r.td,{children:"SpiderRock execution engine that handled the parent order"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"execRole"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/ExecRole",children:"enum - ExecRole"})}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"'None'"}),(0,i.jsx)(r.td,{children:"SpiderRock relationship to this execution record"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"childOrderHandling"}),(0,i.jsx)(r.td,{children:"VARCHAR(24)"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"''"}),(0,i.jsx)(r.td,{children:"child order handling string from the algo that generated the child order responsible for this fill"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"childAlgoHandler"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/ChildHandler",children:"enum - ChildHandler"})}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"'None'"}),(0,i.jsx)(r.td,{children:"algo handler for this child order"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"childSSaleFlag"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum - ShortSaleFlag"})}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"'None'"}),(0,i.jsx)(r.td,{children:"short sale flag"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"userName"}),(0,i.jsx)(r.td,{children:"VARCHAR(24)"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"''"}),(0,i.jsx)(r.td,{children:"user name associated with the parent order"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"orderSide"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum - BuySell"})}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"'None'"}),(0,i.jsx)(r.td,{children:"order side"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"spdrOrderStatus"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/SpdrOrderStatus",children:"enum - SpdrOrderStatus"})}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"'PendNew'"}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"spdrCloseReason"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/SpdrCloseReason",children:"enum - SpdrCloseReason"})}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"'None'"}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"cumFillQuantity"}),(0,i.jsx)(r.td,{children:"INT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"cumulative fills this parent number only"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"avgFillPrice"}),(0,i.jsx)(r.td,{children:"DOUBLE"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"cumLegFillQuantity"}),(0,i.jsx)(r.td,{children:"INT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"cumulative fills spread only"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"avgLegFillPrice"}),(0,i.jsx)(r.td,{children:"DOUBLE"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"leavesQty"}),(0,i.jsx)(r.td,{children:"INT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"priceType"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/PriceType",children:"enum - PriceType"})}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"'None'"}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"firmType"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/FirmType",children:"enum - FirmType"})}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"'None'"}),(0,i.jsx)(r.td,{children:"child order firm type Customer ProCust Firm MM etc"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"priAggGroup"}),(0,i.jsx)(r.td,{children:"VARCHAR(16)"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"''"}),(0,i.jsx)(r.td,{children:"primary aggregation group"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"secAggGroup"}),(0,i.jsx)(r.td,{children:"VARCHAR(16)"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"''"}),(0,i.jsx)(r.td,{children:"secondary aggregation group"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillTransactDttm"}),(0,i.jsx)(r.td,{children:"DATETIME(6)"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"'1900-01-01 00:00:00.000000'"}),(0,i.jsx)(r.td,{children:"transaction datetime as reported by exchange or down stream broker"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillDttm"}),(0,i.jsx)(r.td,{children:"DATETIME(6)"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"'1900-01-01 00:00:00.000000'"}),(0,i.jsx)(r.td,{children:"Datetime of fill arrival SRDateTime"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillExch"}),(0,i.jsx)(r.td,{children:"VARCHAR(12)"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"''"}),(0,i.jsx)(r.td,{children:"ExDest code from child order execution report"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillExecId"}),(0,i.jsx)(r.td,{children:"TINYTEXT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"''"}),(0,i.jsx)(r.td,{children:"street side execution Id"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillExecRefId"}),(0,i.jsx)(r.td,{children:"TINYTEXT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"''"}),(0,i.jsx)(r.td,{children:"street side execution ref Id only used when busting an execution"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillLegRefId"}),(0,i.jsx)(r.td,{children:"BIGINT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"legRefId for multileg fills"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillLegRatio"}),(0,i.jsx)(r.td,{children:"INT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"legRatio if spread order"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillExchFee"}),(0,i.jsx)(r.td,{children:"FLOAT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"SpiderRock estimate of the exchange fee based on liquidity tags best effort"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillMarket"}),(0,i.jsx)(r.td,{children:"VARCHAR(8)"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"''"}),(0,i.jsx)(r.td,{children:"usually from execReportlastMkt as reported by child order venue"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillPrice"}),(0,i.jsx)(r.td,{children:"DOUBLE"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"fill price"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillQuantity"}),(0,i.jsx)(r.td,{children:"INT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"fill quantity"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillBid"}),(0,i.jsx)(r.td,{children:"DOUBLE"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"market bid  fill arrival"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillAsk"}),(0,i.jsx)(r.td,{children:"DOUBLE"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"market ask  fill arrival"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillMark"}),(0,i.jsx)(r.td,{children:"DOUBLE"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"midmarket or SR surface price if option  fill arrival"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillUBid"}),(0,i.jsx)(r.td,{children:"DOUBLE"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"underlier market bid  fill arrival"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillUAsk"}),(0,i.jsx)(r.td,{children:"DOUBLE"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"underlier market bid  fill arrival"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillVol"}),(0,i.jsx)(r.td,{children:"FLOAT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"fill volatility  fillLimitRefUPrc"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillVe"}),(0,i.jsx)(r.td,{children:"FLOAT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"fill vega"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillGa"}),(0,i.jsx)(r.td,{children:"FLOAT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"fill gamma"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillDe"}),(0,i.jsx)(r.td,{children:"FLOAT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"fill delta"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillTh"}),(0,i.jsx)(r.td,{children:"FLOAT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"fill theta"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillBeta"}),(0,i.jsx)(r.td,{children:"FLOAT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"SpiderRock estimate of beta to SPX"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"riskVega"}),(0,i.jsx)(r.td,{children:"FLOAT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"risk vega"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"riskWtVega"}),(0,i.jsx)(r.td,{children:"FLOAT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"risk gamma"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"riskNValue"}),(0,i.jsx)(r.td,{children:"FLOAT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"risk delta"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"riskDelta"}),(0,i.jsx)(r.td,{children:"FLOAT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"risk delta"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"riskDDelta"}),(0,i.jsx)(r.td,{children:"FLOAT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"risk ddelta"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"riskRm1"}),(0,i.jsx)(r.td,{children:"FLOAT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"user defined from parent order used to manage order groups"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"riskRm2"}),(0,i.jsx)(r.td,{children:"FLOAT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"user defined from parent order used to manage order groups"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"riskRm3"}),(0,i.jsx)(r.td,{children:"FLOAT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"user defined from parent order used to manage order groups"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"riskRm4"}),(0,i.jsx)(r.td,{children:"FLOAT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"user defined from parent order used to manage order groups"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"riskRm5"}),(0,i.jsx)(r.td,{children:"FLOAT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"user defined from parent order used to manage order groups"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"riskRm6"}),(0,i.jsx)(r.td,{children:"FLOAT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"user defined from parent order used to manage order groups"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"riskRm7"}),(0,i.jsx)(r.td,{children:"FLOAT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"user defined from parent order used to manage order groups"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"marginUDnVDn"}),(0,i.jsx)(r.td,{children:"FLOAT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"underlier down vol down"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"marginUDnVUp"}),(0,i.jsx)(r.td,{children:"FLOAT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"underlier down vol up"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"marginUUpVDn"}),(0,i.jsx)(r.td,{children:"FLOAT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"underlier up vol down"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"marginUUpVUp"}),(0,i.jsx)(r.td,{children:"FLOAT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"underlier up vol up"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"riskU50Dn"}),(0,i.jsx)(r.td,{children:"FLOAT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"underlier dn 50 shock slide"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"riskU50Up"}),(0,i.jsx)(r.td,{children:"FLOAT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"underlier up 50 shock slide"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"years"}),(0,i.jsx)(r.td,{children:"FLOAT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"years to expiration"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"underliersPerCn"}),(0,i.jsx)(r.td,{children:"INT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"option delivery underliers per contract"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"underlierType"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/UnderlierType",children:"enum - UnderlierType"})}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"'None'"}),(0,i.jsx)(r.td,{children:"type of underlier affects greek calculations"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"tickValue"}),(0,i.jsx)(r.td,{children:"FLOAT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"NLV value of a single tick change in display premium	pointValue  tickValue  tickSize"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"pointValue"}),(0,i.jsx)(r.td,{children:"FLOAT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"NLV value of a single point change in display premium pointValue  tickValue  tickSize"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"pointCurrency"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/Currency",children:"enum - Currency"})}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"'None'"}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"uPrcRatio"}),(0,i.jsx)(r.td,{children:"FLOAT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"UPrcRatio SymbolRatio from product definition"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"minTickSize"}),(0,i.jsx)(r.td,{children:"FLOAT"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"0"}),(0,i.jsx)(r.td,{children:"minimum market price variation dnTickSize if on a boundary"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"priceFormat"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/PriceFormat",children:"enum - PriceFormat"})}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"'None'"}),(0,i.jsx)(r.td,{children:"SpiderRock price display format code"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"uPriceFormat"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/PriceFormat",children:"enum - PriceFormat"})}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"'None'"}),(0,i.jsx)(r.td,{children:"SpiderRock underlier price display format code"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"timestamp"}),(0,i.jsx)(r.td,{children:"DATETIME(6)"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"'1900-01-01 00:00:00.000000'"}),(0,i.jsx)(r.td,{children:"timestamp of this record not necessarily the timestamp of the fill itself"})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"primary-key-definition-unique",children:"PRIMARY KEY DEFINITION (Unique)"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Field"}),(0,i.jsx)(r.th,{children:"Sequence"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillNumber"}),(0,i.jsx)(r.td,{children:"1"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"secondary-index-accntindex-not-unique",children:"SECONDARY INDEX (AccntIndex) (Not Unique)"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Field"}),(0,i.jsx)(r.th,{children:"Sequence"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"accnt"}),(0,i.jsx)(r.td,{children:"1"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"secondary-index-clientfirmindex-not-unique",children:"SECONDARY INDEX (ClientFirmIndex) (Not Unique)"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Field"}),(0,i.jsx)(r.th,{children:"Sequence"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"clientFirm"}),(0,i.jsx)(r.td,{children:"1"})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"create-table-example-query",children:"CREATE TABLE EXAMPLE QUERY"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-sql",children:"CREATE TABLE `SRTrade`.`MsgSRRiskExecution` (\n    `fillNumber` BIGINT NOT NULL DEFAULT 0 COMMENT 'SpiderRock execution number (globally unique over trailing 10 days)',\n    `sysRealm` ENUM('None','SysTest','NMS','CME','FR2','LD4','DR') NOT NULL DEFAULT 'None',\n    `sysEnvironment` ENUM('None','Neptune','Pluto','V7_Stable','V7_Latest','Saturn','Venus','Mars','SysTest','V7_Current') NOT NULL DEFAULT 'None' COMMENT 'original (source) sys environment [Stable, Current, etc]',\n    `runStatus` ENUM('None','Prod','Beta','UAT','SysTest') NOT NULL DEFAULT 'None' COMMENT 'original (source) run status [Prod,Beta]',\n    `version` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'record version number;starts at zero and goes up every time an execution record is re-published (eg, bust, +1m marks, +10m marks, etc)',\n    `execStatus` ENUM('None','Fill','Bust','Correct','Reject','SysRej') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock execution status (Fill,Bust,Correct,Reject,SysRej)',\n    `execShape` ENUM('None','Single','MLegTop','MLegLeg','SpreadTop','SpreadLeg','SingleLeg') NOT NULL DEFAULT 'None',\n    `packageId` BIGINT NOT NULL DEFAULT 0 COMMENT 'SR package Id',\n    `parentNumber` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'SR parent number',\n    `parentVersion` SMALLINT NOT NULL DEFAULT 0 COMMENT 'SPDR order instance number (1 = original order; 2 = 1st cancel/replace, etc)',\n    `baseParentNumber` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'SPDR order number (initial number in cancel/replace sequence) (also, source parent for dynamically generated orders;eg auto-hedges)',\n    `clOrdId` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'SR child order clOrdID resulting in fill',\n    `riskGroupId` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'riskGroupId (parent order group ID) for this execution report',\n    `parentShape` ENUM('None','Single','Cross','MLeg','MLegCross') NOT NULL DEFAULT 'None' COMMENT 'shape of originating parent order',\n    `secKey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'execution security key',\n    `secKey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'execution security key',\n    `secKey_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'execution security key',\n    `secKey_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'execution security key',\n    `secKey_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'execution security key',\n    `secKey_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'execution security key',\n    `secKey_xx` DOUBLE NOT NULL DEFAULT 0 COMMENT 'execution security key',\n    `secKey_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call' COMMENT 'execution security key',\n    `secType` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None' COMMENT 'execution security type [Stock, Future, Option]',\n    `ticker_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'base stock key (used for symbol risk aggregation)',\n    `ticker_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'base stock key (used for symbol risk aggregation)',\n    `ticker_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'base stock key (used for symbol risk aggregation)',\n    `accnt` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'SpiderRock trading accnt [broker pkey]',\n    `clientFirm` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'SR client firm',\n    `spdrSource` ENUM('None','SpdrTicket','SpdrSingle','SRSE','FIX','HedgeTool','TradeHedge','OpenHedge','AutoHedge','Orphan','RiskManager','OrderManager','ManagedOrder','RFQRespSrvr','Legger','SRSEDrop','FixDrop','TicketDrop','SysTest','RFRResponse','AllocOmni','AllocClient','CertGateway','MLegResponse','LeggerX','DropManager','AutoHedgeSrvr','AuctionStrategySrvr','AllocBlockFace','AllocBlockCust','IceChatGateway','EXS2SRC','MLinkResponse','AutoResponderVD','AutoResponderRC','AutoResponderSN','AutoResponderBX','MLink','SymChatGateway') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock parent order source code [broker pkey]',\n    `groupingCode` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'SpiderRock parent broker number [broker pkey]',\n    `engineName` VARCHAR(32) NOT NULL DEFAULT '' COMMENT 'SpiderRock execution engine that handled the parent order',\n    `execRole` ENUM('None','DirectAccnt','AwayGiveup','RiskDrop','AwayDrop','PullDrop','ReconMiss') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock relationship to this execution record',\n    `childOrderHandling` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'child order handling string from the algo that generated the child order responsible for this fill',\n    `childAlgoHandler` ENUM('None','ActiveTaker','ActiveMaker','Auction','Responder','Matrix','Cross','Face','Extern','MLegHandler','AutoHedge','Sprayer','Legger','Restart','Orphan','UDefSpread','RFQRequest','MLegResponder','LeggerX','ExchPing','BrkrReview','AuctionResponder','TakeSweep','TestChild') NOT NULL DEFAULT 'None' COMMENT 'algo handler for this child order',\n    `childSSaleFlag` ENUM('None','Long','Short','Exempt','Auto','Open','Close','Cover','NA') NOT NULL DEFAULT 'None' COMMENT 'short sale flag',\n    `userName` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'user name associated with the parent order',\n    `orderSide` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'None' COMMENT 'order side',\n    `spdrOrderStatus` ENUM('PendNew','New','PendClose','Closed','Rejected','SendReject') NOT NULL DEFAULT 'PendNew',\n    `spdrCloseReason` ENUM('None','Cancelled','Filled','Replaced','Expired','Limit','System','LegReject','DoneForDay','IOCExpire','UserCxl','NoProgress','TooManyRej','ReplReject','AlgoClose','Restart','InvldParentLimit','FilledRepl','ForceClose','DmaReject','DmaExpire','DmaBrkrCxl','ReviewReject','MarketState','AlgoReject','ReviewTimeout','ChildReject','ChildCancel','ReviewClose','UPrcRange','LegBrkrClosed','ExchRisk','CrossFailed') NOT NULL DEFAULT 'None',\n    `cumFillQuantity` INT NOT NULL DEFAULT 0 COMMENT 'cumulative fills (this parent number only)',\n    `avgFillPrice` DOUBLE NOT NULL DEFAULT 0,\n    `cumLegFillQuantity` INT NOT NULL DEFAULT 0 COMMENT 'cumulative fills (spread only)',\n    `avgLegFillPrice` DOUBLE NOT NULL DEFAULT 0,\n    `leavesQty` INT NOT NULL DEFAULT 0,\n    `priceType` ENUM('None','Explicit','Offset','Zero','DeltaAdjClose','PctOnClose') NOT NULL DEFAULT 'None',\n    `firmType` ENUM('None','Customer','Firm','MarketMaker','ProCustomer','BrokerDealer','AwayMM','FirmJBO','BrkrDlrCust') NOT NULL DEFAULT 'None' COMMENT 'child order firm type [Customer, ProCust, Firm, MM, etc]',\n    `priAggGroup` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'primary aggregation group',\n    `secAggGroup` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'secondary aggregation group',\n    `fillTransactDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'transaction date/time as reported by exchange or down stream broker',\n    `fillDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'Date/time of fill arrival (SRDateTime)',\n    `fillExch` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'ExDest code from child order execution report',\n    `fillExecId` TINYTEXT NOT NULL DEFAULT '' COMMENT 'street side execution Id',\n    `fillExecRefId` TINYTEXT NOT NULL DEFAULT '' COMMENT 'street side execution ref Id (only used when busting an execution)',\n    `fillLegRefId` BIGINT NOT NULL DEFAULT 0 COMMENT 'legRefId for multileg fills',\n    `fillLegRatio` INT NOT NULL DEFAULT 0 COMMENT 'legRatio (if spread order)',\n    `fillExchFee` FLOAT NOT NULL DEFAULT 0 COMMENT 'SpiderRock estimate of the exchange fee based on liquidity tags (best effort)',\n    `fillMarket` VARCHAR(8) NOT NULL DEFAULT '' COMMENT 'usually from execReport.lastMkt as reported by child order venue',\n    `fillPrice` DOUBLE NOT NULL DEFAULT 0 COMMENT 'fill price',\n    `fillQuantity` INT NOT NULL DEFAULT 0 COMMENT 'fill quantity',\n    `fillBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'market bid @ fill arrival',\n    `fillAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'market ask @ fill arrival',\n    `fillMark` DOUBLE NOT NULL DEFAULT 0 COMMENT 'mid-market (or SR surface price if option) @ fill arrival',\n    `fillUBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier market bid @ fill arrival',\n    `fillUAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier market bid @ fill arrival',\n    `fillVol` FLOAT NOT NULL DEFAULT 0 COMMENT 'fill volatility @ fillLimitRefUPrc',\n    `fillVe` FLOAT NOT NULL DEFAULT 0 COMMENT 'fill vega',\n    `fillGa` FLOAT NOT NULL DEFAULT 0 COMMENT 'fill gamma',\n    `fillDe` FLOAT NOT NULL DEFAULT 0 COMMENT 'fill delta',\n    `fillTh` FLOAT NOT NULL DEFAULT 0 COMMENT 'fill theta',\n    `fillBeta` FLOAT NOT NULL DEFAULT 0 COMMENT 'SpiderRock estimate of beta to SPX',\n    `riskVega` FLOAT NOT NULL DEFAULT 0 COMMENT 'risk vega',\n    `riskWtVega` FLOAT NOT NULL DEFAULT 0 COMMENT 'risk gamma',\n    `riskNValue` FLOAT NOT NULL DEFAULT 0 COMMENT 'risk delta',\n    `riskDelta` FLOAT NOT NULL DEFAULT 0 COMMENT 'risk delta',\n    `riskDDelta` FLOAT NOT NULL DEFAULT 0 COMMENT 'risk ddelta',\n    `riskRm1` FLOAT NOT NULL DEFAULT 0 COMMENT 'user defined (from parent order) [used to manage order groups',\n    `riskRm2` FLOAT NOT NULL DEFAULT 0 COMMENT 'user defined (from parent order) [used to manage order groups]',\n    `riskRm3` FLOAT NOT NULL DEFAULT 0 COMMENT 'user defined (from parent order) [used to manage order groups]',\n    `riskRm4` FLOAT NOT NULL DEFAULT 0 COMMENT 'user defined (from parent order) [used to manage order groups]',\n    `riskRm5` FLOAT NOT NULL DEFAULT 0 COMMENT 'user defined (from parent order) [used to manage order groups]',\n    `riskRm6` FLOAT NOT NULL DEFAULT 0 COMMENT 'user defined (from parent order) [used to manage order groups]',\n    `riskRm7` FLOAT NOT NULL DEFAULT 0 COMMENT 'user defined (from parent order) [used to manage order groups]',\n    `marginUDnVDn` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier down, vol down',\n    `marginUDnVUp` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier down, vol up',\n    `marginUUpVDn` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier up, vol down',\n    `marginUUpVUp` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier up, vol up',\n    `riskU50Dn` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier dn 50% shock slide',\n    `riskU50Up` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier up 50% shock slide',\n    `years` FLOAT NOT NULL DEFAULT 0 COMMENT 'years to expiration',\n    `underliersPerCn` INT NOT NULL DEFAULT 0 COMMENT 'option delivery underliers per contract',\n    `underlierType` ENUM('None','Equity','Other','FX') NOT NULL DEFAULT 'None' COMMENT 'type of underlier (affects $greek calculations)',\n    `tickValue` FLOAT NOT NULL DEFAULT 0 COMMENT '$NLV value of a single tick change in display premium	(pointValue = tickValue / tickSize)',\n    `pointValue` FLOAT NOT NULL DEFAULT 0 COMMENT '$NLV value of a single point change in display premium (pointValue = tickValue / tickSize)',\n    `pointCurrency` ENUM('None','AUD','BRL','CAD','CHF','CNH','CNY','EUR','GBP','JPY','KRW','MXN','MYR','NOK','NZD','SEK','TRY','USD','USDCents','CZK','ZAR','HUF','USX','GBX','DKK','GEL') NOT NULL DEFAULT 'None',\n    `uPrcRatio` FLOAT NOT NULL DEFAULT 0 COMMENT 'UPrcRatio (SymbolRatio) from product definition',\n    `minTickSize` FLOAT NOT NULL DEFAULT 0 COMMENT 'minimum market price variation (dnTickSize if on a boundary)',\n    `priceFormat` ENUM('None','N0','N1','N2','N3','N4','N5','N6','N7','F4','F8','Q8','F16','F32','H32','Q32','F64','H64','FullPenny','PartPenny','PartNickle','EQT','V1','V2','V3','V4','V5','V6','V7','V8','V9','V10','V11','V12','V13','V14','V15','A0','A1','A2','A3','A4','A5','A6','A7','E32','EU2A','EU2B','EU2C','EU2D','EU2E','EU2F','EU3A','EU3B','EU3C','EU3D','EU3E','EU3F','EU3G','EU3H','EU3I','EU3J','EU4A','EU4B','EU4C','EU5A','EU5B','V16') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock price display format code',\n    `uPriceFormat` ENUM('None','N0','N1','N2','N3','N4','N5','N6','N7','F4','F8','Q8','F16','F32','H32','Q32','F64','H64','FullPenny','PartPenny','PartNickle','EQT','V1','V2','V3','V4','V5','V6','V7','V8','V9','V10','V11','V12','V13','V14','V15','A0','A1','A2','A3','A4','A5','A6','A7','E32','EU2A','EU2B','EU2C','EU2D','EU2E','EU2F','EU3A','EU3B','EU3C','EU3D','EU3E','EU3F','EU3G','EU3H','EU3I','EU3J','EU4A','EU4B','EU4C','EU5A','EU5B','V16') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock underlier price display format code',\n    `timestamp` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'timestamp of this record [not necessarily the timestamp of the fill itself]',\n    CONSTRAINT nonnegative_parentNumber CHECK(ASCII(parentNumber) < 56),\n    CONSTRAINT nonnegative_baseParentNumber CHECK(ASCII(baseParentNumber) < 56),\n    CONSTRAINT nonnegative_clOrdId CHECK(ASCII(clOrdId) < 56),\n    CONSTRAINT nonnegative_riskGroupId CHECK(ASCII(riskGroupId) < 56),\n    CONSTRAINT nonnegative_groupingCode CHECK(ASCII(groupingCode) < 56),\n    PRIMARY KEY USING HASH (`fillNumber`),\n    KEY `AccntIndex` (`accnt`) USING HASH,\n    KEY `ClientFirmIndex` (`clientFirm`) USING HASH\n) ENGINE=SRSE DEFAULT CHARSET=LATIN1 COMMENT='SpdrRiskExecution records are published every time a SpdrParentExecution record is published';\n\n"})}),"\n",(0,i.jsx)(r.h3,{id:"select-table-example-query",children:"SELECT TABLE EXAMPLE QUERY"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-sql",children:"SELECT\n    `fillNumber`,\n    `sysRealm`,\n    `sysEnvironment`,\n    `runStatus`,\n    `version`,\n    `execStatus`,\n    `execShape`,\n    `packageId`,\n    `parentNumber`,\n    `parentVersion`,\n    `baseParentNumber`,\n    `clOrdId`,\n    `riskGroupId`,\n    `parentShape`,\n    `secKey_at`,\n    `secKey_ts`,\n    `secKey_tk`,\n    `secKey_yr`,\n    `secKey_mn`,\n    `secKey_dy`,\n    `secKey_xx`,\n    `secKey_cp`,\n    `secType`,\n    `ticker_at`,\n    `ticker_ts`,\n    `ticker_tk`,\n    `accnt`,\n    `clientFirm`,\n    `spdrSource`,\n    `groupingCode`,\n    `engineName`,\n    `execRole`,\n    `childOrderHandling`,\n    `childAlgoHandler`,\n    `childSSaleFlag`,\n    `userName`,\n    `orderSide`,\n    `spdrOrderStatus`,\n    `spdrCloseReason`,\n    `cumFillQuantity`,\n    `avgFillPrice`,\n    `cumLegFillQuantity`,\n    `avgLegFillPrice`,\n    `leavesQty`,\n    `priceType`,\n    `firmType`,\n    `priAggGroup`,\n    `secAggGroup`,\n    `fillTransactDttm`,\n    `fillDttm`,\n    `fillExch`,\n    `fillExecId`,\n    `fillExecRefId`,\n    `fillLegRefId`,\n    `fillLegRatio`,\n    `fillExchFee`,\n    `fillMarket`,\n    `fillPrice`,\n    `fillQuantity`,\n    `fillBid`,\n    `fillAsk`,\n    `fillMark`,\n    `fillUBid`,\n    `fillUAsk`,\n    `fillVol`,\n    `fillVe`,\n    `fillGa`,\n    `fillDe`,\n    `fillTh`,\n    `fillBeta`,\n    `riskVega`,\n    `riskWtVega`,\n    `riskNValue`,\n    `riskDelta`,\n    `riskDDelta`,\n    `riskRm1`,\n    `riskRm2`,\n    `riskRm3`,\n    `riskRm4`,\n    `riskRm5`,\n    `riskRm6`,\n    `riskRm7`,\n    `marginUDnVDn`,\n    `marginUDnVUp`,\n    `marginUUpVDn`,\n    `marginUUpVUp`,\n    `riskU50Dn`,\n    `riskU50Up`,\n    `years`,\n    `underliersPerCn`,\n    `underlierType`,\n    `tickValue`,\n    `pointValue`,\n    `pointCurrency`,\n    `uPrcRatio`,\n    `minTickSize`,\n    `priceFormat`,\n    `uPriceFormat`,\n    `timestamp`\nFROM `SRTrade`.`MsgSRRiskExecution`\nWHERE \n    /* Replace with a BIGINT */ \n    `fillNumber` = 1234567890;\n"})}),"\n",(0,i.jsx)(r.h3,{id:"doc-columns-query",children:"Doc Columns Query"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-sql",children:"SELECT * FROM SRTrade.doccolumns WHERE TABLE_NAME='SRRiskExecution' ORDER BY ordinal_position ASC;\n"})})]})}function h(e={}){let{wrapper:r}={...(0,t.a)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},91503:function(e,r,d){d.d(r,{Z:function(){return l},a:function(){return s}});var n=d(75271);let i={},t=n.createContext(i);function s(e){let r=n.useContext(t);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),n.createElement(t.Provider,{value:r},e.children)}}}]);