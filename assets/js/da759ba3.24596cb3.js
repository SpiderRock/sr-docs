"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[33811],{67478:(e,r,i)=>{i.r(r),i.d(r,{assets:()=>T,contentTitle:()=>a,default:()=>E,frontMatter:()=>N,metadata:()=>o,toc:()=>L});var n=i(74848),t=i(28453);const N={title:"SpdrParentExecution"},a=void 0,o={id:"MessageSchemas/Schema/SRSE Products/SRTrade/SpdrParentExecution/SpdrParentExecution",title:"SpdrParentExecution",description:"V8 Message Definition",source:"@site/docs/MessageSchemas/Schema/SRSE Products/SRTrade/SpdrParentExecution/SpdrParentExecution.md",sourceDirName:"MessageSchemas/Schema/SRSE Products/SRTrade/SpdrParentExecution",slug:"/MessageSchemas/Schema/SRSE Products/SRTrade/SpdrParentExecution/",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRTrade/SpdrParentExecution/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"SpdrParentExecution"},sidebar:"messageSchemasSidebar",previous:{title:"SpdrParentCancel",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRTrade/SpdrParentCancel/"},next:{title:"SpdrParentLimit",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRTrade/SpdrParentLimit/"}},T={},L=[];function l(e){const r={a:"a",code:"code",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.p,{children:(0,n.jsx)(r.a,{href:"../../../Topics/parent-orders/SpdrParentExecution",children:"V8 Message Definition"})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-sql",children:"CREATE TABLE `SRTrade`.`MsgSRParentExecution` (\n    `fillNumber` BIGINT NOT NULL DEFAULT 0 COMMENT 'SpiderRock execution number (globally unique over trailing 10 days)',\n    `sysRealm` ENUM('None','SysTest','NMS','CME','FR2','LD4','DR') NOT NULL DEFAULT 'None',\n    `sysEnvironment` ENUM('None','Neptune','Pluto','V7_Stable','V7_Latest','Saturn','Venus','Mars','SysTest','V7_Current') NOT NULL DEFAULT 'None',\n    `runStatus` ENUM('None','Prod','Beta','UAT','SysTest') NOT NULL DEFAULT 'None',\n    `version` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'record version number;starts at zero and goes up every time an execution record is re-published (eg, bust, +1m marks, +10m marks, etc)',\n    `execStatus` ENUM('None','Fill','Bust','Correct','Reject','SysRej') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock execution status (Fill,Bust,Correct,Reject,SysRej)',\n    `execShape` ENUM('None','Single','MLegTop','MLegLeg','SpreadTop','SpreadLeg','SingleLeg') NOT NULL DEFAULT 'None',\n    `packageId` BIGINT NOT NULL DEFAULT 0 COMMENT 'SR package Id',\n    `parentNumber` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'SR parent number',\n    `parentVersion` SMALLINT NOT NULL DEFAULT 0 COMMENT 'SPDR order instance number (1 = original order; 2 = 1st cancel/replace, etc)',\n    `baseParentNumber` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'SPDR order number (initial number in cancel/replace sequence) (also, source parent for dynamically generated orders;eg auto-hedges)',\n    `clOrdId` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'SR child order clOrdID resulting in fill',\n    `reviewClOrdId` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'review session clOrdId (usually from inbound review FIX session)S',\n    `altFillId` BIGINT NOT NULL DEFAULT 0 COMMENT 'alternate fill ID (usually from AwayTktGateway.pkey.clientFillID)',\n    `altOrderId` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'alternate order ID (usually clOrdId from client)',\n    `altCrossId` VARCHAR(24) NOT NULL DEFAULT '',\n    `altLegRefId` VARCHAR(24) NOT NULL DEFAULT '',\n    `altAccnt` VARCHAR(32) NOT NULL DEFAULT '' COMMENT 'alternate (client assigned) \"long\" account string (optional) [used to map between client and SR account strings]',\n    `altUserName` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'alternate (client assigned) user name (optional) [used to map between client and SR account strings]',\n    `srcRoutingCode` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'inbound FIX routing code, if any',\n    `riskGroupId` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'riskGroupId (parent order group ID) for this execution report',\n    `triggerGroupId` BIGINT NOT NULL DEFAULT 0 COMMENT 'WaitTrigger group Id',\n    `triggerTimestamp` BIGINT NOT NULL DEFAULT 0 COMMENT 'WaitTrigger trigger timestamp (nanoseconds since epoch)',\n    `streetClOrdId` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'street side clOrdId (clOrdId or equivalent of the street side order) [SR/street gateway generated]',\n    `streetOrderId` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'street side orderId (orderId or equivalent of the street side order) [from street side execReport]',\n    `parentShape` ENUM('None','Single','Cross','MLeg','MLegCross') NOT NULL DEFAULT 'None' COMMENT 'shape of originating parent order',\n    `secKey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'execution security key',\n    `secKey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'execution security key',\n    `secKey_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'execution security key',\n    `secKey_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'execution security key',\n    `secKey_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'execution security key',\n    `secKey_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'execution security key',\n    `secKey_xx` DOUBLE NOT NULL DEFAULT 0 COMMENT 'execution security key',\n    `secKey_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call' COMMENT 'execution security key',\n    `secType` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None' COMMENT 'execution security type [Stock, Future, Option]',\n    `ticker_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'base stock key (used for symbol risk aggregation)',\n    `ticker_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'base stock key (used for symbol risk aggregation)',\n    `ticker_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'base stock key (used for symbol risk aggregation)',\n    `accnt` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'SpiderRock trading accnt [broker pkey]',\n    `clientFirm` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'SR client firm',\n    `spdrSource` ENUM('None','SpdrTicket','SpdrSingle','SRSE','FIX','HedgeTool','TradeHedge','OpenHedge','AutoHedge','Orphan','RiskManager','OrderManager','ManagedOrder','RFQRespSrvr','Legger','SRSEDrop','FixDrop','TicketDrop','SysTest','RFRResponse','AllocOmni','AllocClient','CertGateway','MLegResponse','LeggerX','DropManager','AutoHedgeSrvr','AuctionStrategySrvr','AllocBlockFace','AllocBlockCust','IceChatGateway','EXS2SRC','MLinkResponse','AutoResponderVD','AutoResponderRC','AutoResponderSN','AutoResponderBX') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock parent order source code [broker pkey]',\n    `groupingCode` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'SpiderRock parent broker number [broker pkey]',\n    `coreClientFirm` VARCHAR(16) NOT NULL DEFAULT '',\n    `sponsorClientFirm` VARCHAR(16) NOT NULL DEFAULT '',\n    `routingCode` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'SpiderRock market routing code',\n    `engineName` VARCHAR(32) NOT NULL DEFAULT '' COMMENT 'SpiderRock execution engine that handled the parent order',\n    `gatewayName` VARCHAR(20) NOT NULL DEFAULT '' COMMENT 'StreetGateway server than handled the child order (if any)',\n    `execRole` ENUM('None','DirectAccnt','AwayGiveup','RiskDrop','AwayDrop','PullDrop') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock relationship to this execution record',\n    `execBrkrCode` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'SR Assigned executing broker code',\n    `execBrkrMPID` VARCHAR(8) NOT NULL DEFAULT '' COMMENT 'FINRA/Assigned exec broker MPID (if any)',\n    `execBrkrAccnt` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'account at executing broker (if any)',\n    `execBrkrClFirm` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'client/firm at executing broker (if any)',\n    `execBrkrUserName` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'userName at execution broker (if any)',\n    `clearingFlipType` ENUM('None','CMTA','Giveup','QSR','NSCC_Flip','DVP','BrkrAccnt') NOT NULL DEFAULT 'None' COMMENT 'Clearing Flip Type (None, ExecBroker, CMTA, Giveup, DTCC, QSR, etc)',\n    `clearingFlipFirm` VARCHAR(6) NOT NULL DEFAULT '' COMMENT 'Clearing Flip Firm (if any)',\n    `clearingFlipAccnt` VARCHAR(10) NOT NULL DEFAULT '' COMMENT 'Clearing Flip Account (if any)',\n    `clearingFirm` VARCHAR(4) NOT NULL DEFAULT '' COMMENT 'clearing firm',\n    `clearingAccnt` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'clearing firm account (if any)',\n    `origExecID` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'original execution ID string (child order)',\n    `lastExecID` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'most recent execution ID (same as origExecID unless CANCEL/CORRECTION has been processed)',\n    `remoteText` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'text comment from remote endpoint (if any)',\n    `orderSide` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'None' COMMENT 'order side',\n    `spdrOrderStatus` ENUM('PendNew','New','PendClose','Closed','Rejected','SendReject') NOT NULL DEFAULT 'PendNew',\n    `spdrCloseReason` ENUM('None','Cancelled','Filled','Replaced','Expired','Limit','System','LegReject','DoneForDay','IOCExpire','UserCxl','NoProgress','TooManyRej','ReplReject','AlgoClose','Restart','InvldParentLimit','FilledRepl','ForceClose','DmaReject','DmaExpire','DmaBrkrCxl','ReviewReject','MarketState','AlgoReject','ReviewTimeout','ChildReject','ChildCancel','ReviewClose','UPrcRange','LegBrkrClosed','ExchRisk','CrossFailed') NOT NULL DEFAULT 'None',\n    `cumFillQuantity` INT NOT NULL DEFAULT 0 COMMENT 'cumulative fills (this parent number only)',\n    `avgFillPrice` DOUBLE NOT NULL DEFAULT 0,\n    `cumLegFillQuantity` INT NOT NULL DEFAULT 0 COMMENT 'cumulative fills (spread only)',\n    `avgLegFillPrice` DOUBLE NOT NULL DEFAULT 0,\n    `leavesQty` INT NOT NULL DEFAULT 0,\n    `priceType` ENUM('None','Explicit','Offset','Zero') NOT NULL DEFAULT 'None',\n    `childShape` ENUM('None','Single','Cross','MLeg','MLegCross') NOT NULL DEFAULT 'None',\n    `childSize` INT NOT NULL DEFAULT 0 COMMENT 'child order size',\n    `childPrice` DOUBLE NOT NULL DEFAULT 0 COMMENT 'child order price',\n    `childDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'child order generation date/time',\n    `childExch` VARCHAR(6) NOT NULL DEFAULT '' COMMENT 'child order exchange',\n    `childExDest` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'child order exchange destination code',\n    `childExecBroker` VARCHAR(8) NOT NULL DEFAULT '' COMMENT 'executing broker that child order was routed to',\n    `childIsDirected` ENUM('None','Yes','No') NOT NULL DEFAULT 'None' COMMENT 'child order isDirected flag',\n    `childIsoSweep` ENUM('None','Yes','No') NOT NULL DEFAULT 'None' COMMENT 'child order ISO sweep flag',\n    `childOrderHandling` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'child order handling string from the algo that generated the child order responsible for this fill',\n    `childAlgoHandler` ENUM('None','ActiveTaker','ActiveMaker','Auction','Responder','Matrix','Cross','Face','Extern','MLegHandler','AutoHedge','Sprayer','Legger','Restart','Orphan','UDefSpread','RFQRequest','MLegResponder','LeggerX','ExchPing','BrkrReview','AuctionResponder','TakeSweep','TestChild') NOT NULL DEFAULT 'None' COMMENT 'algo handler for this child order',\n    `childCreateReason` ENUM('None','CheckAddExch','DarkCross','DmaExtern','DmaSmart','MakeJoin','MakeNbboImpr','MakePostLimit','MakeSelfImpr','MarketAuction','MatrixImpr','MatrixJoin','MatrixLvlSweep','MatrixMaxSweep','MLegSeeker','OptAuctionResp','OptFaceHandler','RelWaitTrigger','SprdDma','SprdFace','SprdSeeker','TakeBrkr','TakeExch','TakeNbbo','RFQRequest','MLegResponse','BrkrCross','PostFlash','MakeOff','MakeFlashImprv','AwayExtern','MatrixCross','ExchPing','BrkrReview','AuctionResponse','SweepTake','TestChild') NOT NULL DEFAULT 'None',\n    `childCancelReason` ENUM('None','MakeException','MakeMaxRiskSize','MakeLimitError','MakeCxlImpr','MakeLmtPrc','MakeSelfImpr','MakeJoinImprv','MakeReJoin','MakeBhnd','MakeAlone','MakeAloneF','MakeOffMkt','MakeMaxExpose','MakeJoinImpr','ContLmtPrc','ChildCxlAll','ChildFlashCxl','ChildIOCTimeout','ForceRetry','StkCxlAll','FutCxlAll','OptCxlAll','FastCxlUBid','FastCxlUAsk','FastCxlUMin','FastCxlUMax','MktMiss','CxlClear','CxlRplDMA','CxlRplTurn','CxlRplSize','CxlRplPrc','CxlRplMake','CxlRplExch','MLegSeekSwitch','MLegSeekChange','MLegSeekND','MLegSeekLimit','MLegDMA','MLegSprdLimit','ParentRplRej','ParentReject','ParentClose','LeggerSwitch','AccelTake','EnginePreOpen','LegLmtPrcRng','MakeLmtPrcErr','ProgTerminate','TickSzErr','ContBrkrTerm','ContCancelHold','ContLimitErr','ContMaxUPrc','ContMinUPrc','ContMktData','ContMktHalt','ContRiskHold','ContSecType','ContStkData','ContStkState','ContFutData','ContFutState','ContOptData','ContOptState','ContUFutData','ContUFutState','ContUMktData','ContUMktState','LegExposeSize','LegLimitErr','LegMarketPrc','MLegCobLmtPrc','MLegLeggerChange','MLegLeggerSwitch','MLegSprdLmtPrc','SprdMktPrc','ContUMktPrc','ContUMktQte','SGContCxl','SGSysCxl','CxlRplPart','CxlRplAlgo','ContingentCancel','SwitchMOC','CxlRplReview','CxlRplAltR','SurfPrcErr','UserHold','DayClose','PendNewTimeout','ActiveHold') NOT NULL DEFAULT 'None',\n    `childMakerTaker` ENUM('None','Maker','Taker') NOT NULL DEFAULT 'None',\n    `childUBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier market bid at @ child order send time',\n    `childUAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier market ask at @ child order send time',\n    `childBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'market bid at the @ child order send time',\n    `childAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'market ask at the @ child order send time',\n    `childMark` DOUBLE NOT NULL DEFAULT 0 COMMENT 'mid-market (SR surface price if option) @ child order send time',\n    `childFairWidth` DOUBLE NOT NULL DEFAULT 0 COMMENT 'model fair width @ child order create',\n    `childVol` FLOAT NOT NULL DEFAULT 0 COMMENT 'child order volatility @ childLimitRefUPrc',\n    `childProb` FLOAT NOT NULL DEFAULT 0 COMMENT 'SR probability for the child order @ child order send time',\n    `childLimitRefUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'limit reference underlier price @ child order send time',\n    `childLimitPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'parent order limit price @ child order send time',\n    `childVolAtm` FLOAT NOT NULL DEFAULT 0 COMMENT 'atm volatility @ child order send time',\n    `childPosType` ENUM('None','Opening','Closing','Auto') NOT NULL DEFAULT 'None' COMMENT 'child order position type',\n    `childFirmOptPosition` INT NOT NULL DEFAULT 0 COMMENT 'effective firm option position @ child order send time',\n    `childSSaleFlag` ENUM('None','Long','Short','Exempt','Auto','Open','Close','Cover','NA') NOT NULL DEFAULT 'None' COMMENT 'short sale flag',\n    `childFirmStkPosition` INT NOT NULL DEFAULT 0 COMMENT 'effective firm stock position @ child order send time',\n    `childFirmOpenOrders` INT NOT NULL DEFAULT 0 COMMENT 'open sell orders counted in marking @ child order send time',\n    `childLocateQuan` INT NOT NULL DEFAULT 0 COMMENT 'available locate quantity (if selling short) @ child order send time',\n    `childLocateFirm` VARCHAR(6) NOT NULL DEFAULT '' COMMENT 'firm granting the locate',\n    `childLocatePool` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'locate pool @ firm granting locate',\n    `childMktStance` ENUM('None','ExchMrkt','NbboMrkt','ExchImpr','NbboImpr','ExchJoin','NbboJoin','Away') NOT NULL DEFAULT 'None' COMMENT 'child order was expected to be marketable @ child send time',\n    `childCxlAttempted` ENUM('None','Yes','No') NOT NULL DEFAULT 'None' COMMENT 'cancel attempt was made on the child order prior to receiving this fill',\n    `childCxlFillLatency` FLOAT NOT NULL DEFAULT 0 COMMENT 'cancel attempt -to- fill report latency (in ms)',\n    `childMethod` VARCHAR(8) NOT NULL DEFAULT '' COMMENT 'execution method string',\n    `childSource` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'execution source string',\n    `firmType` ENUM('None','Customer','Firm','MarketMaker','ProCustomer','BrokerDealer','AwayMM','FirmJBO','BrkrDlrCust') NOT NULL DEFAULT 'None' COMMENT 'child order firm type [Customer, ProCust, Firm, MM, etc]',\n    `priAggGroup` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'primary aggregation group',\n    `secAggGroup` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'secondary aggregation group',\n    `directedClientFirm` VARCHAR(16) NOT NULL DEFAULT '',\n    `isCommPaying` ENUM('None','Yes','No') NOT NULL DEFAULT 'None',\n    `fillTransactDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'transaction date/time as reported by exchange or down stream broker',\n    `fillTs` DOUBLE NOT NULL DEFAULT 0 COMMENT 'fill report ts (seconds since startup; 100 nanosec resolution)',\n    `fillDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'Date/time of fill arrival (SRDateTime)',\n    `fillExch` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'ExDest code from child order execution report',\n    `fillExecId` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'street side execution Id',\n    `fillExecRefId` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'street side execution ref Id (only used when busting an execution)',\n    `fillLegRefId` BIGINT NOT NULL DEFAULT 0 COMMENT 'legRefId for multileg fills',\n    `fillLegRatio` INT NOT NULL DEFAULT 0 COMMENT 'legRatio (if spread order)',\n    `fillExchFee` FLOAT NOT NULL DEFAULT 0 COMMENT 'SpiderRock estimate of the exchange fee based on liquidity tags (best effort)',\n    `fillMarket` VARCHAR(8) NOT NULL DEFAULT '' COMMENT 'usually from execReport.lastMkt as reported by child order venue',\n    `fillPrice` DOUBLE NOT NULL DEFAULT 0 COMMENT 'fill price',\n    `fillQuantity` INT NOT NULL DEFAULT 0 COMMENT 'fill quantity',\n    `fillReportDetail` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'extra detail (if any) from child execution',\n    `fillBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'market bid @ fill arrival',\n    `fillAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'market ask @ fill arrival',\n    `fillMark` DOUBLE NOT NULL DEFAULT 0 COMMENT 'mid-market (or SR surface price if option) @ fill arrival',\n    `fillFairWidth` DOUBLE NOT NULL DEFAULT 0 COMMENT 'model fair width @ fill time',\n    `fillUMark` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier mark @ fill arrival',\n    `fillUBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier market bid @ fill arrival',\n    `fillUAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier market bid @ fill arrival',\n    `fillUBidSz` INT NOT NULL DEFAULT 0 COMMENT 'underlier bid size @ fill arrival',\n    `fillUAskSz` INT NOT NULL DEFAULT 0 COMMENT 'underlier ask size @ fill arrival',\n    `fillVolAtm` FLOAT NOT NULL DEFAULT 0 COMMENT 'atm volatility @ fill arrival',\n    `fillMark1M` DOUBLE NOT NULL DEFAULT 0 COMMENT 'mid-market (or SR surface price if option) @ fill arrival + 1m',\n    `fillMark10M` DOUBLE NOT NULL DEFAULT 0 COMMENT 'mid-market (or SR surface price if option) @ fill arrival + 10m',\n    `fillBid1M` DOUBLE NOT NULL DEFAULT 0 COMMENT 'market bid @ fill arrival + 1m',\n    `fillAsk1M` DOUBLE NOT NULL DEFAULT 0 COMMENT 'market ask @ fill arrival + 1m',\n    `fillBid10M` DOUBLE NOT NULL DEFAULT 0 COMMENT 'market bid @ fill arrival + 10m',\n    `fillAsk10M` DOUBLE NOT NULL DEFAULT 0 COMMENT 'market ask @ fill arrival + 10m',\n    `fillUMark1M` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier mark @ fill arrival + 1m',\n    `fillUMark10M` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier mark @ fill arrival + 10m',\n    `fillVolAtm1M` FLOAT NOT NULL DEFAULT 0 COMMENT 'atm volatility (options only) + 1m',\n    `fillVolAtm10M` FLOAT NOT NULL DEFAULT 0 COMMENT 'atm volatility (options only) + 10m',\n    `fillState1M` ENUM('None','OK','Error') NOT NULL DEFAULT 'None',\n    `fillState10M` ENUM('None','OK','Error') NOT NULL DEFAULT 'None',\n    `fillVol` FLOAT NOT NULL DEFAULT 0 COMMENT 'fill volatility @ fillLimitRefUPrc & fillLimitRefSDiv',\n    `fillVolS` FLOAT NOT NULL DEFAULT 0 COMMENT 'fill volatility @ surfaceUPrc & surfaceSDiv',\n    `fillProb` FLOAT NOT NULL DEFAULT 0 COMMENT 'T+10m probability for the fill @ fill arrival send time',\n    `fillLimitRefUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'limit reference underlier price @ fill arrival time',\n    `fillLimitRefSDiv` DOUBLE NOT NULL DEFAULT 0 COMMENT 'limit reference sdiv value @ fill arrival time',\n    `fillLimitPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'parent order limit price @ fill arrival time',\n    `fillVe` FLOAT NOT NULL DEFAULT 0 COMMENT 'fill vega',\n    `fillGa` FLOAT NOT NULL DEFAULT 0 COMMENT 'fill gamma',\n    `fillDe` FLOAT NOT NULL DEFAULT 0 COMMENT 'fill delta',\n    `fillTh` FLOAT NOT NULL DEFAULT 0 COMMENT 'fill theta',\n    `fillVeRatio` FLOAT NOT NULL DEFAULT 0 COMMENT 'fill ve / fill atm ve',\n    `fillBeta` FLOAT NOT NULL DEFAULT 0 COMMENT 'SpiderRock estimate of beta to SPX',\n    `riskVega` FLOAT NOT NULL DEFAULT 0 COMMENT 'risk vega',\n    `riskWtVega` FLOAT NOT NULL DEFAULT 0 COMMENT 'risk gamma',\n    `riskNValue` FLOAT NOT NULL DEFAULT 0 COMMENT 'risk delta',\n    `riskDelta` FLOAT NOT NULL DEFAULT 0 COMMENT 'risk delta',\n    `riskDDelta` FLOAT NOT NULL DEFAULT 0 COMMENT 'risk ddelta',\n    `riskRm1` FLOAT NOT NULL DEFAULT 0 COMMENT 'user defined (from parent order) [used to manage order groups]',\n    `riskRm2` FLOAT NOT NULL DEFAULT 0 COMMENT 'user defined (from parent order) [used to manage order groups]',\n    `riskRm3` FLOAT NOT NULL DEFAULT 0 COMMENT 'user defined (from parent order) [used to manage order groups]',\n    `riskRm4` FLOAT NOT NULL DEFAULT 0 COMMENT 'user defined (from parent order) [used to manage order groups]',\n    `riskRm5` FLOAT NOT NULL DEFAULT 0 COMMENT 'user defined (from parent order) [used to manage order groups]',\n    `riskRm6` FLOAT NOT NULL DEFAULT 0 COMMENT 'user defined (from parent order) [used to manage order groups]',\n    `riskRm7` FLOAT NOT NULL DEFAULT 0 COMMENT 'user defined (from parent order) [used to manage order groups]',\n    `marginUDnVDn` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier down, vol down',\n    `marginUDnVUp` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier down, vol up',\n    `marginUUpVDn` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier up, vol down',\n    `marginUUpVUp` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier up, vol up',\n    `riskU15Dn` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier dn 15% shock slide',\n    `riskU15Up` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier up 15% shock slide',\n    `riskU50Dn` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier dn 50% shock slide',\n    `riskU50Up` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier up 50% shock slide',\n    `fillBrkrRate` FLOAT NOT NULL DEFAULT 0 COMMENT 'billing brokerage rate (tier 1)',\n    `fillRoutingRate` FLOAT NOT NULL DEFAULT 0 COMMENT 'billing routing rate (tier 1)',\n    `riskCode` ENUM('None','R1','R2','R3','R4','R5','R6','R7','R8') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock Risk Code (if any)',\n    `billingSecType` ENUM('None','Equity','Future','EqtOption','FutOption') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock billing security type',\n    `billingCategory` ENUM('None','Alpha','AlphaTop50','TiedMaker','TiedTaker','SOR','DMA','AuctionResponse','Facilitate','AlphaFacilitate','AwayTrade','SymOverride','Extern','NonBillable','Seeker','Legger','Drop','AwayAlgo','IsoSweep','SpdrSweep','GTH','AlphaGTH','BlockAuction','BlockResponse') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock billing category',\n    `spdrLiquidityTag` VARCHAR(2) NOT NULL DEFAULT '' COMMENT 'SpiderRock normalized liquidity tag',\n    `exchLiquidityTag` VARCHAR(4) NOT NULL DEFAULT '' COMMENT 'liquidity tag as reported by downstream venue (if any)',\n    `fillExchDetail` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'other fix tags (tag:value#tag:value) [additional detail used for analysis]',\n    `lastCapacity` ENUM('None','Agency','Principal','Individual','Proprietary','AgentOtherMember','RisklessPrincipal') NOT NULL DEFAULT 'None' COMMENT 'child order capacity',\n    `exchFirmType` VARCHAR(6) NOT NULL DEFAULT '' COMMENT 'used to reflect field from a downstread execution back up to upstream fill report',\n    `extExecBroker` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'used to reflect field from a downstream destination back up to and upstream fill report',\n    `relationshipType` ENUM('None','EXSMember','EXSRouter','EXSTech','Platform','SRConnect','Advisor') NOT NULL DEFAULT 'None' COMMENT 'type of SR <-> client relationship',\n    `clArriveMark` FLOAT NOT NULL DEFAULT 0 COMMENT 'client specified arrival mark (passed through from parent order)',\n    `parentDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'parent order creation date/time',\n    `parentOrderSize` INT NOT NULL DEFAULT 0 COMMENT 'parent order size',\n    `parentUBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier market bid @ parent order arrival',\n    `parentUAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier market ask @ parent order arrival',\n    `parentUMark` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier mid mark @ parent order arrival',\n    `parentBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'market bid @ parent order arrival',\n    `parentAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'market ask @ parent order arrival',\n    `parentMark` DOUBLE NOT NULL DEFAULT 0 COMMENT 'mid-market (or SR surface price) @ parent order arrival',\n    `parentFairWidth` DOUBLE NOT NULL DEFAULT 0 COMMENT 'model fair width @ parent order arrival',\n    `parentSurfVol` DOUBLE NOT NULL DEFAULT 0 COMMENT 'SR surf vol @ parent order arrival',\n    `parentLimitVol` FLOAT NOT NULL DEFAULT 0 COMMENT 'parent order limit volatilty (if any)',\n    `parentLimitPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'parent order limit price @ parent order arrival',\n    `parentLimitRefUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'limit reference underlier price @ parent order arrival',\n    `parentTheoVol` FLOAT NOT NULL DEFAULT 0 COMMENT 'client supplied theoretical volatility (used for markup only) [copied from parent order]',\n    `parentTheoPrc` FLOAT NOT NULL DEFAULT 0 COMMENT 'option price corresponding parentTheoVol',\n    `parentPosType` ENUM('None','Opening','Closing','Auto') NOT NULL DEFAULT 'None' COMMENT 'parent order position type',\n    `parentSSaleFlag` ENUM('None','Long','Short','Exempt','Auto','Open','Close','Cover','NA') NOT NULL DEFAULT 'None' COMMENT 'short sale flag on parent order',\n    `noticeNumber` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'RFR / Auction noticeNumber (if any)',\n    `numMakeExchanges` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'number of exchanges (1 - 4) on which to publish public making orders.  Effective number might be less than requested number if sufficient exchanges are not available.',\n    `publicSize` ENUM('None','Randomize','MktSize','FullSize','MktSizeA','MktSizeB','MktSizeC','FullSizeR','Max25Pct','Max50Pct','Max75Pct','NoSize') NOT NULL DEFAULT 'None' COMMENT 'public order size handling: None=use default size handling (usually limits public size to ''typical'' market size); Randomize=randomize public size; FullSize=expose entire order size where possible',\n    `canOverlapCxlRepl` ENUM('None','Yes','No') NOT NULL DEFAULT 'None' COMMENT 'can execution engines overlap cancel/replace operations [order can overfill if YES] (at most one active overlapping cxl/replace operation for each parent order)',\n    `progressRule` ENUM('None','Twap','Vwap','TwapReset','VwapReset','FastReset','SlowReset','TwapAlpha','VwapAlpha','TwapAlphaC','VwapAlphaC','AutoComplete','AllowImmediate','Manual','SpdrPulse','IOC') NOT NULL DEFAULT 'None' COMMENT 'Immediate = all size immediately available;TWAP = size released in time intervals;VWAP = size released in volume intervals;',\n    `exchMaskEnabled` ENUM('None','Yes','No') NOT NULL DEFAULT 'None' COMMENT 'exchMask != 0',\n    `timeInForce` ENUM('None','Day','IOC','GTD','ExtDay','Week','ExtWeek') NOT NULL DEFAULT 'None' COMMENT 'Parent order market session',\n    `parentOrderHandling` ENUM('None','ActiveTaker','PostOnly','DMA','MktOnOpn','MktOnCls','Facilitate','Matrix','Legger','Seeker','SeekerLegger','CrossResponse','AuctionResponse','MLegAuctionResp','RFQRequest','AwayAlgo','ExchPing','BlockAuction','BlockResponse','SweepTake','CobMaker','FaceOmni','TestParent') NOT NULL DEFAULT 'None' COMMENT 'Primary/Take Algo Handler',\n    `parentBalanceHandling` ENUM('None','PostWith','PostTurn','PostImprove','PostLimit','MaxIntern','PostWthF','PostImprvR','PostFlash','PostFlashW','PostPeg','PostFlashI') NOT NULL DEFAULT 'None' COMMENT 'Make Algo Handler',\n    `orderLimitType` ENUM('None','Market','MarketArrival','Prc','PrcDe','PrcDeX','PrcDeT','PrcDeP','PrcDeXT','PrcDeXP','Vol','VolX','PrcV','PrcVX','NoLimit','RelMid','RelJoin','RelCross','SmrtFast','SmrtNorm','RelTurn','PrcDeEm','VolEm','Aux','UPrcPct','PkgNeutral','RcPrem','SynthLimitMM','SynthLimitBW','SynthLimitWW') NOT NULL DEFAULT 'None' COMMENT 'Primary Limit Type (Prc, Vol, Rel, Market, Smrt, etc)',\n    `orderLimitClass` ENUM('Simple','Surface','Probability','SurfProb') NOT NULL DEFAULT 'Simple' COMMENT 'Simple = LimitPrice, Surface = BEST(LimitPrice, SurfLimit), Probability = BEST(LimitPrice, ProbLimit)',\n    `takeReachRule` ENUM('None','Delayed','Passive','WeakOnly','RespondOnly','FullSize','ISOSweep','AllOrNone','QtyOrMore','UpToQty','AtMost25','AtMost50') NOT NULL DEFAULT 'None' COMMENT 'Immediate = reach room immediately available; Delayed = available after [1-3] seconds; Passive = available if contra side aggresses; WeakOnly = only take if available size < avgMarketSize; ISOSweep = Intermarket Sweep [requires WaitTrigger]',\n    `overrideCode` ENUM('None','SDivOnly','DDivOnly','Both') NOT NULL DEFAULT 'None' COMMENT 'SDiv/DDiv override rule (applies if LimitType = Vol)',\n    `alphaType` ENUM('None','Static','Eagle','Hawk','Falcon','Relative') NOT NULL DEFAULT 'None' COMMENT 'Affects limit probabilities (applies if LimitClass = Probability)',\n    `parentStrategy` VARCHAR(36) NOT NULL DEFAULT '' COMMENT 'client strategy [usually client supplied]',\n    `userName` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'user name associated with the parent order',\n    `autoHedge` ENUM('None','Static','AutoMid','AutoCrx','AutoTrn','SpdrAuto','Spdr10S','Spdr30S','Spdr90S','Spdr5M','Spdr30M','SpdrDay','SmartFast','SmartNorm','FastCrx','FastDark','SlowDark','AlphaVwap1pct','AlphaVwap2pct','AlphaVwap5pct','AlphaVwap25pct','Custom','AwayAlgo') NOT NULL DEFAULT 'None' COMMENT 'auto-hedge algorithm (if any)',\n    `hedgeSecKey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'auto-hedge sec key (if any)',\n    `hedgeSecKey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'auto-hedge sec key (if any)',\n    `hedgeSecKey_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'auto-hedge sec key (if any)',\n    `hedgeSecKey_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'auto-hedge sec key (if any)',\n    `hedgeSecKey_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'auto-hedge sec key (if any)',\n    `hedgeSecKey_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'auto-hedge sec key (if any)',\n    `hedgeSecType` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None' COMMENT 'auto-hedge sec type (if any)',\n    `hedgeBetaRatio` FLOAT NOT NULL DEFAULT 0 COMMENT 'portion of executed $delta to auto-hedge (can be 1.0 / Beta for beta hedging) [-4.0 to +4.0])',\n    `hedgeScope` ENUM('None','Accnt','RiskGroup') NOT NULL DEFAULT 'None' COMMENT 'hedge group scope',\n    `userData1` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'client supplied data field; passes through to parent and child executions and reports as well as FIX drops',\n    `userData2` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'client supplied data field; passes through to parent and child executions and reports as well as FIX drops',\n    `years` FLOAT NOT NULL DEFAULT 0 COMMENT 'years to expiration',\n    `underliersPerCn` INT NOT NULL DEFAULT 0 COMMENT 'option delivery underliers per contract',\n    `underlierType` ENUM('None','Equity','Other','FX') NOT NULL DEFAULT 'None' COMMENT 'type of underlier (affects $greek calculations)',\n    `tickValue` FLOAT NOT NULL DEFAULT 0 COMMENT '$NLV value of a single tick change in display premium\t(pointValue = tickValue / tickSize)',\n    `pointValue` FLOAT NOT NULL DEFAULT 0 COMMENT '$NLV value of a single point change in display premium (pointValue = tickValue / tickSize)',\n    `pointCurrency` ENUM('None','AUD','BRL','CAD','CHF','CNH','CNY','EUR','GBP','JPY','KRW','MXN','MYR','NOK','NZD','SEK','TRY','USD','USDCents','CZK','ZAR','HUF','USX','GBX') NOT NULL DEFAULT 'None',\n    `uPrcRatio` FLOAT NOT NULL DEFAULT 0 COMMENT 'UPrcRatio (SymbolRatio) from product definition',\n    `minTickSize` FLOAT NOT NULL DEFAULT 0 COMMENT 'minimum market price variation (dnTickSize if on a boundary)',\n    `priceFormat` ENUM('None','N0','N1','N2','N3','N4','N5','N6','N7','F4','F8','Q8','F16','F32','H32','Q32','F64','H64','FullPenny','PartPenny','PartNickle','EQT','V1','V2','V3','V4','V5','V6','V7','V8','V9','V10','V11','V12','V13','V14','V15','A0','A1','A2','A3','A4','A5','A6','A7','E32') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock price display format code',\n    `uPriceFormat` ENUM('None','N0','N1','N2','N3','N4','N5','N6','N7','F4','F8','Q8','F16','F32','H32','Q32','F64','H64','FullPenny','PartPenny','PartNickle','EQT','V1','V2','V3','V4','V5','V6','V7','V8','V9','V10','V11','V12','V13','V14','V15','A0','A1','A2','A3','A4','A5','A6','A7','E32') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock underlier price display format code',\n    `liveUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'SpiderRock internal use only',\n    `liveMark` DOUBLE NOT NULL DEFAULT 0 COMMENT 'SpiderRock internal use only',\n    `srcTimestamp` BIGINT NOT NULL DEFAULT 0,\n    `sgwTimestamp` BIGINT NOT NULL DEFAULT 0,\n    `engTimestamp` BIGINT NOT NULL DEFAULT 0,\n    `timestamp` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'timestamp of this record [not necessarily the timstamp of the fill itself]',\n    `dataCenter_V7` ENUM('None','NY4','NY5','CH2','CH3') NOT NULL DEFAULT 'None' COMMENT 'only v7: enum values do not match with v8: V7[None=0,NY4=1,NY5=2,CH2=3,CH3=4], V8[Does Not Exist]',\n    `faceSide_V7` ENUM('Cust','Face') NOT NULL DEFAULT 'Cust' COMMENT 'only v7 - enum values match with v8',\n    `faceShape_V7` ENUM('None','CrossCust','CrossFace','CrossBoth') NOT NULL DEFAULT 'None' COMMENT 'only v7 - enum values match with v8',\n    `childLocateSource_V7` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'only V7',\n    `fillPr_V7` FLOAT NOT NULL DEFAULT 0 COMMENT 'only V7',\n    `fillRiskMetric1_V7` FLOAT NOT NULL DEFAULT 0 COMMENT 'only V7',\n    `fillRiskMetric2_V7` FLOAT NOT NULL DEFAULT 0 COMMENT 'only V7',\n    `fillRiskMetric3_V7` FLOAT NOT NULL DEFAULT 0 COMMENT 'only V7',\n    `fillRiskMetric4_V7` FLOAT NOT NULL DEFAULT 0 COMMENT 'only V7',\n    `fillRiskMetric5_V7` FLOAT NOT NULL DEFAULT 0 COMMENT 'only V7',\n    `fillRiskMetric6_V7` FLOAT NOT NULL DEFAULT 0 COMMENT 'only V7',\n    `fillRiskMetric7_V7` FLOAT NOT NULL DEFAULT 0 COMMENT 'only V7',\n    `fillS08Dn_V7` FLOAT NOT NULL DEFAULT 0 COMMENT 'only V7',\n    `fillS06Up_V7` FLOAT NOT NULL DEFAULT 0 COMMENT 'only V7',\n    `fillS15Dn_V7` FLOAT NOT NULL DEFAULT 0 COMMENT 'only V7',\n    `fillS15Up_V7` FLOAT NOT NULL DEFAULT 0 COMMENT 'only V7',\n    `fillS50Dn_V7` FLOAT NOT NULL DEFAULT 0 COMMENT 'only V7',\n    `fillS50Up_V7` FLOAT NOT NULL DEFAULT 0 COMMENT 'only V7',\n    CONSTRAINT nonnegative_parentNumber CHECK(ASCII(parentNumber) < 56),\n    CONSTRAINT nonnegative_baseParentNumber CHECK(ASCII(baseParentNumber) < 56),\n    CONSTRAINT nonnegative_clOrdId CHECK(ASCII(clOrdId) < 56),\n    CONSTRAINT nonnegative_riskGroupId CHECK(ASCII(riskGroupId) < 56),\n    CONSTRAINT nonnegative_groupingCode CHECK(ASCII(groupingCode) < 56),\n    CONSTRAINT nonnegative_noticeNumber CHECK(ASCII(noticeNumber) < 56),\n    PRIMARY KEY USING HASH (`fillNumber`),\n    KEY `AccntIndex` (`accnt`) USING HASH,\n    KEY `ClientFirmIndex` (`clientFirm`) USING HASH\n) ENGINE=SRSE DEFAULT CHARSET=LATIN1 COMMENT='';\n\n"})})]})}function E(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,r,i)=>{i.d(r,{R:()=>a,x:()=>o});var n=i(96540);const t={},N=n.createContext(t);function a(e){const r=n.useContext(N);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),n.createElement(N.Provider,{value:r},e.children)}}}]);