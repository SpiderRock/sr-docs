"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([["61553"],{71158:function(e,n,i){i.r(n),i.d(n,{default:()=>h,frontMatter:()=>d,metadata:()=>l,assets:()=>o,toc:()=>u,contentTitle:()=>c});var l=JSON.parse('{"id":"MessageSchemas/Schema/Topics/client-config/UserAuctionFilter","title":"UserAuctionFilter","description":"METADATA","source":"@site/versioned_docs/version-8.5.3.1/MessageSchemas/Schema/Topics/1800-client-config/UserAuctionFilter.md","sourceDirName":"MessageSchemas/Schema/Topics/1800-client-config","slug":"/MessageSchemas/Schema/Topics/client-config/UserAuctionFilter","permalink":"/docs/8.5.3.1/MessageSchemas/Schema/Topics/client-config/UserAuctionFilter","draft":false,"unlisted":false,"tags":[],"version":"8.5.3.1","frontMatter":{"title":"UserAuctionFilter"},"sidebar":"messageSchemasSidebar","previous":{"title":"ClientPrivateSRSE","permalink":"/docs/8.5.3.1/MessageSchemas/Schema/Topics/client-config/ClientPrivateSRSE"},"next":{"title":"UserAuctionTickerFilter","permalink":"/docs/8.5.3.1/MessageSchemas/Schema/Topics/client-config/UserAuctionTickerFilter"}}'),s=i("52676"),t=i("91503"),r=i("71386"),a=i("9641");let d={title:"UserAuctionFilter"},c="Schema: UserAuctionFilter (ID: 1915)",o={},u=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"REPEATING FIELDS",id:"repeating-fields",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3},{value:"Post Msgs API Call",id:"post-msgs-api-call",level:3}];function m(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsxs)(n.h1,{id:"schema-userauctionfilter-id-1915",children:["Schema: UserAuctionFilter ",(0,s.jsx)("span",{className:"small-text",children:"(ID: 1915)"})]})}),"\n",(0,s.jsx)(n.h3,{id:"metadata",children:"METADATA"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Attribute"}),(0,s.jsx)(n.th,{children:"Value"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Topic"}),(0,s.jsx)(n.td,{children:"1800-client-config"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"MLink Token"}),(0,s.jsx)(n.td,{children:"SRATS"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"SRSE Product"}),(0,s.jsx)(n.td,{children:"SRTrade"})]})]})]}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note:"})," The symbol ",(0,s.jsx)(n.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"body",children:"BODY"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"#"}),(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Comment"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"10="}),(0,s.jsx)(n.td,{children:"userName"}),(0,s.jsx)(n.td,{children:"string(24)"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"11="}),(0,s.jsx)(n.td,{children:"filterName"}),(0,s.jsx)(n.td,{children:"string(16)"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"100"}),(0,s.jsx)(n.td,{children:"clientFirm"}),(0,s.jsx)(n.td,{children:"string(16)"}),(0,s.jsx)(n.td,{children:"client firm of the user this filter belongs to"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"151"}),(0,s.jsx)(n.td,{children:"disabled"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"114"}),(0,s.jsx)(n.td,{children:"includeCovered"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(n.td,{children:"must match if not None"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"115"}),(0,s.jsx)(n.td,{children:"includeETFs"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(n.td,{children:"must match if not None"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"116"}),(0,s.jsx)(n.td,{children:"includeADRs"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(n.td,{children:"must match if not None"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"117"}),(0,s.jsx)(n.td,{children:"includeIndexes"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(n.td,{children:"must match if not None"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"118"}),(0,s.jsx)(n.td,{children:"minUPrc"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{children:"min underlier price"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"119"}),(0,s.jsx)(n.td,{children:"hasUAvgDailyVlmFilter"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(n.td,{children:"if Yes use fields: minUAvgDailyVlm, maxUAvgDailyVlm"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"120"}),(0,s.jsx)(n.td,{children:"minUAvgDailyVlm"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{children:"min underlier avg daily volume (in $1mm increments)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"121"}),(0,s.jsx)(n.td,{children:"maxUAvgDailyVlm"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{children:"max underlier avg daily volume (in $1mm increments)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"122"}),(0,s.jsx)(n.td,{children:"minSize"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{children:"min order size (no decimals)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"152"}),(0,s.jsx)(n.td,{children:"minAbsVega"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{children:"min absolute vega (no decimals)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"124"}),(0,s.jsx)(n.td,{children:"hasAbsDeltaFilter"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(n.td,{children:"if Yes use fields: minAbsDelta, maxAbsDelta"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"125"}),(0,s.jsx)(n.td,{children:"minAbsDelta"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{children:"min absolute delta"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"126"}),(0,s.jsx)(n.td,{children:"maxAbsDelta"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{children:"max absolute delta"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"127"}),(0,s.jsx)(n.td,{children:"hasXDeltaFilter"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(n.td,{children:"if Yes use fields: minXDelta, maxXDelta"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"128"}),(0,s.jsx)(n.td,{children:"minXDelta"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"129"}),(0,s.jsx)(n.td,{children:"maxXDelta"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"130"}),(0,s.jsx)(n.td,{children:"hasAtmSVolFilter"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(n.td,{children:"if Yes use fields: minAtmSVol, maxAtmSVol"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"131"}),(0,s.jsx)(n.td,{children:"minAtmSVol"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"132"}),(0,s.jsx)(n.td,{children:"maxAtmSVol"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"133"}),(0,s.jsx)(n.td,{children:"hasAtmSDivFilter"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(n.td,{children:"if Yes use fields: minAtmSDiv, maxAtmSDiv"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"134"}),(0,s.jsx)(n.td,{children:"minAtmSDiv"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"135"}),(0,s.jsx)(n.td,{children:"maxAtmSDiv"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"136"}),(0,s.jsx)(n.td,{children:"hasExpiryDays"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(n.td,{children:"if Yes use fields: minExpiryDays, maxExpiryDays"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"137"}),(0,s.jsx)(n.td,{children:"minExpiryDays"}),(0,s.jsx)(n.td,{children:"int"}),(0,s.jsx)(n.td,{children:"min days to expiration"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"138"}),(0,s.jsx)(n.td,{children:"maxExpiryDays"}),(0,s.jsx)(n.td,{children:"int"}),(0,s.jsx)(n.td,{children:"max days to expiration"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"139"}),(0,s.jsx)(n.td,{children:"includeZDte"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(n.td,{children:"must match if not None"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"140"}),(0,s.jsx)(n.td,{children:"includeDaily"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(n.td,{children:"must match if not None"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"141"}),(0,s.jsx)(n.td,{children:"includeWeekly"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(n.td,{children:"must match if not None"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"142"}),(0,s.jsx)(n.td,{children:"includeRegular"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(n.td,{children:"must match if not None"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"143"}),(0,s.jsx)(n.td,{children:"includeQuarterly"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(n.td,{children:"must match if not None"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"153"}),(0,s.jsx)(n.td,{children:"includeLongTerm"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(n.td,{children:"must match if not None"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"154"}),(0,s.jsx)(n.td,{children:"includeOtherExp"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(n.td,{children:"must match if not None"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"144"}),(0,s.jsx)(n.td,{children:"includeFlex"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(n.td,{children:"must match if not None"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"156"}),(0,s.jsx)(n.td,{children:"includeDirected"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(n.td,{children:"must match if not None"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"145"}),(0,s.jsx)(n.td,{children:"includeCommPaying"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(n.td,{children:"must match if not None"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"146"}),(0,s.jsx)(n.td,{children:"direction"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,s.jsx)(n.td,{children:"must match if not None (Buy = Buy Regular or Sell Flipped) (Buy = cust is buying)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"155"}),(0,s.jsx)(n.td,{children:"netVegaDirection"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,s.jsx)(n.td,{children:"must match if not None (Buy = cust is buying net vega)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"148"}),(0,s.jsx)(n.td,{children:"modifiedBy"}),(0,s.jsx)(n.td,{children:"string(24)"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"149"}),(0,s.jsx)(n.td,{children:"modifiedIn"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/SysEnvironment",children:"enum : SysEnvironment"})}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"150"}),(0,s.jsx)(n.td,{children:"timestamp"}),(0,s.jsx)(n.td,{children:"DateTime"}),(0,s.jsx)(n.td,{})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"repeating-fields",children:"REPEATING FIELDS"}),"\n",(0,s.jsx)(n.p,{children:"Industry"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Comment"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"103"}),(0,s.jsx)(n.td,{children:"industry"}),(0,s.jsx)(n.td,{children:"string(32)"})]})})]}),"\n",(0,s.jsx)(n.p,{children:"IncludeTicker"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Comment"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"105"}),(0,s.jsx)(n.td,{children:"ticker"}),(0,s.jsx)(n.td,{children:"TickerKey"})]})})]}),"\n",(0,s.jsx)(n.p,{children:"ExcludeTicker"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Comment"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"107"}),(0,s.jsx)(n.td,{children:"ticker"}),(0,s.jsx)(n.td,{children:"TickerKey"})]})})]}),"\n",(0,s.jsx)(n.p,{children:"SpreadClasses"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Comment"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"158"}),(0,s.jsx)(n.td,{children:"spreadClass"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/SpreadClass",children:"enum : SpreadClass"})})]})})]}),"\n",(0,s.jsx)(n.p,{children:"AuctionTypes"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Comment"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"111"}),(0,s.jsx)(n.td,{children:"auctionType"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/AuctionType",children:"enum : AuctionType"})})]})})]}),"\n",(0,s.jsx)(n.p,{children:"AuctionSources"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Comment"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"113"}),(0,s.jsx)(n.td,{children:"auctionSource"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/AuctionSource",children:"enum : AuctionSource"})})]})})]}),"\n",(0,s.jsx)(n.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,s.jsxs)(r.Z,{children:[(0,s.jsx)(a.Z,{value:"Python",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'UserAuctionFilter'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n    # Required Parameters\n    \"apiKey\": API_KEY,\n    \"cmd\": 'getschema',\n    \"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,s.jsx)(a.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=UserAuctionFilter'\n\n"})})})]}),"\n",(0,s.jsx)(n.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,s.jsxs)(r.Z,{children:[(0,s.jsx)(a.Z,{value:"Python",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'UserAuctionFilter\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'clientFirm|disabled|includeCovered|includeETFs|includeADRs|includeIndexes|minUPrc|hasUAvgDailyVlmFilter|minUAvgDailyVlm|maxUAvgDailyVlm|minSize|minAbsVega|hasAbsDeltaFilter|minAbsDelta|maxAbsDelta|hasXDeltaFilter|minXDelta|maxXDelta|hasAtmSVolFilter|minAtmSVol|maxAtmSVol|hasAtmSDivFilter|minAtmSDiv|maxAtmSDiv|hasExpiryDays|minExpiryDays|maxExpiryDays|includeZDte|includeDaily|includeWeekly|includeRegular|includeQuarterly|includeLongTerm|includeOtherExp|includeFlex|includeDirected|includeCommPaying|direction|netVegaDirection|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'userName:eq:ExampleString\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(a.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=UserAuctionFilter' \\\n--data-urlencode 'view=clientFirm|disabled|includeCovered|includeETFs|includeADRs|includeIndexes|minUPrc|hasUAvgDailyVlmFilter|minUAvgDailyVlm|maxUAvgDailyVlm|minSize|minAbsVega|hasAbsDeltaFilter|minAbsDelta|maxAbsDelta|hasXDeltaFilter|minXDelta|maxXDelta|hasAtmSVolFilter|minAtmSVol|maxAtmSVol|hasAtmSDivFilter|minAtmSDiv|maxAtmSDiv|hasExpiryDays|minExpiryDays|maxExpiryDays|includeZDte|includeDaily|includeWeekly|includeRegular|includeQuarterly|includeLongTerm|includeOtherExp|includeFlex|includeDirected|includeCommPaying|direction|netVegaDirection|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'where=userName:eq:ExampleString'\n"})})})]}),"\n",(0,s.jsx)(n.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,s.jsxs)(r.Z,{children:[(0,s.jsx)(a.Z,{value:"Python",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'UserAuctionFilter\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'clientFirm|disabled|includeCovered|includeETFs|includeADRs|includeIndexes|minUPrc|hasUAvgDailyVlmFilter|minUAvgDailyVlm|maxUAvgDailyVlm|minSize|minAbsVega|hasAbsDeltaFilter|minAbsDelta|maxAbsDelta|hasXDeltaFilter|minXDelta|maxXDelta|hasAtmSVolFilter|minAtmSVol|maxAtmSVol|hasAtmSDivFilter|minAtmSDiv|maxAtmSDiv|hasExpiryDays|minExpiryDays|maxExpiryDays|includeZDte|includeDaily|includeWeekly|includeRegular|includeQuarterly|includeLongTerm|includeOtherExp|includeFlex|includeDirected|includeCommPaying|direction|netVegaDirection|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'userName:eq:ExampleString\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'clientFirm:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(a.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=UserAuctionFilter' \\\n--data-urlencode 'view=clientFirm|disabled|includeCovered|includeETFs|includeADRs|includeIndexes|minUPrc|hasUAvgDailyVlmFilter|minUAvgDailyVlm|maxUAvgDailyVlm|minSize|minAbsVega|hasAbsDeltaFilter|minAbsDelta|maxAbsDelta|hasXDeltaFilter|minXDelta|maxXDelta|hasAtmSVolFilter|minAtmSVol|maxAtmSVol|hasAtmSDivFilter|minAtmSDiv|maxAtmSDiv|hasExpiryDays|minExpiryDays|maxExpiryDays|includeZDte|includeDaily|includeWeekly|includeRegular|includeQuarterly|includeLongTerm|includeOtherExp|includeFlex|includeDirected|includeCommPaying|direction|netVegaDirection|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'where=userName:eq:ExampleString' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=clientFirm:ASC'\n"})})})]}),"\n",(0,s.jsx)(n.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,s.jsxs)(r.Z,{children:[(0,s.jsx)(a.Z,{value:"Python",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'UserAuctionFilter\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'clientFirm|disabled|includeCovered|includeETFs|includeADRs|includeIndexes|minUPrc|hasUAvgDailyVlmFilter|minUAvgDailyVlm|maxUAvgDailyVlm|minSize|minAbsVega|hasAbsDeltaFilter|minAbsDelta|maxAbsDelta|hasXDeltaFilter|minXDelta|maxXDelta|hasAtmSVolFilter|minAtmSVol|maxAtmSVol|hasAtmSDivFilter|minAtmSDiv|maxAtmSDiv|hasExpiryDays|minExpiryDays|maxExpiryDays|includeZDte|includeDaily|includeWeekly|includeRegular|includeQuarterly|includeLongTerm|includeOtherExp|includeFlex|includeDirected|includeCommPaying|direction|netVegaDirection|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'disabled|includeCovered|includeETFs|includeADRs|includeIndexes|hasUAvgDailyVlmFilter|hasAbsDeltaFilter|hasXDeltaFilter|hasAtmSVolFilter|hasAtmSDivFilter|hasExpiryDays|includeZDte|includeDaily|includeWeekly|includeRegular|includeQuarterly|includeLongTerm|includeOtherExp|includeFlex|includeDirected|includeCommPaying|direction|netVegaDirection|modifiedIn\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'userName:eq:ExampleString\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getaggregate\',\n    "msgType": MSG_TYPE,\n    "measure": MEASURE,\n    "group": GROUP,\n    # Optional Parameters\n    "where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(a.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=UserAuctionFilter' \\\n--data-urlencode 'measure=clientFirm|disabled|includeCovered|includeETFs|includeADRs|includeIndexes|minUPrc|hasUAvgDailyVlmFilter|minUAvgDailyVlm|maxUAvgDailyVlm|minSize|minAbsVega|hasAbsDeltaFilter|minAbsDelta|maxAbsDelta|hasXDeltaFilter|minXDelta|maxXDelta|hasAtmSVolFilter|minAtmSVol|maxAtmSVol|hasAtmSDivFilter|minAtmSDiv|maxAtmSDiv|hasExpiryDays|minExpiryDays|maxExpiryDays|includeZDte|includeDaily|includeWeekly|includeRegular|includeQuarterly|includeLongTerm|includeOtherExp|includeFlex|includeDirected|includeCommPaying|direction|netVegaDirection|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'group=disabled|includeCovered|includeETFs|includeADRs|includeIndexes|hasUAvgDailyVlmFilter|hasAbsDeltaFilter|hasXDeltaFilter|hasAtmSVolFilter|hasAtmSDivFilter|hasExpiryDays|includeZDte|includeDaily|includeWeekly|includeRegular|includeQuarterly|includeLongTerm|includeOtherExp|includeFlex|includeDirected|includeCommPaying|direction|netVegaDirection|modifiedIn' \\\n--data-urlencode 'where=userName:eq:ExampleString'\n"})})})]}),"\n",(0,s.jsx)(n.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,s.jsxs)(r.Z,{children:[(0,s.jsx)(a.Z,{value:"Python",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'UserAuctionFilter\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'userName:eq:ExampleString\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(a.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=UserAuctionFilter' \\\n--data-urlencode 'where=userName:eq:ExampleString'\n"})})})]}),"\n",(0,s.jsx)(n.h3,{id:"post-msgs-api-call",children:"Post Msgs API Call"}),"\n",(0,s.jsxs)(r.Z,{children:[(0,s.jsx)(a.Z,{value:"Python",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import requests\n\n# Replace with your desired MLINK URL\nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Request Parameters\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'postmsgs\',\n    "postaction": "U", # (U)pdate, (I)nsert, or (R)eplace\n    "postmerge": "Y", # (Y)es or (N)o\n}\n\npayload = {\n    "header": {\n        "mTyp": "UserAuctionFilter"\n    },\n    "message": {\n        "pkey": {\n            "userName": "exampleString", // string\n            "filterName": "exampleString" // string\n        },\n        "clientFirm": "exampleString", // string\n        "disabled": "enumValue", // enum(YesNo) - None, Yes, No\n        "includeCovered": "enumValue", // enum(YesNo) - None, Yes, No\n        "includeETFs": "enumValue", // enum(YesNo) - None, Yes, No\n        "includeADRs": "enumValue", // enum(YesNo) - None, Yes, No\n        "includeIndexes": "enumValue", // enum(YesNo) - None, Yes, No\n        "minUPrc": 1.0, // float\n        "hasUAvgDailyVlmFilter": "enumValue", // enum(YesNo) - None, Yes, No\n        "minUAvgDailyVlm": 1.0, // float\n        "maxUAvgDailyVlm": 1.0, // float\n        "minSize": 1.0, // float\n        "minAbsVega": 1.0, // float\n        "hasAbsDeltaFilter": "enumValue", // enum(YesNo) - None, Yes, No\n        "minAbsDelta": 1.0, // float\n        "maxAbsDelta": 1.0, // float\n        "hasXDeltaFilter": "enumValue", // enum(YesNo) - None, Yes, No\n        "minXDelta": 1.0, // float\n        "maxXDelta": 1.0, // float\n        "hasAtmSVolFilter": "enumValue", // enum(YesNo) - None, Yes, No\n        "minAtmSVol": 1.0, // float\n        "maxAtmSVol": 1.0, // float\n        "hasAtmSDivFilter": "enumValue", // enum(YesNo) - None, Yes, No\n        "minAtmSDiv": 1.0, // float\n        "maxAtmSDiv": 1.0, // float\n        "hasExpiryDays": "enumValue", // enum(YesNo) - None, Yes, No\n        "minExpiryDays": 1, // int\n        "maxExpiryDays": 1, // int\n        "includeZDte": "enumValue", // enum(YesNo) - None, Yes, No\n        "includeDaily": "enumValue", // enum(YesNo) - None, Yes, No\n        "includeWeekly": "enumValue", // enum(YesNo) - None, Yes, No\n        "includeRegular": "enumValue", // enum(YesNo) - None, Yes, No\n        "includeQuarterly": "enumValue", // enum(YesNo) - None, Yes, No\n        "includeLongTerm": "enumValue", // enum(YesNo) - None, Yes, No\n        "includeOtherExp": "enumValue", // enum(YesNo) - None, Yes, No\n        "includeFlex": "enumValue", // enum(YesNo) - None, Yes, No\n        "includeDirected": "enumValue", // enum(YesNo) - None, Yes, No\n        "includeCommPaying": "enumValue", // enum(YesNo) - None, Yes, No\n        "direction": "enumValue", // enum(BuySell) - None, Buy, Sell\n        "netVegaDirection": "enumValue", // enum(BuySell) - None, Buy, Sell\n        "modifiedBy": "exampleString", // string\n        "modifiedIn": "enumValue", // enum(SysEnvironment) - None, Neptune, Pluto, V7_Stable, V7_Latest, Saturn, Venus, Mars, SysTest, V7_Current\n        "timestamp": "2025-01-01 12:00:00.000000", // yyyy-MM-dd HH:mm:ss.SSSSSS\n        "Industry": [ // Repeating Field\n            {\n                "industry": "exampleString" // string\n            }\n        ],\n        "IncludeTicker": [ // Repeating Field\n            {\n                "ticker": {\n                    "at": "EQT",\n                    "ts": "NMS",\n                    "tk": "AAPL"\n                },\n            }\n        ],\n        "ExcludeTicker": [ // Repeating Field\n            {\n                "ticker": {\n                    "at": "EQT",\n                    "ts": "NMS",\n                    "tk": "AAPL"\n                },\n            }\n        ],\n        "SpreadClasses": [ // Repeating Field\n            {\n                "spreadClass": "enumValue" // enum(SpreadClass) - None, Stk, Fut, Call, Put, Synth, RevCon, Box, JRoll, Roll, Straddle, Strangle, CSpread, PSpread, VStrip, VSpread, HStrip, HSpread, BFly, RiskRev, Mixed, VarSwap\n            }\n        ],\n        "AuctionTypes": [ // Repeating Field\n            {\n                "auctionType": "enumValue" // enum(AuctionType) - None, Exposure, Improvement, Facilitation, Solicitation, Opening, Closing, RFQ, Block, Flash\n            }\n        ],\n        "AuctionSources": [ // Repeating Field\n            {\n                "auctionSource": "enumValue" // enum(AuctionSource) - None, SRC, AMEX, BOX, CBOE, ISE, NYSE, PHLX, NSDQ, BATS, C2, NQBX, MIAX, GMNI, EDGO, MCRY, MPRL, EMLD, MEMX, CME, CBOT, NYMEX, COMEX, ICE, EUREX\n            }\n        ]\n    }\n}\n\nresponse = requests.post(MLINK_PROD_URL, params=params, json=payload)\n'})})}),(0,s.jsx)(a.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'curl -X POST \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\' \\\n--data-urlencode \'apiKey=XXXX-XXXX-XXXX-XXXX\' \\\n--data-urlencode \'cmd=postmsgs\' \\\n--data-urlencode \'postaction=U\' \\ # (U)pdate, (I)nsert, or (R)eplace\n--data-urlencode \'postmerge=Y\' \\ # (Y)es or (N)o\n--header \'Content-Type: application/json\' \\\n--data \'{\n    "header": {\n        "mTyp": "UserAuctionFilter"\n    },\n    "message": {\n        "pkey": {\n            "userName": "exampleString", // string\n            "filterName": "exampleString" // string\n        },\n        "clientFirm": "exampleString", // string\n        "disabled": "enumValue", // enum(YesNo) - None, Yes, No\n        "includeCovered": "enumValue", // enum(YesNo) - None, Yes, No\n        "includeETFs": "enumValue", // enum(YesNo) - None, Yes, No\n        "includeADRs": "enumValue", // enum(YesNo) - None, Yes, No\n        "includeIndexes": "enumValue", // enum(YesNo) - None, Yes, No\n        "minUPrc": 1.0, // float\n        "hasUAvgDailyVlmFilter": "enumValue", // enum(YesNo) - None, Yes, No\n        "minUAvgDailyVlm": 1.0, // float\n        "maxUAvgDailyVlm": 1.0, // float\n        "minSize": 1.0, // float\n        "minAbsVega": 1.0, // float\n        "hasAbsDeltaFilter": "enumValue", // enum(YesNo) - None, Yes, No\n        "minAbsDelta": 1.0, // float\n        "maxAbsDelta": 1.0, // float\n        "hasXDeltaFilter": "enumValue", // enum(YesNo) - None, Yes, No\n        "minXDelta": 1.0, // float\n        "maxXDelta": 1.0, // float\n        "hasAtmSVolFilter": "enumValue", // enum(YesNo) - None, Yes, No\n        "minAtmSVol": 1.0, // float\n        "maxAtmSVol": 1.0, // float\n        "hasAtmSDivFilter": "enumValue", // enum(YesNo) - None, Yes, No\n        "minAtmSDiv": 1.0, // float\n        "maxAtmSDiv": 1.0, // float\n        "hasExpiryDays": "enumValue", // enum(YesNo) - None, Yes, No\n        "minExpiryDays": 1, // int\n        "maxExpiryDays": 1, // int\n        "includeZDte": "enumValue", // enum(YesNo) - None, Yes, No\n        "includeDaily": "enumValue", // enum(YesNo) - None, Yes, No\n        "includeWeekly": "enumValue", // enum(YesNo) - None, Yes, No\n        "includeRegular": "enumValue", // enum(YesNo) - None, Yes, No\n        "includeQuarterly": "enumValue", // enum(YesNo) - None, Yes, No\n        "includeLongTerm": "enumValue", // enum(YesNo) - None, Yes, No\n        "includeOtherExp": "enumValue", // enum(YesNo) - None, Yes, No\n        "includeFlex": "enumValue", // enum(YesNo) - None, Yes, No\n        "includeDirected": "enumValue", // enum(YesNo) - None, Yes, No\n        "includeCommPaying": "enumValue", // enum(YesNo) - None, Yes, No\n        "direction": "enumValue", // enum(BuySell) - None, Buy, Sell\n        "netVegaDirection": "enumValue", // enum(BuySell) - None, Buy, Sell\n        "modifiedBy": "exampleString", // string\n        "modifiedIn": "enumValue", // enum(SysEnvironment) - None, Neptune, Pluto, V7_Stable, V7_Latest, Saturn, Venus, Mars, SysTest, V7_Current\n        "timestamp": "2025-01-01 12:00:00.000000", // yyyy-MM-dd HH:mm:ss.SSSSSS\n        "Industry": [ // Repeating Field\n            {\n                "industry": "exampleString" // string\n            }\n        ],\n        "IncludeTicker": [ // Repeating Field\n            {\n                "ticker": {\n                    "at": "EQT",\n                    "ts": "NMS",\n                    "tk": "AAPL"\n                },\n            }\n        ],\n        "ExcludeTicker": [ // Repeating Field\n            {\n                "ticker": {\n                    "at": "EQT",\n                    "ts": "NMS",\n                    "tk": "AAPL"\n                },\n            }\n        ],\n        "SpreadClasses": [ // Repeating Field\n            {\n                "spreadClass": "enumValue" // enum(SpreadClass) - None, Stk, Fut, Call, Put, Synth, RevCon, Box, JRoll, Roll, Straddle, Strangle, CSpread, PSpread, VStrip, VSpread, HStrip, HSpread, BFly, RiskRev, Mixed, VarSwap\n            }\n        ],\n        "AuctionTypes": [ // Repeating Field\n            {\n                "auctionType": "enumValue" // enum(AuctionType) - None, Exposure, Improvement, Facilitation, Solicitation, Opening, Closing, RFQ, Block, Flash\n            }\n        ],\n        "AuctionSources": [ // Repeating Field\n            {\n                "auctionSource": "enumValue" // enum(AuctionSource) - None, SRC, AMEX, BOX, CBOE, ISE, NYSE, PHLX, NSDQ, BATS, C2, NQBX, MIAX, GMNI, EDGO, MCRY, MPRL, EMLD, MEMX, CME, CBOT, NYMEX, COMEX, ICE, EUREX\n            }\n        ]\n    }\n}\'\n'})})})]})]})}function h(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},9641:function(e,n,i){i.d(n,{Z:()=>t});var l=i("52676");i("75271");var s=i("54461");function t(e){let{children:n,hidden:i,className:t}=e;return(0,l.jsx)("div",{role:"tabpanel",className:(0,s.Z)("tabItem_SSzl",t),hidden:i,children:n})}},71386:function(e,n,i){i.d(n,{Z:()=>g});var l=i("52676"),s=i("75271"),t=i("54461"),r=i("52289"),a=i("3225"),d=i("42834"),c=i("40578"),o=i("35834"),u=i("79616");function m(e){return s.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||s.isValidElement(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h(e){let{value:n,tabValues:i}=e;return i.some(e=>e.value===n)}var x=i("44537");function j(e){let{className:n,block:i,selectedValue:s,selectValue:a,tabValues:d}=e,c=[],{blockElementScrollPositionUntilNextRender:o}=(0,r.o5)(),u=e=>{let n=e.currentTarget,i=d[c.indexOf(n)].value;i!==s&&(o(n),a(i))},m=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{let i=c.indexOf(e.currentTarget)+1;n=c[i]??c[0];break}case"ArrowLeft":{let i=c.indexOf(e.currentTarget)-1;n=c[i]??c[c.length-1]}}n?.focus()};return(0,l.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.Z)("tabs",{"tabs--block":i},n),children:d.map(e=>{let{value:n,label:i,attributes:r}=e;return(0,l.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>c.push(e),onKeyDown:m,onClick:u,...r,className:(0,t.Z)("tabs__item","tabItem_aitt",r?.className,{"tabs__item--active":s===n}),children:i??n},n)})})}function p(e){let{lazy:n,children:i,selectedValue:r}=e,a=(Array.isArray(i)?i:[i]).filter(Boolean);if(n){let e=a.find(e=>e.props.value===r);return e?(0,s.cloneElement)(e,{className:(0,t.Z)("margin-top--md",e.props.className)}):null}return(0,l.jsx)("div",{className:"margin-top--md",children:a.map((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==r}))})}function y(e){let n=function(e){let{defaultValue:n,queryString:i=!1,groupId:l}=e,t=function(e){let{values:n,children:i}=e;return(0,s.useMemo)(()=>{let e=n??m(i).map(e=>{let{props:{value:n,label:i,attributes:l,default:s}}=e;return{value:n,label:i,attributes:l,default:s}});return!function(e){let n=(0,o.lx)(e,(e,n)=>e.value===n.value);if(n.length>0)throw Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,i])}(e),[r,x]=(0,s.useState)(()=>(function(e){let{defaultValue:n,tabValues:i}=e;if(0===i.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:i}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${i.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}let l=i.find(e=>e.default)??i[0];if(!l)throw Error("Unexpected error: 0 tabValues");return l.value})({defaultValue:n,tabValues:t})),[j,p]=function(e){let{queryString:n=!1,groupId:i}=e,l=(0,a.k6)(),t=function(e){let{queryString:n=!1,groupId:i}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!i)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return i??null}({queryString:n,groupId:i});return[(0,c._X)(t),(0,s.useCallback)(e=>{if(!t)return;let n=new URLSearchParams(l.location.search);n.set(t,e),l.replace({...l.location,search:n.toString()})},[t,l])]}({queryString:i,groupId:l}),[y,g]=function(e){let{groupId:n}=e,i=n?`docusaurus.tab.${n}`:null,[l,t]=(0,u.Nk)(i);return[l,(0,s.useCallback)(e=>{i&&t.set(e)},[i,t])]}({groupId:l}),N=(()=>{let e=j??y;return h({value:e,tabValues:t})?e:null})();return(0,d.Z)(()=>{N&&x(N)},[N]),{selectedValue:r,selectValue:(0,s.useCallback)(e=>{if(!h({value:e,tabValues:t}))throw Error(`Can't select invalid tab value=${e}`);x(e),p(e),g(e)},[p,g,t]),tabValues:t}}(e);return(0,l.jsxs)("div",{className:(0,t.Z)("tabs-container","tabList_ArS0"),children:[(0,l.jsx)(j,{...n,...e}),(0,l.jsx)(p,{...n,...e})]})}function g(e){let n=(0,x.Z)();return(0,l.jsx)(y,{...e,children:m(e.children)},String(n))}},91503:function(e,n,i){i.d(n,{Z:function(){return a},a:function(){return r}});var l=i(75271);let s={},t=l.createContext(s);function r(e){let n=l.useContext(t);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),l.createElement(t.Provider,{value:n},e.children)}}}]);