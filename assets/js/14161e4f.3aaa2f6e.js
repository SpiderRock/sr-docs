"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([["92385"],{58596:function(e,s,t){t.r(s),t.d(s,{default:()=>u,frontMatter:()=>a,metadata:()=>r,assets:()=>o,toc:()=>h,contentTitle:()=>l});var r=JSON.parse('{"id":"MessageSchemas/Schema/Topics/client-config/UserConfig","title":"UserConfig","description":"METADATA","source":"@site/versioned_docs/version-8.5.3.3/MessageSchemas/Schema/Topics/1800-client-config/UserConfig.md","sourceDirName":"MessageSchemas/Schema/Topics/1800-client-config","slug":"/MessageSchemas/Schema/Topics/client-config/UserConfig","permalink":"/docs/8.5.3.3/MessageSchemas/Schema/Topics/client-config/UserConfig","draft":false,"unlisted":false,"tags":[],"version":"8.5.3.3","frontMatter":{"title":"UserConfig"},"sidebar":"messageSchemasSidebar","previous":{"title":"UserAuthentication","permalink":"/docs/8.5.3.3/MessageSchemas/Schema/Topics/client-config/UserAuthentication"},"next":{"title":"UserMessage","permalink":"/docs/8.5.3.3/MessageSchemas/Schema/Topics/client-config/UserMessage"}}'),n=t("52676"),d=t("91503"),i=t("71386"),c=t("9641");let a={title:"UserConfig"},l="Schema: UserConfig (ID: 1875)",o={},h=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"REPEATING FIELDS",id:"repeating-fields",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3}];function x(e){let s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsxs)(s.h1,{id:"schema-userconfig-id-1875",children:["Schema: UserConfig ",(0,n.jsx)("span",{className:"small-text",children:"(ID: 1875)"})]})}),"\n",(0,n.jsx)(s.h3,{id:"metadata",children:"METADATA"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Attribute"}),(0,n.jsx)(s.th,{children:"Value"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Topic"}),(0,n.jsx)(s.td,{children:"1800-client-config"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"MLink Token"}),(0,n.jsx)(s.td,{children:"ClientConfig"})]})]})]}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsxs)(s.blockquote,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Note:"})," The symbol ",(0,n.jsx)(s.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"body",children:"BODY"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"#"}),(0,n.jsx)(s.th,{children:"Field"}),(0,n.jsx)(s.th,{children:"Type"}),(0,n.jsx)(s.th,{children:"Comment"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"10="}),(0,n.jsx)(s.td,{children:"userName"}),(0,n.jsx)(s.td,{children:"string(24)"}),(0,n.jsx)(s.td,{children:"SR UserName Handle"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"100"}),(0,n.jsx)(s.td,{children:"clientFirm"}),(0,n.jsx)(s.td,{children:"string(16)"}),(0,n.jsxs)(s.td,{children:["[custom",":ClientFirm","] client firm this user is associated with (can be Sponsor, Core, or Sub)"]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"103"}),(0,n.jsx)(s.td,{children:"userType"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/UserType",children:"enum : UserType"})}),(0,n.jsxs)(s.td,{children:["[custom",":UserType","] (active users only)"]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"106"}),(0,n.jsx)(s.td,{children:"userStatus"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/UserStatus",children:"enum : UserStatus"})}),(0,n.jsxs)(s.td,{children:["[custom",":UserStatus","]"]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"109"}),(0,n.jsx)(s.td,{children:"userStatusDttm"}),(0,n.jsx)(s.td,{children:"DateTime"}),(0,n.jsx)(s.td,{children:"The Date/Time this users status was last changed/updated"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"112"}),(0,n.jsx)(s.td,{children:"userToBeFrozen"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,n.jsx)(s.td,{children:"If the user is to be frozen when date to be frozen is reached"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"115"}),(0,n.jsx)(s.td,{children:"userToBeFrozenDttm"}),(0,n.jsx)(s.td,{children:"DateTime"}),(0,n.jsx)(s.td,{children:"The dateTime the user is to be frozen	if to be froz flag is set to Yes"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"118"}),(0,n.jsx)(s.td,{children:"userAuthAction"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/UserAuthAction",children:"enum : UserAuthAction"})}),(0,n.jsx)(s.td,{children:"used between a tool and an mlink server (SendInvite will go through the QR Code setup process)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"121"}),(0,n.jsx)(s.td,{children:"userAuthState"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/UserAuthState",children:"enum : UserAuthState"})}),(0,n.jsx)(s.td,{children:"view only (should not be modified)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"124"}),(0,n.jsx)(s.td,{children:"userAuthError"}),(0,n.jsx)(s.td,{children:"text1"}),(0,n.jsx)(s.td,{})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"127"}),(0,n.jsx)(s.td,{children:"lastInviteTimestamp"}),(0,n.jsx)(s.td,{children:"DateTime"}),(0,n.jsx)(s.td,{})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"130"}),(0,n.jsx)(s.td,{children:"lastAcceptTimestamp"}),(0,n.jsx)(s.td,{children:"DateTime"}),(0,n.jsx)(s.td,{})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"133"}),(0,n.jsx)(s.td,{children:"description"}),(0,n.jsx)(s.td,{children:"string(255)"}),(0,n.jsx)(s.td,{children:"User record comment/description (if any)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"136"}),(0,n.jsx)(s.td,{children:"displayTimeZone"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/SRTimeZone",children:"enum : SRTimeZone"})}),(0,n.jsxs)(s.td,{children:["[custom",":UserTimeZone","] User timezone (affects date/time display in Tools)"]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"139"}),(0,n.jsx)(s.td,{children:"mlinkActivityLogging"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/LogAmount",children:"enum : LogAmount"})}),(0,n.jsx)(s.td,{children:"Amount of user activity logging/archiving for MLink products. Complete --\x3e Log Everything, Partial --\x3e Take samples, None --\x3e No non-error logging"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"413"}),(0,n.jsx)(s.td,{children:"mlinkMaxBytesPerMs"}),(0,n.jsx)(s.td,{children:"int"}),(0,n.jsx)(s.td,{children:"maximum number of bytes sent in a given millisecond via mink"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"160"}),(0,n.jsx)(s.td,{children:"clientConfigAccess"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/ConfigAccess",children:"enum : ConfigAccess"})}),(0,n.jsx)(s.td,{children:"user can create new (pending approval) or edit existing client configuration records (SRAdmin, SponsorAdmin, ClientAdmin, or SRUser (any sysenv))"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"163"}),(0,n.jsx)(s.td,{children:"accountTypeControl"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/AccountTypeControl",children:"enum : AccountTypeControl"})}),(0,n.jsx)(s.td,{})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"386"}),(0,n.jsx)(s.td,{children:"prodOrderAccess"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/OrderAccess",children:"enum : OrderAccess"})}),(0,n.jsx)(s.td,{})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"387"}),(0,n.jsx)(s.td,{children:"testOrderAccess"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/OrderAccess",children:"enum : OrderAccess"})}),(0,n.jsx)(s.td,{})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"388"}),(0,n.jsx)(s.td,{children:"canCancelProdOrders"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,n.jsx)(s.td,{children:"user can cancel prod (live) orders (implied false for SRUsers, implied true for SRAdmin, SponsorAdmin, ClientAdmin, and users that can enter live orders)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"389"}),(0,n.jsx)(s.td,{children:"canCancelTestOrders"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,n.jsx)(s.td,{children:"user can cancel test orders (implied false for SRUsers, implied true for SRAdmin, SponsorAdmin, ClientAdmin, and users that can enter live orders)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"390"}),(0,n.jsx)(s.td,{children:"canBookProdExecutions"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,n.jsx)(s.td,{children:"user can enter prod (live) away tickets (default false for SRUsers SRAdmin, SponsorAdmin, and ClientAdmin, default true for users that can enter live orders)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"391"}),(0,n.jsx)(s.td,{children:"canBookTestExecutions"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,n.jsx)(s.td,{children:"user can enter test away tickets (default false for SRUsers, SRAdmin, SponsorAdmin, and ClientAdmin, default true for users that can enter live orders)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"175"}),(0,n.jsx)(s.td,{children:"canEditMarRisk"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,n.jsx)(s.td,{})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"181"}),(0,n.jsx)(s.td,{children:"canEditSupervisoryRisk"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,n.jsx)(s.td,{})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"184"}),(0,n.jsx)(s.td,{children:"canEditStockLocateList"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,n.jsx)(s.td,{})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"187"}),(0,n.jsx)(s.td,{children:"displayName"}),(0,n.jsx)(s.td,{children:"text1"}),(0,n.jsxs)(s.td,{children:["[custom",":UserDisplayName","] User display name"]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"190"}),(0,n.jsx)(s.td,{children:"contactEmail"}),(0,n.jsx)(s.td,{children:"string(64)"}),(0,n.jsx)(s.td,{children:"Contact Email Address (reset password email)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"193"}),(0,n.jsx)(s.td,{children:"contactPhone"}),(0,n.jsx)(s.td,{children:"string(32)"}),(0,n.jsx)(s.td,{children:"Contact Phone Number (SMS Text #)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"196"}),(0,n.jsx)(s.td,{children:"contactSlack"}),(0,n.jsx)(s.td,{children:"text1"}),(0,n.jsx)(s.td,{children:"Contact Slack Handle"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"199"}),(0,n.jsx)(s.td,{children:"contactIceChat"}),(0,n.jsx)(s.td,{children:"text1"}),(0,n.jsx)(s.td,{children:"Contact ICE Handle"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"202"}),(0,n.jsx)(s.td,{children:"contactBBergHandle"}),(0,n.jsx)(s.td,{children:"text1"}),(0,n.jsx)(s.td,{children:"Contact Bloomberg Handle (BBGID)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"412"}),(0,n.jsx)(s.td,{children:"contactSymChat"}),(0,n.jsx)(s.td,{children:"text1"}),(0,n.jsx)(s.td,{children:"Contact Symphony Stream ID"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"407"}),(0,n.jsx)(s.td,{children:"chatClientFirm"}),(0,n.jsx)(s.td,{children:"string(16)"}),(0,n.jsx)(s.td,{children:"ICE Gateway (Bot) responder client firm"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"408"}),(0,n.jsx)(s.td,{children:"chatProdAccnt"}),(0,n.jsx)(s.td,{children:"string(16)"}),(0,n.jsx)(s.td,{children:"ICE Gateway (Bot) prod responder accnt"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"409"}),(0,n.jsx)(s.td,{children:"chatTestAccnt"}),(0,n.jsx)(s.td,{children:"string(16)"}),(0,n.jsx)(s.td,{children:"ICE Gateway (Bot) test responder accnt"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"410"}),(0,n.jsx)(s.td,{children:"chatShowRisk"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,n.jsx)(s.td,{children:"ICE Gateway (Bot) show extra auction notice details"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"411"}),(0,n.jsx)(s.td,{children:"auctionView"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/AuctionView",children:"enum : AuctionView"})}),(0,n.jsx)(s.td,{children:"Which type of auctions are enabled (None implies both test and prod)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"205"}),(0,n.jsx)(s.td,{children:"authType"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/AuthType",children:"enum : AuthType"})}),(0,n.jsx)(s.td,{children:"type of user logon allowed"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"208"}),(0,n.jsx)(s.td,{children:"authExternName"}),(0,n.jsx)(s.td,{children:"text1"}),(0,n.jsx)(s.td,{children:"eg.  CorpName"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"211"}),(0,n.jsx)(s.td,{children:"authExternParams"}),(0,n.jsx)(s.td,{children:"text1"}),(0,n.jsxs)(s.td,{children:["eg. ",(0,n.jsx)(s.code,{children:"https://corp.domain.com:xxxx"})]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"214"}),(0,n.jsx)(s.td,{children:"defaultAccnt"}),(0,n.jsx)(s.td,{children:"string(16)"}),(0,n.jsx)(s.td,{children:"default account for this user (used as a tool default/setting); ignored if not viewable; if missing then default is the 1st accnt in the viewable list (alpha order)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"217"}),(0,n.jsx)(s.td,{children:"altUserName"}),(0,n.jsx)(s.td,{children:"string(24)"}),(0,n.jsx)(s.td,{children:"alternate (client supplied) user name (usually for client system integration)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"220"}),(0,n.jsx)(s.td,{children:"cmeTraderId"}),(0,n.jsx)(s.td,{children:"string(24)"}),(0,n.jsx)(s.td,{children:"CME assigned trader ID (if any)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"223"}),(0,n.jsx)(s.td,{children:"cmeLocation"}),(0,n.jsx)(s.td,{children:"string(16)"}),(0,n.jsx)(s.td,{children:"For CME. The traders location is required.  Format example:  US,IL"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"226"}),(0,n.jsx)(s.td,{children:"cfeTraderId"}),(0,n.jsx)(s.td,{children:"string(24)"}),(0,n.jsx)(s.td,{children:"CFE assigned trader ID (if any)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"229"}),(0,n.jsx)(s.td,{children:"cfeFrequentTraderId"}),(0,n.jsx)(s.td,{children:"string(24)"}),(0,n.jsx)(s.td,{children:"CFE frequent trader ID (if any)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"232"}),(0,n.jsx)(s.td,{children:"cfeLocation"}),(0,n.jsx)(s.td,{children:"string(8)"}),(0,n.jsx)(s.td,{children:"CFE trader location (required)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"235"}),(0,n.jsx)(s.td,{children:"iceTraderId"}),(0,n.jsx)(s.td,{children:"string(24)"}),(0,n.jsx)(s.td,{children:"ICE assigned trader ID (if any)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"238"}),(0,n.jsx)(s.td,{children:"icePassword"}),(0,n.jsx)(s.td,{children:"string(24)"}),(0,n.jsx)(s.td,{children:"ICE assigned password (if any)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"241"}),(0,n.jsx)(s.td,{children:"iceCompanyId"}),(0,n.jsx)(s.td,{children:"string(24)"}),(0,n.jsx)(s.td,{children:"ICE Company Id of trader (if any)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"399"}),(0,n.jsx)(s.td,{children:"iceSubRoom"}),(0,n.jsx)(s.td,{children:"string(24)"}),(0,n.jsx)(s.td,{children:"User designated Sub-Chatroom in ICE Chat"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"244"}),(0,n.jsx)(s.td,{children:"cboeTraderId"}),(0,n.jsx)(s.td,{children:"string(24)"}),(0,n.jsx)(s.td,{children:"Cboe assigned trader ID (if any)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"247"}),(0,n.jsx)(s.td,{children:"firmPosVisibility"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,n.jsx)(s.td,{children:"Controls whether user sees the firm position in the SV's widget"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"250"}),(0,n.jsx)(s.td,{children:"allowRandomStrategy"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,n.jsx)(s.td,{children:"SV Widget Control"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"256"}),(0,n.jsx)(s.td,{children:"toolServerCode"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/ToolServerCode",children:"enum : ToolServerCode"})}),(0,n.jsx)(s.td,{children:"needs to match -toolServerCode on the tool server this user is assigned to."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"259"}),(0,n.jsx)(s.td,{children:"toolServerHost"}),(0,n.jsx)(s.td,{children:"string(32)"}),(0,n.jsx)(s.td,{children:"note: this will override auto detection of a server via toolServerCode"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"262"}),(0,n.jsx)(s.td,{children:"toolServerPort"}),(0,n.jsx)(s.td,{children:"int"}),(0,n.jsx)(s.td,{children:"eg, 5240 V7SP, 5440 V7SD, 5640 SV7SB, 6240 V7LP, 6440 V7LPB"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"265"}),(0,n.jsx)(s.td,{children:"toolsAutoShutdown"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,n.jsx)(s.td,{children:"Controls whether tools should auto-shutdown (this should be controled by SR)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"268"}),(0,n.jsx)(s.td,{children:"toolsAutoShutdownTime"}),(0,n.jsx)(s.td,{children:"TimeSpan"}),(0,n.jsx)(s.td,{children:"Tools will shut down at this time if toolsAutoShutdown = Yes (can be overriden by user)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"271"}),(0,n.jsx)(s.td,{children:"srsePwdHash"}),(0,n.jsx)(s.td,{children:"string(41)"}),(0,n.jsx)(s.td,{children:"MySQL password hash (used in launch_srse.py)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"280"}),(0,n.jsx)(s.td,{children:"srseNumCores"}),(0,n.jsx)(s.td,{children:"byte"}),(0,n.jsx)(s.td,{children:"maximum number of simultaneous (active) SRSE queries [0,1,2 ..., 10] [default=1] (note: 0=reject all SRSE queries)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"283"}),(0,n.jsx)(s.td,{children:"srseMaxConnectsPerDay"}),(0,n.jsx)(s.td,{children:"int"}),(0,n.jsx)(s.td,{children:"maximum number of user SRSE connections per day [default=10]"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"286"}),(0,n.jsx)(s.td,{children:"srseMaxConcurrentConnects"}),(0,n.jsx)(s.td,{children:"int"}),(0,n.jsx)(s.td,{children:"maximum number of concurrent SRSE connections [default=5] (note: SRSE has a global max of 100 simultaneous connections per user)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"289"}),(0,n.jsx)(s.td,{children:"srseMaxRowCache"}),(0,n.jsx)(s.td,{children:"int"}),(0,n.jsx)(s.td,{children:"maximum number of rows allowed to be used from the row cache"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"292"}),(0,n.jsx)(s.td,{children:"srseMaxNewOrders"}),(0,n.jsx)(s.td,{children:"int"}),(0,n.jsx)(s.td,{children:"maximum number of new parent orders (per day) that can be inserted via SRSE (0=NONE) [default = 10,000]"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"295"}),(0,n.jsx)(s.td,{children:"srseMaxNewOrdersPerSec"}),(0,n.jsx)(s.td,{children:"int"}),(0,n.jsx)(s.td,{children:"maximum number of new parent orders (per second; 4 second burst) that can be inserted via SRSE (0=NONE) [default = 250]"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"298"}),(0,n.jsx)(s.td,{children:"srseMaxNewOrdersPerStatement"}),(0,n.jsx)(s.td,{children:"int"}),(0,n.jsx)(s.td,{children:"maximum number of new parent orders (per SQL statement) that can be inserted via SRSE (0=NONE) [default = 1,000]"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"395"}),(0,n.jsx)(s.td,{children:"nmsBadge"}),(0,n.jsx)(s.td,{children:"string(16)"}),(0,n.jsx)(s.td,{children:"NMS exchange memembership and badge ids"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"396"}),(0,n.jsx)(s.td,{children:"cfeBadge"}),(0,n.jsx)(s.td,{children:"string(16)"}),(0,n.jsx)(s.td,{children:"CFE exchange memembership and badge ids."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"397"}),(0,n.jsx)(s.td,{children:"cmeBadge"}),(0,n.jsx)(s.td,{children:"string(16)"}),(0,n.jsx)(s.td,{children:"CME/CBOT/COMEX/NYMEX exchange memembership and badge ids."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"398"}),(0,n.jsx)(s.td,{children:"iceBadge"}),(0,n.jsx)(s.td,{children:"string(16)"}),(0,n.jsx)(s.td,{children:"ICE exchange memembership and badge ids."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"355"}),(0,n.jsx)(s.td,{children:"apiKey"}),(0,n.jsx)(s.td,{children:"string(36)"}),(0,n.jsx)(s.td,{children:"(Deprecated, use repeater) API access key (SR supplied; guid; plain text; HEX:32+4) (includes dashes) (can be reset/regenerated as needed)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"358"}),(0,n.jsx)(s.td,{children:"apiKeyExpires"}),(0,n.jsx)(s.td,{children:"DateTime"}),(0,n.jsx)(s.td,{children:"(Deprecated, use repeater) API access key expiration"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"400"}),(0,n.jsx)(s.td,{children:"hasApiKeyAccess"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,n.jsx)(s.td,{children:"User is allowed to use and manage (insert, update and delete) API keys"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"361"}),(0,n.jsx)(s.td,{children:"passwordHash"}),(0,n.jsx)(s.td,{children:"string(64)"}),(0,n.jsx)(s.td,{children:"user password (client supplied; optional; hashed value; HEX representation; SHA-256)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"364"}),(0,n.jsx)(s.td,{children:"passwordExpires"}),(0,n.jsx)(s.td,{children:"DateTime"}),(0,n.jsx)(s.td,{children:"user password expiration"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"367"}),(0,n.jsx)(s.td,{children:"tempPasswordHash"}),(0,n.jsx)(s.td,{children:"string(64)"}),(0,n.jsx)(s.td,{children:"temporary user password hash (SR supplied; can only be used to change password)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"370"}),(0,n.jsx)(s.td,{children:"tempPasswordExpires"}),(0,n.jsx)(s.td,{children:"DateTime"}),(0,n.jsx)(s.td,{children:"temporary user password expiration"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"373"}),(0,n.jsx)(s.td,{children:"tempPasswordCounter"}),(0,n.jsx)(s.td,{children:"int"}),(0,n.jsx)(s.td,{children:"we allow temporary passwords to be change a limited number of times"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"376"}),(0,n.jsx)(s.td,{children:"mfaSecret"}),(0,n.jsx)(s.td,{children:"string(36)"}),(0,n.jsx)(s.td,{children:"MFA Secret (SR supplied; guid; plain text; HEX:32+4) (includes dashes) (can be reset/regenerated as needed)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"379"}),(0,n.jsx)(s.td,{children:"modifiedBy"}),(0,n.jsx)(s.td,{children:"string(24)"}),(0,n.jsxs)(s.td,{children:["[custom",":ModifiedBy","] user who last modified this record"]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"382"}),(0,n.jsx)(s.td,{children:"modifiedIn"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/SysEnvironment",children:"enum : SysEnvironment"})}),(0,n.jsx)(s.td,{})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"385"}),(0,n.jsx)(s.td,{children:"timestamp"}),(0,n.jsx)(s.td,{children:"DateTime"}),(0,n.jsx)(s.td,{})]})]})]}),"\n",(0,n.jsx)(s.h3,{id:"repeating-fields",children:"REPEATING FIELDS"}),"\n",(0,n.jsx)(s.p,{children:"AccountAccessControl"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Field"}),(0,n.jsx)(s.th,{children:"Type"}),(0,n.jsx)(s.th,{children:"Comment"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"154"}),(0,n.jsx)(s.td,{children:"accnt"}),(0,n.jsx)(s.td,{children:"string(16)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"157"}),(0,n.jsx)(s.td,{children:"accessType"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/AccountAccessType",children:"enum : AccountAccessType"})})]})]})]}),"\n",(0,n.jsx)(s.p,{children:"CitrixProductControl"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Field"}),(0,n.jsx)(s.th,{children:"Type"}),(0,n.jsx)(s.th,{children:"Comment"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"252"}),(0,n.jsx)(s.td,{children:"productCode"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/CitrixProductCode",children:"enum : CitrixProductCode"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"253"}),(0,n.jsx)(s.td,{children:"expires"}),(0,n.jsx)(s.td,{children:"DateTime"})]})]})]}),"\n",(0,n.jsx)(s.p,{children:"SrseProductControl"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Field"}),(0,n.jsx)(s.th,{children:"Type"}),(0,n.jsx)(s.th,{children:"Comment"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"275"}),(0,n.jsx)(s.td,{children:"productCode"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/SrseProductCode",children:"enum : SrseProductCode"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"276"}),(0,n.jsx)(s.td,{children:"expires"}),(0,n.jsx)(s.td,{children:"DateTime"})]})]})]}),"\n",(0,n.jsx)(s.p,{children:"SrseHistoricalControl"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Field"}),(0,n.jsx)(s.th,{children:"Type"}),(0,n.jsx)(s.th,{children:"Comment"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"278"}),(0,n.jsx)(s.td,{children:"productCode"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/SrseProductCode",children:"enum : SrseProductCode"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"279"}),(0,n.jsx)(s.td,{children:"expires"}),(0,n.jsx)(s.td,{children:"DateTime"})]})]})]}),"\n",(0,n.jsx)(s.p,{children:"WebProductControl"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Field"}),(0,n.jsx)(s.th,{children:"Type"}),(0,n.jsx)(s.th,{children:"Comment"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"307"}),(0,n.jsx)(s.td,{children:"token"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/WebProductToken",children:"enum : WebProductToken"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"310"}),(0,n.jsx)(s.td,{children:"expires"}),(0,n.jsx)(s.td,{children:"DateTime"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"313"}),(0,n.jsx)(s.td,{children:"value"}),(0,n.jsx)(s.td,{children:"string(10)"})]})]})]}),"\n",(0,n.jsx)(s.p,{children:"MLinkControl"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Field"}),(0,n.jsx)(s.th,{children:"Type"}),(0,n.jsx)(s.th,{children:"Comment"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"319"}),(0,n.jsx)(s.td,{children:"token"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/MLinkToken",children:"enum : MLinkToken"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"322"}),(0,n.jsx)(s.td,{children:"expires"}),(0,n.jsx)(s.td,{children:"DateTime"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"325"}),(0,n.jsx)(s.td,{children:"stkExch"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/StkExch",children:"enum : StkExch"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"328"}),(0,n.jsx)(s.td,{children:"futExch"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/FutExch",children:"enum : FutExch"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"331"}),(0,n.jsx)(s.td,{children:"optExch"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/OptExch",children:"enum : OptExch"})})]})]})]}),"\n",(0,n.jsx)(s.p,{children:"MarketDataControl"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Field"}),(0,n.jsx)(s.th,{children:"Type"}),(0,n.jsx)(s.th,{children:"Comment"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"337"}),(0,n.jsx)(s.td,{children:"token"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/MarketDataToken",children:"enum : MarketDataToken"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"340"}),(0,n.jsx)(s.td,{children:"scope"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/MarketDataScope",children:"enum : MarketDataScope"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"343"}),(0,n.jsx)(s.td,{children:"classification"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/MktDataClass",children:"enum : MktDataClass"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"346"}),(0,n.jsx)(s.td,{children:"expires"}),(0,n.jsx)(s.td,{children:"DateTime"})]})]})]}),"\n",(0,n.jsx)(s.p,{children:"ApiKeys"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Field"}),(0,n.jsx)(s.th,{children:"Type"}),(0,n.jsx)(s.th,{children:"Comment"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"402"}),(0,n.jsx)(s.td,{children:"id"}),(0,n.jsx)(s.td,{children:"byte"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"403"}),(0,n.jsx)(s.td,{children:"hash"}),(0,n.jsx)(s.td,{children:"string(64)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"404"}),(0,n.jsx)(s.td,{children:"expires"}),(0,n.jsx)(s.td,{children:"DateTime"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"405"}),(0,n.jsx)(s.td,{children:"created"}),(0,n.jsx)(s.td,{children:"DateTime"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"406"}),(0,n.jsx)(s.td,{children:"label"}),(0,n.jsx)(s.td,{children:"string(255)"})]})]})]}),"\n",(0,n.jsx)(s.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,n.jsxs)(i.Z,{children:[(0,n.jsx)(c.Z,{value:"Python",label:"Python",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'UserConfig'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n    # Required Parameters\n    \"apiKey\": API_KEY,\n    \"cmd\": 'getschema',\n    \"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,n.jsx)(c.Z,{value:"cUrl",label:"cUrl",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=UserConfig'\n\n"})})})]}),"\n",(0,n.jsx)(s.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,n.jsxs)(i.Z,{children:[(0,n.jsx)(c.Z,{value:"Python",label:"Python",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'UserConfig\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'clientFirm|userType|userStatus|userStatusDttm|userToBeFrozen|userToBeFrozenDttm|userAuthAction|userAuthState|userAuthError|lastInviteTimestamp|lastAcceptTimestamp|description|displayTimeZone|mlinkActivityLogging|mlinkMaxBytesPerMs|clientConfigAccess|accountTypeControl|prodOrderAccess|testOrderAccess|canCancelProdOrders|canCancelTestOrders|canBookProdExecutions|canBookTestExecutions|canEditMarRisk|canEditSupervisoryRisk|canEditStockLocateList|displayName|contactEmail|contactPhone|contactSlack|contactIceChat|contactBBergHandle|contactSymChat|chatClientFirm|chatProdAccnt|chatTestAccnt|chatShowRisk|auctionView|authType|authExternName|authExternParams|defaultAccnt|altUserName|cmeTraderId|cmeLocation|cfeTraderId|cfeFrequentTraderId|cfeLocation|iceTraderId|icePassword|iceCompanyId|iceSubRoom|cboeTraderId|firmPosVisibility|allowRandomStrategy|toolServerCode|toolServerHost|toolServerPort|toolsAutoShutdown|toolsAutoShutdownTime|srsePwdHash|srseNumCores|srseMaxConnectsPerDay|srseMaxConcurrentConnects|srseMaxRowCache|srseMaxNewOrders|srseMaxNewOrdersPerSec|srseMaxNewOrdersPerStatement|nmsBadge|cfeBadge|cmeBadge|iceBadge|apiKey|apiKeyExpires|hasApiKeyAccess|passwordHash|passwordExpires|tempPasswordHash|tempPasswordExpires|tempPasswordCounter|mfaSecret|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'userName:eq:ExampleString\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,n.jsx)(c.Z,{value:"cUrl",label:"cUrl",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=UserConfig' \\\n--data-urlencode 'view=clientFirm|userType|userStatus|userStatusDttm|userToBeFrozen|userToBeFrozenDttm|userAuthAction|userAuthState|userAuthError|lastInviteTimestamp|lastAcceptTimestamp|description|displayTimeZone|mlinkActivityLogging|mlinkMaxBytesPerMs|clientConfigAccess|accountTypeControl|prodOrderAccess|testOrderAccess|canCancelProdOrders|canCancelTestOrders|canBookProdExecutions|canBookTestExecutions|canEditMarRisk|canEditSupervisoryRisk|canEditStockLocateList|displayName|contactEmail|contactPhone|contactSlack|contactIceChat|contactBBergHandle|contactSymChat|chatClientFirm|chatProdAccnt|chatTestAccnt|chatShowRisk|auctionView|authType|authExternName|authExternParams|defaultAccnt|altUserName|cmeTraderId|cmeLocation|cfeTraderId|cfeFrequentTraderId|cfeLocation|iceTraderId|icePassword|iceCompanyId|iceSubRoom|cboeTraderId|firmPosVisibility|allowRandomStrategy|toolServerCode|toolServerHost|toolServerPort|toolsAutoShutdown|toolsAutoShutdownTime|srsePwdHash|srseNumCores|srseMaxConnectsPerDay|srseMaxConcurrentConnects|srseMaxRowCache|srseMaxNewOrders|srseMaxNewOrdersPerSec|srseMaxNewOrdersPerStatement|nmsBadge|cfeBadge|cmeBadge|iceBadge|apiKey|apiKeyExpires|hasApiKeyAccess|passwordHash|passwordExpires|tempPasswordHash|tempPasswordExpires|tempPasswordCounter|mfaSecret|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'where=userName:eq:ExampleString'\n"})})})]}),"\n",(0,n.jsx)(s.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,n.jsxs)(i.Z,{children:[(0,n.jsx)(c.Z,{value:"Python",label:"Python",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'UserConfig\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'clientFirm|userType|userStatus|userStatusDttm|userToBeFrozen|userToBeFrozenDttm|userAuthAction|userAuthState|userAuthError|lastInviteTimestamp|lastAcceptTimestamp|description|displayTimeZone|mlinkActivityLogging|mlinkMaxBytesPerMs|clientConfigAccess|accountTypeControl|prodOrderAccess|testOrderAccess|canCancelProdOrders|canCancelTestOrders|canBookProdExecutions|canBookTestExecutions|canEditMarRisk|canEditSupervisoryRisk|canEditStockLocateList|displayName|contactEmail|contactPhone|contactSlack|contactIceChat|contactBBergHandle|contactSymChat|chatClientFirm|chatProdAccnt|chatTestAccnt|chatShowRisk|auctionView|authType|authExternName|authExternParams|defaultAccnt|altUserName|cmeTraderId|cmeLocation|cfeTraderId|cfeFrequentTraderId|cfeLocation|iceTraderId|icePassword|iceCompanyId|iceSubRoom|cboeTraderId|firmPosVisibility|allowRandomStrategy|toolServerCode|toolServerHost|toolServerPort|toolsAutoShutdown|toolsAutoShutdownTime|srsePwdHash|srseNumCores|srseMaxConnectsPerDay|srseMaxConcurrentConnects|srseMaxRowCache|srseMaxNewOrders|srseMaxNewOrdersPerSec|srseMaxNewOrdersPerStatement|nmsBadge|cfeBadge|cmeBadge|iceBadge|apiKey|apiKeyExpires|hasApiKeyAccess|passwordHash|passwordExpires|tempPasswordHash|tempPasswordExpires|tempPasswordCounter|mfaSecret|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'userName:eq:ExampleString\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'clientFirm:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,n.jsx)(c.Z,{value:"cUrl",label:"cUrl",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=UserConfig' \\\n--data-urlencode 'view=clientFirm|userType|userStatus|userStatusDttm|userToBeFrozen|userToBeFrozenDttm|userAuthAction|userAuthState|userAuthError|lastInviteTimestamp|lastAcceptTimestamp|description|displayTimeZone|mlinkActivityLogging|mlinkMaxBytesPerMs|clientConfigAccess|accountTypeControl|prodOrderAccess|testOrderAccess|canCancelProdOrders|canCancelTestOrders|canBookProdExecutions|canBookTestExecutions|canEditMarRisk|canEditSupervisoryRisk|canEditStockLocateList|displayName|contactEmail|contactPhone|contactSlack|contactIceChat|contactBBergHandle|contactSymChat|chatClientFirm|chatProdAccnt|chatTestAccnt|chatShowRisk|auctionView|authType|authExternName|authExternParams|defaultAccnt|altUserName|cmeTraderId|cmeLocation|cfeTraderId|cfeFrequentTraderId|cfeLocation|iceTraderId|icePassword|iceCompanyId|iceSubRoom|cboeTraderId|firmPosVisibility|allowRandomStrategy|toolServerCode|toolServerHost|toolServerPort|toolsAutoShutdown|toolsAutoShutdownTime|srsePwdHash|srseNumCores|srseMaxConnectsPerDay|srseMaxConcurrentConnects|srseMaxRowCache|srseMaxNewOrders|srseMaxNewOrdersPerSec|srseMaxNewOrdersPerStatement|nmsBadge|cfeBadge|cmeBadge|iceBadge|apiKey|apiKeyExpires|hasApiKeyAccess|passwordHash|passwordExpires|tempPasswordHash|tempPasswordExpires|tempPasswordCounter|mfaSecret|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'where=userName:eq:ExampleString' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=clientFirm:ASC'\n"})})})]}),"\n",(0,n.jsx)(s.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,n.jsxs)(i.Z,{children:[(0,n.jsx)(c.Z,{value:"Python",label:"Python",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'UserConfig\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'clientFirm|userType|userStatus|userStatusDttm|userToBeFrozen|userToBeFrozenDttm|userAuthAction|userAuthState|userAuthError|lastInviteTimestamp|lastAcceptTimestamp|description|displayTimeZone|mlinkActivityLogging|mlinkMaxBytesPerMs|clientConfigAccess|accountTypeControl|prodOrderAccess|testOrderAccess|canCancelProdOrders|canCancelTestOrders|canBookProdExecutions|canBookTestExecutions|canEditMarRisk|canEditSupervisoryRisk|canEditStockLocateList|displayName|contactEmail|contactPhone|contactSlack|contactIceChat|contactBBergHandle|contactSymChat|chatClientFirm|chatProdAccnt|chatTestAccnt|chatShowRisk|auctionView|authType|authExternName|authExternParams|defaultAccnt|altUserName|cmeTraderId|cmeLocation|cfeTraderId|cfeFrequentTraderId|cfeLocation|iceTraderId|icePassword|iceCompanyId|iceSubRoom|cboeTraderId|firmPosVisibility|allowRandomStrategy|toolServerCode|toolServerHost|toolServerPort|toolsAutoShutdown|toolsAutoShutdownTime|srsePwdHash|srseNumCores|srseMaxConnectsPerDay|srseMaxConcurrentConnects|srseMaxRowCache|srseMaxNewOrders|srseMaxNewOrdersPerSec|srseMaxNewOrdersPerStatement|nmsBadge|cfeBadge|cmeBadge|iceBadge|apiKey|apiKeyExpires|hasApiKeyAccess|passwordHash|passwordExpires|tempPasswordHash|tempPasswordExpires|tempPasswordCounter|mfaSecret|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'userType|userStatus|userToBeFrozen|userAuthAction|userAuthState|displayTimeZone|mlinkActivityLogging|clientConfigAccess|accountTypeControl|prodOrderAccess|testOrderAccess|canCancelProdOrders|canCancelTestOrders|canBookProdExecutions|canBookTestExecutions|canEditMarRisk|canEditSupervisoryRisk|canEditStockLocateList|chatShowRisk|auctionView|authType|firmPosVisibility|allowRandomStrategy|toolServerCode|toolsAutoShutdown|hasApiKeyAccess|modifiedIn\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'userName:eq:ExampleString\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getaggregate\',\n    "msgType": MSG_TYPE,\n    "measure": MEASURE,\n    "group": GROUP,\n    # Optional Parameters\n    "where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,n.jsx)(c.Z,{value:"cUrl",label:"cUrl",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=UserConfig' \\\n--data-urlencode 'measure=clientFirm|userType|userStatus|userStatusDttm|userToBeFrozen|userToBeFrozenDttm|userAuthAction|userAuthState|userAuthError|lastInviteTimestamp|lastAcceptTimestamp|description|displayTimeZone|mlinkActivityLogging|mlinkMaxBytesPerMs|clientConfigAccess|accountTypeControl|prodOrderAccess|testOrderAccess|canCancelProdOrders|canCancelTestOrders|canBookProdExecutions|canBookTestExecutions|canEditMarRisk|canEditSupervisoryRisk|canEditStockLocateList|displayName|contactEmail|contactPhone|contactSlack|contactIceChat|contactBBergHandle|contactSymChat|chatClientFirm|chatProdAccnt|chatTestAccnt|chatShowRisk|auctionView|authType|authExternName|authExternParams|defaultAccnt|altUserName|cmeTraderId|cmeLocation|cfeTraderId|cfeFrequentTraderId|cfeLocation|iceTraderId|icePassword|iceCompanyId|iceSubRoom|cboeTraderId|firmPosVisibility|allowRandomStrategy|toolServerCode|toolServerHost|toolServerPort|toolsAutoShutdown|toolsAutoShutdownTime|srsePwdHash|srseNumCores|srseMaxConnectsPerDay|srseMaxConcurrentConnects|srseMaxRowCache|srseMaxNewOrders|srseMaxNewOrdersPerSec|srseMaxNewOrdersPerStatement|nmsBadge|cfeBadge|cmeBadge|iceBadge|apiKey|apiKeyExpires|hasApiKeyAccess|passwordHash|passwordExpires|tempPasswordHash|tempPasswordExpires|tempPasswordCounter|mfaSecret|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'group=userType|userStatus|userToBeFrozen|userAuthAction|userAuthState|displayTimeZone|mlinkActivityLogging|clientConfigAccess|accountTypeControl|prodOrderAccess|testOrderAccess|canCancelProdOrders|canCancelTestOrders|canBookProdExecutions|canBookTestExecutions|canEditMarRisk|canEditSupervisoryRisk|canEditStockLocateList|chatShowRisk|auctionView|authType|firmPosVisibility|allowRandomStrategy|toolServerCode|toolsAutoShutdown|hasApiKeyAccess|modifiedIn' \\\n--data-urlencode 'where=userName:eq:ExampleString'\n"})})})]}),"\n",(0,n.jsx)(s.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,n.jsxs)(i.Z,{children:[(0,n.jsx)(c.Z,{value:"Python",label:"Python",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'UserConfig\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'userName:eq:ExampleString\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,n.jsx)(c.Z,{value:"cUrl",label:"cUrl",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=UserConfig' \\\n--data-urlencode 'where=userName:eq:ExampleString'\n"})})})]})]})}function u(e={}){let{wrapper:s}={...(0,d.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(x,{...e})}):x(e)}},9641:function(e,s,t){t.d(s,{Z:()=>d});var r=t("52676");t("75271");var n=t("54461");function d(e){let{children:s,hidden:t,className:d}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,n.Z)("tabItem_SSzl",d),hidden:t,children:s})}},71386:function(e,s,t){t.d(s,{Z:()=>f});var r=t("52676"),n=t("75271"),d=t("54461"),i=t("52289"),c=t("3225"),a=t("42834"),l=t("40578"),o=t("35834"),h=t("79616");function x(e){return n.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||n.isValidElement(e)&&function(e){let{props:s}=e;return!!s&&"object"==typeof s&&"value"in s}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function u(e){let{value:s,tabValues:t}=e;return t.some(e=>e.value===s)}var m=t("44537");function j(e){let{className:s,block:t,selectedValue:n,selectValue:c,tabValues:a}=e,l=[],{blockElementScrollPositionUntilNextRender:o}=(0,i.o5)(),h=e=>{let s=e.currentTarget,t=a[l.indexOf(s)].value;t!==n&&(o(s),c(t))},x=e=>{let s=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{let t=l.indexOf(e.currentTarget)+1;s=l[t]??l[0];break}case"ArrowLeft":{let t=l.indexOf(e.currentTarget)-1;s=l[t]??l[l.length-1]}}s?.focus()};return(0,r.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,d.Z)("tabs",{"tabs--block":t},s),children:a.map(e=>{let{value:s,label:t,attributes:i}=e;return(0,r.jsx)("li",{role:"tab",tabIndex:n===s?0:-1,"aria-selected":n===s,ref:e=>l.push(e),onKeyDown:x,onClick:h,...i,className:(0,d.Z)("tabs__item","tabItem_aitt",i?.className,{"tabs__item--active":n===s}),children:t??s},s)})})}function p(e){let{lazy:s,children:t,selectedValue:i}=e,c=(Array.isArray(t)?t:[t]).filter(Boolean);if(s){let e=c.find(e=>e.props.value===i);return e?(0,n.cloneElement)(e,{className:(0,d.Z)("margin-top--md",e.props.className)}):null}return(0,r.jsx)("div",{className:"margin-top--md",children:c.map((e,s)=>(0,n.cloneElement)(e,{key:s,hidden:e.props.value!==i}))})}function g(e){let s=function(e){let{defaultValue:s,queryString:t=!1,groupId:r}=e,d=function(e){let{values:s,children:t}=e;return(0,n.useMemo)(()=>{let e=s??x(t).map(e=>{let{props:{value:s,label:t,attributes:r,default:n}}=e;return{value:s,label:t,attributes:r,default:n}});return!function(e){let s=(0,o.lx)(e,(e,s)=>e.value===s.value);if(s.length>0)throw Error(`Docusaurus error: Duplicate values "${s.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[s,t])}(e),[i,m]=(0,n.useState)(()=>(function(e){let{defaultValue:s,tabValues:t}=e;if(0===t.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(s){if(!u({value:s,tabValues:t}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${s}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return s}let r=t.find(e=>e.default)??t[0];if(!r)throw Error("Unexpected error: 0 tabValues");return r.value})({defaultValue:s,tabValues:d})),[j,p]=function(e){let{queryString:s=!1,groupId:t}=e,r=(0,c.k6)(),d=function(e){let{queryString:s=!1,groupId:t}=e;if("string"==typeof s)return s;if(!1===s)return null;if(!0===s&&!t)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:s,groupId:t});return[(0,l._X)(d),(0,n.useCallback)(e=>{if(!d)return;let s=new URLSearchParams(r.location.search);s.set(d,e),r.replace({...r.location,search:s.toString()})},[d,r])]}({queryString:t,groupId:r}),[g,f]=function(e){let{groupId:s}=e,t=s?`docusaurus.tab.${s}`:null,[r,d]=(0,h.Nk)(t);return[r,(0,n.useCallback)(e=>{t&&d.set(e)},[t,d])]}({groupId:r}),y=(()=>{let e=j??g;return u({value:e,tabValues:d})?e:null})();return(0,a.Z)(()=>{y&&m(y)},[y]),{selectedValue:i,selectValue:(0,n.useCallback)(e=>{if(!u({value:e,tabValues:d}))throw Error(`Can't select invalid tab value=${e}`);m(e),p(e),f(e)},[p,f,d]),tabValues:d}}(e);return(0,r.jsxs)("div",{className:(0,d.Z)("tabs-container","tabList_ArS0"),children:[(0,r.jsx)(j,{...s,...e}),(0,r.jsx)(p,{...s,...e})]})}function f(e){let s=(0,m.Z)();return(0,r.jsx)(g,{...e,children:x(e.children)},String(s))}},91503:function(e,s,t){t.d(s,{Z:function(){return c},a:function(){return i}});var r=t(75271);let n={},d=r.createContext(n);function i(e){let s=r.useContext(d);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),r.createElement(d.Provider,{value:s},e.children)}}}]);