"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([["50070"],{94425:function(e,r,t){t.r(r),t.d(r,{default:()=>x,frontMatter:()=>d,metadata:()=>n,assets:()=>o,toc:()=>u,contentTitle:()=>c});var n=JSON.parse('{"id":"MessageSchemas/Schema/Topics/analytics/LiveRevConQuote","title":"LiveRevConQuote","description":"METADATA","source":"@site/docs/MessageSchemas/Schema/Topics/1000-analytics/LiveRevConQuote.md","sourceDirName":"MessageSchemas/Schema/Topics/1000-analytics","slug":"/MessageSchemas/Schema/Topics/analytics/LiveRevConQuote","permalink":"/docs/next/MessageSchemas/Schema/Topics/analytics/LiveRevConQuote","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"LiveRevConQuote"},"sidebar":"messageSchemasSidebar","previous":{"title":"LiveRateCurve","permalink":"/docs/next/MessageSchemas/Schema/Topics/analytics/LiveRateCurve"},"next":{"title":"LiveSurfaceAtm","permalink":"/docs/next/MessageSchemas/Schema/Topics/analytics/LiveSurfaceAtm"}}'),s=t("52676"),a=t("91503"),i=t("71386"),l=t("9641");let d={title:"LiveRevConQuote"},c="Schema: LiveRevConQuote (ID: 1125)",o={},u=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3}];function h(e){let r={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsxs)(r.h1,{id:"schema-liverevconquote-id-1125",children:["Schema: LiveRevConQuote ",(0,s.jsx)("span",{className:"small-text",children:"(ID: 1125)"})]})}),"\n",(0,s.jsx)(r.h3,{id:"metadata",children:"METADATA"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Attribute"}),(0,s.jsx)(r.th,{children:"Value"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Topic"}),(0,s.jsx)(r.td,{children:"1000-analytics"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"MLink Token"}),(0,s.jsx)(r.td,{children:"OptRevCon"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SRSE Product"}),(0,s.jsx)(r.td,{children:"SRAnalytics"})]})]})]}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Note:"})," The symbol ",(0,s.jsx)(r.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"body",children:"BODY"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"#"}),(0,s.jsx)(r.th,{children:"Field"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Default Value"}),(0,s.jsx)(r.th,{children:"Comment"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"10="}),(0,s.jsx)(r.td,{children:"okey"}),(0,s.jsx)(r.td,{children:"OptionKey"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"cp = Both"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"11="}),(0,s.jsx)(r.td,{children:"tradeDate"}),(0,s.jsx)(r.td,{children:"DateKey"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"100"}),(0,s.jsx)(r.td,{children:"ticker"}),(0,s.jsx)(r.td,{children:"TickerKey"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"SR Ticker (Product Group)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"101"}),(0,s.jsx)(r.td,{children:"xAxis"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"xAxis = Moneyness"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"102"}),(0,s.jsx)(r.td,{children:"cDe"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"call delta"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"103"}),(0,s.jsx)(r.td,{children:"pDe"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"put delta"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"104"}),(0,s.jsx)(r.td,{children:"uPrc"}),(0,s.jsx)(r.td,{children:"double"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"live underlier price"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"105"}),(0,s.jsx)(r.td,{children:"atmVol"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"106"}),(0,s.jsx)(r.td,{children:"years"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"number of volatility years to expiry date (volatility time metric)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"107"}),(0,s.jsx)(r.td,{children:"globalRate"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"global rate (average discount rate) to expiry date"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"108"}),(0,s.jsx)(r.td,{children:"ddiv"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"sum of estimated discrete dividend stream to expiry date"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"109"}),(0,s.jsx)(r.td,{children:"ddivPv"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"present value of estimated discrete dividend stream to expiry date"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"110"}),(0,s.jsx)(r.td,{children:"ddivSource"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/DDivSource",children:"enum : DDivSource"})}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"present value of estimated discrete dividend stream to expiry date"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"111"}),(0,s.jsx)(r.td,{children:"iDays"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"number of interest (calendar) days to expiry"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"129"}),(0,s.jsx)(r.td,{children:"ddivDisc"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"dividend discount factor: SUM(div * iDays / 365.0 - divYrs) due to dividends being paid (thereby lowering the uPrc basis) prior to expiry"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"112"}),(0,s.jsx)(r.td,{children:"strikePv"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"strike * EXP(-globalRate * iDays / 365)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"113"}),(0,s.jsx)(r.td,{children:"fairSVol"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"call/put surface volatility value"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"114"}),(0,s.jsx)(r.td,{children:"fairSDiv"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"call/put surface alignment sdiv value"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"115"}),(0,s.jsx)(r.td,{children:"fairCallPrc"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"fairPrice = PRICE.AMERICAN(uPrc, years, fairVol, fairSDiv, globalRate, {ddivStream})"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"116"}),(0,s.jsx)(r.td,{children:"fairCallPrcE"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"fairPrice = PRICE.EUROPEAN(uPrc, years, fairVol, fairSDiv, globalRate, {ddivStream})"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"117"}),(0,s.jsx)(r.td,{children:"fairPutPrc"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"fairPrice = PRICE.AMERICAN(uPrc, years, fairVol, fairSDiv, globalRate, {ddivStream})"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"118"}),(0,s.jsx)(r.td,{children:"fairPutPrcE"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"fairPrice = PRICE.EUROPEAN(uPrc, years, fairVol, fairSDiv, globalRate, {ddivStream})"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"119"}),(0,s.jsx)(r.td,{children:"rcFairPrc"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"fairCallPrc - fairPutPrc - uPrc + strike  (revCon fairMid price)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"120"}),(0,s.jsx)(r.td,{children:"rcEExPrem"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"(fairPutPrc - fairPutPrcE) - (fairCallPrc - fairCallPrcE)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"121"}),(0,s.jsx)(r.td,{children:"fairLoanPv"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"fairCallPrc - fairPutPrc - uPrc + strike + strikePv + ddivPv  (total present value of letting out shares) (term to expiry) (per share)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"122"}),(0,s.jsx)(r.td,{children:"fairLoanRate"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"fairLoanPv / (uPrc * iDays / 365.0 - ddivDisc)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"130"}),(0,s.jsx)(r.td,{children:"rcBidPrc"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"callBid - putAsk - uPrc + strike (best way) (join markets)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"131"}),(0,s.jsx)(r.td,{children:"rcAskPrc"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"callAsk - putBid - uPrc + strike (worst way) (cross markets)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"125"}),(0,s.jsx)(r.td,{children:"calcError"}),(0,s.jsx)(r.td,{children:"string(16)"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"126"}),(0,s.jsx)(r.td,{children:"cpOI"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"c/p open interest (market) [upper bound]"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"127"}),(0,s.jsx)(r.td,{children:"cpVlm"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"c/p print volume (this exchange) [upper bound]"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"128"}),(0,s.jsx)(r.td,{children:"timestamp"}),(0,s.jsx)(r.td,{children:"DateTime"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"last update time (Date)"})]})]})]}),"\n",(0,s.jsx)(r.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,s.jsxs)(i.Z,{children:[(0,s.jsx)(l.Z,{value:"Python",label:"Python",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'LiveRevConQuote'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n    # Required Parameters\n    \"apiKey\": API_KEY,\n    \"cmd\": 'getschema',\n    \"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,s.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=LiveRevConQuote'\n\n"})})})]}),"\n",(0,s.jsx)(r.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,s.jsxs)(i.Z,{children:[(0,s.jsx)(l.Z,{value:"Python",label:"Python",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'LiveRevConQuote\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'ticker|xAxis|cDe|pDe|uPrc|atmVol|years|globalRate|ddiv|ddivPv|ddivSource|iDays|ddivDisc|strikePv|fairSVol|fairSDiv|fairCallPrc|fairCallPrcE|fairPutPrc|fairPutPrcE|rcFairPrc|rcEExPrem|fairLoanPv|fairLoanRate|rcBidPrc|rcAskPrc|calcError|cpOI|cpVlm|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'calcError:eq:ExampleString\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=LiveRevConQuote' \\\n--data-urlencode 'view=ticker|xAxis|cDe|pDe|uPrc|atmVol|years|globalRate|ddiv|ddivPv|ddivSource|iDays|ddivDisc|strikePv|fairSVol|fairSDiv|fairCallPrc|fairCallPrcE|fairPutPrc|fairPutPrcE|rcFairPrc|rcEExPrem|fairLoanPv|fairLoanRate|rcBidPrc|rcAskPrc|calcError|cpOI|cpVlm|timestamp' \\\n--data-urlencode 'where=calcError:eq:ExampleString'\n"})})})]}),"\n",(0,s.jsx)(r.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,s.jsxs)(i.Z,{children:[(0,s.jsx)(l.Z,{value:"Python",label:"Python",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'LiveRevConQuote\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'ticker|xAxis|cDe|pDe|uPrc|atmVol|years|globalRate|ddiv|ddivPv|ddivSource|iDays|ddivDisc|strikePv|fairSVol|fairSDiv|fairCallPrc|fairCallPrcE|fairPutPrc|fairPutPrcE|rcFairPrc|rcEExPrem|fairLoanPv|fairLoanRate|rcBidPrc|rcAskPrc|calcError|cpOI|cpVlm|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'calcError:eq:ExampleString\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'ticker:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=LiveRevConQuote' \\\n--data-urlencode 'view=ticker|xAxis|cDe|pDe|uPrc|atmVol|years|globalRate|ddiv|ddivPv|ddivSource|iDays|ddivDisc|strikePv|fairSVol|fairSDiv|fairCallPrc|fairCallPrcE|fairPutPrc|fairPutPrcE|rcFairPrc|rcEExPrem|fairLoanPv|fairLoanRate|rcBidPrc|rcAskPrc|calcError|cpOI|cpVlm|timestamp' \\\n--data-urlencode 'where=calcError:eq:ExampleString' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=ticker:ASC'\n"})})})]}),"\n",(0,s.jsx)(r.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,s.jsxs)(i.Z,{children:[(0,s.jsx)(l.Z,{value:"Python",label:"Python",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'LiveRevConQuote\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'ticker|xAxis|cDe|pDe|uPrc|atmVol|years|globalRate|ddiv|ddivPv|ddivSource|iDays|ddivDisc|strikePv|fairSVol|fairSDiv|fairCallPrc|fairCallPrcE|fairPutPrc|fairPutPrcE|rcFairPrc|rcEExPrem|fairLoanPv|fairLoanRate|rcBidPrc|rcAskPrc|calcError|cpOI|cpVlm|timestamp\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'ddivSource\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'calcError:eq:ExampleString\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getaggregate\',\n    "msgType": MSG_TYPE,\n    "measure": MEASURE,\n    "group": GROUP,\n    # Optional Parameters\n    "where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=LiveRevConQuote' \\\n--data-urlencode 'measure=ticker|xAxis|cDe|pDe|uPrc|atmVol|years|globalRate|ddiv|ddivPv|ddivSource|iDays|ddivDisc|strikePv|fairSVol|fairSDiv|fairCallPrc|fairCallPrcE|fairPutPrc|fairPutPrcE|rcFairPrc|rcEExPrem|fairLoanPv|fairLoanRate|rcBidPrc|rcAskPrc|calcError|cpOI|cpVlm|timestamp' \\\n--data-urlencode 'group=ddivSource' \\\n--data-urlencode 'where=calcError:eq:ExampleString'\n"})})})]}),"\n",(0,s.jsx)(r.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,s.jsxs)(i.Z,{children:[(0,s.jsx)(l.Z,{value:"Python",label:"Python",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'LiveRevConQuote\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'calcError:eq:ExampleString\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=LiveRevConQuote' \\\n--data-urlencode 'where=calcError:eq:ExampleString'\n"})})})]})]})}function x(e={}){let{wrapper:r}={...(0,a.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},9641:function(e,r,t){t.d(r,{Z:()=>a});var n=t("52676");t("75271");var s=t("54461");function a(e){let{children:r,hidden:t,className:a}=e;return(0,n.jsx)("div",{role:"tabpanel",className:(0,s.Z)("tabItem_SSzl",a),hidden:t,children:r})}},71386:function(e,r,t){t.d(r,{Z:()=>f});var n=t("52676"),s=t("75271"),a=t("54461"),i=t("52289"),l=t("3225"),d=t("42834"),c=t("40578"),o=t("35834"),u=t("79616");function h(e){return s.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||s.isValidElement(e)&&function(e){let{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function x(e){let{value:r,tabValues:t}=e;return t.some(e=>e.value===r)}var p=t("44537");function m(e){let{className:r,block:t,selectedValue:s,selectValue:l,tabValues:d}=e,c=[],{blockElementScrollPositionUntilNextRender:o}=(0,i.o5)(),u=e=>{let r=e.currentTarget,t=d[c.indexOf(r)].value;t!==s&&(o(r),l(t))},h=e=>{let r=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{let t=c.indexOf(e.currentTarget)+1;r=c[t]??c[0];break}case"ArrowLeft":{let t=c.indexOf(e.currentTarget)-1;r=c[t]??c[c.length-1]}}r?.focus()};return(0,n.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":t},r),children:d.map(e=>{let{value:r,label:t,attributes:i}=e;return(0,n.jsx)("li",{role:"tab",tabIndex:s===r?0:-1,"aria-selected":s===r,ref:e=>c.push(e),onKeyDown:h,onClick:u,...i,className:(0,a.Z)("tabs__item","tabItem_aitt",i?.className,{"tabs__item--active":s===r}),children:t??r},r)})})}function j(e){let{lazy:r,children:t,selectedValue:i}=e,l=(Array.isArray(t)?t:[t]).filter(Boolean);if(r){let e=l.find(e=>e.props.value===i);return e?(0,s.cloneElement)(e,{className:(0,a.Z)("margin-top--md",e.props.className)}):null}return(0,n.jsx)("div",{className:"margin-top--md",children:l.map((e,r)=>(0,s.cloneElement)(e,{key:r,hidden:e.props.value!==i}))})}function v(e){let r=function(e){let{defaultValue:r,queryString:t=!1,groupId:n}=e,a=function(e){let{values:r,children:t}=e;return(0,s.useMemo)(()=>{let e=r??h(t).map(e=>{let{props:{value:r,label:t,attributes:n,default:s}}=e;return{value:r,label:t,attributes:n,default:s}});return!function(e){let r=(0,o.lx)(e,(e,r)=>e.value===r.value);if(r.length>0)throw Error(`Docusaurus error: Duplicate values "${r.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[r,t])}(e),[i,p]=(0,s.useState)(()=>(function(e){let{defaultValue:r,tabValues:t}=e;if(0===t.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!x({value:r,tabValues:t}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${r}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return r}let n=t.find(e=>e.default)??t[0];if(!n)throw Error("Unexpected error: 0 tabValues");return n.value})({defaultValue:r,tabValues:a})),[m,j]=function(e){let{queryString:r=!1,groupId:t}=e,n=(0,l.k6)(),a=function(e){let{queryString:r=!1,groupId:t}=e;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!t)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:r,groupId:t});return[(0,c._X)(a),(0,s.useCallback)(e=>{if(!a)return;let r=new URLSearchParams(n.location.search);r.set(a,e),n.replace({...n.location,search:r.toString()})},[a,n])]}({queryString:t,groupId:n}),[v,f]=function(e){let{groupId:r}=e,t=r?`docusaurus.tab.${r}`:null,[n,a]=(0,u.Nk)(t);return[n,(0,s.useCallback)(e=>{t&&a.set(e)},[t,a])]}({groupId:n}),P=(()=>{let e=m??v;return x({value:e,tabValues:a})?e:null})();return(0,d.Z)(()=>{P&&p(P)},[P]),{selectedValue:i,selectValue:(0,s.useCallback)(e=>{if(!x({value:e,tabValues:a}))throw Error(`Can't select invalid tab value=${e}`);p(e),j(e),f(e)},[j,f,a]),tabValues:a}}(e);return(0,n.jsxs)("div",{className:(0,a.Z)("tabs-container","tabList_ArS0"),children:[(0,n.jsx)(m,{...r,...e}),(0,n.jsx)(j,{...r,...e})]})}function f(e){let r=(0,p.Z)();return(0,n.jsx)(v,{...e,children:h(e.children)},String(r))}},91503:function(e,r,t){t.d(r,{Z:function(){return l},a:function(){return i}});var n=t(75271);let s={},a=n.createContext(s);function i(e){let r=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(a.Provider,{value:r},e.children)}}}]);