"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[81527],{80498:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>T,contentTitle:()=>a,default:()=>s,frontMatter:()=>N,metadata:()=>i,toc:()=>L});var t=r(74848),o=r(28453);const N={title:"SpdrParentReport"},a=void 0,i={id:"MessageSchemas/Schema/SRSE Products/SRTrade/SpdrParentReport/SpdrParentReport",title:"SpdrParentReport",description:"V8 Message Definition",source:"@site/docs/MessageSchemas/Schema/SRSE Products/SRTrade/SpdrParentReport/SpdrParentReport.md",sourceDirName:"MessageSchemas/Schema/SRSE Products/SRTrade/SpdrParentReport",slug:"/MessageSchemas/Schema/SRSE Products/SRTrade/SpdrParentReport/",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRTrade/SpdrParentReport/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"SpdrParentReport"},sidebar:"messageSchemasSidebar",previous:{title:"SpdrParentOrder",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRTrade/SpdrParentOrder/"},next:{title:"SpdrParentReviewRequest",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRTrade/SpdrParentReviewRequest/"}},T={},L=[];function l(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"../../../Topics/parent-orders/SpdrParentReport",children:"V8 Message Definition"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE `SRTrade`.`MsgSRParentReport` (\n    `parentNumber` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'SPDR order number',\n    `sysRealm` ENUM('None','SysTest','NMS','CME','FR2','LD4','DR') NOT NULL DEFAULT 'None',\n    `sysEnvironment` ENUM('None','Neptune','Pluto','V7_Stable','V7_Latest','Saturn','Venus','Mars','SysTest','V7_Current') NOT NULL DEFAULT 'None',\n    `runStatus` ENUM('None','Prod','Beta','UAT','SysTest') NOT NULL DEFAULT 'None',\n    `reportNumber` BIGINT NOT NULL DEFAULT 0,\n    `parentShape` ENUM('None','Single','Cross','MLeg','MLegCross') NOT NULL DEFAULT 'None',\n    `recordVersion` SMALLINT NOT NULL DEFAULT 0,\n    `recordSource` ENUM('None','NewOrder','CancelReplace','CancelRequest','ExecReport','CancelReject','TerminalRec') NOT NULL DEFAULT 'None',\n    `parentVersion` SMALLINT NOT NULL DEFAULT 0 COMMENT 'SPDR order instance number (1 = original order; 2 = 1st cancel/replace, etc)',\n    `baseParentNumber` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'SPDR order number (initial number in cancel/replace sequence) (also, source parent for dynamically generated orders;eg auto-hedges)',\n    `prevParentNumber` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'SPDR order number (order being cancelled/replaced) (zero if none)',\n    `nextParentNumber` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'SPDR order number (next order in cxl/replace sequence) (zero if none)',\n    `prevParentCreateDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'none/undefined if first order in a sequence',\n    `prevParentCumFillQty` INT NOT NULL DEFAULT 0,\n    `clientSeqNumIn` INT NOT NULL DEFAULT 0 COMMENT 'inbound client seq number (FIX orders only)',\n    `altOrderId` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'usually client clOrdId (from FIX or SRSE)',\n    `altPrevOrderId` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'usually previous/orig (cxl/repl) client clOrdId (from FIX or SRSE)',\n    `altCancelId` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'client cancelId (from FIX or SRSE) [identifies the message responsible for user cxl actions]',\n    `srcRoutingCode` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'inbound FIX routing code, if any',\n    `packageId` BIGINT NOT NULL DEFAULT 0 COMMENT 'references spread orderNumber, if a legged spread order',\n    `prevPackageId` BIGINT NOT NULL DEFAULT 0,\n    `riskGroupId` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'all orders with the same riskGroupId share a common set of risk counters; .Grp. risk limits apply to these shared counters',\n    `triggerGroupId` BIGINT NOT NULL DEFAULT 0 COMMENT 'WaitTrigger group Id',\n    `secKey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None',\n    `secKey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None',\n    `secKey_tk` VARCHAR(12) NOT NULL DEFAULT '',\n    `secKey_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0,\n    `secKey_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0,\n    `secKey_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0,\n    `secKey_xx` DOUBLE NOT NULL DEFAULT 0,\n    `secKey_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call',\n    `secType` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None',\n    `accnt` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'SR trading account',\n    `clientFirm` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'SR client firm',\n    `coreClientFirm` VARCHAR(16) NOT NULL DEFAULT '',\n    `sponsorClientFirm` VARCHAR(16) NOT NULL DEFAULT '',\n    `clientAccnt` VARCHAR(32) NOT NULL DEFAULT '' COMMENT 'client assigned \"long\" account string (from AccountConfig) [used to map between client and SR account strings]',\n    `userName` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'name of the user entering the order',\n    `userSource` ENUM('None','SpdrTicket','SpdrSingle','SRSE','FIX','HedgeTool','TradeHedge','OpenHedge','AutoHedge','Orphan','RiskManager','OrderManager','ManagedOrder','RFQRespSrvr','Legger','SRSEDrop','FixDrop','TicketDrop','SysTest','RFRResponse','AllocOmni','AllocClient','CertGateway','MLegResponse','LeggerX','DropManager','AutoHedgeSrvr','AuctionStrategySrvr','AllocBlockFace','AllocBlockCust','IceChatGateway','EXS2SRC','MLinkResponse','AutoResponderVD','AutoResponderRC','AutoResponderSN','AutoResponderBX') NOT NULL DEFAULT 'None' COMMENT 'SpdrSource of this order',\n    `altAccnt` VARCHAR(32) NOT NULL DEFAULT '' COMMENT 'alternate (client assigned) \"long\" account string (optional) [used to map between client and SR account strings]',\n    `altUserName` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'alternate (client assigned) user name (optional) [used to map between client and SR account strings]',\n    `execBrkrCode` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'overrides the default executing broker for this parent order',\n    `externExDest` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'routing code for orders directed to an external order router (default = null); must match an exDest associated with a RouteDefinition',\n    `externParams` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'external algo names/parameters (usually just an algo name)',\n    `spdrSource` ENUM('None','SpdrTicket','SpdrSingle','SRSE','FIX','HedgeTool','TradeHedge','OpenHedge','AutoHedge','Orphan','RiskManager','OrderManager','ManagedOrder','RFQRespSrvr','Legger','SRSEDrop','FixDrop','TicketDrop','SysTest','RFRResponse','AllocOmni','AllocClient','CertGateway','MLegResponse','LeggerX','DropManager','AutoHedgeSrvr','AuctionStrategySrvr','AllocBlockFace','AllocBlockCust','IceChatGateway','EXS2SRC','MLinkResponse','AutoResponderVD','AutoResponderRC','AutoResponderSN','AutoResponderBX') NOT NULL DEFAULT 'None' COMMENT 'parent order source enum',\n    `groupingCode` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'unique broker code; broker.pkey = (key + accnt + spdrSource + groupingCode)',\n    `engineName` VARCHAR(32) NOT NULL DEFAULT '' COMMENT 'execution engine (partition) handling this parent order',\n    `orderDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000',\n    `orderSide` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'None',\n    `priceType` ENUM('None','Explicit','Offset','Zero') NOT NULL DEFAULT 'None',\n    `orderSize` INT NOT NULL DEFAULT 0,\n    `orderActiveSize` INT NOT NULL DEFAULT 0 COMMENT 'total activated size (total size released for execution) (-1 = all available size)',\n    `spdrStageType` ENUM('None','ModifyAny','ModifyAlgo') NOT NULL DEFAULT 'None' COMMENT 'SizeLock = stage pending modification (can reduce size); SizeModify = stage pending modification (can increase/reduce size)',\n    `stageReview` ENUM('None','Strict','Normal') NOT NULL DEFAULT 'None',\n    `parentOrderHandling` ENUM('None','ActiveTaker','PostOnly','DMA','MktOnOpn','MktOnCls','Facilitate','Matrix','Legger','Seeker','SeekerLegger','CrossResponse','AuctionResponse','MLegAuctionResp','RFQRequest','AwayAlgo','ExchPing','BlockAuction','BlockResponse','SweepTake','CobMaker','FaceOmni','TestParent') NOT NULL DEFAULT 'None',\n    `parentBalanceHandling` ENUM('None','PostWith','PostTurn','PostImprove','PostLimit','MaxIntern','PostWthF','PostImprvR','PostFlash','PostFlashW','PostPeg','PostFlashI') NOT NULL DEFAULT 'None',\n    `limitPrice` DOUBLE NOT NULL DEFAULT 0 COMMENT 'limit price @ order arrival',\n    `orderLimitType` ENUM('None','Market','MarketArrival','Prc','PrcDe','PrcDeX','PrcDeT','PrcDeP','PrcDeXT','PrcDeXP','Vol','VolX','PrcV','PrcVX','NoLimit','RelMid','RelJoin','RelCross','SmrtFast','SmrtNorm','RelTurn','PrcDeEm','VolEm','Aux','UPrcPct','PkgNeutral','RcPrem','SynthLimitMM','SynthLimitBW','SynthLimitWW') NOT NULL DEFAULT 'None',\n    `takeLimitClass` ENUM('Simple','Surface','Probability','SurfProb') NOT NULL DEFAULT 'Simple',\n    `makeLimitClass` ENUM('Simple','Surface','Probability','SurfProb') NOT NULL DEFAULT 'Simple',\n    `startType` ENUM('None','WaitTrigger','TriggerAll') NOT NULL DEFAULT 'None' COMMENT 'WaitTrigger associates this order with a triggerGroupId.  The initial wave of child orders from the TriggerGroup will be simultaneously delivered when a trigger signal is received.',\n    `marketSession` ENUM('None','PreMkt','RegMkt','PostMkt','PreRegMkt','RegPostMkt','AllDay') NOT NULL DEFAULT 'None',\n    `startDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT '[optional] (default: 2000-01-01)',\n    `goodTillDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT '[optional] (default: 2099-01-01)',\n    `autoHedge` ENUM('None','Static','AutoMid','AutoCrx','AutoTrn','SpdrAuto','Spdr10S','Spdr30S','Spdr90S','Spdr5M','Spdr30M','SpdrDay','SmartFast','SmartNorm','FastCrx','FastDark','SlowDark','AlphaVwap1pct','AlphaVwap2pct','AlphaVwap5pct','AlphaVwap25pct','Custom','AwayAlgo') NOT NULL DEFAULT 'None',\n    `hedgeInstrument` ENUM('None','Default','FrontMonth','Stock','Future') NOT NULL DEFAULT 'None' COMMENT 'Default=underlier (EQT or FUT) [Index Options use ETF]; FrontMonth=underlier (EQT) or front month (FUT) [Index Options use FM Fut]; Stock=hedgeSecKey; Future=hedgeSecKey',\n    `hedgeSecKey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None',\n    `hedgeSecKey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None',\n    `hedgeSecKey_tk` VARCHAR(12) NOT NULL DEFAULT '',\n    `hedgeSecKey_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0,\n    `hedgeSecKey_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0,\n    `hedgeSecKey_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0,\n    `hedgeSecType` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None',\n    `hedgeBetaRatio` FLOAT NOT NULL DEFAULT 0 COMMENT 'portion of executed $money to auto-hedge (can be 1.0 / Beta for beta hedging) [-4.0 to +4.0])',\n    `hedgeScope` ENUM('None','Accnt','RiskGroup') NOT NULL DEFAULT 'None' COMMENT 'hedge group scope [RiskGroup or Accnt]',\n    `hedgeSession` ENUM('None','PreMkt','RegMkt','PostMkt','PreRegMkt','RegPostMkt','AllDay') NOT NULL DEFAULT 'None' COMMENT 'market session for the autohedge order',\n    `orderCreateDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'order send time',\n    `orderCreateLatency` FLOAT NOT NULL DEFAULT 0 COMMENT 'order send to order ack latency (in milliseconds)',\n    `cancelReason` ENUM('None','UserCxl','SpdrCxl') NOT NULL DEFAULT 'None',\n    `orderCancelDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'order cancel time',\n    `orderCancelLatency` FLOAT NOT NULL DEFAULT 0 COMMENT 'cancel send to cancel ack latency (in milliseconds)',\n    `orderWorkingDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'order send ack time (acknowleged working/new) (first exec report indicating the order is active)',\n    `orderClosedDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'order terminated ack time (first exec report indicating the order is in a terminal state;eg. cancelled, filled, rejected, etc)',\n    `orderClosedText` VARCHAR(255) NOT NULL DEFAULT '',\n    `maxExposureSize` INT NOT NULL DEFAULT 0 COMMENT 'maximum simultaneous cumulative child order public size exposure (-1 = orderActiveSize) [order can overfill if > orderActiveSize and numMakeExchanges > 1]',\n    `publicSize` ENUM('None','Randomize','MktSize','FullSize','MktSizeA','MktSizeB','MktSizeC','FullSizeR','Max25Pct','Max50Pct','Max75Pct','NoSize') NOT NULL DEFAULT 'None' COMMENT 'public order size handling: None=algo default; Randomize=randomize public size; MktSize=expose typical market size; FullSize=expose entire order size where possible; FullSizeR=randomize full size',\n    `canOverlapCxlRepl` ENUM('None','Yes','No') NOT NULL DEFAULT 'None' COMMENT 'can execution engines overlap cancel/replace operations [order can overfill if YES] (at most one active overlapping cxl/replace operation for each parent order)',\n    `progressExposeTime` INT NOT NULL DEFAULT 0 COMMENT 'minimum time (secs) to expose order (0 = no minimum; used to guarantee that the order is exposed at mid-market for some time before actively taking)',\n    `progressRule` ENUM('None','Twap','Vwap','TwapReset','VwapReset','FastReset','SlowReset','TwapAlpha','VwapAlpha','TwapAlphaC','VwapAlphaC','AutoComplete','AllowImmediate','Manual','SpdrPulse','IOC') NOT NULL DEFAULT 'None' COMMENT 'Immediate = all size immediately available; TWAP = work from arrival to expiration; VWAP = work order not faster than participation rate',\n    `progressSliceCnt` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'number of slices to use (default = 4 or 8) [max 20]',\n    `vwapParticipation` FLOAT NOT NULL DEFAULT 0 COMMENT 'target vwap participation rate (target % of trade activity)',\n    `auctionResponder` ENUM('None','Any') NOT NULL DEFAULT 'None' COMMENT 'if set, parent order can be an auction responder',\n    `maxMakeExchFee` FLOAT NOT NULL DEFAULT 0 COMMENT 'maximum making exchange fee (in point value) [zero = no limit; use non-zero number for limit to apply]',\n    `maxTakeExchFee` FLOAT NOT NULL DEFAULT 0 COMMENT 'maximum taking exchange fee (in point value) [zero = no limit; use non-zero number for limit to apply]',\n    `incTakeExchFee` ENUM('None','ExclFee','IncFee') NOT NULL DEFAULT 'None' COMMENT 'include exchange fee in probability and surface based take limit calculations',\n    `incMakeExchFee` ENUM('None','ExclFee','IncFee') NOT NULL DEFAULT 'None' COMMENT 'include exchange fee in probability and surface based make limit calculations',\n    `makeExchRule` ENUM('None','MaxPart','FeeOptimal','ImprvOnly','FeeStrict','RoundRobin','ProRataOptim') NOT NULL DEFAULT 'None' COMMENT 'ActiveMaker exchange preference rule: ''MaxPart'' = maximize participation; ''FeeOrder'' = minimize fees [maximize rebates]; ''ImprvOnly'' will only make when improving NBBO; ''RoundRobin'' will rotate through exch list',\n    `cxlUPrcRange` ENUM('None','Yes','No','YesHalt','NoHalt') NOT NULL DEFAULT 'None' COMMENT 'cancel parent order if/when outside the uPrice range [ _Halt = also cancel if halted ]',\n    `minUBid` FLOAT NOT NULL DEFAULT 0 COMMENT '[optional]',\n    `maxUAsk` FLOAT NOT NULL DEFAULT 0 COMMENT '[optional] (< $0.01 = none)',\n    `minOptionPx` FLOAT NOT NULL DEFAULT 0 COMMENT '[optional] option price floor for tied to stock orders',\n    `maxChildOrders` INT NOT NULL DEFAULT 0 COMMENT 'maximum number of child orders that can be generated by this parent order [order will terminate if/when this cap is reached;zero or neg = unlimited]',\n    `orderDuration` INT NOT NULL DEFAULT 0 COMMENT '[optional] (number of seconds)',\n    `takeReachRule` ENUM('None','Delayed','Passive','WeakOnly','RespondOnly','FullSize','ISOSweep','AllOrNone','QtyOrMore','UpToQty','AtMost25','AtMost50') NOT NULL DEFAULT 'None' COMMENT 'Immediate = reach room immediately available; Delayed = available after [1-3] seconds; Passive = available if contra side aggresses; WeakOnly = only take if available size < avgMarketSize; ISOSweep = Intermarket Sweep [requires WaitTrigger]',\n    `orderPrcLimit` DOUBLE NOT NULL DEFAULT 0 COMMENT 'Applies if LimitType = Prc[]',\n    `orderRefUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'default=underlier.mid',\n    `orderRefDelta` FLOAT NOT NULL DEFAULT 0 COMMENT 'default=option.delta',\n    `orderRefGamma` FLOAT NOT NULL DEFAULT 0 COMMENT 'default=option.gamma',\n    `orderVolLimit` FLOAT NOT NULL DEFAULT 0 COMMENT 'Applies if LimitType = Vol[] [uses SR dividends and borrow rates]',\n    `rateOverride` FLOAT NOT NULL DEFAULT 0 COMMENT 'zero = ignore; > zero = override',\n    `sdivOverride` FLOAT NOT NULL DEFAULT 0,\n    `ddivOverride` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'discrete dividend string override ([yearsToExpiry,divYears:divAmount,divYears:divAmount, ...])',\n    `overrideCode` ENUM('None','SDivOnly','DDivOnly','Both') NOT NULL DEFAULT 'None',\n    `orderPrcOffset` DOUBLE NOT NULL DEFAULT 0 COMMENT 'default=0 [surface, relX and pegX limit offsets]',\n    `takeAlphaType` ENUM('None','Static','Eagle','Hawk','Falcon','Relative') NOT NULL DEFAULT 'None' COMMENT 'Applies if takeLimitClass = Probability',\n    `makeAlphaType` ENUM('None','Static','Eagle','Hawk','Falcon','Relative') NOT NULL DEFAULT 'None' COMMENT 'Applies if makeLimitClass = Probability',\n    `takeAlphaFactor` FLOAT NOT NULL DEFAULT 0 COMMENT '[-2,+2] takeProbLimit = MAX(takeProbability, takeProbAvg + takeAlphaFactor * takeProbStd) [if AlphaType = Relative]',\n    `makeAlphaFactor` FLOAT NOT NULL DEFAULT 0 COMMENT '[-2,+2] makeProbLimit = MAX(makeProbability, makeProbAvg + makeAlphaFactor * makeProbStd) [if AlphaType = Relative]',\n    `takeProbability` FLOAT NOT NULL DEFAULT 0 COMMENT 'takeProbLimit = takeProbability [if AlphaType = Static]',\n    `makeProbability` FLOAT NOT NULL DEFAULT 0 COMMENT 'makeProbLimit = makeProbability [if AlphaType = Static]',\n    `takeSurfPrcOffset` DOUBLE NOT NULL DEFAULT 0 COMMENT 'default=0',\n    `takeSurfVolOffset` FLOAT NOT NULL DEFAULT 0 COMMENT 'default=0',\n    `takeSurfWidthOffset` FLOAT NOT NULL DEFAULT 0 COMMENT '[-1.x to +1.x]       -1.0 = -0.5 * avgMktWidth, +1.0 = +0.5 * avgMktWidth',\n    `makeSurfPrcOffset` DOUBLE NOT NULL DEFAULT 0 COMMENT 'default=0',\n    `makeSurfVolOffset` FLOAT NOT NULL DEFAULT 0 COMMENT 'default=0',\n    `makeSurfWidthOffset` FLOAT NOT NULL DEFAULT 0 COMMENT '[-1.x to +1.x]       -1.0 = -0.5 * avgMktWidth, +1.0 = +0.5 * avgMktWidth',\n    `orderRefEventMult` FLOAT NOT NULL DEFAULT 0,\n    `orderRefEventDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000',\n    `externHedgeExDest` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'external broker exDest (only used if orderHandling=Extern)\t\t\t# Should match FixRoutingTable.destination type (eg. #Nighthawk)',\n    `externHedgeParams` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'external algo names/parameters (usually just an algo name)\t\t\t# usually copied from the FixRoutingTable.externParams',\n    `spdrOrderStatus` ENUM('PendNew','New','PendClose','Closed','Rejected','SendReject') NOT NULL DEFAULT 'PendNew',\n    `spdrCloseReason` ENUM('None','Cancelled','Filled','Replaced','Expired','Limit','System','LegReject','DoneForDay','IOCExpire','UserCxl','NoProgress','TooManyRej','ReplReject','AlgoClose','Restart','InvldParentLimit','FilledRepl','ForceClose','DmaReject','DmaExpire','DmaBrkrCxl','ReviewReject','MarketState','AlgoReject','ReviewTimeout','ChildReject','ChildCancel','ReviewClose','UPrcRange','LegBrkrClosed','ExchRisk','CrossFailed') NOT NULL DEFAULT 'None',\n    `spdrRejectReason` ENUM('None','AccntHold','UnknwnOpt','UnknwnStk','Expired','BadSize','BadOrdNum','DupOrdNum','BadVolPx','BadLmtType','BadMktPrc','BadLimit','SysReject','TestOrder','CustType','NoFirmPos','BadCent','NoSurface','UnknwnAcc','UnknwnRoot','OrdSpacing','BadOptMkt','BadStkMkt','SendFailed','BadExpose','BadPrem','NoOptLeg','Min2Leg','Max6Leg','BadStkSz','BadRatio','BadLegID','DupLegID','MixedRoots','OffMkt','CentVol','CentLeg','CentRng','CentSAtm','CentSpln','CentErr','NoRiskGrp','BadDDivs','NoPricer','CalcErr','TwapLate','TwapTime','NoAcctMap','UserUnk','UserHold','GTCHold','SysException','StkCrossed','BadOrdType','BadSSaleFlag','NoBorrow','NoFacilitateAccnt','UnknwnFut','MktNotOpen','NoRoutes','NoLocate','SSaleRstr','NoLegs','BadSide','BadLegKeyType','UnknwnRefStk','BadRefMktPrc','UnknwnRefFut','UnknwnRefAtm','BadRefVe','BadProdDef','StkOddLot','RiskException','MaxParticipation','MarExemptHold','NoMarRec','NullCounter','StkQty','FutQty','OptQty','StkDDelta','FutDDelta','OptDDelta','StkClsOnly','StkDisabled','FutClsOnly','FutDisabled','OptClsOnly','OptDisabled','OrderMargin','AccMargin','DayMargin','OpenExpose','DayLnDDelta','DayShDDelta','DayAbsDDelta','DayLnWtVega','DayShWtVega','DayAbsWtVega','DayLnNValue','DayShNValue','DayAbsNValue','AccFrozen','ConfigErr','NoFMFuture','NoLinkage','NoProdDef','BadRiskID','InvldAutoH','LegChange','CxlSpacing','BadHedgeInst','TooLateToReduce','PendCxlRepl','InvldCxlRepl','InvldCxl','DmaReject','NoUPrc','TwapSteps','UnknwnFirm','NoSSaleFlg','AccntNotMM','BadSource','VwapLate','AlreadyFilled','UnknownSecKey','InvldGTD','CutoffTime','ParentShape','NoFaceSide','NoFaceLegs','AuctionSize','InvldClFirm','BadLegBrkr','NoLegBrkr','StkLegNotAllowed','BadLeadSide','UnknwnRefUnd','ExecEngineType','NoExchAvail','SelfTrade','PointValueErr','StkCollar','FutCollar','OptCollar','LmtCollar','RefUPrcErr','InvldUser','InvldAccnt','UnknownCrossId','WidUMkt','UMktCls','UPrcRange','RiskCollarRng') NOT NULL DEFAULT 'None',\n    `spdrRejectLevel` ENUM('None','MarExsOnSponsLvl','MarExsOnSponsTkLvl','MarExsOnCoreLvl','MarExsOnCoreTkLvl','MarSponsOnCoreLvl','MarSponsOnCoreTkLvl','MarCoreOnCoreLvl','MarCoreOnCoreTkLvl','MarCoreOnSubLvl','MarCoreOnSubTkLvl','MarCoreOnAccntLvl','MarCoreOnAccntTkLvl','MarSubOnAccntLvl','MarSubOnAccntTkLvl','MarCoreOnCustomLvl','MarCoreOnCustomTkLvl','MarSubOnCustomLvl','MarSubOnCustomTkLvl','UserLvl','UserTkLvl','AccntLvl','AccntTkLvl','CFirmLvl','CFirmTkLvl','RiskGroup','HardLvl','SoftLvl','GblTkLvl') NOT NULL DEFAULT 'None',\n    `firmType` ENUM('None','Customer','Firm','MarketMaker','ProCustomer','BrokerDealer','AwayMM','FirmJBO','BrkrDlrCust') NOT NULL DEFAULT 'None',\n    `orderCapacity` ENUM('None','Agency','Principal','Individual','Proprietary','AgentOtherMember','RisklessPrincipal') NOT NULL DEFAULT 'None',\n    `ssaleFlag` ENUM('None','Long','Short','Exempt','Auto','Open','Close','Cover','NA') NOT NULL DEFAULT 'None' COMMENT 'primary short sale flag (single leg orders)',\n    `positionType` ENUM('None','Opening','Closing','Auto') NOT NULL DEFAULT 'None' COMMENT 'primary position type (single leg orders)',\n    `arriveFirmPos` INT NOT NULL DEFAULT 0 COMMENT 'firm position [resolved @ parent order arrival]',\n    `arriveSSaleFlag` ENUM('None','Long','Short','Exempt','Auto','Open','Close','Cover','NA') NOT NULL DEFAULT 'None' COMMENT 'primary short sale flag (single leg orders) [resolved @ parent order arrival; short if any of order size would be short]',\n    `noCrossGroup` VARCHAR(16) NOT NULL DEFAULT '',\n    `exchTraderId` VARCHAR(16) NOT NULL DEFAULT '',\n    `largeTraderId` VARCHAR(16) NOT NULL DEFAULT '',\n    `tradingLocation` VARCHAR(16) NOT NULL DEFAULT '',\n    `firmPosition` INT NOT NULL DEFAULT 0,\n    `openSellSh` INT NOT NULL DEFAULT 0,\n    `locateQuan` INT NOT NULL DEFAULT 0 COMMENT 'available locate quantity (if selling short) @ arrival time',\n    `locateFirm` VARCHAR(6) NOT NULL DEFAULT '' COMMENT 'locate firm (usually an MPID)',\n    `locatePool` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'locate pool @ locate firm',\n    `clearingFirm` VARCHAR(4) NOT NULL DEFAULT '' COMMENT 'clearing firm [from AccountConfig; may not match parent execution]',\n    `clearingAccnt` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'clearing firm [from AccountConfig; may not match parent execution]',\n    `catReportable` ENUM('None','All','Stock','Options') NOT NULL DEFAULT 'None' COMMENT 'CAT reportable type (from AccountConfig.catReportable)',\n    `catSrcBrkrIMID` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'B/D firm FDID (only exists if a B/D is the source) (supplied by FINRA fbo client) (from ClientFirm.catSrcBrkrIMID)',\n    `catSrcAccntType` ENUM('None','Institutional','Employee','Foreign','Individual','MktMaking','FirmAvgPx','OtherProp','Error') NOT NULL DEFAULT 'None' COMMENT 'CAT account holder type (from AccountConfig.catSrcAccntType [Eqt, Opt])',\n    `catSrcFirmType` ENUM('None','Client','ClientBDAgency','ClientBDFirm','SRFirm') NOT NULL DEFAULT 'None' COMMENT 'CAT source type (from AccountConfig.catSrcType [Eqt, Opt])',\n    `catDestDeptType` ENUM('None','Exchange','Agency','ATS','DMA','Sponsored','Trading','Other') NOT NULL DEFAULT 'None' COMMENT 'Infer from ParentOrder Agency or ATS (BlockInitiate/BlockRespond)',\n    `catAccnt` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'CAT Firm Designated ID',\n    `catBrkrAccnt` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'Brokers CAT Firm Designated ID',\n    `cumFillQuantity` INT NOT NULL DEFAULT 0,\n    `avgFillPrice` DOUBLE NOT NULL DEFAULT 0,\n    `avgFillUPrice` DOUBLE NOT NULL DEFAULT 0,\n    `leavesQty` INT NOT NULL DEFAULT 0,\n    `lastFillNumber` BIGINT NOT NULL DEFAULT 0,\n    `lastFillDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000',\n    `reviewClOrdId` VARCHAR(24) NOT NULL DEFAULT '',\n    `reviewOrigClOrdId` VARCHAR(24) NOT NULL DEFAULT '',\n    `reviewCancelClOrdId` VARCHAR(24) NOT NULL DEFAULT '',\n    `reviewOrderSize` INT NOT NULL DEFAULT 0,\n    `reviewOrderActiveSize` INT NOT NULL DEFAULT 0,\n    `reviewCumFillQuantity` INT NOT NULL DEFAULT 0,\n    `reviewAvgFillPrice` DOUBLE NOT NULL DEFAULT 0,\n    `reviewLeavesQty` INT NOT NULL DEFAULT 0,\n    `reviewOrderStatus` ENUM('PendNew','New','PendClose','Closed','Rejected','SendReject') NOT NULL DEFAULT 'PendNew',\n    `maxProgress` ENUM('None','Initialize','Rejected','PreOpen','RiskHold','Working','ChkRte','RteRej','WaitAction','InMarket','Filling','Filled','PendingClose','Closed','HedgeHold') NOT NULL DEFAULT 'None',\n    `maxProgressDetail` VARCHAR(48) NOT NULL DEFAULT '',\n    `maxProgressTime` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000',\n    `numChildOrders` INT NOT NULL DEFAULT 0 COMMENT '[is390Eligible] (numChildOrders > 0 if parent order is 390 Eligible and also generated at least 1 child order)',\n    `nbboBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'best nbbo bid @ arrival time',\n    `nbboAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'best nbbo ask @ arrival time',\n    `nbboBidSz` INT NOT NULL DEFAULT 0 COMMENT 'public cumulative bid size @ nbboBid',\n    `nbboAskSz` INT NOT NULL DEFAULT 0 COMMENT 'public cumulative ask size @ nbboAsk',\n    `mktStance` ENUM('None','ExchMrkt','NbboMrkt','ExchImpr','NbboImpr','ExchJoin','NbboJoin','Away') NOT NULL DEFAULT 'None',\n    `parentStrategy` VARCHAR(36) NOT NULL DEFAULT '' COMMENT 'client strategy [usually client supplied]',\n    `ticker_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'underlier (option only)',\n    `ticker_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'underlier (option only)',\n    `ticker_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'underlier (option only)',\n    `tickValue` FLOAT NOT NULL DEFAULT 0 COMMENT '$NLV value of a single tick change in display premium\t(pointValue = tickValue / tickSize)',\n    `pointValue` FLOAT NOT NULL DEFAULT 0 COMMENT '$NLV value of a single point change in display premium (pointValue = tickValue / tickSize)',\n    `pointCurrency` ENUM('None','AUD','BRL','CAD','CHF','CNH','CNY','EUR','GBP','JPY','KRW','MXN','MYR','NOK','NZD','SEK','TRY','USD','USDCents','CZK','ZAR','HUF','USX','GBX') NOT NULL DEFAULT 'None',\n    `notionalMult` FLOAT NOT NULL DEFAULT 0,\n    `securityID` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'from ProductDefinition.securityID',\n    `securityDesc` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'from ProductDefinition.securityDesc',\n    `productGroup` VARCHAR(6) NOT NULL DEFAULT '' COMMENT 'from ProductDefinition.productGroup',\n    `productClass` ENUM('None','Equity','Index','Future','Option','Spread') NOT NULL DEFAULT 'None' COMMENT 'from ProductDefinition.productClass',\n    `undKey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'from ProductDefinition.undKey',\n    `undKey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'from ProductDefinition.undKey',\n    `undKey_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'from ProductDefinition.undKey',\n    `undKey_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'from ProductDefinition.undKey',\n    `undKey_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'from ProductDefinition.undKey',\n    `undKey_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'from ProductDefinition.undKey',\n    `undType` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None' COMMENT 'from ProductDefinition.undType',\n    `uSecDesc` VARCHAR(6) NOT NULL DEFAULT '' COMMENT '[options only] underlier security description',\n    `priceFormat` ENUM('None','N0','N1','N2','N3','N4','N5','N6','N7','F4','F8','Q8','F16','F32','H32','Q32','F64','H64','FullPenny','PartPenny','PartNickle','EQT','V1','V2','V3','V4','V5','V6','V7','V8','V9','V10','V11','V12','V13','V14','V15','A0','A1','A2','A3','A4','A5','A6','A7','E32') NOT NULL DEFAULT 'None',\n    `userData1` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'client supplied data field; passes through to parent and child executions and reports as well as FIX drops',\n    `userData2` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'client supplied data field; passes through to parent and child executions and reports as well as FIX drops',\n    `timestamp` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000',\n    `includeSRNetwork` ENUM('None','Include','Exclude','Disclose') NOT NULL DEFAULT 'None',\n    `altCrossId_V7` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'only V7',\n    `execBrokerAccnt_V7` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'only V7',\n    `execBrokerClFirm_V7` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'only V7',\n    `execUsername_V7` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'only V7',\n    `dataCenter_V7` ENUM('None','NY4','NY5','CH2','CH3') NOT NULL DEFAULT 'None' COMMENT 'only v7: enum values do not match with v8: V7[None=0,NY4=1,NY5=2,CH2=3,CH3=4], V8[Does Not Exist]',\n    `timeInForce_V7` ENUM('None','Day','IOC','GTD','ExtDay','Week','ExtWeek') NOT NULL DEFAULT 'None' COMMENT 'only v7 - enum values match with v8',\n    `hedgeTIF_V7` ENUM('None','Day','IOC','GTD','ExtDay','Week','ExtWeek') NOT NULL DEFAULT 'None' COMMENT 'only v7 - enum values match with v8',\n    `locateSource_V7` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'only V7',\n    `clearingFlipType_V7` ENUM('None','CMTA','Giveup','QSR','NSCC_Flip','DVP','BrkrAccnt') NOT NULL DEFAULT 'None' COMMENT 'only v7 - enum values match with v8',\n    `clearingFlipFirm_V7` VARCHAR(6) NOT NULL DEFAULT '' COMMENT 'only V7',\n    `clearingFlipAccnt_V7` VARCHAR(10) NOT NULL DEFAULT '' COMMENT 'only V7',\n    `reviewRoutingCode_V7` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'only V7',\n    `progressTimeout_V7` INT NOT NULL DEFAULT 0 COMMENT 'only V7',\n    `DirectedCounterPartyList` JSON NOT NULL DEFAULT JSON_OBJECT() CHECK(JSON_VALID(DirectedCounterPartyList)),\n    `FaceLegs_V7List` JSON NOT NULL DEFAULT JSON_OBJECT() CHECK(JSON_VALID(FaceLegs_V7List)),\n    `FaceSide_V7List` JSON NOT NULL DEFAULT JSON_OBJECT() CHECK(JSON_VALID(FaceSide_V7List)),\n    `OrderLegsList` JSON NOT NULL DEFAULT JSON_OBJECT() CHECK(JSON_VALID(OrderLegsList)),\n    CONSTRAINT nonnegative_parentNumber CHECK(ASCII(parentNumber) < 56),\n    CONSTRAINT nonnegative_baseParentNumber CHECK(ASCII(baseParentNumber) < 56),\n    CONSTRAINT nonnegative_prevParentNumber CHECK(ASCII(prevParentNumber) < 56),\n    CONSTRAINT nonnegative_nextParentNumber CHECK(ASCII(nextParentNumber) < 56),\n    CONSTRAINT nonnegative_riskGroupId CHECK(ASCII(riskGroupId) < 56),\n    CONSTRAINT nonnegative_groupingCode CHECK(ASCII(groupingCode) < 56),\n    PRIMARY KEY USING HASH (`parentNumber`),\n    KEY `AccntCodeIndex` (`accnt`) USING HASH,\n    KEY `TickerCodeIndex` (`secKey_tk`) USING HASH\n) ENGINE=SRSE DEFAULT CHARSET=LATIN1 COMMENT='';\n\n"})})]})}function s(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>i});var t=r(96540);const o={},N=t.createContext(o);function a(e){const n=t.useContext(N);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(N.Provider,{value:n},e.children)}}}]);