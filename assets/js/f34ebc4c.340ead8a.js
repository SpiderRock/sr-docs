"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([["78981"],{19639:function(e,r,d){d.r(r),d.d(r,{default:()=>x,frontMatter:()=>l,metadata:()=>i,assets:()=>c,toc:()=>a,contentTitle:()=>s});var i=JSON.parse('{"id":"MessageSchemas/Schema/SRSE Products/SRTrade/SpdrParentExecution/SpdrParentExecution","title":"SpdrParentExecution","description":"V8 Message Definiton","source":"@site/versioned_docs/version-8.5.8.3/MessageSchemas/Schema/SRSE Products/SRTrade/SpdrParentExecution/SpdrParentExecution.md","sourceDirName":"MessageSchemas/Schema/SRSE Products/SRTrade/SpdrParentExecution","slug":"/MessageSchemas/Schema/SRSE Products/SRTrade/SpdrParentExecution/","permalink":"/docs/8.5.8.3/MessageSchemas/Schema/SRSE Products/SRTrade/SpdrParentExecution/","draft":false,"unlisted":false,"tags":[],"version":"8.5.8.3","frontMatter":{},"sidebar":"messageSchemasSidebar","previous":{"title":"SpdrParentCancel","permalink":"/docs/8.5.8.3/MessageSchemas/Schema/SRSE Products/SRTrade/SpdrParentCancel/"},"next":{"title":"SpdrParentLimit","permalink":"/docs/8.5.8.3/MessageSchemas/Schema/SRSE Products/SRTrade/SpdrParentLimit/"}}'),n=d("52676"),t=d("91503");let l={},s=void 0,c={},a=[{value:"METADATA",id:"metadata",level:3},{value:"Table Definition",id:"table-definition",level:3},{value:"PRIMARY KEY DEFINITION (Unique)",id:"primary-key-definition-unique",level:3},{value:"SECONDARY INDEX (AccntIndex) (Not Unique)",id:"secondary-index-accntindex-not-unique",level:3},{value:"SECONDARY INDEX (ClientFirmIndex) (Not Unique)",id:"secondary-index-clientfirmindex-not-unique",level:3},{value:"CREATE TABLE EXAMPLE QUERY",id:"create-table-example-query",level:3},{value:"SELECT TABLE EXAMPLE QUERY",id:"select-table-example-query",level:3},{value:"Doc Columns Query",id:"doc-columns-query",level:3}];function h(e){let r={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.p,{children:(0,n.jsx)(r.a,{href:"../../../Topics/parent-orders/SpdrParentExecution",children:"V8 Message Definiton"})}),"\n",(0,n.jsx)(r.p,{children:"SpdrParentExecution records are published every time a parent order execution is received.  They also update as additional post execution mark information is available at F+1m and F+10m."}),"\n",(0,n.jsx)(r.h3,{id:"metadata",children:"METADATA"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Attribute"}),(0,n.jsx)(r.th,{children:"Value"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Topic"}),(0,n.jsx)(r.td,{children:"3985-parent-orders"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"MLink Token"}),(0,n.jsx)(r.td,{children:"ClientTrading"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Product"}),(0,n.jsx)(r.td,{children:"SRTrade"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"accessType"}),(0,n.jsx)(r.td,{children:"SELECT"})]})]})]}),"\n",(0,n.jsx)(r.h3,{id:"table-definition",children:"Table Definition"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Field"}),(0,n.jsx)(r.th,{children:"Type"}),(0,n.jsx)(r.th,{children:"Key"}),(0,n.jsx)(r.th,{children:"Default Value"}),(0,n.jsx)(r.th,{children:"Comment"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillNumber"}),(0,n.jsx)(r.td,{children:"BIGINT"}),(0,n.jsx)(r.td,{children:"PRI"}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"SpiderRock execution number globally unique over trailing 10 days"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"sysRealm"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/SysRealm",children:"enum - SysRealm"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"sysEnvironment"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/SysEnvironment",children:"enum - SysEnvironment"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"runStatus"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/RunStatus",children:"enum - RunStatus"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"version"}),(0,n.jsx)(r.td,{children:"TINYINT UNSIGNED"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"record version numberstarts at zero and goes up every time an execution record is republished eg bust 1m marks 10m marks etc"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"execStatus"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/ExecStatus",children:"enum - ExecStatus"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"SpiderRock execution status FillBustCorrectRejectSysRej"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"execShape"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/ExecShape",children:"enum - ExecShape"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"packageId"}),(0,n.jsx)(r.td,{children:"BIGINT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"SR package Id"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentNumber"}),(0,n.jsx)(r.td,{children:"CHAR(19)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'0000-0000-0000-0000'"}),(0,n.jsx)(r.td,{children:"SR parent number"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentVersion"}),(0,n.jsx)(r.td,{children:"SMALLINT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"SPDR order instance number 1  original order 2  1st cancelreplace etc"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"baseParentNumber"}),(0,n.jsx)(r.td,{children:"CHAR(19)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'0000-0000-0000-0000'"}),(0,n.jsx)(r.td,{children:"SPDR order number initial number in cancelreplace sequence also source parent for dynamically generated orderseg autohedges"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"clOrdId"}),(0,n.jsx)(r.td,{children:"CHAR(19)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'0000-0000-0000-0000'"}),(0,n.jsx)(r.td,{children:"SR child order clOrdID resulting in fill"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"reviewClOrdId"}),(0,n.jsx)(r.td,{children:"VARCHAR(24)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"review session clOrdId usually from inbound review FIX sessionS"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"altFillId"}),(0,n.jsx)(r.td,{children:"BIGINT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"alternate fill ID usually from AwayTktGatewaypkeyclientFillID"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"altOrderId"}),(0,n.jsx)(r.td,{children:"VARCHAR(24)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"alternate order ID usually clOrdId from client"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"altCrossId"}),(0,n.jsx)(r.td,{children:"VARCHAR(24)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"altLegRefId"}),(0,n.jsx)(r.td,{children:"VARCHAR(24)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"altAccnt"}),(0,n.jsx)(r.td,{children:"VARCHAR(32)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"alternate client assigned long account string optional used to map between client and SR account strings"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"altUserName"}),(0,n.jsx)(r.td,{children:"VARCHAR(24)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"alternate client assigned user name optional used to map between client and SR account strings"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"srcRoutingCode"}),(0,n.jsx)(r.td,{children:"TINYTEXT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"inbound FIX routing code if any"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"riskGroupId"}),(0,n.jsx)(r.td,{children:"CHAR(19)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'0000-0000-0000-0000'"}),(0,n.jsx)(r.td,{children:"riskGroupId parent order group ID for this execution report"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"triggerGroupId"}),(0,n.jsx)(r.td,{children:"BIGINT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"WaitTrigger group Id"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"triggerTimestamp"}),(0,n.jsx)(r.td,{children:"BIGINT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"WaitTrigger trigger timestamp nanoseconds since epoch"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"streetClOrdId"}),(0,n.jsx)(r.td,{children:"VARCHAR(24)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"street side clOrdId clOrdId or equivalent of the street side order SRstreet gateway generated"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"streetOrderId"}),(0,n.jsx)(r.td,{children:"VARCHAR(24)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"street side orderId orderId or equivalent of the street side order from street side execReport"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentShape"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/SpdrOrderShape",children:"enum - SpdrOrderShape"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"shape of originating parent order"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"secKey_at"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"execution security key"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"secKey_ts"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"execution security key"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"secKey_tk"}),(0,n.jsx)(r.td,{children:"VARCHAR(12)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"execution security key"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"secKey_yr"}),(0,n.jsx)(r.td,{children:"SMALLINT UNSIGNED"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"execution security key"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"secKey_mn"}),(0,n.jsx)(r.td,{children:"TINYINT UNSIGNED"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"execution security key"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"secKey_dy"}),(0,n.jsx)(r.td,{children:"TINYINT UNSIGNED"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"execution security key"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"secKey_xx"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"execution security key"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"secKey_cp"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/CallPut",children:"enum - CallPut"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'Call'"}),(0,n.jsx)(r.td,{children:"execution security key"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"secType"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/SpdrKeyType",children:"enum - SpdrKeyType"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"execution security type Stock Future Option"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"ticker_at"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"base stock key used for symbol risk aggregation"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"ticker_ts"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"base stock key used for symbol risk aggregation"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"ticker_tk"}),(0,n.jsx)(r.td,{children:"VARCHAR(12)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"base stock key used for symbol risk aggregation"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"accnt"}),(0,n.jsx)(r.td,{children:"VARCHAR(16)"}),(0,n.jsx)(r.td,{children:"SEC"}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"SpiderRock trading accnt broker pkey"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"clientFirm"}),(0,n.jsx)(r.td,{children:"VARCHAR(16)"}),(0,n.jsx)(r.td,{children:"SEC"}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"SR client firm"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"spdrSource"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/SpdrSource",children:"enum - SpdrSource"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"SpiderRock parent order source code broker pkey"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"groupingCode"}),(0,n.jsx)(r.td,{children:"CHAR(19)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'0000-0000-0000-0000'"}),(0,n.jsx)(r.td,{children:"SpiderRock parent broker number broker pkey"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"coreClientFirm"}),(0,n.jsx)(r.td,{children:"VARCHAR(16)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"sponsorClientFirm"}),(0,n.jsx)(r.td,{children:"VARCHAR(16)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"routingCode"}),(0,n.jsx)(r.td,{children:"TINYTEXT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"SpiderRock market routing code"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"engineName"}),(0,n.jsx)(r.td,{children:"VARCHAR(32)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"SpiderRock execution engine that handled the parent order"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"gatewayName"}),(0,n.jsx)(r.td,{children:"VARCHAR(20)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"StreetGateway server than handled the child order if any"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"execRole"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/ExecRole",children:"enum - ExecRole"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"SpiderRock relationship to this execution record"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"execBrkrCode"}),(0,n.jsx)(r.td,{children:"VARCHAR(16)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"SR Assigned executing broker code"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"execBrkrMPID"}),(0,n.jsx)(r.td,{children:"VARCHAR(8)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"FINRAAssigned exec broker MPID if any"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"altBrkrMPID"}),(0,n.jsx)(r.td,{children:"VARCHAR(8)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"alternative broker MPID for a given route if needed"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"execBrkrAccnt"}),(0,n.jsx)(r.td,{children:"VARCHAR(16)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"account at executing broker if any"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"execBrkrClFirm"}),(0,n.jsx)(r.td,{children:"VARCHAR(16)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"clientfirm at executing broker if any"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"execBrkrUserName"}),(0,n.jsx)(r.td,{children:"VARCHAR(16)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"userName at execution broker if any"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"clearingFlipType"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/FlipType",children:"enum - FlipType"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"Clearing Flip Type None ExecBroker CMTA Giveup DTCC QSR etc"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"clearingFlipFirm"}),(0,n.jsx)(r.td,{children:"VARCHAR(6)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"Clearing Flip Firm if any"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"clearingFlipAccnt"}),(0,n.jsx)(r.td,{children:"VARCHAR(10)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"Clearing Flip Account if any"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"clearingFirm"}),(0,n.jsx)(r.td,{children:"VARCHAR(4)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"clearing firm"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"clearingAccnt"}),(0,n.jsx)(r.td,{children:"VARCHAR(12)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"clearing firm account if any"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"origExecID"}),(0,n.jsx)(r.td,{children:"TINYTEXT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"original execution ID string child order"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"lastExecID"}),(0,n.jsx)(r.td,{children:"TINYTEXT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"most recent execution ID same as origExecID unless CANCELCORRECTION has been processed"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"remoteText"}),(0,n.jsx)(r.td,{children:"TINYTEXT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"text comment from remote endpoint if any"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"orderSide"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum - BuySell"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"order side"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"spdrOrderStatus"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/SpdrOrderStatus",children:"enum - SpdrOrderStatus"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'PendNew'"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"spdrCloseReason"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/SpdrCloseReason",children:"enum - SpdrCloseReason"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"cumFillQuantity"}),(0,n.jsx)(r.td,{children:"INT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"cumulative fills this parent number only"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"avgFillPrice"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"cumLegFillQuantity"}),(0,n.jsx)(r.td,{children:"INT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"cumulative fills spread only"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"avgLegFillPrice"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"leavesQty"}),(0,n.jsx)(r.td,{children:"INT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"priceType"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/PriceType",children:"enum - PriceType"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childShape"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/SpdrOrderShape",children:"enum - SpdrOrderShape"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childSize"}),(0,n.jsx)(r.td,{children:"INT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"child order size"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childPrice"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"child order price"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childDttm"}),(0,n.jsx)(r.td,{children:"DATETIME(6)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'1900-01-01 00:00:00.000000'"}),(0,n.jsx)(r.td,{children:"child order generation datetime"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childExch"}),(0,n.jsx)(r.td,{children:"VARCHAR(6)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"child order exchange"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childExDest"}),(0,n.jsx)(r.td,{children:"VARCHAR(12)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"child order exchange destination code"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childExecBroker"}),(0,n.jsx)(r.td,{children:"VARCHAR(8)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"executing broker that child order was routed to"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childIsDirected"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/YesNo",children:"enum - YesNo"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"child order isDirected flag"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childIsoSweep"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/YesNo",children:"enum - YesNo"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"child order ISO sweep flag"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childOrderHandling"}),(0,n.jsx)(r.td,{children:"VARCHAR(24)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"child order handling string from the algo that generated the child order responsible for this fill"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childAlgoHandler"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/ChildHandler",children:"enum - ChildHandler"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"algo handler for this child order"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childCreateReason"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/ChildCreateReason",children:"enum - ChildCreateReason"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childCancelReason"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/ChildCancelReason",children:"enum - ChildCancelReason"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childMakerTaker"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/MakerTaker",children:"enum - MakerTaker"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childUBid"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"underlier market bid at  child order send time"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childUAsk"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"underlier market ask at  child order send time"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childBid"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"market bid at the  child order send time"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childAsk"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"market ask at the  child order send time"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childMark"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"midmarket SR surface price if option  child order send time"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childFairWidth"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"model fair width  child order create"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childVol"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"child order volatility  childLimitRefUPrc"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childProb"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"SR probability for the child order  child order send time"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childLimitRefUPrc"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"limit reference underlier price  child order send time"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childLimitPrc"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"parent order limit price  child order send time"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childVolAtm"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"atm volatility  child order send time"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childPosType"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/PositionType",children:"enum - PositionType"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"child order position type"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childFirmOptPosition"}),(0,n.jsx)(r.td,{children:"INT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"effective firm option position  child order send time"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childSSaleFlag"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum - ShortSaleFlag"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"short sale flag"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childFirmStkPosition"}),(0,n.jsx)(r.td,{children:"INT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"effective firm stock position  child order send time"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childFirmOpenOrders"}),(0,n.jsx)(r.td,{children:"INT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"open sell orders counted in marking  child order send time"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childLocateQuan"}),(0,n.jsx)(r.td,{children:"INT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"available locate quantity if selling short  child order send time"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childLocateFirm"}),(0,n.jsx)(r.td,{children:"VARCHAR(6)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"firm granting the locate"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childLocatePool"}),(0,n.jsx)(r.td,{children:"VARCHAR(16)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"locate pool  firm granting locate"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childMktStance"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/MktStance",children:"enum - MktStance"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"child order was expected to be marketable  child send time"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childCxlAttempted"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/YesNo",children:"enum - YesNo"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"cancel attempt was made on the child order prior to receiving this fill"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childCxlFillLatency"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"cancel attempt to fill report latency in ms"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childMethod"}),(0,n.jsx)(r.td,{children:"VARCHAR(8)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"execution method string"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childSource"}),(0,n.jsx)(r.td,{children:"VARCHAR(12)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"execution source string"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"firmType"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/FirmType",children:"enum - FirmType"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"child order firm type Customer ProCust Firm MM etc"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"priAggGroup"}),(0,n.jsx)(r.td,{children:"VARCHAR(16)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"primary aggregation group"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"secAggGroup"}),(0,n.jsx)(r.td,{children:"VARCHAR(16)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"secondary aggregation group"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"directedClientFirm"}),(0,n.jsx)(r.td,{children:"VARCHAR(16)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"isCommPaying"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/YesNo",children:"enum - YesNo"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillTransactDttm"}),(0,n.jsx)(r.td,{children:"DATETIME(6)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'1900-01-01 00:00:00.000000'"}),(0,n.jsx)(r.td,{children:"transaction datetime as reported by exchange or down stream broker"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillTs"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"fill report ts seconds since startup 100 nanosec resolution"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillDttm"}),(0,n.jsx)(r.td,{children:"DATETIME(6)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'1900-01-01 00:00:00.000000'"}),(0,n.jsx)(r.td,{children:"Datetime of fill arrival SRDateTime"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillExch"}),(0,n.jsx)(r.td,{children:"VARCHAR(12)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"ExDest code from child order execution report"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillExecId"}),(0,n.jsx)(r.td,{children:"TINYTEXT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"street side execution Id"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillExecRefId"}),(0,n.jsx)(r.td,{children:"TINYTEXT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"street side execution ref Id only used when busting an execution"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillLegRefId"}),(0,n.jsx)(r.td,{children:"BIGINT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"legRefId for multileg fills"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillLegRatio"}),(0,n.jsx)(r.td,{children:"INT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"legRatio if spread order"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillExchFee"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"SpiderRock estimate of the exchange fee based on liquidity tags best effort"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillMarket"}),(0,n.jsx)(r.td,{children:"VARCHAR(8)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"usually from execReportlastMkt as reported by child order venue"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillPrice"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"fill price"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillQuantity"}),(0,n.jsx)(r.td,{children:"INT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"fill quantity"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillReportDetail"}),(0,n.jsx)(r.td,{children:"TINYTEXT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"extra detail if any from child execution"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillBid"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"market bid  fill arrival"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillAsk"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"market ask  fill arrival"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillMark"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"midmarket or SR surface price if option  fill arrival"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillFairWidth"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"model fair width  fill time"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillUMark"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"underlier mark  fill arrival"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillUBid"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"underlier market bid  fill arrival"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillUAsk"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"underlier market bid  fill arrival"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillUBidSz"}),(0,n.jsx)(r.td,{children:"INT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"underlier bid size  fill arrival"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillUAskSz"}),(0,n.jsx)(r.td,{children:"INT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"underlier ask size  fill arrival"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillVolAtm"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"atm volatility  fill arrival"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillMark1M"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"midmarket or SR surface price if option  fill arrival  1m"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillMark10M"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"midmarket or SR surface price if option  fill arrival  10m"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillBid1M"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"market bid  fill arrival  1m"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillAsk1M"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"market ask  fill arrival  1m"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillBid10M"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"market bid  fill arrival  10m"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillAsk10M"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"market ask  fill arrival  10m"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillUMark1M"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"underlier mark  fill arrival  1m"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillUMark10M"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"underlier mark  fill arrival  10m"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillVolAtm1M"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"atm volatility options only  1m"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillVolAtm10M"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"atm volatility options only  10m"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillState1M"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/FillMarkState",children:"enum - FillMarkState"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillState10M"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/FillMarkState",children:"enum - FillMarkState"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillVol"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"fill volatility  fillLimitRefUPrc  fillLimitRefSDiv"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillVolS"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"fill volatility  surfaceUPrc  surfaceSDiv"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillProb"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"T10m probability for the fill  fill arrival send time"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillLimitRefUPrc"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"limit reference underlier price  fill arrival time"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillLimitRefSDiv"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"limit reference sdiv value  fill arrival time"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillLimitPrc"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"parent order limit price  fill arrival time"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillVe"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"fill vega"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillGa"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"fill gamma"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillDe"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"fill delta"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillTh"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"fill theta"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillVeRatio"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"fill ve  fill atm ve"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillBeta"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"SpiderRock estimate of beta to SPX"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"riskVega"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"risk vega"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"riskWtVega"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"risk gamma"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"riskNValue"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"risk delta"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"riskDelta"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"risk delta"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"riskDDelta"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"risk ddelta"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"riskRm1"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"user defined from parent order used to manage order groups"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"riskRm2"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"user defined from parent order used to manage order groups"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"riskRm3"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"user defined from parent order used to manage order groups"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"riskRm4"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"user defined from parent order used to manage order groups"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"riskRm5"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"user defined from parent order used to manage order groups"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"riskRm6"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"user defined from parent order used to manage order groups"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"riskRm7"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"user defined from parent order used to manage order groups"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"marginUDnVDn"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"underlier down vol down"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"marginUDnVUp"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"underlier down vol up"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"marginUUpVDn"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"underlier up vol down"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"marginUUpVUp"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"underlier up vol up"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"riskU15Dn"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"underlier dn 15 shock slide"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"riskU15Up"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"underlier up 15 shock slide"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"riskU50Dn"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"underlier dn 50 shock slide"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"riskU50Up"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"underlier up 50 shock slide"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillBrkrRate"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"billing brokerage rate tier 1"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillRoutingRate"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"billing routing rate tier 1"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"mmPrefCode"}),(0,n.jsx)(r.td,{children:"VARCHAR(6)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"market maker preference code if any"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"mmCredit"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"expected market maker credit if any"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"riskCode"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/RiskCode",children:"enum - RiskCode"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"SpiderRock Risk Code if any"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"billingSecType"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/BillingSecType",children:"enum - BillingSecType"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"SpiderRock billing security type"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"billingCategory"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/BillingCategory",children:"enum - BillingCategory"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"SpiderRock billing category"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"spdrLiquidityTag"}),(0,n.jsx)(r.td,{children:"VARCHAR(2)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"SpiderRock normalized liquidity tag"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"exchLiquidityTag"}),(0,n.jsx)(r.td,{children:"VARCHAR(4)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"liquidity tag as reported by downstream venue if any"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillExchDetail"}),(0,n.jsx)(r.td,{children:"TINYTEXT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"other fix tags tagvaluetagvalue additional detail used for analysis"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"lastCapacity"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/OrderCapacity",children:"enum - OrderCapacity"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"child order capacity"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"exchFirmType"}),(0,n.jsx)(r.td,{children:"VARCHAR(6)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"used to reflect field from a downstread execution back up to upstream fill report"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"extExecBroker"}),(0,n.jsx)(r.td,{children:"VARCHAR(12)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"used to reflect field from a downstream destination back up to and upstream fill report"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"relationshipType"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/RelationshipType",children:"enum - RelationshipType"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"type of SR  client relationship"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"clArriveMark"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"client specified arrival mark passed through from parent order"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentDttm"}),(0,n.jsx)(r.td,{children:"DATETIME(6)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'1900-01-01 00:00:00.000000'"}),(0,n.jsx)(r.td,{children:"parent order creation datetime"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentOrderSize"}),(0,n.jsx)(r.td,{children:"INT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"parent order size"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentUBid"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"underlier market bid  parent order arrival"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentUAsk"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"underlier market ask  parent order arrival"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentUMark"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"underlier mid mark  parent order arrival"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentBid"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"market bid  parent order arrival"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentAsk"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"market ask  parent order arrival"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentMark"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"midmarket or SR surface price  parent order arrival"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentFairWidth"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"model fair width  parent order arrival"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentSurfVol"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"SR surf vol  parent order arrival"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentLimitVol"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"parent order limit volatilty if any"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentLimitPrc"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"parent order limit price  parent order arrival"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentLimitRefUPrc"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"limit reference underlier price  parent order arrival"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentTheoVol"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"client supplied theoretical volatility used for markup only copied from parent order"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentTheoPrc"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"option price corresponding parentTheoVol"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentPosType"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/PositionType",children:"enum - PositionType"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"parent order position type"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentSSaleFlag"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum - ShortSaleFlag"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"short sale flag on parent order"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"noticeNumber"}),(0,n.jsx)(r.td,{children:"CHAR(19)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'0000-0000-0000-0000'"}),(0,n.jsx)(r.td,{children:"RFR  Auction noticeNumber if any"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"numMakeExchanges"}),(0,n.jsx)(r.td,{children:"TINYINT UNSIGNED"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"number of exchanges 1  4 on which to publish public making orders  Effective number might be less than requested number if sufficient exchanges are not available"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"publicSize"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/PublicSizeHandling",children:"enum - PublicSizeHandling"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"public order size handling Noneuse default size handling usually limits public size to typical market size Randomizerandomize public size FullSizeexpose entire order size where possible"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"canOverlapCxlRepl"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/YesNo",children:"enum - YesNo"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"can execution engines overlap cancelreplace operations order can overfill if YES at most one active overlapping cxlreplace operation for each parent order"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"progressRule"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/ProgressRule",children:"enum - ProgressRule"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"Immediate  all size immediately availableTWAP  size released in time intervalsVWAP  size released in volume intervals"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"exchMaskEnabled"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/YesNo",children:"enum - YesNo"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"exchMask  0"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"timeInForce"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/TimeInForce",children:"enum - TimeInForce"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"Parent order market session"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentOrderHandling"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/ParentOrderHandling",children:"enum - ParentOrderHandling"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"PrimaryTake Algo Handler"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentBalanceHandling"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/ParentBalanceHandling",children:"enum - ParentBalanceHandling"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"Make Algo Handler"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"orderLimitType"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/SpdrLimitType",children:"enum - SpdrLimitType"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"Primary Limit Type Prc Vol Rel Market Smrt etc"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"orderLimitClass"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/SpdrLimitClass",children:"enum - SpdrLimitClass"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'Simple'"}),(0,n.jsx)(r.td,{children:"Simple  LimitPrice Surface  BESTLimitPrice SurfLimit Probability  BESTLimitPrice ProbLimit"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"takeReachRule"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/ReachRule",children:"enum - ReachRule"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"Immediate  reach room immediately available Delayed  available after 13 seconds Passive  available if contra side aggresses WeakOnly  only take if available size  avgMarketSize ISOSweep  Intermarket Sweep requires WaitTrigger"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"overrideCode"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/OverrideCode",children:"enum - OverrideCode"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"SDivDDiv override rule applies if LimitType  Vol"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"alphaType"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/AlphaType",children:"enum - AlphaType"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"Affects limit probabilities applies if LimitClass  Probability"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentStrategy"}),(0,n.jsx)(r.td,{children:"VARCHAR(36)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"client strategy usually client supplied"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"userName"}),(0,n.jsx)(r.td,{children:"VARCHAR(24)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"user name associated with the parent order"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"autoHedge"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/AutoHedge",children:"enum - AutoHedge"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"autohedge algorithm if any"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"hedgeSecKey_at"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"autohedge sec key if any"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"hedgeSecKey_ts"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"autohedge sec key if any"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"hedgeSecKey_tk"}),(0,n.jsx)(r.td,{children:"VARCHAR(12)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"autohedge sec key if any"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"hedgeSecKey_yr"}),(0,n.jsx)(r.td,{children:"SMALLINT UNSIGNED"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"autohedge sec key if any"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"hedgeSecKey_mn"}),(0,n.jsx)(r.td,{children:"TINYINT UNSIGNED"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"autohedge sec key if any"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"hedgeSecKey_dy"}),(0,n.jsx)(r.td,{children:"TINYINT UNSIGNED"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"autohedge sec key if any"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"hedgeSecType"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/SpdrKeyType",children:"enum - SpdrKeyType"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"autohedge sec type if any"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"hedgeBetaRatio"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"portion of executed delta to autohedge can be 10  Beta for beta hedging 40 to 40"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"hedgeScope"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/HedgeScope",children:"enum - HedgeScope"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"hedge group scope"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"userData1"}),(0,n.jsx)(r.td,{children:"TINYTEXT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"client supplied data field passes through to parent and child executions and reports as well as FIX drops"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"userData2"}),(0,n.jsx)(r.td,{children:"TINYTEXT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"client supplied data field passes through to parent and child executions and reports as well as FIX drops"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"years"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"years to expiration"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"underliersPerCn"}),(0,n.jsx)(r.td,{children:"INT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"option delivery underliers per contract"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"underlierType"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/UnderlierType",children:"enum - UnderlierType"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"type of underlier affects greek calculations"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"tickValue"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"NLV value of a single tick change in display premium	pointValue  tickValue  tickSize"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"pointValue"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"NLV value of a single point change in display premium pointValue  tickValue  tickSize"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"pointCurrency"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/Currency",children:"enum - Currency"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"uPrcRatio"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"UPrcRatio SymbolRatio from product definition"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"minTickSize"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"minimum market price variation dnTickSize if on a boundary"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"priceFormat"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/PriceFormat",children:"enum - PriceFormat"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"SpiderRock price display format code"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"uPriceFormat"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/PriceFormat",children:"enum - PriceFormat"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"SpiderRock underlier price display format code"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"responseType"}),(0,n.jsx)(r.td,{children:"VARCHAR(4)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"usually an exch auction response type"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"nbboBid"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"nbbo bid  child order send"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"nbboAsk"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"nbbo ask  child order send"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childUPrc"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"underlier price when child order sent"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"exchBidSz"}),(0,n.jsx)(r.td,{children:"INT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"exch bid size  child order send"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"exchAskSz"}),(0,n.jsx)(r.td,{children:"INT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"exch ask size  child order send"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"liveUPrc"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"SpiderRock internal use only"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"liveMark"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"SpiderRock internal use only"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"srcTimestamp"}),(0,n.jsx)(r.td,{children:"BIGINT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"sgwTimestamp"}),(0,n.jsx)(r.td,{children:"BIGINT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"engTimestamp"}),(0,n.jsx)(r.td,{children:"BIGINT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"timestamp"}),(0,n.jsx)(r.td,{children:"DATETIME(6)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'1900-01-01 00:00:00.000000'"}),(0,n.jsx)(r.td,{children:"timestamp of this record not necessarily the timstamp of the fill itself"})]})]})]}),"\n",(0,n.jsx)(r.h3,{id:"primary-key-definition-unique",children:"PRIMARY KEY DEFINITION (Unique)"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Field"}),(0,n.jsx)(r.th,{children:"Sequence"})]})}),(0,n.jsx)(r.tbody,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillNumber"}),(0,n.jsx)(r.td,{children:"1"})]})})]}),"\n",(0,n.jsx)(r.h3,{id:"secondary-index-accntindex-not-unique",children:"SECONDARY INDEX (AccntIndex) (Not Unique)"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Field"}),(0,n.jsx)(r.th,{children:"Sequence"})]})}),(0,n.jsx)(r.tbody,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"accnt"}),(0,n.jsx)(r.td,{children:"1"})]})})]}),"\n",(0,n.jsx)(r.h3,{id:"secondary-index-clientfirmindex-not-unique",children:"SECONDARY INDEX (ClientFirmIndex) (Not Unique)"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Field"}),(0,n.jsx)(r.th,{children:"Sequence"})]})}),(0,n.jsx)(r.tbody,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"clientFirm"}),(0,n.jsx)(r.td,{children:"1"})]})})]}),"\n",(0,n.jsx)(r.h3,{id:"create-table-example-query",children:"CREATE TABLE EXAMPLE QUERY"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-sql",children:"CREATE TABLE `SRTrade`.`MsgSRParentExecution` (\n    `fillNumber` BIGINT NOT NULL DEFAULT 0 COMMENT 'SpiderRock execution number (globally unique over trailing 10 days)',\n    `sysRealm` ENUM('None','SysTest','NMS','CME','FR2','LD4','DR') NOT NULL DEFAULT 'None',\n    `sysEnvironment` ENUM('None','Neptune','Pluto','V7_Stable','V7_Latest','Saturn','Venus','Mars','SysTest','V7_Current') NOT NULL DEFAULT 'None',\n    `runStatus` ENUM('None','Prod','Beta','UAT','SysTest') NOT NULL DEFAULT 'None',\n    `version` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'record version number;starts at zero and goes up every time an execution record is re-published (eg, bust, +1m marks, +10m marks, etc)',\n    `execStatus` ENUM('None','Fill','Bust','Correct','Reject','SysRej') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock execution status (Fill,Bust,Correct,Reject,SysRej)',\n    `execShape` ENUM('None','Single','MLegTop','MLegLeg','SpreadTop','SpreadLeg','SingleLeg') NOT NULL DEFAULT 'None',\n    `packageId` BIGINT NOT NULL DEFAULT 0 COMMENT 'SR package Id',\n    `parentNumber` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'SR parent number',\n    `parentVersion` SMALLINT NOT NULL DEFAULT 0 COMMENT 'SPDR order instance number (1 = original order; 2 = 1st cancel/replace, etc)',\n    `baseParentNumber` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'SPDR order number (initial number in cancel/replace sequence) (also, source parent for dynamically generated orders;eg auto-hedges)',\n    `clOrdId` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'SR child order clOrdID resulting in fill',\n    `reviewClOrdId` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'review session clOrdId (usually from inbound review FIX session)S',\n    `altFillId` BIGINT NOT NULL DEFAULT 0 COMMENT 'alternate fill ID (usually from AwayTktGateway.pkey.clientFillID)',\n    `altOrderId` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'alternate order ID (usually clOrdId from client)',\n    `altCrossId` VARCHAR(24) NOT NULL DEFAULT '',\n    `altLegRefId` VARCHAR(24) NOT NULL DEFAULT '',\n    `altAccnt` VARCHAR(32) NOT NULL DEFAULT '' COMMENT 'alternate (client assigned) \"long\" account string (optional) [used to map between client and SR account strings]',\n    `altUserName` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'alternate (client assigned) user name (optional) [used to map between client and SR account strings]',\n    `srcRoutingCode` TINYTEXT NOT NULL DEFAULT '' COMMENT 'inbound FIX routing code, if any',\n    `riskGroupId` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'riskGroupId (parent order group ID) for this execution report',\n    `triggerGroupId` BIGINT NOT NULL DEFAULT 0 COMMENT 'WaitTrigger group Id',\n    `triggerTimestamp` BIGINT NOT NULL DEFAULT 0 COMMENT 'WaitTrigger trigger timestamp (nanoseconds since epoch)',\n    `streetClOrdId` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'street side clOrdId (clOrdId or equivalent of the street side order) [SR/street gateway generated]',\n    `streetOrderId` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'street side orderId (orderId or equivalent of the street side order) [from street side execReport]',\n    `parentShape` ENUM('None','Single','Cross','MLeg','MLegCross') NOT NULL DEFAULT 'None' COMMENT 'shape of originating parent order',\n    `secKey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'execution security key',\n    `secKey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'execution security key',\n    `secKey_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'execution security key',\n    `secKey_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'execution security key',\n    `secKey_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'execution security key',\n    `secKey_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'execution security key',\n    `secKey_xx` DOUBLE NOT NULL DEFAULT 0 COMMENT 'execution security key',\n    `secKey_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call' COMMENT 'execution security key',\n    `secType` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None' COMMENT 'execution security type [Stock, Future, Option]',\n    `ticker_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'base stock key (used for symbol risk aggregation)',\n    `ticker_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'base stock key (used for symbol risk aggregation)',\n    `ticker_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'base stock key (used for symbol risk aggregation)',\n    `accnt` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'SpiderRock trading accnt [broker pkey]',\n    `clientFirm` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'SR client firm',\n    `spdrSource` ENUM('None','SpdrTicket','SpdrSingle','SRSE','FIX','HedgeTool','TradeHedge','OpenHedge','AutoHedge','Orphan','RiskManager','OrderManager','ManagedOrder','RFQRespSrvr','Legger','SRSEDrop','FixDrop','TicketDrop','SysTest','RFRResponse','AllocOmni','AllocClient','CertGateway','MLegResponse','LeggerX','DropManager','AutoHedgeSrvr','AuctionStrategySrvr','AllocBlockFace','AllocBlockCust','IceChatGateway','EXS2SRC','MLinkResponse','AutoResponderVD','AutoResponderRC','AutoResponderSN','AutoResponderBX','MLink') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock parent order source code [broker pkey]',\n    `groupingCode` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'SpiderRock parent broker number [broker pkey]',\n    `coreClientFirm` VARCHAR(16) NOT NULL DEFAULT '',\n    `sponsorClientFirm` VARCHAR(16) NOT NULL DEFAULT '',\n    `routingCode` TINYTEXT NOT NULL DEFAULT '' COMMENT 'SpiderRock market routing code',\n    `engineName` VARCHAR(32) NOT NULL DEFAULT '' COMMENT 'SpiderRock execution engine that handled the parent order',\n    `gatewayName` VARCHAR(20) NOT NULL DEFAULT '' COMMENT 'StreetGateway server than handled the child order (if any)',\n    `execRole` ENUM('None','DirectAccnt','AwayGiveup','RiskDrop','AwayDrop','PullDrop') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock relationship to this execution record',\n    `execBrkrCode` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'SR Assigned executing broker code',\n    `execBrkrMPID` VARCHAR(8) NOT NULL DEFAULT '' COMMENT 'FINRA/Assigned exec broker MPID (if any)',\n    `altBrkrMPID` VARCHAR(8) NOT NULL DEFAULT '' COMMENT 'alternative broker MPID for a given route (if needed)',\n    `execBrkrAccnt` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'account at executing broker (if any)',\n    `execBrkrClFirm` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'client/firm at executing broker (if any)',\n    `execBrkrUserName` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'userName at execution broker (if any)',\n    `clearingFlipType` ENUM('None','CMTA','Giveup','QSR','NSCC_Flip','DVP','BrkrAccnt') NOT NULL DEFAULT 'None' COMMENT 'Clearing Flip Type (None, ExecBroker, CMTA, Giveup, DTCC, QSR, etc)',\n    `clearingFlipFirm` VARCHAR(6) NOT NULL DEFAULT '' COMMENT 'Clearing Flip Firm (if any)',\n    `clearingFlipAccnt` VARCHAR(10) NOT NULL DEFAULT '' COMMENT 'Clearing Flip Account (if any)',\n    `clearingFirm` VARCHAR(4) NOT NULL DEFAULT '' COMMENT 'clearing firm',\n    `clearingAccnt` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'clearing firm account (if any)',\n    `origExecID` TINYTEXT NOT NULL DEFAULT '' COMMENT 'original execution ID string (child order)',\n    `lastExecID` TINYTEXT NOT NULL DEFAULT '' COMMENT 'most recent execution ID (same as origExecID unless CANCEL/CORRECTION has been processed)',\n    `remoteText` TINYTEXT NOT NULL DEFAULT '' COMMENT 'text comment from remote endpoint (if any)',\n    `orderSide` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'None' COMMENT 'order side',\n    `spdrOrderStatus` ENUM('PendNew','New','PendClose','Closed','Rejected','SendReject') NOT NULL DEFAULT 'PendNew',\n    `spdrCloseReason` ENUM('None','Cancelled','Filled','Replaced','Expired','Limit','System','LegReject','DoneForDay','IOCExpire','UserCxl','NoProgress','TooManyRej','ReplReject','AlgoClose','Restart','InvldParentLimit','FilledRepl','ForceClose','DmaReject','DmaExpire','DmaBrkrCxl','ReviewReject','MarketState','AlgoReject','ReviewTimeout','ChildReject','ChildCancel','ReviewClose','UPrcRange','LegBrkrClosed','ExchRisk','CrossFailed') NOT NULL DEFAULT 'None',\n    `cumFillQuantity` INT NOT NULL DEFAULT 0 COMMENT 'cumulative fills (this parent number only)',\n    `avgFillPrice` DOUBLE NOT NULL DEFAULT 0,\n    `cumLegFillQuantity` INT NOT NULL DEFAULT 0 COMMENT 'cumulative fills (spread only)',\n    `avgLegFillPrice` DOUBLE NOT NULL DEFAULT 0,\n    `leavesQty` INT NOT NULL DEFAULT 0,\n    `priceType` ENUM('None','Explicit','Offset','Zero') NOT NULL DEFAULT 'None',\n    `childShape` ENUM('None','Single','Cross','MLeg','MLegCross') NOT NULL DEFAULT 'None',\n    `childSize` INT NOT NULL DEFAULT 0 COMMENT 'child order size',\n    `childPrice` DOUBLE NOT NULL DEFAULT 0 COMMENT 'child order price',\n    `childDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'child order generation date/time',\n    `childExch` VARCHAR(6) NOT NULL DEFAULT '' COMMENT 'child order exchange',\n    `childExDest` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'child order exchange destination code',\n    `childExecBroker` VARCHAR(8) NOT NULL DEFAULT '' COMMENT 'executing broker that child order was routed to',\n    `childIsDirected` ENUM('None','Yes','No') NOT NULL DEFAULT 'None' COMMENT 'child order isDirected flag',\n    `childIsoSweep` ENUM('None','Yes','No') NOT NULL DEFAULT 'None' COMMENT 'child order ISO sweep flag',\n    `childOrderHandling` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'child order handling string from the algo that generated the child order responsible for this fill',\n    `childAlgoHandler` ENUM('None','ActiveTaker','ActiveMaker','Auction','Responder','Matrix','Cross','Face','Extern','MLegHandler','AutoHedge','Sprayer','Legger','Restart','Orphan','UDefSpread','RFQRequest','MLegResponder','LeggerX','ExchPing','BrkrReview','AuctionResponder','TakeSweep','TestChild') NOT NULL DEFAULT 'None' COMMENT 'algo handler for this child order',\n    `childCreateReason` ENUM('None','CheckAddExch','DarkCross','DmaExtern','DmaSmart','MakeJoin','MakeNbboImpr','MakePostLimit','MakeSelfImpr','MarketAuction','MatrixImpr','MatrixJoin','MatrixLvlSweep','MatrixMaxSweep','MLegSeeker','OptAuctionResp','OptFaceHandler','RelWaitTrigger','SprdDma','SprdFace','SprdSeeker','TakeBrkr','TakeExch','TakeNbbo','RFQRequest','MLegResponse','BrkrCross','PostFlash','MakeOff','MakeFlashImprv','AwayExtern','MatrixCross','ExchPing','BrkrReview','AuctionResponse','SweepTake','TestChild') NOT NULL DEFAULT 'None',\n    `childCancelReason` ENUM('None','MakeException','MakeMaxRiskSize','MakeLimitError','MakeCxlImpr','MakeLmtPrc','MakeSelfImpr','MakeJoinImprv','MakeReJoin','MakeBhnd','MakeAlone','MakeAloneF','MakeOffMkt','MakeMaxExpose','MakeJoinImpr','ContLmtPrc','ChildCxlAll','ChildFlashCxl','ChildIOCTimeout','ForceRetry','StkCxlAll','FutCxlAll','OptCxlAll','FastCxlUBid','FastCxlUAsk','FastCxlUMin','FastCxlUMax','MktMiss','CxlClear','CxlRplDMA','CxlRplTurn','CxlRplSize','CxlRplPrc','CxlRplMake','CxlRplExch','MLegSeekSwitch','MLegSeekChange','MLegSeekND','MLegSeekLimit','MLegDMA','MLegSprdLimit','ParentRplRej','ParentReject','ParentClose','LeggerSwitch','AccelTake','EnginePreOpen','LegLmtPrcRng','MakeLmtPrcErr','ProgTerminate','TickSzErr','ContBrkrTerm','ContCancelHold','ContLimitErr','ContMaxUPrc','ContMinUPrc','ContMktData','ContMktHalt','ContRiskHold','ContSecType','ContStkData','ContStkState','ContFutData','ContFutState','ContOptData','ContOptState','ContUFutData','ContUFutState','ContUMktData','ContUMktState','LegExposeSize','LegLimitErr','LegMarketPrc','MLegCobLmtPrc','MLegLeggerChange','MLegLeggerSwitch','MLegSprdLmtPrc','SprdMktPrc','ContUMktPrc','ContUMktQte','SGContCxl','SGSysCxl','CxlRplPart','CxlRplAlgo','ContingentCancel','SwitchMOC','CxlRplReview','CxlRplAltR','SurfPrcErr','UserHold','DayClose','PendNewTimeout','ActiveHold') NOT NULL DEFAULT 'None',\n    `childMakerTaker` ENUM('None','Maker','Taker') NOT NULL DEFAULT 'None',\n    `childUBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier market bid at @ child order send time',\n    `childUAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier market ask at @ child order send time',\n    `childBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'market bid at the @ child order send time',\n    `childAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'market ask at the @ child order send time',\n    `childMark` DOUBLE NOT NULL DEFAULT 0 COMMENT 'mid-market (SR surface price if option) @ child order send time',\n    `childFairWidth` DOUBLE NOT NULL DEFAULT 0 COMMENT 'model fair width @ child order create',\n    `childVol` FLOAT NOT NULL DEFAULT 0 COMMENT 'child order volatility @ childLimitRefUPrc',\n    `childProb` FLOAT NOT NULL DEFAULT 0 COMMENT 'SR probability for the child order @ child order send time',\n    `childLimitRefUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'limit reference underlier price @ child order send time',\n    `childLimitPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'parent order limit price @ child order send time',\n    `childVolAtm` FLOAT NOT NULL DEFAULT 0 COMMENT 'atm volatility @ child order send time',\n    `childPosType` ENUM('None','Opening','Closing','Auto') NOT NULL DEFAULT 'None' COMMENT 'child order position type',\n    `childFirmOptPosition` INT NOT NULL DEFAULT 0 COMMENT 'effective firm option position @ child order send time',\n    `childSSaleFlag` ENUM('None','Long','Short','Exempt','Auto','Open','Close','Cover','NA') NOT NULL DEFAULT 'None' COMMENT 'short sale flag',\n    `childFirmStkPosition` INT NOT NULL DEFAULT 0 COMMENT 'effective firm stock position @ child order send time',\n    `childFirmOpenOrders` INT NOT NULL DEFAULT 0 COMMENT 'open sell orders counted in marking @ child order send time',\n    `childLocateQuan` INT NOT NULL DEFAULT 0 COMMENT 'available locate quantity (if selling short) @ child order send time',\n    `childLocateFirm` VARCHAR(6) NOT NULL DEFAULT '' COMMENT 'firm granting the locate',\n    `childLocatePool` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'locate pool @ firm granting locate',\n    `childMktStance` ENUM('None','ExchMrkt','NbboMrkt','ExchImpr','NbboImpr','ExchJoin','NbboJoin','Away') NOT NULL DEFAULT 'None' COMMENT 'child order was expected to be marketable @ child send time',\n    `childCxlAttempted` ENUM('None','Yes','No') NOT NULL DEFAULT 'None' COMMENT 'cancel attempt was made on the child order prior to receiving this fill',\n    `childCxlFillLatency` FLOAT NOT NULL DEFAULT 0 COMMENT 'cancel attempt -to- fill report latency (in ms)',\n    `childMethod` VARCHAR(8) NOT NULL DEFAULT '' COMMENT 'execution method string',\n    `childSource` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'execution source string',\n    `firmType` ENUM('None','Customer','Firm','MarketMaker','ProCustomer','BrokerDealer','AwayMM','FirmJBO','BrkrDlrCust') NOT NULL DEFAULT 'None' COMMENT 'child order firm type [Customer, ProCust, Firm, MM, etc]',\n    `priAggGroup` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'primary aggregation group',\n    `secAggGroup` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'secondary aggregation group',\n    `directedClientFirm` VARCHAR(16) NOT NULL DEFAULT '',\n    `isCommPaying` ENUM('None','Yes','No') NOT NULL DEFAULT 'None',\n    `fillTransactDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'transaction date/time as reported by exchange or down stream broker',\n    `fillTs` DOUBLE NOT NULL DEFAULT 0 COMMENT 'fill report ts (seconds since startup; 100 nanosec resolution)',\n    `fillDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'Date/time of fill arrival (SRDateTime)',\n    `fillExch` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'ExDest code from child order execution report',\n    `fillExecId` TINYTEXT NOT NULL DEFAULT '' COMMENT 'street side execution Id',\n    `fillExecRefId` TINYTEXT NOT NULL DEFAULT '' COMMENT 'street side execution ref Id (only used when busting an execution)',\n    `fillLegRefId` BIGINT NOT NULL DEFAULT 0 COMMENT 'legRefId for multileg fills',\n    `fillLegRatio` INT NOT NULL DEFAULT 0 COMMENT 'legRatio (if spread order)',\n    `fillExchFee` FLOAT NOT NULL DEFAULT 0 COMMENT 'SpiderRock estimate of the exchange fee based on liquidity tags (best effort)',\n    `fillMarket` VARCHAR(8) NOT NULL DEFAULT '' COMMENT 'usually from execReport.lastMkt as reported by child order venue',\n    `fillPrice` DOUBLE NOT NULL DEFAULT 0 COMMENT 'fill price',\n    `fillQuantity` INT NOT NULL DEFAULT 0 COMMENT 'fill quantity',\n    `fillReportDetail` TINYTEXT NOT NULL DEFAULT '' COMMENT 'extra detail (if any) from child execution',\n    `fillBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'market bid @ fill arrival',\n    `fillAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'market ask @ fill arrival',\n    `fillMark` DOUBLE NOT NULL DEFAULT 0 COMMENT 'mid-market (or SR surface price if option) @ fill arrival',\n    `fillFairWidth` DOUBLE NOT NULL DEFAULT 0 COMMENT 'model fair width @ fill time',\n    `fillUMark` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier mark @ fill arrival',\n    `fillUBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier market bid @ fill arrival',\n    `fillUAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier market bid @ fill arrival',\n    `fillUBidSz` INT NOT NULL DEFAULT 0 COMMENT 'underlier bid size @ fill arrival',\n    `fillUAskSz` INT NOT NULL DEFAULT 0 COMMENT 'underlier ask size @ fill arrival',\n    `fillVolAtm` FLOAT NOT NULL DEFAULT 0 COMMENT 'atm volatility @ fill arrival',\n    `fillMark1M` DOUBLE NOT NULL DEFAULT 0 COMMENT 'mid-market (or SR surface price if option) @ fill arrival + 1m',\n    `fillMark10M` DOUBLE NOT NULL DEFAULT 0 COMMENT 'mid-market (or SR surface price if option) @ fill arrival + 10m',\n    `fillBid1M` DOUBLE NOT NULL DEFAULT 0 COMMENT 'market bid @ fill arrival + 1m',\n    `fillAsk1M` DOUBLE NOT NULL DEFAULT 0 COMMENT 'market ask @ fill arrival + 1m',\n    `fillBid10M` DOUBLE NOT NULL DEFAULT 0 COMMENT 'market bid @ fill arrival + 10m',\n    `fillAsk10M` DOUBLE NOT NULL DEFAULT 0 COMMENT 'market ask @ fill arrival + 10m',\n    `fillUMark1M` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier mark @ fill arrival + 1m',\n    `fillUMark10M` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier mark @ fill arrival + 10m',\n    `fillVolAtm1M` FLOAT NOT NULL DEFAULT 0 COMMENT 'atm volatility (options only) + 1m',\n    `fillVolAtm10M` FLOAT NOT NULL DEFAULT 0 COMMENT 'atm volatility (options only) + 10m',\n    `fillState1M` ENUM('None','OK','Error') NOT NULL DEFAULT 'None',\n    `fillState10M` ENUM('None','OK','Error') NOT NULL DEFAULT 'None',\n    `fillVol` FLOAT NOT NULL DEFAULT 0 COMMENT 'fill volatility @ fillLimitRefUPrc & fillLimitRefSDiv',\n    `fillVolS` FLOAT NOT NULL DEFAULT 0 COMMENT 'fill volatility @ surfaceUPrc & surfaceSDiv',\n    `fillProb` FLOAT NOT NULL DEFAULT 0 COMMENT 'T+10m probability for the fill @ fill arrival send time',\n    `fillLimitRefUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'limit reference underlier price @ fill arrival time',\n    `fillLimitRefSDiv` DOUBLE NOT NULL DEFAULT 0 COMMENT 'limit reference sdiv value @ fill arrival time',\n    `fillLimitPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'parent order limit price @ fill arrival time',\n    `fillVe` FLOAT NOT NULL DEFAULT 0 COMMENT 'fill vega',\n    `fillGa` FLOAT NOT NULL DEFAULT 0 COMMENT 'fill gamma',\n    `fillDe` FLOAT NOT NULL DEFAULT 0 COMMENT 'fill delta',\n    `fillTh` FLOAT NOT NULL DEFAULT 0 COMMENT 'fill theta',\n    `fillVeRatio` FLOAT NOT NULL DEFAULT 0 COMMENT 'fill ve / fill atm ve',\n    `fillBeta` FLOAT NOT NULL DEFAULT 0 COMMENT 'SpiderRock estimate of beta to SPX',\n    `riskVega` FLOAT NOT NULL DEFAULT 0 COMMENT 'risk vega',\n    `riskWtVega` FLOAT NOT NULL DEFAULT 0 COMMENT 'risk gamma',\n    `riskNValue` FLOAT NOT NULL DEFAULT 0 COMMENT 'risk delta',\n    `riskDelta` FLOAT NOT NULL DEFAULT 0 COMMENT 'risk delta',\n    `riskDDelta` FLOAT NOT NULL DEFAULT 0 COMMENT 'risk ddelta',\n    `riskRm1` FLOAT NOT NULL DEFAULT 0 COMMENT 'user defined (from parent order) [used to manage order groups]',\n    `riskRm2` FLOAT NOT NULL DEFAULT 0 COMMENT 'user defined (from parent order) [used to manage order groups]',\n    `riskRm3` FLOAT NOT NULL DEFAULT 0 COMMENT 'user defined (from parent order) [used to manage order groups]',\n    `riskRm4` FLOAT NOT NULL DEFAULT 0 COMMENT 'user defined (from parent order) [used to manage order groups]',\n    `riskRm5` FLOAT NOT NULL DEFAULT 0 COMMENT 'user defined (from parent order) [used to manage order groups]',\n    `riskRm6` FLOAT NOT NULL DEFAULT 0 COMMENT 'user defined (from parent order) [used to manage order groups]',\n    `riskRm7` FLOAT NOT NULL DEFAULT 0 COMMENT 'user defined (from parent order) [used to manage order groups]',\n    `marginUDnVDn` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier down, vol down',\n    `marginUDnVUp` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier down, vol up',\n    `marginUUpVDn` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier up, vol down',\n    `marginUUpVUp` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier up, vol up',\n    `riskU15Dn` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier dn 15% shock slide',\n    `riskU15Up` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier up 15% shock slide',\n    `riskU50Dn` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier dn 50% shock slide',\n    `riskU50Up` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier up 50% shock slide',\n    `fillBrkrRate` FLOAT NOT NULL DEFAULT 0 COMMENT 'billing brokerage rate (tier 1)',\n    `fillRoutingRate` FLOAT NOT NULL DEFAULT 0 COMMENT 'billing routing rate (tier 1)',\n    `mmPrefCode` VARCHAR(6) NOT NULL DEFAULT '' COMMENT 'market maker preference code (if any)',\n    `mmCredit` FLOAT NOT NULL DEFAULT 0 COMMENT 'expected market maker credit (if any)',\n    `riskCode` ENUM('None','R1','R2','R3','R4','R5','R6','R7','R8') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock Risk Code (if any)',\n    `billingSecType` ENUM('None','Equity','Future','EqtOption','FutOption') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock billing security type',\n    `billingCategory` ENUM('None','Alpha','AlphaTop50','TiedMaker','TiedTaker','SOR','DMA','AuctionResponse','Facilitate','AlphaFacilitate','AwayTrade','SymOverride','Extern','NonBillable','Seeker','Legger','Drop','AwayAlgo','IsoSweep','SpdrSweep','GTH','AlphaGTH','BlockAuction','BlockResponse') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock billing category',\n    `spdrLiquidityTag` VARCHAR(2) NOT NULL DEFAULT '' COMMENT 'SpiderRock normalized liquidity tag',\n    `exchLiquidityTag` VARCHAR(4) NOT NULL DEFAULT '' COMMENT 'liquidity tag as reported by downstream venue (if any)',\n    `fillExchDetail` TINYTEXT NOT NULL DEFAULT '' COMMENT 'other fix tags (tag:value#tag:value) [additional detail used for analysis]',\n    `lastCapacity` ENUM('None','Agency','Principal','Individual','Proprietary','AgentOtherMember','RisklessPrincipal') NOT NULL DEFAULT 'None' COMMENT 'child order capacity',\n    `exchFirmType` VARCHAR(6) NOT NULL DEFAULT '' COMMENT 'used to reflect field from a downstread execution back up to upstream fill report',\n    `extExecBroker` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'used to reflect field from a downstream destination back up to and upstream fill report',\n    `relationshipType` ENUM('None','EXSMember','EXSRouter','EXSTech','Platform','SRConnect','Advisor') NOT NULL DEFAULT 'None' COMMENT 'type of SR <-> client relationship',\n    `clArriveMark` FLOAT NOT NULL DEFAULT 0 COMMENT 'client specified arrival mark (passed through from parent order)',\n    `parentDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'parent order creation date/time',\n    `parentOrderSize` INT NOT NULL DEFAULT 0 COMMENT 'parent order size',\n    `parentUBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier market bid @ parent order arrival',\n    `parentUAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier market ask @ parent order arrival',\n    `parentUMark` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier mid mark @ parent order arrival',\n    `parentBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'market bid @ parent order arrival',\n    `parentAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'market ask @ parent order arrival',\n    `parentMark` DOUBLE NOT NULL DEFAULT 0 COMMENT 'mid-market (or SR surface price) @ parent order arrival',\n    `parentFairWidth` DOUBLE NOT NULL DEFAULT 0 COMMENT 'model fair width @ parent order arrival',\n    `parentSurfVol` DOUBLE NOT NULL DEFAULT 0 COMMENT 'SR surf vol @ parent order arrival',\n    `parentLimitVol` FLOAT NOT NULL DEFAULT 0 COMMENT 'parent order limit volatilty (if any)',\n    `parentLimitPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'parent order limit price @ parent order arrival',\n    `parentLimitRefUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'limit reference underlier price @ parent order arrival',\n    `parentTheoVol` FLOAT NOT NULL DEFAULT 0 COMMENT 'client supplied theoretical volatility (used for markup only) [copied from parent order]',\n    `parentTheoPrc` FLOAT NOT NULL DEFAULT 0 COMMENT 'option price corresponding parentTheoVol',\n    `parentPosType` ENUM('None','Opening','Closing','Auto') NOT NULL DEFAULT 'None' COMMENT 'parent order position type',\n    `parentSSaleFlag` ENUM('None','Long','Short','Exempt','Auto','Open','Close','Cover','NA') NOT NULL DEFAULT 'None' COMMENT 'short sale flag on parent order',\n    `noticeNumber` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'RFR / Auction noticeNumber (if any)',\n    `numMakeExchanges` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'number of exchanges (1 - 4) on which to publish public making orders.  Effective number might be less than requested number if sufficient exchanges are not available.',\n    `publicSize` ENUM('None','Randomize','MktSize','FullSize','MktSizeA','MktSizeB','MktSizeC','FullSizeR','Max25Pct','Max50Pct','Max75Pct','NoSize') NOT NULL DEFAULT 'None' COMMENT 'public order size handling: None=use default size handling (usually limits public size to ''typical'' market size); Randomize=randomize public size; FullSize=expose entire order size where possible',\n    `canOverlapCxlRepl` ENUM('None','Yes','No') NOT NULL DEFAULT 'None' COMMENT 'can execution engines overlap cancel/replace operations [order can overfill if YES] (at most one active overlapping cxl/replace operation for each parent order)',\n    `progressRule` ENUM('None','Twap','Vwap','TwapReset','VwapReset','FastReset','SlowReset','TwapAlpha','VwapAlpha','TwapAlphaC','VwapAlphaC','AutoComplete','AllowImmediate','Manual','SpdrPulse','IOC') NOT NULL DEFAULT 'None' COMMENT 'Immediate = all size immediately available;TWAP = size released in time intervals;VWAP = size released in volume intervals;',\n    `exchMaskEnabled` ENUM('None','Yes','No') NOT NULL DEFAULT 'None' COMMENT 'exchMask != 0',\n    `timeInForce` ENUM('None','Day','IOC','GTD','ExtDay','Week','ExtWeek') NOT NULL DEFAULT 'None' COMMENT 'Parent order market session',\n    `parentOrderHandling` ENUM('None','ActiveTaker','PostOnly','DMA','MktOnOpn','MktOnCls','Facilitate','Matrix','Legger','Seeker','SeekerLegger','CrossResponse','AuctionResponse','MLegAuctionResp','RFQRequest','AwayAlgo','ExchPing','BlockAuction','BlockResponse','SweepTake','CobMaker','FaceOmni','TestParent') NOT NULL DEFAULT 'None' COMMENT 'Primary/Take Algo Handler',\n    `parentBalanceHandling` ENUM('None','PostWith','PostTurn','PostImprove','PostLimit','MaxIntern','PostWthF','PostImprvR','PostFlash','PostFlashW','PostPeg','PostFlashI') NOT NULL DEFAULT 'None' COMMENT 'Make Algo Handler',\n    `orderLimitType` ENUM('None','Market','MarketArrival','Prc','PrcDe','PrcDeX','PrcDeT','PrcDeP','PrcDeXT','PrcDeXP','Vol','VolX','PrcV','PrcVX','NoLimit','RelMid','RelJoin','RelCross','SmrtFast','SmrtNorm','RelTurn','PrcDeEm','VolEm','Aux','UPrcPct','PkgNeutral','RcPrem','SynthLimitMM','SynthLimitBW','SynthLimitWW') NOT NULL DEFAULT 'None' COMMENT 'Primary Limit Type (Prc, Vol, Rel, Market, Smrt, etc)',\n    `orderLimitClass` ENUM('Simple','Surface','Probability','SurfProb') NOT NULL DEFAULT 'Simple' COMMENT 'Simple = LimitPrice, Surface = BEST(LimitPrice, SurfLimit), Probability = BEST(LimitPrice, ProbLimit)',\n    `takeReachRule` ENUM('None','Delayed','Passive','WeakOnly','RespondOnly','FullSize','ISOSweep','AllOrNone','QtyOrMore','UpToQty','AtMost25','AtMost50','MinTakeFee') NOT NULL DEFAULT 'None' COMMENT 'Immediate = reach room immediately available; Delayed = available after [1-3] seconds; Passive = available if contra side aggresses; WeakOnly = only take if available size < avgMarketSize; ISOSweep = Intermarket Sweep [requires WaitTrigger]',\n    `overrideCode` ENUM('None','SDivOnly','DDivOnly','Both') NOT NULL DEFAULT 'None' COMMENT 'SDiv/DDiv override rule (applies if LimitType = Vol)',\n    `alphaType` ENUM('None','Static','Eagle','Hawk','Falcon','Relative') NOT NULL DEFAULT 'None' COMMENT 'Affects limit probabilities (applies if LimitClass = Probability)',\n    `parentStrategy` VARCHAR(36) NOT NULL DEFAULT '' COMMENT 'client strategy [usually client supplied]',\n    `userName` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'user name associated with the parent order',\n    `autoHedge` ENUM('None','Static','AutoMid','AutoCrx','AutoTrn','SpdrAuto','Spdr10S','Spdr30S','Spdr90S','Spdr5M','Spdr30M','SpdrDay','SmartFast','SmartNorm','FastCrx','FastDark','SlowDark','AlphaVwap1pct','AlphaVwap2pct','AlphaVwap5pct','AlphaVwap25pct','Custom','AwayAlgo') NOT NULL DEFAULT 'None' COMMENT 'auto-hedge algorithm (if any)',\n    `hedgeSecKey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'auto-hedge sec key (if any)',\n    `hedgeSecKey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'auto-hedge sec key (if any)',\n    `hedgeSecKey_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'auto-hedge sec key (if any)',\n    `hedgeSecKey_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'auto-hedge sec key (if any)',\n    `hedgeSecKey_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'auto-hedge sec key (if any)',\n    `hedgeSecKey_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'auto-hedge sec key (if any)',\n    `hedgeSecType` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None' COMMENT 'auto-hedge sec type (if any)',\n    `hedgeBetaRatio` FLOAT NOT NULL DEFAULT 0 COMMENT 'portion of executed $delta to auto-hedge (can be 1.0 / Beta for beta hedging) [-4.0 to +4.0])',\n    `hedgeScope` ENUM('None','Accnt','RiskGroup') NOT NULL DEFAULT 'None' COMMENT 'hedge group scope',\n    `userData1` TINYTEXT NOT NULL DEFAULT '' COMMENT 'client supplied data field; passes through to parent and child executions and reports as well as FIX drops',\n    `userData2` TINYTEXT NOT NULL DEFAULT '' COMMENT 'client supplied data field; passes through to parent and child executions and reports as well as FIX drops',\n    `years` FLOAT NOT NULL DEFAULT 0 COMMENT 'years to expiration',\n    `underliersPerCn` INT NOT NULL DEFAULT 0 COMMENT 'option delivery underliers per contract',\n    `underlierType` ENUM('None','Equity','Other','FX') NOT NULL DEFAULT 'None' COMMENT 'type of underlier (affects $greek calculations)',\n    `tickValue` FLOAT NOT NULL DEFAULT 0 COMMENT '$NLV value of a single tick change in display premium	(pointValue = tickValue / tickSize)',\n    `pointValue` FLOAT NOT NULL DEFAULT 0 COMMENT '$NLV value of a single point change in display premium (pointValue = tickValue / tickSize)',\n    `pointCurrency` ENUM('None','AUD','BRL','CAD','CHF','CNH','CNY','EUR','GBP','JPY','KRW','MXN','MYR','NOK','NZD','SEK','TRY','USD','USDCents','CZK','ZAR','HUF','USX','GBX') NOT NULL DEFAULT 'None',\n    `uPrcRatio` FLOAT NOT NULL DEFAULT 0 COMMENT 'UPrcRatio (SymbolRatio) from product definition',\n    `minTickSize` FLOAT NOT NULL DEFAULT 0 COMMENT 'minimum market price variation (dnTickSize if on a boundary)',\n    `priceFormat` ENUM('None','N0','N1','N2','N3','N4','N5','N6','N7','F4','F8','Q8','F16','F32','H32','Q32','F64','H64','FullPenny','PartPenny','PartNickle','EQT','V1','V2','V3','V4','V5','V6','V7','V8','V9','V10','V11','V12','V13','V14','V15','A0','A1','A2','A3','A4','A5','A6','A7','E32') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock price display format code',\n    `uPriceFormat` ENUM('None','N0','N1','N2','N3','N4','N5','N6','N7','F4','F8','Q8','F16','F32','H32','Q32','F64','H64','FullPenny','PartPenny','PartNickle','EQT','V1','V2','V3','V4','V5','V6','V7','V8','V9','V10','V11','V12','V13','V14','V15','A0','A1','A2','A3','A4','A5','A6','A7','E32') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock underlier price display format code',\n    `responseType` VARCHAR(4) NOT NULL DEFAULT '' COMMENT 'usually an exch auction response type',\n    `nbboBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'nbbo bid @ child order send',\n    `nbboAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'nbbo ask @ child order send',\n    `childUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier price when child order sent',\n    `exchBidSz` INT NOT NULL DEFAULT 0 COMMENT 'exch bid size @ child order send',\n    `exchAskSz` INT NOT NULL DEFAULT 0 COMMENT 'exch ask size @ child order send',\n    `liveUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'SpiderRock internal use only',\n    `liveMark` DOUBLE NOT NULL DEFAULT 0 COMMENT 'SpiderRock internal use only',\n    `srcTimestamp` BIGINT NOT NULL DEFAULT 0,\n    `sgwTimestamp` BIGINT NOT NULL DEFAULT 0,\n    `engTimestamp` BIGINT NOT NULL DEFAULT 0,\n    `timestamp` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'timestamp of this record [not necessarily the timstamp of the fill itself]',\n    CONSTRAINT nonnegative_parentNumber CHECK(ASCII(parentNumber) < 56),\n    CONSTRAINT nonnegative_baseParentNumber CHECK(ASCII(baseParentNumber) < 56),\n    CONSTRAINT nonnegative_clOrdId CHECK(ASCII(clOrdId) < 56),\n    CONSTRAINT nonnegative_riskGroupId CHECK(ASCII(riskGroupId) < 56),\n    CONSTRAINT nonnegative_groupingCode CHECK(ASCII(groupingCode) < 56),\n    CONSTRAINT nonnegative_noticeNumber CHECK(ASCII(noticeNumber) < 56),\n    PRIMARY KEY USING HASH (`fillNumber`),\n    KEY `AccntIndex` (`accnt`) USING HASH,\n    KEY `ClientFirmIndex` (`clientFirm`) USING HASH\n) ENGINE=SRSE DEFAULT CHARSET=LATIN1 COMMENT='SpdrParentExecution records are published every time a parent order execution is received.  They also update as additional post execution mark information is available at F+1m and F+10m.';\n\n"})}),"\n",(0,n.jsx)(r.h3,{id:"select-table-example-query",children:"SELECT TABLE EXAMPLE QUERY"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-sql",children:"SELECT\n    `fillNumber`,\n    `sysRealm`,\n    `sysEnvironment`,\n    `runStatus`,\n    `version`,\n    `execStatus`,\n    `execShape`,\n    `packageId`,\n    `parentNumber`,\n    `parentVersion`,\n    `baseParentNumber`,\n    `clOrdId`,\n    `reviewClOrdId`,\n    `altFillId`,\n    `altOrderId`,\n    `altCrossId`,\n    `altLegRefId`,\n    `altAccnt`,\n    `altUserName`,\n    `srcRoutingCode`,\n    `riskGroupId`,\n    `triggerGroupId`,\n    `triggerTimestamp`,\n    `streetClOrdId`,\n    `streetOrderId`,\n    `parentShape`,\n    `secKey_at`,\n    `secKey_ts`,\n    `secKey_tk`,\n    `secKey_yr`,\n    `secKey_mn`,\n    `secKey_dy`,\n    `secKey_xx`,\n    `secKey_cp`,\n    `secType`,\n    `ticker_at`,\n    `ticker_ts`,\n    `ticker_tk`,\n    `accnt`,\n    `clientFirm`,\n    `spdrSource`,\n    `groupingCode`,\n    `coreClientFirm`,\n    `sponsorClientFirm`,\n    `routingCode`,\n    `engineName`,\n    `gatewayName`,\n    `execRole`,\n    `execBrkrCode`,\n    `execBrkrMPID`,\n    `altBrkrMPID`,\n    `execBrkrAccnt`,\n    `execBrkrClFirm`,\n    `execBrkrUserName`,\n    `clearingFlipType`,\n    `clearingFlipFirm`,\n    `clearingFlipAccnt`,\n    `clearingFirm`,\n    `clearingAccnt`,\n    `origExecID`,\n    `lastExecID`,\n    `remoteText`,\n    `orderSide`,\n    `spdrOrderStatus`,\n    `spdrCloseReason`,\n    `cumFillQuantity`,\n    `avgFillPrice`,\n    `cumLegFillQuantity`,\n    `avgLegFillPrice`,\n    `leavesQty`,\n    `priceType`,\n    `childShape`,\n    `childSize`,\n    `childPrice`,\n    `childDttm`,\n    `childExch`,\n    `childExDest`,\n    `childExecBroker`,\n    `childIsDirected`,\n    `childIsoSweep`,\n    `childOrderHandling`,\n    `childAlgoHandler`,\n    `childCreateReason`,\n    `childCancelReason`,\n    `childMakerTaker`,\n    `childUBid`,\n    `childUAsk`,\n    `childBid`,\n    `childAsk`,\n    `childMark`,\n    `childFairWidth`,\n    `childVol`,\n    `childProb`,\n    `childLimitRefUPrc`,\n    `childLimitPrc`,\n    `childVolAtm`,\n    `childPosType`,\n    `childFirmOptPosition`,\n    `childSSaleFlag`,\n    `childFirmStkPosition`,\n    `childFirmOpenOrders`,\n    `childLocateQuan`,\n    `childLocateFirm`,\n    `childLocatePool`,\n    `childMktStance`,\n    `childCxlAttempted`,\n    `childCxlFillLatency`,\n    `childMethod`,\n    `childSource`,\n    `firmType`,\n    `priAggGroup`,\n    `secAggGroup`,\n    `directedClientFirm`,\n    `isCommPaying`,\n    `fillTransactDttm`,\n    `fillTs`,\n    `fillDttm`,\n    `fillExch`,\n    `fillExecId`,\n    `fillExecRefId`,\n    `fillLegRefId`,\n    `fillLegRatio`,\n    `fillExchFee`,\n    `fillMarket`,\n    `fillPrice`,\n    `fillQuantity`,\n    `fillReportDetail`,\n    `fillBid`,\n    `fillAsk`,\n    `fillMark`,\n    `fillFairWidth`,\n    `fillUMark`,\n    `fillUBid`,\n    `fillUAsk`,\n    `fillUBidSz`,\n    `fillUAskSz`,\n    `fillVolAtm`,\n    `fillMark1M`,\n    `fillMark10M`,\n    `fillBid1M`,\n    `fillAsk1M`,\n    `fillBid10M`,\n    `fillAsk10M`,\n    `fillUMark1M`,\n    `fillUMark10M`,\n    `fillVolAtm1M`,\n    `fillVolAtm10M`,\n    `fillState1M`,\n    `fillState10M`,\n    `fillVol`,\n    `fillVolS`,\n    `fillProb`,\n    `fillLimitRefUPrc`,\n    `fillLimitRefSDiv`,\n    `fillLimitPrc`,\n    `fillVe`,\n    `fillGa`,\n    `fillDe`,\n    `fillTh`,\n    `fillVeRatio`,\n    `fillBeta`,\n    `riskVega`,\n    `riskWtVega`,\n    `riskNValue`,\n    `riskDelta`,\n    `riskDDelta`,\n    `riskRm1`,\n    `riskRm2`,\n    `riskRm3`,\n    `riskRm4`,\n    `riskRm5`,\n    `riskRm6`,\n    `riskRm7`,\n    `marginUDnVDn`,\n    `marginUDnVUp`,\n    `marginUUpVDn`,\n    `marginUUpVUp`,\n    `riskU15Dn`,\n    `riskU15Up`,\n    `riskU50Dn`,\n    `riskU50Up`,\n    `fillBrkrRate`,\n    `fillRoutingRate`,\n    `mmPrefCode`,\n    `mmCredit`,\n    `riskCode`,\n    `billingSecType`,\n    `billingCategory`,\n    `spdrLiquidityTag`,\n    `exchLiquidityTag`,\n    `fillExchDetail`,\n    `lastCapacity`,\n    `exchFirmType`,\n    `extExecBroker`,\n    `relationshipType`,\n    `clArriveMark`,\n    `parentDttm`,\n    `parentOrderSize`,\n    `parentUBid`,\n    `parentUAsk`,\n    `parentUMark`,\n    `parentBid`,\n    `parentAsk`,\n    `parentMark`,\n    `parentFairWidth`,\n    `parentSurfVol`,\n    `parentLimitVol`,\n    `parentLimitPrc`,\n    `parentLimitRefUPrc`,\n    `parentTheoVol`,\n    `parentTheoPrc`,\n    `parentPosType`,\n    `parentSSaleFlag`,\n    `noticeNumber`,\n    `numMakeExchanges`,\n    `publicSize`,\n    `canOverlapCxlRepl`,\n    `progressRule`,\n    `exchMaskEnabled`,\n    `timeInForce`,\n    `parentOrderHandling`,\n    `parentBalanceHandling`,\n    `orderLimitType`,\n    `orderLimitClass`,\n    `takeReachRule`,\n    `overrideCode`,\n    `alphaType`,\n    `parentStrategy`,\n    `userName`,\n    `autoHedge`,\n    `hedgeSecKey_at`,\n    `hedgeSecKey_ts`,\n    `hedgeSecKey_tk`,\n    `hedgeSecKey_yr`,\n    `hedgeSecKey_mn`,\n    `hedgeSecKey_dy`,\n    `hedgeSecType`,\n    `hedgeBetaRatio`,\n    `hedgeScope`,\n    `userData1`,\n    `userData2`,\n    `years`,\n    `underliersPerCn`,\n    `underlierType`,\n    `tickValue`,\n    `pointValue`,\n    `pointCurrency`,\n    `uPrcRatio`,\n    `minTickSize`,\n    `priceFormat`,\n    `uPriceFormat`,\n    `responseType`,\n    `nbboBid`,\n    `nbboAsk`,\n    `childUPrc`,\n    `exchBidSz`,\n    `exchAskSz`,\n    `liveUPrc`,\n    `liveMark`,\n    `srcTimestamp`,\n    `sgwTimestamp`,\n    `engTimestamp`,\n    `timestamp`\nFROM `SRTrade`.`MsgSRParentExecution`\nWHERE \n    /* Replace with a BIGINT */ \n    `fillNumber` = 1234567890;\n"})}),"\n",(0,n.jsx)(r.h3,{id:"doc-columns-query",children:"Doc Columns Query"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-sql",children:"SELECT * FROM SRTrade.doccolumns WHERE TABLE_NAME='SpdrParentExecution' ORDER BY ordinal_position ASC;\n"})})]})}function x(e={}){let{wrapper:r}={...(0,t.a)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},91503:function(e,r,d){d.d(r,{Z:function(){return s},a:function(){return l}});var i=d(75271);let n={},t=i.createContext(n);function l(e){let r=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),i.createElement(t.Provider,{value:r},e.children)}}}]);