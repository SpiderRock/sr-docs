"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([["95023"],{55072:function(e,n,t){t.r(n),t.d(n,{default:()=>p,frontMatter:()=>i,metadata:()=>r,assets:()=>o,toc:()=>h,contentTitle:()=>c});var r=JSON.parse('{"id":"MessageSchemas/Schema/Topics/mlink-custom/GetFlexSpreadPrice","title":"GetFlexSpreadPrice","description":"METADATA","source":"@site/docs/MessageSchemas/Schema/Topics/3480-mlink-custom/GetFlexSpreadPrice.md","sourceDirName":"MessageSchemas/Schema/Topics/3480-mlink-custom","slug":"/MessageSchemas/Schema/Topics/mlink-custom/GetFlexSpreadPrice","permalink":"/docs/next/MessageSchemas/Schema/Topics/mlink-custom/GetFlexSpreadPrice","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"GetFlexSpreadPrice"},"sidebar":"messageSchemasSidebar","previous":{"title":"3480-mlink-custom","permalink":"/docs/next/MessageSchemas/Schema/Topics/mlink-custom/"},"next":{"title":"GetOptionBasket","permalink":"/docs/next/MessageSchemas/Schema/Topics/mlink-custom/GetOptionBasket"}}'),s=t("52676"),l=t("91503"),a=t("71386"),d=t("9641");let i={title:"GetFlexSpreadPrice"},c="Schema: GetFlexSpreadPrice (ID: 3488)",o={},h=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"REPEATING FIELDS",id:"repeating-fields",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3},{value:"Post Msgs API Call",id:"post-msgs-api-call",level:3}];function u(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,l.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsxs)(n.h1,{id:"schema-getflexspreadprice-id-3488",children:["Schema: GetFlexSpreadPrice ",(0,s.jsx)("span",{className:"small-text",children:"(ID: 3488)"})]})}),"\n",(0,s.jsx)(n.h3,{id:"metadata",children:"METADATA"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Attribute"}),(0,s.jsx)(n.th,{children:"Value"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Topic"}),(0,s.jsx)(n.td,{children:"3480-mlink-custom"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"MLink Token"}),(0,s.jsx)(n.td,{children:"RiskCalc"})]})]})]}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note:"})," The symbol ",(0,s.jsx)(n.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"body",children:"BODY"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"#"}),(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default Value"}),(0,s.jsx)(n.th,{children:"Comment"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"100"}),(0,s.jsx)(n.td,{children:"uPrc"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{children:"0"}),(0,s.jsx)(n.td,{children:"live uPrc on arrival (if not supplied)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"103"}),(0,s.jsx)(n.td,{children:"fixedPremUPct"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{children:"0"}),(0,s.jsx)(n.td,{children:"premium as a percent of the underlying price. required if a leg with strikeType=PctVariable is included (can be zero)."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"106"}),(0,s.jsx)(n.td,{children:"incGreeks"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(n.td,{children:"No"}),(0,s.jsx)(n.td,{children:"whether greeks should be computed"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"175"}),(0,s.jsx)(n.td,{children:"ticker"}),(0,s.jsx)(n.td,{children:"TickerKey"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"underlier ticker (all legs must have the same underlier ticker)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"178"}),(0,s.jsx)(n.td,{children:"sprdPrem"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"spread premium ($)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"181"}),(0,s.jsx)(n.td,{children:"sprdDelta"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"delta"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"184"}),(0,s.jsx)(n.td,{children:"sprdGamma"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"gamma"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"187"}),(0,s.jsx)(n.td,{children:"sprdTheta"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"theta"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"190"}),(0,s.jsx)(n.td,{children:"sprdVega"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"vega"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"193"}),(0,s.jsx)(n.td,{children:"sprdVolga"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"volga"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"196"}),(0,s.jsx)(n.td,{children:"sprdVanna"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"vanna"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"199"}),(0,s.jsx)(n.td,{children:"sprdRho"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"rho"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"202"}),(0,s.jsx)(n.td,{children:"sprdPhi"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"phi"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"213"}),(0,s.jsx)(n.td,{children:"calcDetail"}),(0,s.jsx)(n.td,{children:"text1"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"calculation details"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"214"}),(0,s.jsx)(n.td,{children:"error"}),(0,s.jsx)(n.td,{children:"text1"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"overall error for the calculation"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"217"}),(0,s.jsx)(n.td,{children:"timestamp"}),(0,s.jsx)(n.td,{children:"DateTime"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"repeating-fields",children:"REPEATING FIELDS"}),"\n",(0,s.jsx)(n.p,{children:"Legs"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"#"}),(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default Value"}),(0,s.jsx)(n.th,{children:"Comment"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"112"}),(0,s.jsx)(n.td,{children:"okey"}),(0,s.jsx)(n.td,{children:"OptionKey"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"should be in OSI root format; strike can be zero for the variable strike leg"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"115"}),(0,s.jsx)(n.td,{children:"side"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"118"}),(0,s.jsx)(n.td,{children:"ratio"}),(0,s.jsx)(n.td,{children:"short"}),(0,s.jsx)(n.td,{children:"1"}),(0,s.jsx)(n.td,{children:"leg ratio"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"121"}),(0,s.jsx)(n.td,{children:"strikeType"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/StrikeType",children:"enum : StrikeType"})}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"DollarAmt, Percent or PctVariable (exactly one leg can be PctVariable)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"124"}),(0,s.jsx)(n.td,{children:"flexTypeOut"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/FlexType",children:"enum : FlexType"})}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"reflects the type of flex decoded from the okey root"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"127"}),(0,s.jsx)(n.td,{children:"vYearsOut"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"volatility years to expiry"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"130"}),(0,s.jsx)(n.td,{children:"dYearsOut"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"calendar days to expiry / 365.0"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"133"}),(0,s.jsx)(n.td,{children:"sdivOut"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"continuous stock dividend used for pricing"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"136"}),(0,s.jsx)(n.td,{children:"rateOut"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"discount rate used for pricing"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"139"}),(0,s.jsx)(n.td,{children:"effStrikeOut"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"effective strike ($); will be the implied surface strike if strikeType=PctVariable"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"142"}),(0,s.jsx)(n.td,{children:"sVolOut"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"leg surface volatility"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"145"}),(0,s.jsx)(n.td,{children:"sPrcOut"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"leg surface price"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"148"}),(0,s.jsx)(n.td,{children:"deltaOut"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"delta"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"151"}),(0,s.jsx)(n.td,{children:"gammaOut"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"gamma"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"154"}),(0,s.jsx)(n.td,{children:"thetaOut"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"theta"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"157"}),(0,s.jsx)(n.td,{children:"vegaOut"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"vega"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"160"}),(0,s.jsx)(n.td,{children:"volgaOut"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"volga"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"163"}),(0,s.jsx)(n.td,{children:"vannaOut"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"vanna"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"166"}),(0,s.jsx)(n.td,{children:"rhoOut"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"rho"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"169"}),(0,s.jsx)(n.td,{children:"phiOut"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"phi"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"172"}),(0,s.jsx)(n.td,{children:"errorOut"}),(0,s.jsx)(n.td,{children:"string(32)"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"leg error (if any)"})]})]})]}),"\n",(0,s.jsx)(n.p,{children:"DiscreteDividend"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"#"}),(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default Value"}),(0,s.jsx)(n.th,{children:"Comment"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"208"}),(0,s.jsx)(n.td,{children:"date"}),(0,s.jsx)(n.td,{children:"DateTime"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"211"}),(0,s.jsx)(n.td,{children:"amount"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,s.jsxs)(a.Z,{children:[(0,s.jsx)(d.Z,{value:"Python",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'GetFlexSpreadPrice'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n    # Required Parameters\n    \"apiKey\": API_KEY,\n    \"cmd\": 'getschema',\n    \"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,s.jsx)(d.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=GetFlexSpreadPrice'\n\n"})})})]}),"\n",(0,s.jsx)(n.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,s.jsxs)(a.Z,{children:[(0,s.jsx)(d.Z,{value:"Python",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'GetFlexSpreadPrice\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'uPrc|fixedPremUPct|incGreeks|ticker|sprdPrem|sprdDelta|sprdGamma|sprdTheta|sprdVega|sprdVolga|sprdVanna|sprdRho|sprdPhi|calcDetail|error|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(d.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=GetFlexSpreadPrice' \\\n--data-urlencode 'view=uPrc|fixedPremUPct|incGreeks|ticker|sprdPrem|sprdDelta|sprdGamma|sprdTheta|sprdVega|sprdVolga|sprdVanna|sprdRho|sprdPhi|calcDetail|error|timestamp' \\\n--data-urlencode 'where='\n"})})})]}),"\n",(0,s.jsx)(n.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,s.jsxs)(a.Z,{children:[(0,s.jsx)(d.Z,{value:"Python",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'GetFlexSpreadPrice\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'uPrc|fixedPremUPct|incGreeks|ticker|sprdPrem|sprdDelta|sprdGamma|sprdTheta|sprdVega|sprdVolga|sprdVanna|sprdRho|sprdPhi|calcDetail|error|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'uPrc:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(d.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=GetFlexSpreadPrice' \\\n--data-urlencode 'view=uPrc|fixedPremUPct|incGreeks|ticker|sprdPrem|sprdDelta|sprdGamma|sprdTheta|sprdVega|sprdVolga|sprdVanna|sprdRho|sprdPhi|calcDetail|error|timestamp' \\\n--data-urlencode 'where=' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=uPrc:ASC'\n"})})})]}),"\n",(0,s.jsx)(n.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,s.jsxs)(a.Z,{children:[(0,s.jsx)(d.Z,{value:"Python",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'GetFlexSpreadPrice\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'uPrc|fixedPremUPct|incGreeks|ticker|sprdPrem|sprdDelta|sprdGamma|sprdTheta|sprdVega|sprdVolga|sprdVanna|sprdRho|sprdPhi|calcDetail|error|timestamp\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'incGreeks\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getaggregate\',\n    "msgType": MSG_TYPE,\n    "measure": MEASURE,\n    "group": GROUP,\n    # Optional Parameters\n    "where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(d.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=GetFlexSpreadPrice' \\\n--data-urlencode 'measure=uPrc|fixedPremUPct|incGreeks|ticker|sprdPrem|sprdDelta|sprdGamma|sprdTheta|sprdVega|sprdVolga|sprdVanna|sprdRho|sprdPhi|calcDetail|error|timestamp' \\\n--data-urlencode 'group=incGreeks' \\\n--data-urlencode 'where='\n"})})})]}),"\n",(0,s.jsx)(n.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,s.jsxs)(a.Z,{children:[(0,s.jsx)(d.Z,{value:"Python",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'GetFlexSpreadPrice\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(d.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=GetFlexSpreadPrice' \\\n--data-urlencode 'where='\n"})})})]}),"\n",(0,s.jsx)(n.h3,{id:"post-msgs-api-call",children:"Post Msgs API Call"}),"\n",(0,s.jsxs)(a.Z,{children:[(0,s.jsx)(d.Z,{value:"Python",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import requests\n\n# Replace with your desired MLINK URL\nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Request Parameters\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'postmsgs\',\n    "postaction": "I", # (I)nsert, or (R)eplace\n    "postmerge": "Y", # (Y)es or (N)o\n}\n\npayload = {\n    "header": {\n        "mTyp": "GetFlexSpreadPrice"\n    },\n    "message": {\n        "uPrc": 0, // double. Default=0\n        "fixedPremUPct": 0, // double. Default=0\n        "incGreeks": "No", // enum(YesNo) - None, Yes, No. Default=No\n        "ticker": {\n            "at": "EQT",\n            "ts": "NMS",\n            "tk": "AAPL"\n        },\n        "sprdPrem": 1.0, // double\n        "sprdDelta": 1.0, // float\n        "sprdGamma": 1.0, // float\n        "sprdTheta": 1.0, // float\n        "sprdVega": 1.0, // float\n        "sprdVolga": 1.0, // float\n        "sprdVanna": 1.0, // float\n        "sprdRho": 1.0, // float\n        "sprdPhi": 1.0, // float\n        "calcDetail": "exampleString", // text1\n        "error": "exampleString", // text1\n        "timestamp": "2025-01-01 12:00:00.000000", // yyyy-MM-dd HH:mm:ss.SSSSSS\n        "Legs": [ // Repeating Field\n            {\n                "okey": {\n                    "at": "EQT",\n                    "ts": "NMS",\n                    "tk": "AAPL",\n                    "dt": "2025-01-01",\n                    "xx": 1,\n                    "cp": "Call"\n                },\n                "side": "enumValue", // enum(BuySell) - None, Buy, Sell\n                "ratio": 1, // short. Default=1\n                "strikeType": "enumValue", // enum(StrikeType) - None, DollarAmt, Percent, PctVariable\n                "flexTypeOut": "enumValue", // enum(FlexType) - None, AM_Amer_Cash, AM_Euro_Cash, PM_Amer_Cash, PM_Euro_Cash, PM_Amer_Physical, PM_Euro_Physical, Asian, Cliquet, Other, Listed\n                "vYearsOut": 1.0, // double\n                "dYearsOut": 1.0, // double\n                "sdivOut": 1.0, // double\n                "rateOut": 1.0, // double\n                "effStrikeOut": 1.0, // double\n                "sVolOut": 1.0, // double\n                "sPrcOut": 1.0, // double\n                "deltaOut": 1.0, // float\n                "gammaOut": 1.0, // float\n                "thetaOut": 1.0, // float\n                "vegaOut": 1.0, // float\n                "volgaOut": 1.0, // float\n                "vannaOut": 1.0, // float\n                "rhoOut": 1.0, // float\n                "phiOut": 1.0, // float\n                "errorOut": "exampleString" // string\n            }\n        ],\n        "DiscreteDividend": [ // Repeating Field\n            {\n                "date": "2025-01-01 12:00:00.000000", // yyyy-MM-dd HH:mm:ss.SSSSSS\n                "amount": 1.0 // float\n            }\n        ]\n    }\n}\n\nresponse = requests.post(MLINK_PROD_URL, params=params, json=payload)\n'})})}),(0,s.jsx)(d.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'curl -X POST \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\' \\\n--data-urlencode \'apiKey=XXXX-XXXX-XXXX-XXXX\' \\\n--data-urlencode \'cmd=postmsgs\' \\\n--data-urlencode \'postaction=I\' \\ # (I)nsert, or (R)eplace\n--data-urlencode \'postmerge=Y\' \\ # (Y)es or (N)o\n--header \'Content-Type: application/json\' \\\n--data \'{\n    "header": {\n        "mTyp": "GetFlexSpreadPrice"\n    },\n    "message": {\n        "uPrc": 0, // double. Default=0\n        "fixedPremUPct": 0, // double. Default=0\n        "incGreeks": "No", // enum(YesNo) - None, Yes, No. Default=No\n        "ticker": {\n            "at": "EQT",\n            "ts": "NMS",\n            "tk": "AAPL"\n        },\n        "sprdPrem": 1.0, // double\n        "sprdDelta": 1.0, // float\n        "sprdGamma": 1.0, // float\n        "sprdTheta": 1.0, // float\n        "sprdVega": 1.0, // float\n        "sprdVolga": 1.0, // float\n        "sprdVanna": 1.0, // float\n        "sprdRho": 1.0, // float\n        "sprdPhi": 1.0, // float\n        "calcDetail": "exampleString", // text1\n        "error": "exampleString", // text1\n        "timestamp": "2025-01-01 12:00:00.000000", // yyyy-MM-dd HH:mm:ss.SSSSSS\n        "Legs": [ // Repeating Field\n            {\n                "okey": {\n                    "at": "EQT",\n                    "ts": "NMS",\n                    "tk": "AAPL",\n                    "dt": "2025-01-01",\n                    "xx": 1,\n                    "cp": "Call"\n                },\n                "side": "enumValue", // enum(BuySell) - None, Buy, Sell\n                "ratio": 1, // short. Default=1\n                "strikeType": "enumValue", // enum(StrikeType) - None, DollarAmt, Percent, PctVariable\n                "flexTypeOut": "enumValue", // enum(FlexType) - None, AM_Amer_Cash, AM_Euro_Cash, PM_Amer_Cash, PM_Euro_Cash, PM_Amer_Physical, PM_Euro_Physical, Asian, Cliquet, Other, Listed\n                "vYearsOut": 1.0, // double\n                "dYearsOut": 1.0, // double\n                "sdivOut": 1.0, // double\n                "rateOut": 1.0, // double\n                "effStrikeOut": 1.0, // double\n                "sVolOut": 1.0, // double\n                "sPrcOut": 1.0, // double\n                "deltaOut": 1.0, // float\n                "gammaOut": 1.0, // float\n                "thetaOut": 1.0, // float\n                "vegaOut": 1.0, // float\n                "volgaOut": 1.0, // float\n                "vannaOut": 1.0, // float\n                "rhoOut": 1.0, // float\n                "phiOut": 1.0, // float\n                "errorOut": "exampleString" // string\n            }\n        ],\n        "DiscreteDividend": [ // Repeating Field\n            {\n                "date": "2025-01-01 12:00:00.000000", // yyyy-MM-dd HH:mm:ss.SSSSSS\n                "amount": 1.0 // float\n            }\n        ]\n    }\n}\'\n'})})})]})]})}function p(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},9641:function(e,n,t){t.d(n,{Z:()=>l});var r=t("52676");t("75271");var s=t("54461");function l(e){let{children:n,hidden:t,className:l}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,s.Z)("tabItem_SSzl",l),hidden:t,children:n})}},71386:function(e,n,t){t.d(n,{Z:()=>f});var r=t("52676"),s=t("75271"),l=t("54461"),a=t("52289"),d=t("3225"),i=t("42834"),c=t("40578"),o=t("35834"),h=t("79616");function u(e){return s.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||s.isValidElement(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p(e){let{value:n,tabValues:t}=e;return t.some(e=>e.value===n)}var x=t("44537");function m(e){let{className:n,block:t,selectedValue:s,selectValue:d,tabValues:i}=e,c=[],{blockElementScrollPositionUntilNextRender:o}=(0,a.o5)(),h=e=>{let n=e.currentTarget,t=i[c.indexOf(n)].value;t!==s&&(o(n),d(t))},u=e=>{let n=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{let t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{let t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1]}}n?.focus()};return(0,r.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":t},n),children:i.map(e=>{let{value:n,label:t,attributes:a}=e;return(0,r.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>c.push(e),onKeyDown:u,onClick:h,...a,className:(0,l.Z)("tabs__item","tabItem_aitt",a?.className,{"tabs__item--active":s===n}),children:t??n},n)})})}function j(e){let{lazy:n,children:t,selectedValue:a}=e,d=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){let e=d.find(e=>e.props.value===a);return e?(0,s.cloneElement)(e,{className:(0,l.Z)("margin-top--md",e.props.className)}):null}return(0,r.jsx)("div",{className:"margin-top--md",children:d.map((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==a}))})}function g(e){let n=function(e){let{defaultValue:n,queryString:t=!1,groupId:r}=e,l=function(e){let{values:n,children:t}=e;return(0,s.useMemo)(()=>{let e=n??u(t).map(e=>{let{props:{value:n,label:t,attributes:r,default:s}}=e;return{value:n,label:t,attributes:r,default:s}});return!function(e){let n=(0,o.lx)(e,(e,n)=>e.value===n.value);if(n.length>0)throw Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,t])}(e),[a,x]=(0,s.useState)(()=>(function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}let r=t.find(e=>e.default)??t[0];if(!r)throw Error("Unexpected error: 0 tabValues");return r.value})({defaultValue:n,tabValues:l})),[m,j]=function(e){let{queryString:n=!1,groupId:t}=e,r=(0,d.k6)(),l=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,c._X)(l),(0,s.useCallback)(e=>{if(!l)return;let n=new URLSearchParams(r.location.search);n.set(l,e),r.replace({...r.location,search:n.toString()})},[l,r])]}({queryString:t,groupId:r}),[g,f]=function(e){let{groupId:n}=e,t=n?`docusaurus.tab.${n}`:null,[r,l]=(0,h.Nk)(t);return[r,(0,s.useCallback)(e=>{t&&l.set(e)},[t,l])]}({groupId:r}),y=(()=>{let e=m??g;return p({value:e,tabValues:l})?e:null})();return(0,i.Z)(()=>{y&&x(y)},[y]),{selectedValue:a,selectValue:(0,s.useCallback)(e=>{if(!p({value:e,tabValues:l}))throw Error(`Can't select invalid tab value=${e}`);x(e),j(e),f(e)},[j,f,l]),tabValues:l}}(e);return(0,r.jsxs)("div",{className:(0,l.Z)("tabs-container","tabList_ArS0"),children:[(0,r.jsx)(m,{...n,...e}),(0,r.jsx)(j,{...n,...e})]})}function f(e){let n=(0,x.Z)();return(0,r.jsx)(g,{...e,children:u(e.children)},String(n))}},91503:function(e,n,t){t.d(n,{Z:function(){return d},a:function(){return a}});var r=t(75271);let s={},l=r.createContext(s);function a(e){let n=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);