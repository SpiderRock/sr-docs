"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[31666],{15600:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>L,frontMatter:()=>N,metadata:()=>a,toc:()=>E});var i=r(74848),n=r(28453);const N={title:"LiveAtmVol"},o=void 0,a={id:"MessageSchemas/Schema/SRSE Products/SRAnalytics/LiveAtmVol/LiveAtmVol",title:"LiveAtmVol",description:"V8 Message Definition",source:"@site/docs/MessageSchemas/Schema/SRSE Products/SRAnalytics/LiveAtmVol/LiveAtmVol.md",sourceDirName:"MessageSchemas/Schema/SRSE Products/SRAnalytics/LiveAtmVol",slug:"/MessageSchemas/Schema/SRSE Products/SRAnalytics/LiveAtmVol/",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRAnalytics/LiveAtmVol/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"LiveAtmVol"},sidebar:"messageSchemasSidebar",previous:{title:"IndustryDefinition",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRAnalytics/IndustryDefinition/"},next:{title:"LiveExpirySurface",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRAnalytics/LiveExpirySurface/"}},s={},E=[];function c(e){const t={a:"a",code:"code",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"../../../Topics/analytics/LiveAtmVol",children:"V8 Message Definition"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-sql",children:"CREATE TABLE `SRAnalytics`.`MsgLiveAtmVol` (\n    `ekey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None',\n    `ekey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None',\n    `ekey_tk` VARCHAR(12) NOT NULL DEFAULT '',\n    `ekey_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0,\n    `ekey_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0,\n    `ekey_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0,\n    `ticker_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'underlying tickerKey (stock or product group) that this option expiration is associated with',\n    `ticker_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'underlying tickerKey (stock or product group) that this option expiration is associated with',\n    `ticker_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'underlying tickerKey (stock or product group) that this option expiration is associated with',\n    `uPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'effective underlier price',\n    `years` FLOAT NOT NULL DEFAULT 0 COMMENT 'SR years to expiry metric',\n    `rate` FLOAT NOT NULL DEFAULT 0 COMMENT 'average expected interest rate to expiry (SR global rate curve)',\n    `ddiv` FLOAT NOT NULL DEFAULT 0 COMMENT '(expected) cumulative discrete dividend $ amounts prior to expiration (if any)',\n    `ddivPv` FLOAT NOT NULL DEFAULT 0 COMMENT '(expected) cumulative npv of discrete dividend $ amounts prior to expiration (SR global rate curve) (if any)',\n    `ddivSource` ENUM('None','Announced','Forecast') NOT NULL DEFAULT 'None' COMMENT 'Forecast if any of the dividends prior to expiry are forecast rather than announced',\n    `atmVol` FLOAT NOT NULL DEFAULT 0 COMMENT 'atm vol (xAxis = 0)',\n    `atmEMA` FLOAT NOT NULL DEFAULT 0 COMMENT 'atm vol exp moving average (half-life ~ 30 seconds)',\n    `uPrcRatio` DOUBLE NOT NULL DEFAULT 0 COMMENT 'uPrc = uPrcDriver * uPrcRatio (when priceType = Future); uPrc = uPrcDriver (when priceType = Equity)',\n    `uPrcRatioEMA` DOUBLE NOT NULL DEFAULT 0 COMMENT 'time smoothed implied uPrcRatio (half-life ~ 30 seconds)',\n    `sdiv` FLOAT NOT NULL DEFAULT 0 COMMENT 'stock dividend (borrow rate) (derived from call/put balance when priceType=Stock; =rate otherwise)',\n    `sdivEMA` FLOAT NOT NULL DEFAULT 0 COMMENT 'sdiv exp moving average (half-life ~ 30 seconds)',\n    `minCPAdjVal` DOUBLE NOT NULL DEFAULT 0 COMMENT 'minimum cpAdjVal (sdiv or uPrcRatio)',\n    `maxCPAdjVal` DOUBLE NOT NULL DEFAULT 0 COMMENT 'minimum cpAdjVal (sdiv or uPrcRatio)',\n    `cpAdjType` ENUM('None','SDiv','UPrcRatio') NOT NULL DEFAULT 'None' COMMENT 'adjustment used to align calls/puts',\n    `priceType` ENUM('None','Equity','Future') NOT NULL DEFAULT 'None' COMMENT '[Equity] has independent uPrc and rate with sdiv derived from call/put balance; [Future] has sdiv = rate with uPrc'' derived from call/put balance',\n    `uPrcDriverKey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'underlier driver key',\n    `uPrcDriverKey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'underlier driver key',\n    `uPrcDriverKey_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'underlier driver key',\n    `uPrcDriverKey_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'underlier driver key',\n    `uPrcDriverKey_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'underlier driver key',\n    `uPrcDriverKey_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'underlier driver key',\n    `uPrcDriverType` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None' COMMENT 'underlier driver key type (stock or future)',\n    `uPrcDriver` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier driver (mid-market)',\n    `axisFUPrc` FLOAT NOT NULL DEFAULT 0 COMMENT 'forward underlier price;  also at-the-money (xAxis = 0) synthetic strike',\n    `synSpot` DOUBLE NOT NULL DEFAULT 0 COMMENT 'Synthetic spot price (market-derived spot when the underlying is not a traded instrument)',\n    `vWidth` FLOAT NOT NULL DEFAULT 0 COMMENT 'atm volatility market width (estimated from near expiries)',\n    `numAtmStrikes` TINYINT UNSIGNED NOT NULL DEFAULT 0,\n    `tradeableStatus` ENUM('None','OK','SurfaceErr','LowCCnt','LowPCnt','FitPrcErr','BidAskMiss','LowCounter','DefaultSkew','SessionMiss','BaseErr','SwitchDelay','WideMktV','WideMktP','WideUMkt','UWidthEma','CCntEma','PCntEma','VWidthEma','PWidthEma','Closed') NOT NULL DEFAULT 'None' COMMENT 'indicates whether the surface is currently tradeable or not (all server surface integrity checks pass)',\n    `surfaceResult` ENUM('None','OK','Exception','AxisError','MarketClosed','NoBaseSurface','NoFutUPrc','NoStkUPrc','NullStock','UnknownFKey','ZeroYrs','MarketHalted','WideUMkt','BaseSurface','NotEnoughStrikes','KernelIVErr','KernelCPErr','ProxyError','BadAtmVol','BadSDiv','BadUOff','NoBaseAtmVol','NoDriverStock','NoDriverFuture') NOT NULL DEFAULT 'None',\n    `netTimestamp` BIGINT NOT NULL DEFAULT 0 COMMENT 'most recent unix timestamp (all option quotes)',\n    `timestamp` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000',\n    PRIMARY KEY USING HASH (`ekey_tk`,`ekey_yr`,`ekey_mn`,`ekey_dy`,`ekey_at`,`ekey_ts`)\n) ENGINE=SRSE DEFAULT CHARSET=LATIN1 COMMENT='LiveAtmVol records are computed and publish continuously during trading hours';\n\n"})})]})}function L(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>a});var i=r(96540);const n={},N=i.createContext(n);function o(e){const t=i.useContext(N);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),i.createElement(N.Provider,{value:t},e.children)}}}]);