"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[11624],{33464:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var n=s(74848),o=s(28453);const a={title:"Software Release Cycle",sidebar_position:2},r=void 0,i={id:"Documentation/PlatformAPIs/SoftwareReleases",title:"Software Release Cycle",description:"Development",source:"@site/docs/Documentation/PlatformAPIs/SoftwareReleases.md",sourceDirName:"Documentation/PlatformAPIs",slug:"/Documentation/PlatformAPIs/SoftwareReleases",permalink:"/docs/Documentation/PlatformAPIs/SoftwareReleases",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Software Release Cycle",sidebar_position:2},sidebar:"documentationSidebar",previous:{title:"System Architecture",permalink:"/docs/Documentation/PlatformAPIs/Overview"},next:{title:"Stripes",permalink:"/docs/Documentation/PlatformAPIs/Stripes"}},l={},c=[{value:"Development",id:"development",level:2},{value:"Testing",id:"testing",level:2},{value:"Notification",id:"notification",level:2},{value:"Release",id:"release",level:2},{value:"Bug Reports",id:"bug-reports",level:2}];function u(e){const t={h2:"h2",p:"p",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"development",children:"Development"}),"\n",(0,n.jsx)(t.p,{children:"SpiderRock Connect is a platform under continuous development.  We utilize a rapid development cycle where fixes and features are created and tested in short 2-4 weeks sprints and are released as packages during Saturday maintenance windows."}),"\n",(0,n.jsx)(t.h2,{id:"testing",children:"Testing"}),"\n",(0,n.jsx)(t.p,{children:"Prior to release, the system is tested by our dedicated release QA team and previewed by our Client Support Desk.  We run staging (preview) versions of our code in a limited stripe system environment (Venus) prior to release. This environment is sometimes available to clients who have a need to test and release code simultaneously with us."}),"\n",(0,n.jsx)(t.p,{children:"We have an extensive set of integration/regression tests that we run against our pre-release code base. This test suite particularly covers our execution engines but also has coverage for all of the other parts of the system."}),"\n",(0,n.jsx)(t.h2,{id:"notification",children:"Notification"}),"\n",(0,n.jsx)(t.p,{children:"During the week prior to an expected production software release, SpiderRock will disseminate Release Notes for the upcoming release. The notes will detail any new features and bug fixes that are planned in the upcoming release package, as week as any MBus and FIX changes that may affect the clients."}),"\n",(0,n.jsx)(t.h2,{id:"release",children:"Release"}),"\n",(0,n.jsx)(t.p,{children:"We release code for our production environment globally and simultaneously during normal release windows. This establishes a new common code baseline for all system realms (regions) within our production system environment.  During these normal release windows we may make changes to our schemas and record/message layouts.  Generally these schema changes involve adding message types, fields, or enum values which we expect our clients to be able to automatically handle in their systems.  Occasionally, we make changes that are not backward compatible (eg. deprecating message types or fields or removing values from enums).  We attempt to both minimize these 'breaking' changes and make clients aware of them in advance.  We also, occasionally, make 'hotfix' releases to some part of our production environment.  Hotfix releases never include changes to our schemas and we attempt to give as much notice as possible if or when we make this types of release."}),"\n",(0,n.jsx)(t.h2,{id:"bug-reports",children:"Bug Reports"}),"\n",(0,n.jsx)(t.p,{children:"We appreciate bug reports and do address them in as timely a fashion as possible. If you report a system bug to our Client Support Desk, we will create an appropriate ticket which will get tracked and managed through our normal release process (or, if high enough priority, our hotfix process). Feel free to inquire about progress on bug or issues at any time."})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>i});var n=s(96540);const o={},a=n.createContext(o);function r(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);