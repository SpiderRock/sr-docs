"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[45298],{15407:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>p,frontMatter:()=>d,metadata:()=>c,toc:()=>u});var r=t(74848),s=t(28453),i=t(11470),l=t(19365);const d={title:"ResponderMarkupRC"},a="Schema: ResponderMarkupRC (ID: 2501)",c={id:"MessageSchemas/Schema/Topics/liquidity-notice/ResponderMarkupRC",title:"ResponderMarkupRC",description:"METADATA",source:"@site/docs/MessageSchemas/Schema/Topics/2450-liquidity-notice/ResponderMarkupRC.md",sourceDirName:"MessageSchemas/Schema/Topics/2450-liquidity-notice",slug:"/MessageSchemas/Schema/Topics/liquidity-notice/ResponderMarkupRC",permalink:"/docs/MessageSchemas/Schema/Topics/liquidity-notice/ResponderMarkupRC",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"ResponderMarkupRC"},sidebar:"messageSchemasSidebar",previous:{title:"ResponderMarkupBX",permalink:"/docs/MessageSchemas/Schema/Topics/liquidity-notice/ResponderMarkupBX"},next:{title:"ResponderMarkupSN",permalink:"/docs/MessageSchemas/Schema/Topics/liquidity-notice/ResponderMarkupSN"}},o={},u=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3}];function h(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"schema-respondermarkuprc-id-2501",children:["Schema: ResponderMarkupRC ",(0,r.jsx)("span",{className:"small-text",children:"(ID: 2501)"})]}),"\n",(0,r.jsx)(n.h3,{id:"metadata",children:"METADATA"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Attribute"}),(0,r.jsx)(n.th,{children:"Value"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Topic"}),(0,r.jsx)(n.td,{children:"2450-liquidity-notice"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"MLink Token"}),(0,r.jsx)(n.td,{children:"SystemData"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"SRSE Product"}),(0,r.jsx)(n.td,{children:"SRTrade"})]})]})]}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note:"})," The symbol ",(0,r.jsx)(n.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"body",children:"BODY"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"#"}),(0,r.jsx)(n.th,{children:"Field"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Comment"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"10="}),(0,r.jsx)(n.td,{children:"accnt"}),(0,r.jsx)(n.td,{children:"string(16)"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"11="}),(0,r.jsx)(n.td,{children:"clientFirm"}),(0,r.jsx)(n.td,{children:"string(16)"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"12="}),(0,r.jsx)(n.td,{children:"root"}),(0,r.jsx)(n.td,{children:"TickerKey"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"13="}),(0,r.jsx)(n.td,{children:"expiry"}),(0,r.jsx)(n.td,{children:"DateKey"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"14="}),(0,r.jsx)(n.td,{children:"respSide"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,r.jsx)(n.td,{children:"auction responder side (your side); Buy = Buy Synthetic (Sell Shares)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"100"}),(0,r.jsx)(n.td,{children:"ticker"}),(0,r.jsx)(n.td,{children:"TickerKey"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"101"}),(0,r.jsx)(n.td,{children:"isDisabled"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,r.jsx)(n.td,{children:"if Yes, this auto-responder record is disabled"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"102"}),(0,r.jsx)(n.td,{children:"expiryQtyAvail"}),(0,r.jsx)(n.td,{children:"int"}),(0,r.jsx)(n.td,{children:"revcons (contracts) available for responding (day total; this ticker/expiry; all strikes) [note: 1 contract = undPerCn underlier units]"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"103"}),(0,r.jsx)(n.td,{children:"tickerQtyAvail"}),(0,r.jsx)(n.td,{children:"int"}),(0,r.jsx)(n.td,{children:"revcons (contracts) available for responding (day total; this ticker; all strikes) [note: 1 contract = undPerCn underlier units]"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"104"}),(0,r.jsx)(n.td,{children:"transactFee"}),(0,r.jsx)(n.td,{children:"double"}),(0,r.jsx)(n.td,{children:"(+ = you pay) / (- = you receive)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"105"}),(0,r.jsx)(n.td,{children:"stockRate"}),(0,r.jsx)(n.td,{children:"double"}),(0,r.jsx)(n.td,{children:"0.00 = no effective lend/borrow value  (360 day convention)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"106"}),(0,r.jsx)(n.td,{children:"moneyRate"}),(0,r.jsx)(n.td,{children:"double"}),(0,r.jsx)(n.td,{children:"effective rate to borrow/lend money to expiry (360 day convention) [compares to globalRate * 360 / 365]"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"107"}),(0,r.jsx)(n.td,{children:"ddivPv"}),(0,r.jsx)(n.td,{children:"double"}),(0,r.jsx)(n.td,{children:"present value of any expected dividends to expiry"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"108"}),(0,r.jsx)(n.td,{children:"divControl"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/DivControl",children:"enum : DivControl"})}),(0,r.jsx)(n.td,{children:"disable this auto-responder record if SR Dividends exist or are estimates"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"109"}),(0,r.jsx)(n.td,{children:"respondFlex"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,r.jsx)(n.td,{children:"if not None, much match auction notice containsFlex field"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"110"}),(0,r.jsx)(n.td,{children:"incFeesInResp"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,r.jsx)(n.td,{children:"include all estimated responder fees in final response price"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"111"}),(0,r.jsx)(n.td,{children:"roundRule"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/RoundRule",children:"enum : RoundRule"})}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"112"}),(0,r.jsx)(n.td,{children:"openExpiryQty"}),(0,r.jsx)(n.td,{children:"int"}),(0,r.jsx)(n.td,{children:"remaining revcons (100 share units) available for responding (day total; this ticker/expiry; all strikes)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"113"}),(0,r.jsx)(n.td,{children:"openTickerQty"}),(0,r.jsx)(n.td,{children:"int"}),(0,r.jsx)(n.td,{children:"remaining revcons (100 share units) available for responding (day total; ticker; all strikes)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"114"}),(0,r.jsx)(n.td,{children:"cumFillQty"}),(0,r.jsx)(n.td,{children:"int"}),(0,r.jsx)(n.td,{children:"revcons (100 share units) traded (day total; this expiry; all strikes)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"115"}),(0,r.jsx)(n.td,{children:"cumFillMoney"}),(0,r.jsx)(n.td,{children:"double"}),(0,r.jsx)(n.td,{children:"cumulative fill money (credit/debit) (this expiry)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"116"}),(0,r.jsx)(n.td,{children:"avgFillRate"}),(0,r.jsx)(n.td,{children:"double"}),(0,r.jsx)(n.td,{children:"avg fill effective stock rate (this expiry)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"117"}),(0,r.jsx)(n.td,{children:"isDivControlDisabled"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,r.jsx)(n.td,{children:"yes if dividend control above is triggered"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"118"}),(0,r.jsx)(n.td,{children:"uBid"}),(0,r.jsx)(n.td,{children:"double"}),(0,r.jsx)(n.td,{children:"live stock nbbo bid price [SR Supplied]"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"119"}),(0,r.jsx)(n.td,{children:"uAsk"}),(0,r.jsx)(n.td,{children:"double"}),(0,r.jsx)(n.td,{children:"live stock nbbo ask price [SR Supplied]"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"120"}),(0,r.jsx)(n.td,{children:"iDays"}),(0,r.jsx)(n.td,{children:"double"}),(0,r.jsx)(n.td,{children:"iDays = effective interest days [SR supplied]"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"121"}),(0,r.jsx)(n.td,{children:"iYears"}),(0,r.jsx)(n.td,{children:"double"}),(0,r.jsx)(n.td,{children:"iYears = iDays / 360.0"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"122"}),(0,r.jsx)(n.td,{children:"strike"}),(0,r.jsx)(n.td,{children:"double"}),(0,r.jsx)(n.td,{children:"SR selected strike (standard day strike)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"123"}),(0,r.jsx)(n.td,{children:"rcEExPrem"}),(0,r.jsx)(n.td,{children:"double"}),(0,r.jsx)(n.td,{children:"rcEExPrem = (pRv.price - pRvE.price) - (cRv.price - cRvE.price) [american price - european price] (same model parameters; SR supplied parameters including DDivs; is zero for flex revcons)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"124"}),(0,r.jsx)(n.td,{children:"strikePv"}),(0,r.jsx)(n.td,{children:"double"}),(0,r.jsx)(n.td,{children:"strikePv = strike * (1.0 - moneyRate * iYears) [moneyRate supplied above]"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"125"}),(0,r.jsx)(n.td,{children:"stockLendPv"}),(0,r.jsx)(n.td,{children:"double"}),(0,r.jsx)(n.td,{children:"stockLendPv = uPrc * stockRate * iYears [stockRate supplied above]"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"126"}),(0,r.jsx)(n.td,{children:"revConPrem"}),(0,r.jsx)(n.td,{children:"double"}),(0,r.jsx)(n.td,{children:"revConPrem = stockLendPv + strikePv + ddivPv + rcEExPrem (if any) [uPrc + pRv.price - cRv.price] [ddivPv supplied above]"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"127"}),(0,r.jsx)(n.td,{children:"effRevConLimit"}),(0,r.jsx)(n.td,{children:"double"}),(0,r.jsx)(n.td,{children:"effRevConLimit = refConPrem +/- transactFee [lend/borrow]"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"128"}),(0,r.jsx)(n.td,{children:"limitPrice"}),(0,r.jsx)(n.td,{children:"double"}),(0,r.jsx)(n.td,{children:"limitPrice = ROUND(effRevConLimit) [this is your response limit]"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"129"}),(0,r.jsx)(n.td,{children:"effStockLendPv"}),(0,r.jsx)(n.td,{children:"double"}),(0,r.jsx)(n.td,{children:"effStockLendPv = limitPrice - strikePv - ddivPv - rcEExPrem"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"130"}),(0,r.jsx)(n.td,{children:"effStockRate"}),(0,r.jsx)(n.td,{children:"double"}),(0,r.jsx)(n.td,{children:"effStockRate = effStockLendPv / (uPrc * iYears)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"131"}),(0,r.jsx)(n.td,{children:"modifiedBy"}),(0,r.jsx)(n.td,{children:"string(24)"}),(0,r.jsx)(n.td,{children:"user who last modified this record"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"132"}),(0,r.jsx)(n.td,{children:"modifiedIn"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/SysEnvironment",children:"enum : SysEnvironment"})}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"133"}),(0,r.jsx)(n.td,{children:"timestamp"}),(0,r.jsx)(n.td,{children:"DateTime"}),(0,r.jsx)(n.td,{children:"timestamp of last modification"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsx)(l.A,{value:"Python",label:"Python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'ResponderMarkupRC'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n#Required Parameters\n\"apiKey\": API_KEY,\n\"cmd\": 'getschema',\n\"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,r.jsx)(l.A,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=ResponderMarkupRC'\n\n"})})})]}),"\n",(0,r.jsx)(n.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsx)(l.A,{value:"Python",label:"Python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'ResponderMarkupRC\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'ticker|isDisabled|expiryQtyAvail|tickerQtyAvail|transactFee|stockRate|moneyRate|ddivPv|divControl|respondFlex|incFeesInResp|roundRule|openExpiryQty|openTickerQty|cumFillQty|cumFillMoney|avgFillRate|isDivControlDisabled|uBid|uAsk|iDays|iYears|strike|rcEExPrem|strikePv|stockLendPv|revConPrem|effRevConLimit|limitPrice|effStockLendPv|effStockRate|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,r.jsx)(l.A,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=ResponderMarkupRC' \\\n--data-urlencode 'view=ticker|isDisabled|expiryQtyAvail|tickerQtyAvail|transactFee|stockRate|moneyRate|ddivPv|divControl|respondFlex|incFeesInResp|roundRule|openExpiryQty|openTickerQty|cumFillQty|cumFillMoney|avgFillRate|isDivControlDisabled|uBid|uAsk|iDays|iYears|strike|rcEExPrem|strikePv|stockLendPv|revConPrem|effRevConLimit|limitPrice|effStockLendPv|effStockRate|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,r.jsx)(n.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsx)(l.A,{value:"Python",label:"Python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'ResponderMarkupRC\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'ticker|isDisabled|expiryQtyAvail|tickerQtyAvail|transactFee|stockRate|moneyRate|ddivPv|divControl|respondFlex|incFeesInResp|roundRule|openExpiryQty|openTickerQty|cumFillQty|cumFillMoney|avgFillRate|isDivControlDisabled|uBid|uAsk|iDays|iYears|strike|rcEExPrem|strikePv|stockLendPv|revConPrem|effRevConLimit|limitPrice|effStockLendPv|effStockRate|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'ticker:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,r.jsx)(l.A,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=ResponderMarkupRC' \\\n--data-urlencode 'view=ticker|isDisabled|expiryQtyAvail|tickerQtyAvail|transactFee|stockRate|moneyRate|ddivPv|divControl|respondFlex|incFeesInResp|roundRule|openExpiryQty|openTickerQty|cumFillQty|cumFillMoney|avgFillRate|isDivControlDisabled|uBid|uAsk|iDays|iYears|strike|rcEExPrem|strikePv|stockLendPv|revConPrem|effRevConLimit|limitPrice|effStockLendPv|effStockRate|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'where=accnt:eq:ExampleString' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=ticker:ASC'\n"})})})]}),"\n",(0,r.jsx)(n.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsx)(l.A,{value:"Python",label:"Python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'ResponderMarkupRC\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'ticker|isDisabled|expiryQtyAvail|tickerQtyAvail|transactFee|stockRate|moneyRate|ddivPv|divControl|respondFlex|incFeesInResp|roundRule|openExpiryQty|openTickerQty|cumFillQty|cumFillMoney|avgFillRate|isDivControlDisabled|uBid|uAsk|iDays|iYears|strike|rcEExPrem|strikePv|stockLendPv|revConPrem|effRevConLimit|limitPrice|effStockLendPv|effStockRate|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'isDisabled|divControl|respondFlex|incFeesInResp|roundRule|isDivControlDisabled|modifiedIn\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getaggregate\',\n"msgType": MSG_TYPE,\n"measure": MEASURE,\n"group": GROUP,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,r.jsx)(l.A,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=ResponderMarkupRC' \\\n--data-urlencode 'measure=ticker|isDisabled|expiryQtyAvail|tickerQtyAvail|transactFee|stockRate|moneyRate|ddivPv|divControl|respondFlex|incFeesInResp|roundRule|openExpiryQty|openTickerQty|cumFillQty|cumFillMoney|avgFillRate|isDivControlDisabled|uBid|uAsk|iDays|iYears|strike|rcEExPrem|strikePv|stockLendPv|revConPrem|effRevConLimit|limitPrice|effStockLendPv|effStockRate|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'group=isDisabled|divControl|respondFlex|incFeesInResp|roundRule|isDivControlDisabled|modifiedIn' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,r.jsx)(n.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsx)(l.A,{value:"Python",label:"Python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'ResponderMarkupRC\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,r.jsx)(l.A,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=ResponderMarkupRC' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},19365:(e,n,t)=>{t.d(n,{A:()=>l});t(96540);var r=t(34164);const s={tabItem:"tabItem_Ymn6"};var i=t(74848);function l(e){let{children:n,hidden:t,className:l}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,r.A)(s.tabItem,l),hidden:t,children:n})}},11470:(e,n,t)=>{t.d(n,{A:()=>b});var r=t(96540),s=t(34164),i=t(23104),l=t(56347),d=t(205),a=t(57485),c=t(31682),o=t(70679);function u(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:s}}=e;return{value:n,label:t,attributes:r,default:s}}))}(t);return function(e){const n=(0,c.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const s=(0,l.W6)(),i=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,a.aZ)(i),(0,r.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(s.location.search);n.set(i,e),s.replace({...s.location,search:n.toString()})}),[i,s])]}function x(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,i=h(e),[l,a]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:i}))),[c,u]=m({queryString:t,groupId:s}),[x,j]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,i]=(0,o.Dv)(t);return[s,(0,r.useCallback)((e=>{t&&i.set(e)}),[t,i])]}({groupId:s}),v=(()=>{const e=c??x;return p({value:e,tabValues:i})?e:null})();(0,d.A)((()=>{v&&a(v)}),[v]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);a(e),u(e),j(e)}),[u,j,i]),tabValues:i}}var j=t(92303);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var y=t(74848);function f(e){let{className:n,block:t,selectedValue:r,selectValue:l,tabValues:d}=e;const a=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.a_)(),o=e=>{const n=e.currentTarget,t=a.indexOf(n),s=d[t].value;s!==r&&(c(n),l(s))},u=e=>{let n=null;switch(e.key){case"Enter":o(e);break;case"ArrowRight":{const t=a.indexOf(e.currentTarget)+1;n=a[t]??a[0];break}case"ArrowLeft":{const t=a.indexOf(e.currentTarget)-1;n=a[t]??a[a.length-1];break}}n?.focus()};return(0,y.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},n),children:d.map((e=>{let{value:n,label:t,attributes:i}=e;return(0,y.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>a.push(e),onKeyDown:u,onClick:o,...i,className:(0,s.A)("tabs__item",v.tabItem,i?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function R(e){let{lazy:n,children:t,selectedValue:s}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===s));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,y.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function g(e){const n=x(e);return(0,y.jsxs)("div",{className:(0,s.A)("tabs-container",v.tabList),children:[(0,y.jsx)(f,{...n,...e}),(0,y.jsx)(R,{...n,...e})]})}function b(e){const n=(0,j.A)();return(0,y.jsx)(g,{...e,children:u(e.children)},String(n))}},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>d});var r=t(96540);const s={},i=r.createContext(s);function l(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);