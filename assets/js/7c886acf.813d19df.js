"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([["6858"],{18071:function(e,a,n){n.r(a),n.d(a,{default:()=>p,frontMatter:()=>d,metadata:()=>r,assets:()=>o,toc:()=>u,contentTitle:()=>c});var r=JSON.parse('{"id":"MessageSchemas/Schema/Topics/analytics/LiveIVarSwapFixedTerm","title":"LiveIVarSwapFixedTerm","description":"LiveVarSwapFixedTerm records contain a live implied variance term record at standardized days-to-expiration.","source":"@site/versioned_docs/version-8.5.3.3/MessageSchemas/Schema/Topics/1000-analytics/LiveIVarSwapFixedTerm.md","sourceDirName":"MessageSchemas/Schema/Topics/1000-analytics","slug":"/MessageSchemas/Schema/Topics/analytics/LiveIVarSwapFixedTerm","permalink":"/docs/8.5.3.3/MessageSchemas/Schema/Topics/analytics/LiveIVarSwapFixedTerm","draft":false,"unlisted":false,"tags":[],"version":"8.5.3.3","frontMatter":{"title":"LiveIVarSwapFixedTerm"},"sidebar":"messageSchemasSidebar","previous":{"title":"LiveExpirySurface","permalink":"/docs/8.5.3.3/MessageSchemas/Schema/Topics/analytics/LiveExpirySurface"},"next":{"title":"LiveImpliedQuote","permalink":"/docs/8.5.3.3/MessageSchemas/Schema/Topics/analytics/LiveImpliedQuote"}}'),t=n("52676"),s=n("91503"),i=n("71386"),l=n("9641");let d={title:"LiveIVarSwapFixedTerm"},c="Schema: LiveIVarSwapFixedTerm (ID: 1025)",o={},u=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3}];function h(e){let a={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.header,{children:(0,t.jsxs)(a.h1,{id:"schema-liveivarswapfixedterm-id-1025",children:["Schema: LiveIVarSwapFixedTerm ",(0,t.jsx)("span",{className:"small-text",children:"(ID: 1025)"})]})}),"\n",(0,t.jsx)(a.p,{children:"LiveVarSwapFixedTerm records contain a live implied variance term record at standardized days-to-expiration."}),"\n",(0,t.jsx)(a.h3,{id:"metadata",children:"METADATA"}),"\n",(0,t.jsxs)(a.table,{children:[(0,t.jsx)(a.thead,{children:(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.th,{children:"Attribute"}),(0,t.jsx)(a.th,{children:"Value"})]})}),(0,t.jsxs)(a.tbody,{children:[(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"Topic"}),(0,t.jsx)(a.td,{children:"1000-analytics"})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"MLink Token"}),(0,t.jsx)(a.td,{children:"SRMLinkAnalytics"})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"SRSE Product"}),(0,t.jsx)(a.td,{children:"SRAnalytics"})]})]})]}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsxs)(a.blockquote,{children:["\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.strong,{children:"Note:"})," The symbol ",(0,t.jsx)(a.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,t.jsx)(a.h3,{id:"body",children:"BODY"}),"\n",(0,t.jsxs)(a.table,{children:[(0,t.jsx)(a.thead,{children:(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.th,{children:"#"}),(0,t.jsx)(a.th,{children:"Field"}),(0,t.jsx)(a.th,{children:"Type"}),(0,t.jsx)(a.th,{children:"Comment"})]})}),(0,t.jsxs)(a.tbody,{children:[(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"10="}),(0,t.jsx)(a.td,{children:"ticker"}),(0,t.jsx)(a.td,{children:"TickerKey"}),(0,t.jsx)(a.td,{})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"11="}),(0,t.jsx)(a.td,{children:"surfaceType"}),(0,t.jsx)(a.td,{children:(0,t.jsx)(a.a,{href:"../../../Enums/SurfaceCurveType",children:"enum : SurfaceCurveType"})}),(0,t.jsx)(a.td,{})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"100"}),(0,t.jsx)(a.td,{children:"iVarSwap_5d"}),(0,t.jsx)(a.td,{children:"float"}),(0,t.jsx)(a.td,{children:"Interpolated 5 day integrated surface variance"})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"103"}),(0,t.jsx)(a.td,{children:"iVarSwap_10d"}),(0,t.jsx)(a.td,{children:"float"}),(0,t.jsx)(a.td,{children:"Interpolated 10 day integrated surface variance"})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"106"}),(0,t.jsx)(a.td,{children:"iVarSwap_21d"}),(0,t.jsx)(a.td,{children:"float"}),(0,t.jsx)(a.td,{children:"Interpolated 21 day integrated surface variance"})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"109"}),(0,t.jsx)(a.td,{children:"iVarSwap_42d"}),(0,t.jsx)(a.td,{children:"float"}),(0,t.jsx)(a.td,{children:"Interpolated 42 day integrated surface variance"})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"112"}),(0,t.jsx)(a.td,{children:"iVarSwap_63d"}),(0,t.jsx)(a.td,{children:"float"}),(0,t.jsx)(a.td,{children:"Interpolated 63 day integrated surface variance"})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"115"}),(0,t.jsx)(a.td,{children:"iVarSwap_84d"}),(0,t.jsx)(a.td,{children:"float"}),(0,t.jsx)(a.td,{children:"Interpolated 84 day integrated surface variance"})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"118"}),(0,t.jsx)(a.td,{children:"iVarSwap_105d"}),(0,t.jsx)(a.td,{children:"float"}),(0,t.jsx)(a.td,{children:"Interpolated 105 day integrated surface variance"})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"121"}),(0,t.jsx)(a.td,{children:"iVarSwap_126d"}),(0,t.jsx)(a.td,{children:"float"}),(0,t.jsx)(a.td,{children:"Interpolated 126 day integrated surface variance"})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"124"}),(0,t.jsx)(a.td,{children:"iVarSwap_189d"}),(0,t.jsx)(a.td,{children:"float"}),(0,t.jsx)(a.td,{children:"Interpolated 189 day integrated surface variance"})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"127"}),(0,t.jsx)(a.td,{children:"iVarSwap_252d"}),(0,t.jsx)(a.td,{children:"float"}),(0,t.jsx)(a.td,{children:"Interpolated 252 day integrated surface variance"})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"130"}),(0,t.jsx)(a.td,{children:"iVarSwap_378d"}),(0,t.jsx)(a.td,{children:"float"}),(0,t.jsx)(a.td,{children:"Interpolated 378 day integrated surface variance"})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"133"}),(0,t.jsx)(a.td,{children:"iVarSwap_504d"}),(0,t.jsx)(a.td,{children:"float"}),(0,t.jsx)(a.td,{children:"Interpolated 504 day integrated surface variance"})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"136"}),(0,t.jsx)(a.td,{children:"status"}),(0,t.jsx)(a.td,{children:(0,t.jsx)(a.a,{href:"../../../Enums/CurveStatus",children:"enum : CurveStatus"})}),(0,t.jsx)(a.td,{})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"139"}),(0,t.jsx)(a.td,{children:"time"}),(0,t.jsx)(a.td,{children:"TimeSpan"}),(0,t.jsx)(a.td,{})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"142"}),(0,t.jsx)(a.td,{children:"timestamp"}),(0,t.jsx)(a.td,{children:"DateTime"}),(0,t.jsx)(a.td,{children:"update timestamp"})]})]})]}),"\n",(0,t.jsx)(a.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,t.jsxs)(i.Z,{children:[(0,t.jsx)(l.Z,{value:"Python",label:"Python",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'LiveIVarSwapFixedTerm'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n    # Required Parameters\n    \"apiKey\": API_KEY,\n    \"cmd\": 'getschema',\n    \"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,t.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=LiveIVarSwapFixedTerm'\n\n"})})})]}),"\n",(0,t.jsx)(a.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,t.jsxs)(i.Z,{children:[(0,t.jsx)(l.Z,{value:"Python",label:"Python",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'LiveIVarSwapFixedTerm\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'iVarSwap_5d|iVarSwap_10d|iVarSwap_21d|iVarSwap_42d|iVarSwap_63d|iVarSwap_84d|iVarSwap_105d|iVarSwap_126d|iVarSwap_189d|iVarSwap_252d|iVarSwap_378d|iVarSwap_504d|status|time|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,t.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=LiveIVarSwapFixedTerm' \\\n--data-urlencode 'view=iVarSwap_5d|iVarSwap_10d|iVarSwap_21d|iVarSwap_42d|iVarSwap_63d|iVarSwap_84d|iVarSwap_105d|iVarSwap_126d|iVarSwap_189d|iVarSwap_252d|iVarSwap_378d|iVarSwap_504d|status|time|timestamp' \\\n--data-urlencode 'where='\n"})})})]}),"\n",(0,t.jsx)(a.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,t.jsxs)(i.Z,{children:[(0,t.jsx)(l.Z,{value:"Python",label:"Python",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'LiveIVarSwapFixedTerm\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'iVarSwap_5d|iVarSwap_10d|iVarSwap_21d|iVarSwap_42d|iVarSwap_63d|iVarSwap_84d|iVarSwap_105d|iVarSwap_126d|iVarSwap_189d|iVarSwap_252d|iVarSwap_378d|iVarSwap_504d|status|time|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'iVarSwap_5d:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,t.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=LiveIVarSwapFixedTerm' \\\n--data-urlencode 'view=iVarSwap_5d|iVarSwap_10d|iVarSwap_21d|iVarSwap_42d|iVarSwap_63d|iVarSwap_84d|iVarSwap_105d|iVarSwap_126d|iVarSwap_189d|iVarSwap_252d|iVarSwap_378d|iVarSwap_504d|status|time|timestamp' \\\n--data-urlencode 'where=' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=iVarSwap_5d:ASC'\n"})})})]}),"\n",(0,t.jsx)(a.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,t.jsxs)(i.Z,{children:[(0,t.jsx)(l.Z,{value:"Python",label:"Python",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'LiveIVarSwapFixedTerm\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'iVarSwap_5d|iVarSwap_10d|iVarSwap_21d|iVarSwap_42d|iVarSwap_63d|iVarSwap_84d|iVarSwap_105d|iVarSwap_126d|iVarSwap_189d|iVarSwap_252d|iVarSwap_378d|iVarSwap_504d|status|time|timestamp\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'status\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getaggregate\',\n    "msgType": MSG_TYPE,\n    "measure": MEASURE,\n    "group": GROUP,\n    # Optional Parameters\n    "where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,t.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=LiveIVarSwapFixedTerm' \\\n--data-urlencode 'measure=iVarSwap_5d|iVarSwap_10d|iVarSwap_21d|iVarSwap_42d|iVarSwap_63d|iVarSwap_84d|iVarSwap_105d|iVarSwap_126d|iVarSwap_189d|iVarSwap_252d|iVarSwap_378d|iVarSwap_504d|status|time|timestamp' \\\n--data-urlencode 'group=status' \\\n--data-urlencode 'where='\n"})})})]}),"\n",(0,t.jsx)(a.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,t.jsxs)(i.Z,{children:[(0,t.jsx)(l.Z,{value:"Python",label:"Python",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'LiveIVarSwapFixedTerm\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,t.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=LiveIVarSwapFixedTerm' \\\n--data-urlencode 'where='\n"})})})]})]})}function p(e={}){let{wrapper:a}={...(0,s.a)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},9641:function(e,a,n){n.d(a,{Z:()=>s});var r=n("52676");n("75271");var t=n("54461");function s(e){let{children:a,hidden:n,className:s}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,t.Z)("tabItem_SSzl",s),hidden:n,children:a})}},71386:function(e,a,n){n.d(a,{Z:()=>g});var r=n("52676"),t=n("75271"),s=n("54461"),i=n("52289"),l=n("3225"),d=n("42834"),c=n("40578"),o=n("35834"),u=n("79616");function h(e){return t.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||t.isValidElement(e)&&function(e){let{props:a}=e;return!!a&&"object"==typeof a&&"value"in a}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p(e){let{value:a,tabValues:n}=e;return n.some(e=>e.value===a)}var m=n("44537");function x(e){let{className:a,block:n,selectedValue:t,selectValue:l,tabValues:d}=e,c=[],{blockElementScrollPositionUntilNextRender:o}=(0,i.o5)(),u=e=>{let a=e.currentTarget,n=d[c.indexOf(a)].value;n!==t&&(o(a),l(n))},h=e=>{let a=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{let n=c.indexOf(e.currentTarget)+1;a=c[n]??c[0];break}case"ArrowLeft":{let n=c.indexOf(e.currentTarget)-1;a=c[n]??c[c.length-1]}}a?.focus()};return(0,r.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":n},a),children:d.map(e=>{let{value:a,label:n,attributes:i}=e;return(0,r.jsx)("li",{role:"tab",tabIndex:t===a?0:-1,"aria-selected":t===a,ref:e=>c.push(e),onKeyDown:h,onClick:u,...i,className:(0,s.Z)("tabs__item","tabItem_aitt",i?.className,{"tabs__item--active":t===a}),children:n??a},a)})})}function w(e){let{lazy:a,children:n,selectedValue:i}=e,l=(Array.isArray(n)?n:[n]).filter(Boolean);if(a){let e=l.find(e=>e.props.value===i);return e?(0,t.cloneElement)(e,{className:(0,s.Z)("margin-top--md",e.props.className)}):null}return(0,r.jsx)("div",{className:"margin-top--md",children:l.map((e,a)=>(0,t.cloneElement)(e,{key:a,hidden:e.props.value!==i}))})}function j(e){let a=function(e){let{defaultValue:a,queryString:n=!1,groupId:r}=e,s=function(e){let{values:a,children:n}=e;return(0,t.useMemo)(()=>{let e=a??h(n).map(e=>{let{props:{value:a,label:n,attributes:r,default:t}}=e;return{value:a,label:n,attributes:r,default:t}});return!function(e){let a=(0,o.lx)(e,(e,a)=>e.value===a.value);if(a.length>0)throw Error(`Docusaurus error: Duplicate values "${a.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[a,n])}(e),[i,m]=(0,t.useState)(()=>(function(e){let{defaultValue:a,tabValues:n}=e;if(0===n.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!p({value:a,tabValues:n}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${a}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return a}let r=n.find(e=>e.default)??n[0];if(!r)throw Error("Unexpected error: 0 tabValues");return r.value})({defaultValue:a,tabValues:s})),[x,w]=function(e){let{queryString:a=!1,groupId:n}=e,r=(0,l.k6)(),s=function(e){let{queryString:a=!1,groupId:n}=e;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!n)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:a,groupId:n});return[(0,c._X)(s),(0,t.useCallback)(e=>{if(!s)return;let a=new URLSearchParams(r.location.search);a.set(s,e),r.replace({...r.location,search:a.toString()})},[s,r])]}({queryString:n,groupId:r}),[j,g]=function(e){let{groupId:a}=e,n=a?`docusaurus.tab.${a}`:null,[r,s]=(0,u.Nk)(n);return[r,(0,t.useCallback)(e=>{n&&s.set(e)},[n,s])]}({groupId:r}),v=(()=>{let e=x??j;return p({value:e,tabValues:s})?e:null})();return(0,d.Z)(()=>{v&&m(v)},[v]),{selectedValue:i,selectValue:(0,t.useCallback)(e=>{if(!p({value:e,tabValues:s}))throw Error(`Can't select invalid tab value=${e}`);m(e),w(e),g(e)},[w,g,s]),tabValues:s}}(e);return(0,r.jsxs)("div",{className:(0,s.Z)("tabs-container","tabList_ArS0"),children:[(0,r.jsx)(x,{...a,...e}),(0,r.jsx)(w,{...a,...e})]})}function g(e){let a=(0,m.Z)();return(0,r.jsx)(j,{...e,children:h(e.children)},String(a))}},91503:function(e,a,n){n.d(a,{Z:function(){return l},a:function(){return i}});var r=n(75271);let t={},s=r.createContext(t);function i(e){let a=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function l(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(s.Provider,{value:a},e.children)}}}]);