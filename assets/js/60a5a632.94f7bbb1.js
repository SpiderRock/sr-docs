"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([["43167"],{49343:function(e,t,n){n.r(t),n.d(t,{default:()=>h,frontMatter:()=>l,metadata:()=>r,assets:()=>a,toc:()=>o,contentTitle:()=>d});var r=JSON.parse('{"id":"MessageSchemas/Schema/SRSE Products/SRTrade/MLegOrderGateway/MLegOrderGateway","title":"MLegOrderGateway","description":"V8 Message Definiton","source":"@site/docs/MessageSchemas/Schema/SRSE Products/SRTrade/MLegOrderGateway/MLegOrderGateway.md","sourceDirName":"MessageSchemas/Schema/SRSE Products/SRTrade/MLegOrderGateway","slug":"/MessageSchemas/Schema/SRSE Products/SRTrade/MLegOrderGateway/","permalink":"/docs/next/MessageSchemas/Schema/SRSE Products/SRTrade/MLegOrderGateway/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"messageSchemasSidebar","previous":{"title":"FutOrderGateway","permalink":"/docs/next/MessageSchemas/Schema/SRSE Products/SRTrade/FutOrderGateway/"},"next":{"title":"NoticeCancel","permalink":"/docs/next/MessageSchemas/Schema/SRSE Products/SRTrade/NoticeCancel/"}}'),i=n("52676"),s=n("91503");let l={},d=void 0,a={},o=[{value:"METADATA",id:"metadata",level:3},{value:"Table Definition",id:"table-definition",level:3},{value:"PRIMARY KEY DEFINITION (Unique)",id:"primary-key-definition-unique",level:3},{value:"CREATE TABLE EXAMPLE QUERY",id:"create-table-example-query",level:3},{value:"SELECT TABLE EXAMPLE QUERY",id:"select-table-example-query",level:3},{value:"INSERT TABLE EXAMPLE QUERY",id:"insert-table-example-query",level:3},{value:"DELETE TABLE EXAMPLE QUERY",id:"delete-table-example-query",level:3},{value:"Doc Columns Query",id:"doc-columns-query",level:3}];function c(e){let t={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"../../../Topics/srse-gateway/MLegOrderGateway",children:"V8 Message Definiton"})}),"\n",(0,i.jsx)(t.p,{children:"Records inserted, updated, or replaced into the MLegOrderGateway table are validated and then converted to SpdrParentOrder records and forwarded to the appropriate execution engine for futher processing.  Parent orders can be inserted as either active/ready or in a wait start mode that requires subsequent release.\nSee the SpiderRock Execution Engine concept guide for more details."}),"\n",(0,i.jsx)(t.h3,{id:"metadata",children:"METADATA"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Attribute"}),(0,i.jsx)(t.th,{children:"Value"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Topic"}),(0,i.jsx)(t.td,{children:"5120-srse-gateway"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"MLink Token"}),(0,i.jsx)(t.td,{children:"Internal"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Product"}),(0,i.jsx)(t.td,{children:"SRTrade"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"accessType"}),(0,i.jsx)(t.td,{children:"SELECT,UPDATE(spdrActionType),INSERT,DELETE"})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"table-definition",children:"Table Definition"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Field"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Key"}),(0,i.jsx)(t.th,{children:"Default Value"}),(0,i.jsx)(t.th,{children:"Comment"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"ticker_at"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,i.jsx)(t.td,{children:"PRI"}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"ticker_ts"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,i.jsx)(t.td,{children:"PRI"}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"ticker_tk"}),(0,i.jsx)(t.td,{children:"VARCHAR(12)"}),(0,i.jsx)(t.td,{children:"PRI"}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"accnt"}),(0,i.jsx)(t.td,{children:"VARCHAR(16)"}),(0,i.jsx)(t.td,{children:"PRI"}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"Will automatically be set to the account associated with DB login"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"groupingCode"}),(0,i.jsx)(t.td,{children:"CHAR(19)"}),(0,i.jsx)(t.td,{children:"PRI"}),(0,i.jsx)(t.td,{children:"'0000-0000-0000-0000'"}),(0,i.jsx)(t.td,{children:"Client supplied order"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderSide"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/BuySell",children:"enum - BuySell"})}),(0,i.jsx)(t.td,{children:"PRI"}),(0,i.jsx)(t.td,{children:"'Buy'"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"clientFirm"}),(0,i.jsx)(t.td,{children:"VARCHAR(16)"}),(0,i.jsx)(t.td,{children:"PRI"}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"spdrActionType"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/SpdrActionType",children:"enum - SpdrActionType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'Add'"}),(0,i.jsx)(t.td,{children:"Add new order AddReplace add or replace order Cancel cxl existing Replace update existing only Release modify order active size"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"altOrderId"}),(0,i.jsx)(t.td,{children:"VARCHAR(24)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"Alternate client order ID  This order ID will be copied to all execution reports"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"altAutoHedgeId"}),(0,i.jsx)(t.td,{children:"VARCHAR(24)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"alternate order ID for child autohedge orders if any"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"altAccnt"}),(0,i.jsx)(t.td,{children:"VARCHAR(32)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"alternate client assigned long account string optional used to map between client and SR account strings"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"altUserName"}),(0,i.jsx)(t.td,{children:"VARCHAR(24)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"alternate client assigned user name optional used to map between client and SR account strings"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"execBrkrCode"}),(0,i.jsx)(t.td,{children:"VARCHAR(16)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"optional override the default execBrkrCode for this order"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"strategy"}),(0,i.jsx)(t.td,{children:"VARCHAR(36)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"Client strategy string  This value will appear on the SR Trade Monitor and in execution reports"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"strategyAccnt"}),(0,i.jsx)(t.td,{children:"VARCHAR(16)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"SR strategy account option if exists will be validated"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderDttm"}),(0,i.jsx)(t.td,{children:"DATETIME(6)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'1900-01-01 00:00:00.000000'"}),(0,i.jsx)(t.td,{children:"order entry time from clientif any"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderSize"}),(0,i.jsx)(t.td,{children:"INT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"parent order size contracts 1  no changeused when spdrActionTypeRelease"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderActiveSize"}),(0,i.jsx)(t.td,{children:"INT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"total activated size total size released for execution 1  all available size"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"addCumFillQuantity"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum - YesNo"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'No'"}),(0,i.jsx)(t.td,{children:"If Yes then OrderSize is calculated  order arrival as requested OrderSize  existing CumFillQuantity"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"exchMask"}),(0,i.jsx)(t.td,{children:"INT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"eligible exchanges 0  all"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxExposureSize"}),(0,i.jsx)(t.td,{children:"INT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"maximum simultaneous cumulative child order public size exposure 1  orderActiveSize order can overfill if  orderActiveSize and numMakeExchanges  1"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"numMakeExchanges"}),(0,i.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"1"}),(0,i.jsx)(t.td,{children:"number of exchanges 1  4 on which to publish public making orders  Effective number might be less than requested number if sufficient exchanges are not available"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"publicSize"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/PublicSizeHandling",children:"enum - PublicSizeHandling"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{children:"public order size handling Noneuse default size handling usually limits public size to typical market size Randomizerandomize public size MktSizeexpose only typical market size FullSizeexpose entire order size where possible"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"randomizeSize"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum - YesNo"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'Yes'"}),(0,i.jsx)(t.td,{children:"randomize public order size"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"canOverlapCxlRepl"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum - YesNo"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'No'"}),(0,i.jsx)(t.td,{children:"can execution engines overlap cancelreplace operations order can overfill if YES at most one active overlapping cxlreplace operation for each parent order"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"progressRule"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/ProgressRule",children:"enum - ProgressRule"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{children:"None  all size immediately availableTWAP  size released in time intervalsVWAP  size released in volume intervals"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"twapSliceCnt"}),(0,i.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"4"}),(0,i.jsx)(t.td,{children:"ProgressSliceCnt number of progress slices to use default  4 or 8 max 20"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"progressExposeTime"}),(0,i.jsx)(t.td,{children:"INT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"minimum time secs to expose order 0  no minimum used to guarantee that the order is exposed at midmarket for some time before actively taking"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"auctionResponder"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/AuctionResponder",children:"enum - AuctionResponder"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{children:"if set parent order can be an auction responder"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"blockVisibility"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/BlockVisibility",children:"enum - BlockVisibility"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{children:"for BlockAuction orders visibility to responders is neither side only or side  price"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"includeSRNetwork"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/InclExclDisclose",children:"enum - InclExclDisclose"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"noticeNumber"}),(0,i.jsx)(t.td,{children:"CHAR(19)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'0000-0000-0000-0000'"}),(0,i.jsx)(t.td,{children:"required when parentOrderHandling  BlockResponse"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"respSide"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/BuySell",children:"enum - BuySell"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"autoHedge"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/AutoHedge",children:"enum - AutoHedge"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"hedgeInstrument"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/HedgeInst",children:"enum - HedgeInst"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'Default'"}),(0,i.jsx)(t.td,{children:"Defaultunderlier EQT or FUT Index Options use ETF FrontMonthunderlier EQT or front month FUT Index Options use FM Fut StockhedgeSecKey FuturehedgeSecKey"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"hedgeSecKey_at"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'EQT'"}),(0,i.jsx)(t.td,{children:"autohedge instrument either TickerKey or ExpiryKey"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"hedgeSecKey_ts"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'NMS'"}),(0,i.jsx)(t.td,{children:"autohedge instrument either TickerKey or ExpiryKey"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"hedgeSecKey_tk"}),(0,i.jsx)(t.td,{children:"VARCHAR(12)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"autohedge instrument either TickerKey or ExpiryKey"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"hedgeSecKey_yr"}),(0,i.jsx)(t.td,{children:"SMALLINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"2000"}),(0,i.jsx)(t.td,{children:"autohedge instrument either TickerKey or ExpiryKey"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"hedgeSecKey_mn"}),(0,i.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"1"}),(0,i.jsx)(t.td,{children:"autohedge instrument either TickerKey or ExpiryKey"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"hedgeSecKey_dy"}),(0,i.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"1"}),(0,i.jsx)(t.td,{children:"autohedge instrument either TickerKey or ExpiryKey"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"hedgeBetaRatio"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"1.0"}),(0,i.jsx)(t.td,{children:"Portion of executed money to autohedge can be 10  Beta for beta hedging 40 to 40"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"hedgeScope"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/HedgeScope",children:"enum - HedgeScope"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'RiskGroup'"}),(0,i.jsx)(t.td,{children:"Autohedge at the RiskGroup or Accnt level"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"hedgeSession"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/MarketSession",children:"enum - MarketSession"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'RegMkt'"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"hedgeFillUMarkLmtPrc"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum - YesNo"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'No'"}),(0,i.jsx)(t.td,{children:"set a price limit on the autohedge order based on the most recent option fillUMark"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"cxlUPrcRange"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/UPrcCxl",children:"enum - UPrcCxl"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{children:"cancel parent order ifwhen outside minmax uPrc range Halt  also cancel if the securityunderlier has been halted"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"minUBid"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"optional"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxUAsk"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"optional  001  none"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"minMaxType"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/MinMaxType",children:"enum - MinMaxType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'Prc'"}),(0,i.jsx)(t.td,{children:"if Prc minUBidmaxUAsk are expressed as prices if Pct then they are expresses as pct change since parent order arrival"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxChildOrders"}),(0,i.jsx)(t.td,{children:"INT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"1000"}),(0,i.jsx)(t.td,{children:"maximum number of child orders that can be generated by this parent order order will terminate ifwhen this cap is reachedzero or neg  unlimited"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"spdrStageType"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/SpdrStageType",children:"enum - SpdrStageType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{children:"SizeLock  stage pending modification can reduce size SizeModify  stage pending modification can increasereduce size"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"marketSession"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/MarketSession",children:"enum - MarketSession"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'RegMkt'"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"startDttm"}),(0,i.jsx)(t.td,{children:"DATETIME(6)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'2000-01-01'"}),(0,i.jsx)(t.td,{children:"optional parent order start time"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderDuration"}),(0,i.jsx)(t.td,{children:"INT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"optional number of seconds"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"activeDuration"}),(0,i.jsx)(t.td,{children:"INT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"goodTillDttm"}),(0,i.jsx)(t.td,{children:"DATETIME(6)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'2000-01-01'"}),(0,i.jsx)(t.td,{children:"optional default 20000101"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"startType"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/StartType",children:"enum - StartType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{children:"WaitTrigger"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"parentOrderHandling"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/ParentOrderHandling",children:"enum - ParentOrderHandling"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'CobMaker'"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"parentBalanceHandling"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/ParentBalanceHandling",children:"enum - ParentBalanceHandling"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'PostLimit'"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderLimitType"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/SpdrLimitType",children:"enum - SpdrLimitType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'Market'"}),(0,i.jsx)(t.td,{children:"Various Prc PrcDe Rel Marketestablishes the primary LimitPrice for a parent order"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"takeLimitClass"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/SpdrLimitClass",children:"enum - SpdrLimitClass"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'Simple'"}),(0,i.jsx)(t.td,{children:"Simple  LimitPrice Surface  BESTLimitPrice SurfLimit Probability  BESTLimitPrice ProbLimit"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"makeLimitClass"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/SpdrLimitClass",children:"enum - SpdrLimitClass"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'Simple'"}),(0,i.jsx)(t.td,{children:"Simple  LimitPrice Surface  BESTLimitPrice SurfLimit Probability  BESTLimitPrice ProbLimit"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"takeReachRule"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/ReachRule",children:"enum - ReachRule"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{children:"None  reach room immediately available Delayed  available after 13 seconds Passive  available if contra side aggresses WeakOnly  only take if available size  avgMarketSize ISOSweep  Intermarket Sweep requires WaitTrigger"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"leadSide"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/BuySell",children:"enum - BuySell"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{children:"for legged orders which side to lead with  optional None ok"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxCompletionSlippage"}),(0,i.jsx)(t.td,{children:"DOUBLE"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"Maximum price slippage to complete an open basket or a cross auction face side slippage"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderPrcLimit"}),(0,i.jsx)(t.td,{children:"DOUBLE"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"Applies if LimitType  Prc"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"takeSurfPrcOffset"}),(0,i.jsx)(t.td,{children:"DOUBLE"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"default0"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"takeSurfVolOffset"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"default0"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderPrcOffset"}),(0,i.jsx)(t.td,{children:"DOUBLE"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"default0"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"takeAlphaType"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/AlphaType",children:"enum - AlphaType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{children:"Applies if takeLimitClass  Probability"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"makeAlphaType"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/AlphaType",children:"enum - AlphaType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{children:"Applies if makeLimitClass  Probability"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"takeAlphaFactor"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"22 takeProbLimit  MAXtakeProbability takeProbAvg  takeAlphaFactor  takeProbStd if takeAlphaType  Relative"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"makeAlphaFactor"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"22 makeProbLimit  MAXmakeProbability makeProbAvg  makeAlphaFactor  makeProbStd if takeAlphaType  Relative"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"takeProbability"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"takeProbLimit  takeProbability if takeAlphaType  Static"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"makeProbability"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"makeProbLimit  makeProbability if makeAlphaType  Static"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"firmType"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/FirmType",children:"enum - FirmType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{children:"Used to override firmType in account config Default None use SpiderRock account configuration"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"stockSide"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/BuySell",children:"enum - BuySell"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{children:"Stock Orde Side if any"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"ssaleFlag"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/ShortSaleFlag",children:"enum - ShortSaleFlag"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'Auto'"}),(0,i.jsx)(t.td,{children:"Used to determine stock autohedge flags"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"locateFirm"}),(0,i.jsx)(t.td,{children:"VARCHAR(6)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"firm granting the locate if using an away locate source for this order"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"locatePool"}),(0,i.jsx)(t.td,{children:"VARCHAR(16)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"locate pool  firm granting the locate"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"stockShares"}),(0,i.jsx)(t.td,{children:"INT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"Number of shares in spread package  Default 0 none"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"altStkLegID"}),(0,i.jsx)(t.td,{children:"VARCHAR(24)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"Optional stock leg ID"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"numOptionLegs"}),(0,i.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"The number of valid legs below  The first leg is required and the rest are optional  For each optional leg okey and mult must be valid values whereas side positionType and legID will be assigned default values"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"multihedge"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/Multihedge",children:"enum - Multihedge"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"optionType"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/OptionType",children:"enum - OptionType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'Equity'"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"underliersPerCn"}),(0,i.jsx)(t.td,{children:"INT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"100"}),(0,i.jsx)(t.td,{children:"Default 100"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey1_at"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 1  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey1_ts"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 1  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey1_tk"}),(0,i.jsx)(t.td,{children:"VARCHAR(12)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 1  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey1_yr"}),(0,i.jsx)(t.td,{children:"SMALLINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 1  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey1_mn"}),(0,i.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 1  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey1_dy"}),(0,i.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 1  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey1_xx"}),(0,i.jsx)(t.td,{children:"DOUBLE"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 1  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey1_cp"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/CallPut",children:"enum - CallPut"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'Call'"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 1  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"mult1"}),(0,i.jsx)(t.td,{children:"SMALLINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"Multiplier for leg 1  Must be greater than zero"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"side1"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/BuySell",children:"enum - BuySell"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'Buy'"}),(0,i.jsx)(t.td,{children:"Order side for leg 1"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"positionType1"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/PositionType",children:"enum - PositionType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'Auto'"}),(0,i.jsx)(t.td,{children:"Position type for leg 1"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"altLegID1"}),(0,i.jsx)(t.td,{children:"VARCHAR(24)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"ID for leg 1  If left blank will be assigned an autogenerated ID"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey2_at"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'EQT'"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 2  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey2_ts"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'NMS'"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 2  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey2_tk"}),(0,i.jsx)(t.td,{children:"VARCHAR(12)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 2  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey2_yr"}),(0,i.jsx)(t.td,{children:"SMALLINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"1900"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 2  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey2_mn"}),(0,i.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"1"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 2  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey2_dy"}),(0,i.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"1"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 2  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey2_xx"}),(0,i.jsx)(t.td,{children:"DOUBLE"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"100"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 2  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey2_cp"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/CallPut",children:"enum - CallPut"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'Call'"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 2  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"mult2"}),(0,i.jsx)(t.td,{children:"SMALLINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"Multiplier for leg 2  Must be greater than zero"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"side2"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/BuySell",children:"enum - BuySell"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'Buy'"}),(0,i.jsx)(t.td,{children:"Order side for leg 2"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"positionType2"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/PositionType",children:"enum - PositionType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'Auto'"}),(0,i.jsx)(t.td,{children:"Position type for leg 2"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"altLegID2"}),(0,i.jsx)(t.td,{children:"VARCHAR(24)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"ID for leg 2  If left blank will be assigned an autogenerated ID"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey3_at"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'EQT'"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 3  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey3_ts"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'NMS'"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 3  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey3_tk"}),(0,i.jsx)(t.td,{children:"VARCHAR(12)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 3  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey3_yr"}),(0,i.jsx)(t.td,{children:"SMALLINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"1900"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 3  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey3_mn"}),(0,i.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"1"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 3  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey3_dy"}),(0,i.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"1"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 3  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey3_xx"}),(0,i.jsx)(t.td,{children:"DOUBLE"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"100"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 3  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey3_cp"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/CallPut",children:"enum - CallPut"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'Call'"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 3  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"mult3"}),(0,i.jsx)(t.td,{children:"SMALLINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"Multiplier for leg 3  Must be greater than zero"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"side3"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/BuySell",children:"enum - BuySell"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'Buy'"}),(0,i.jsx)(t.td,{children:"Order side for leg 3"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"positionType3"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/PositionType",children:"enum - PositionType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'Auto'"}),(0,i.jsx)(t.td,{children:"Position type for leg 3"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"altLegID3"}),(0,i.jsx)(t.td,{children:"VARCHAR(24)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"ID for leg 3  If left blank will be assigned an autogenerated ID"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey4_at"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'EQT'"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 4  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey4_ts"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'NMS'"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 4  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey4_tk"}),(0,i.jsx)(t.td,{children:"VARCHAR(12)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 4  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey4_yr"}),(0,i.jsx)(t.td,{children:"SMALLINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"1900"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 4  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey4_mn"}),(0,i.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"1"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 4  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey4_dy"}),(0,i.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"1"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 4  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey4_xx"}),(0,i.jsx)(t.td,{children:"DOUBLE"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"100"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 4  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey4_cp"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/CallPut",children:"enum - CallPut"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'Call'"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 4  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"mult4"}),(0,i.jsx)(t.td,{children:"SMALLINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"Multiplier for leg 4  Must be greater than zero"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"side4"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/BuySell",children:"enum - BuySell"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'Buy'"}),(0,i.jsx)(t.td,{children:"Order side for leg 4"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"positionType4"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/PositionType",children:"enum - PositionType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'Auto'"}),(0,i.jsx)(t.td,{children:"Position type for leg 4"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"altLegID4"}),(0,i.jsx)(t.td,{children:"VARCHAR(24)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"ID for leg 4  If left blank will be assigned an autogenerated ID"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey5_at"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'EQT'"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 5  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey5_ts"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'NMS'"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 5  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey5_tk"}),(0,i.jsx)(t.td,{children:"VARCHAR(12)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 5  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey5_yr"}),(0,i.jsx)(t.td,{children:"SMALLINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"1900"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 5  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey5_mn"}),(0,i.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"1"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 5  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey5_dy"}),(0,i.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"1"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 5  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey5_xx"}),(0,i.jsx)(t.td,{children:"DOUBLE"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"100"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 5  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey5_cp"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/CallPut",children:"enum - CallPut"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'Call'"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 5  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"mult5"}),(0,i.jsx)(t.td,{children:"SMALLINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"Multiplier for leg 5  Must be greater than zero"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"side5"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/BuySell",children:"enum - BuySell"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'Buy'"}),(0,i.jsx)(t.td,{children:"Order side for leg 5"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"positionType5"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/PositionType",children:"enum - PositionType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'Auto'"}),(0,i.jsx)(t.td,{children:"Position type for leg 5"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"altLegID5"}),(0,i.jsx)(t.td,{children:"VARCHAR(24)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"ID for leg 5  If left blank will be assigned an autogenerated ID"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey6_at"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'EQT'"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 6  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey6_ts"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'NMS'"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 6  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey6_tk"}),(0,i.jsx)(t.td,{children:"VARCHAR(12)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 6  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey6_yr"}),(0,i.jsx)(t.td,{children:"SMALLINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"1900"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 6  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey6_mn"}),(0,i.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"1"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 6  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey6_dy"}),(0,i.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"1"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 6  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey6_xx"}),(0,i.jsx)(t.td,{children:"DOUBLE"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"100"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 6  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"okey6_cp"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/CallPut",children:"enum - CallPut"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'Call'"}),(0,i.jsx)(t.td,{children:"Option symbol for leg 6  Must be a valid option symbol"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"mult6"}),(0,i.jsx)(t.td,{children:"SMALLINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"Multiplier for leg 6  Must be greater than zero"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"side6"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/BuySell",children:"enum - BuySell"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'Buy'"}),(0,i.jsx)(t.td,{children:"Order side for leg 6"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"positionType6"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/PositionType",children:"enum - PositionType"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'Auto'"}),(0,i.jsx)(t.td,{children:"Position type for leg 6"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"altLegID6"}),(0,i.jsx)(t.td,{children:"VARCHAR(24)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"ID for leg 6  If left blank will be assigned an autogenerated ID"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"optPremium"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"The premium for the option legs a contribution to the order premium  Valid range is  99990 99990  Default 0"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderRefUPrc"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"The stock reference price a contribution to the order premium  Default 0"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"riskGroupId"}),(0,i.jsx)(t.td,{children:"CHAR(19)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'0000-0000-0000-0000'"}),(0,i.jsx)(t.td,{children:"Default 0 none  Required to be nonzero if autoHedge is something other than None"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"reqAuxRiskGroupCtrl"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum - YesNo"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"refRMetric1Src"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/RMetricSource",children:"enum - RMetricSource"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"refRMetric2Src"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/RMetricSource",children:"enum - RMetricSource"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"refRMetric3Src"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/RMetricSource",children:"enum - RMetricSource"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"refRMetric4Src"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/RMetricSource",children:"enum - RMetricSource"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"refRMetric5Src"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/RMetricSource",children:"enum - RMetricSource"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"refRMetric6Src"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/RMetricSource",children:"enum - RMetricSource"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"refRMetric7Src"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"../../../Enums/RMetricSource",children:"enum - RMetricSource"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"'None'"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderRefRMetric1"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"user supplied RMetric1 value used in RiskGroupID risk controls netRMetric1  sumfillQty  orderRefRMetric1  underlierPerCn"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderRefRMetric2"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"user supplied RMetric2 value used in RiskGroupID risk controls netRMetric2  sumfillQty  orderRefRMetric2  underlierPerCn"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderRefRMetric3"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"user supplied RMetric3 value used in RiskGroupID risk controls netRMetric3  sumfillQty  orderRefRMetric3  underlierPerCn"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderRefRMetric4"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"user supplied RMetric4 value used in RiskGroupID risk controls netRMetric4  sumfillQty  orderRefRMetric4  underlierPerCn"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderRefRMetric5"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"user supplied RMetric5 value used in RiskGroupID risk controls netRMetric5  sumfillQty  orderRefRMetric5  underlierPerCn"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderRefRMetric6"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"user supplied RMetric6 value used in ExpDay risk controls netRMetric6  sumfillQty  orderRefRMetric6  underlierPerCn"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderRefRMetric7"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"user supplied RMetric7 value used in SymDay risk controls netRMetric7  sumfillQty  orderRefRMetric7  underlierPerCn"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"expDayWtVegaOffset"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctsymbol day wtVega offset target"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxExpDayWtVegaLn"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max accntexpiration day time weighted vega long positive number1no limitrisk limit  max limit  current net counter  offset"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxExpDayWtVegaSh"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max accntexpiration day time weighted vega short positive number1no limitrisk limit  max limit  current net counter  offset"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxExpDayRMetric6Ln"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctexpiration day rMetric6 long positive number1no limitrisk limit  max limit  current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxExpDayRMetric6Sh"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctexpiration day rMetric6 short positive number1no limitrisk limit  max limit  current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"symDayDDeltaOffset"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctsymbol day delta offset target"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxSymDayDDeltaLn"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctsymbol day delta long positive number1no limitrisk limit  max limit  current net counter  offset"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxSymDayDDeltaSh"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctsymbol day delta short positive number1no limitrisk limit  max limit  current net counter  offset"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"symDayVegaOffset"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctsymbol day vega offset target"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxSymDayVegaLn"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctsymbol day vega long positive number1no limitrisk limit  max limit  current net counter  offset"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxSymDayVegaSh"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctsymbol day vega short positive number1no limitrisk limit  max limit  current net counter  offset"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"symDayWtVegaOffset"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctsymbol day wtVega offset target"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxSymDayWtVegaLn"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctsymbol day time weighted vega long positive number1no limitrisk limit  max limit  current net counter  offset"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxSymDayWtVegaSh"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctsymbol day time weighted vega short positive number1no limitrisk limit  max limit  current net counter  offset"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxSymDayRMetric7Ln"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctsymbol day rMetric7 long positive number1no limitrisk limit  max limit  current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxSymDayRMetric7Sh"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctsymbol day rMetric7 short positive number1no limitrisk limit  max limit  current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayDDeltaLn"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctriskGroup day delta long positive number1no limitrisk limit  max limit  current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayDDeltaSh"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctriskGroup day delta short positive number1no limitrisk limit  max limit  current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayVegaLn"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctriskGroup day vega long positive number1no limitrisk limit  max limit  current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayVegaSh"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctriskGroup day vega short positive number1no limitrisk limit  max limit  current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayVegaAbs"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctriskGroup day vega abs positive number1no limitrisk limit  max limit  abscurrent net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"grpDayVegaRatio"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"1.0"}),(0,i.jsx)(t.td,{children:"target bot  sld ratio eg ratio20 means that neutral is bot vega  2x sld vega"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayContractsLn"}),(0,i.jsx)(t.td,{children:"INT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctriskGroup day opt contracts long positive number1no limitrisk limit  max limit  current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayContractsSh"}),(0,i.jsx)(t.td,{children:"INT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctriskGroup day opt contracts short positive number1no limitrisk limit  max limit  current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayContractsAbs"}),(0,i.jsx)(t.td,{children:"INT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctriskGroup day opt contracts abs positive number1no limitrisk limit  max limit  abscurrent net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayRMetric1Ln"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctriskGroup day rMetric1 long positive number1no limitrisk limit  max limit  current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayRMetric1Sh"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctriskGroup day rMetric1 short positive number1no limitrisk limit  max limit  current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayRMetric1Abs"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctriskGroup day rMetric1 abs positive number1no limitrisk limit  max limit  abscurrent net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"grpDayRMetric1Ratio"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"1.0"}),(0,i.jsx)(t.td,{children:"target bot  sld ratio eg ratio05 means that neutral is bot rMetric1  05x sld rMetric1"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayRMetric2Ln"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctriskGroup day rMetric2 long positive number1no limitrisk limit  max limit  current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayRMetric2Sh"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctriskGroup day rMetric2 short positive number1no limitrisk limit  max limit  current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayRMetric3Ln"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctriskGroup day rMetric3 long positive number1no limitrisk limit  max limit  current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayRMetric3Sh"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctriskGroup day rMetric3 short positive number1no limitrisk limit  max limit  current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayRMetric4Ln"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctriskGroup day rMetric4 long positive number1no limitrisk limit  max limit  current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayRMetric4Sh"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctriskGroup day rMetric4 short positive number1no limitrisk limit  max limit  current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayRMetric5Ln"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctriskGroup day rMetric5 long positive number1no limitrisk limit  max limit  current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxGrpDayRMetric5Sh"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctriskGroup day rMetric5 short positive number1no limitrisk limit  max limit  current net counter"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"symEmaCxlDDeltaLn"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctsymbol 60s EMA delta long positive number  0 is no limit will immediately cxl all option orders in a symbol if any order in the symbol breaches"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"symEmaCxlDDeltaSh"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctsymbol 60s EMA delta short positive number  0 is no limit"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"symEmaCxlWtVegaLn"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctsymbol 60s EMA wtVega long positive number  0 is no limit will immediately cxl all option orders in a symbol if any order in the symbol breaches"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"symEmaCxlWtVegaSh"}),(0,i.jsx)(t.td,{children:"FLOAT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"-1"}),(0,i.jsx)(t.td,{children:"max acctsymbol 60s EMA wtVega short positive number  0 is no limit"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"traderName"}),(0,i.jsx)(t.td,{children:"VARCHAR(32)"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"Name of the trader associated with the order"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"userData1"}),(0,i.jsx)(t.td,{children:"TINYTEXT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"client supplied data field passes through to parent and child executions and reports as well as FIX drops"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"userData2"}),(0,i.jsx)(t.td,{children:"TINYTEXT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"client supplied data field passes through to parent and child executions and reports as well as FIX drops"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"childData"}),(0,i.jsx)(t.td,{children:"TINYTEXT"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"''"}),(0,i.jsx)(t.td,{children:"client supplied data field passes through to down stream child orders"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"checksum"}),(0,i.jsx)(t.td,{children:"TINYINT UNSIGNED"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"0"}),(0,i.jsx)(t.td,{children:"Must be set to 13  This helps detect some columnvalue misalignments"})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"primary-key-definition-unique",children:"PRIMARY KEY DEFINITION (Unique)"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Field"}),(0,i.jsx)(t.th,{children:"Sequence"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"ticker_tk"}),(0,i.jsx)(t.td,{children:"1"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"ticker_at"}),(0,i.jsx)(t.td,{children:"2"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"ticker_ts"}),(0,i.jsx)(t.td,{children:"3"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"accnt"}),(0,i.jsx)(t.td,{children:"4"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"groupingCode"}),(0,i.jsx)(t.td,{children:"5"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"orderSide"}),(0,i.jsx)(t.td,{children:"6"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"clientFirm"}),(0,i.jsx)(t.td,{children:"7"})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"create-table-example-query",children:"CREATE TABLE EXAMPLE QUERY"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-sql",children:"CREATE TABLE `SRTrade`.`MsgMLegOrderGateway` (\n    `ticker_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None',\n    `ticker_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None',\n    `ticker_tk` VARCHAR(12) NOT NULL DEFAULT '',\n    `accnt` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'Will automatically be set to the account associated with DB login',\n    `groupingCode` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'Client supplied order',\n    `orderSide` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'Buy',\n    `clientFirm` VARCHAR(16) NOT NULL DEFAULT '',\n    `spdrActionType` ENUM('Add','AddReplace','Replace','Cancel','Modify') NOT NULL DEFAULT 'Add' COMMENT '[Add (new order), AddReplace (add or replace order), Cancel (cxl existing), Replace (update existing only), Release (modify order active size)]',\n    `altOrderId` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'Alternate client order ID.  This order ID will be copied to all execution reports.',\n    `altAutoHedgeId` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'alternate order ID for child autohedge orders (if any)',\n    `altAccnt` VARCHAR(32) NOT NULL DEFAULT '' COMMENT 'alternate (client assigned) \"long\" account string (optional) [used to map between client and SR account strings]',\n    `altUserName` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'alternate (client assigned) user name (optional) [used to map between client and SR account strings]',\n    `execBrkrCode` VARCHAR(16) NOT NULL DEFAULT '' COMMENT '(optional) override the default execBrkrCode for this order',\n    `strategy` VARCHAR(36) NOT NULL DEFAULT '' COMMENT 'Client strategy string.  This value will appear on the SR Trade Monitor and in execution reports.',\n    `strategyAccnt` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'SR strategy account (option; if exists will be validated)',\n    `orderDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'order entry time (from client;if any)',\n    `orderSize` INT NOT NULL DEFAULT -1 COMMENT 'parent order size (contracts) [-1 = no change;used when spdrActionType=Release]',\n    `orderActiveSize` INT NOT NULL DEFAULT -1 COMMENT 'total activated size (total size released for execution) (-1 = all available size)',\n    `addCumFillQuantity` ENUM('Yes','No') NOT NULL DEFAULT 'No' COMMENT 'If Yes then OrderSize is calculated @ order arrival as requested OrderSize + existing ''CumFillQuantity''.',\n    `exchMask` INT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'eligible exchanges (0 = all)',\n    `maxExposureSize` INT NOT NULL DEFAULT -1 COMMENT 'maximum simultaneous cumulative child order public size exposure (-1 = orderActiveSize) [order can overfill if > orderActiveSize and numMakeExchanges > 1]',\n    `numMakeExchanges` TINYINT UNSIGNED NOT NULL DEFAULT 1 COMMENT 'number of exchanges (1 - 4) on which to publish public making orders.  Effective number might be less than requested number if sufficient exchanges are not available.',\n    `publicSize` ENUM('None','Randomize','MktSize','FullSize','MktSizeA','MktSizeB','MktSizeC','FullSizeR') NOT NULL DEFAULT 'None' COMMENT 'public order size handling: None=use default size handling (usually limits public size to ''typical'' market size); Randomize=randomize public size; MktSize=expose only ''typical'' market size; FullSize=expose entire order size where possible',\n    `randomizeSize` ENUM('Yes','No') NOT NULL DEFAULT 'Yes' COMMENT 'randomize public order size',\n    `canOverlapCxlRepl` ENUM('Yes','No') NOT NULL DEFAULT 'No' COMMENT 'can execution engines overlap cancel/replace operations [order can overfill if YES] (at most one active overlapping cxl/replace operation for each parent order)',\n    `progressRule` ENUM('None','Twap','Vwap','TwapReset','VwapReset','FastReset','SlowReset','TwapAlpha','VwapAlpha','TwapAlphaC','VwapAlphaC','AutoComplete','AllowImmediate','Manual','SpdrPulse','IOC','FlashMakeTake') NOT NULL DEFAULT 'None' COMMENT 'None = all size immediately available;TWAP = size released in time intervals;VWAP = size released in volume intervals;',\n    `twapSliceCnt` TINYINT UNSIGNED NOT NULL DEFAULT 4 COMMENT '[ProgressSliceCnt] number of progress slices to use (default = 4 or 8) [max 20]',\n    `progressExposeTime` INT NOT NULL DEFAULT 0 COMMENT 'minimum time (secs) to expose order (0 = no minimum; used to guarantee that the order is exposed at mid-market for some time before actively taking)',\n    `auctionResponder` ENUM('None','Any') NOT NULL DEFAULT 'None' COMMENT 'if set, parent order can be an auction responder',\n    `blockVisibility` ENUM('None','Neither','Side','SidePrice') NOT NULL DEFAULT 'None' COMMENT 'for BlockAuction orders, visibility (to responders) is neither, side only, or side + price',\n    `includeSRNetwork` ENUM('None','Include','Exclude','Disclose') NOT NULL DEFAULT 'None',\n    `noticeNumber` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'required when parentOrderHandling = BlockResponse',\n    `respSide` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'None',\n    `autoHedge` ENUM('None','Static','AutoMid','AutoCrx','AutoTrn','SpdrAuto','Spdr10S','Spdr30S','Spdr90S','Spdr5M','Spdr30M','SpdrDay','SmartFast','SmartNorm','FastCrx','FastDark','SlowDark','AlphaVwap1pct','AlphaVwap2pct','AlphaVwap5pct','AlphaVwap25pct','Custom','AwayAlgo','EuxMsAlgo') NOT NULL DEFAULT 'None',\n    `hedgeInstrument` ENUM('None','Default','FrontMonth','Stock','Future') NOT NULL DEFAULT 'Default' COMMENT 'Default=underlier (EQT or FUT) [Index Options use ETF]; FrontMonth=underlier (EQT) or front month (FUT) [Index Options use FM Fut]; Stock=hedgeSecKey; Future=hedgeSecKey',\n    `hedgeSecKey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'EQT' COMMENT 'auto-hedge instrument (either TickerKey or ExpiryKey)',\n    `hedgeSecKey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'NMS' COMMENT 'auto-hedge instrument (either TickerKey or ExpiryKey)',\n    `hedgeSecKey_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'auto-hedge instrument (either TickerKey or ExpiryKey)',\n    `hedgeSecKey_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 2000 COMMENT 'auto-hedge instrument (either TickerKey or ExpiryKey)',\n    `hedgeSecKey_mn` TINYINT UNSIGNED NOT NULL DEFAULT 1 COMMENT 'auto-hedge instrument (either TickerKey or ExpiryKey)',\n    `hedgeSecKey_dy` TINYINT UNSIGNED NOT NULL DEFAULT 1 COMMENT 'auto-hedge instrument (either TickerKey or ExpiryKey)',\n    `hedgeBetaRatio` FLOAT NOT NULL DEFAULT 1.0 COMMENT 'Portion of executed $money to auto-hedge (can be 1.0 / Beta for beta hedging) [-4.0 to +4.0]',\n    `hedgeScope` ENUM('None','Accnt','RiskGroup') NOT NULL DEFAULT 'RiskGroup' COMMENT 'Auto-hedge at the RiskGroup or Accnt level',\n    `hedgeSession` ENUM('None','PreMkt','RegMkt','PostMkt','PreRegMkt','RegPostMkt','AllDay') NOT NULL DEFAULT 'RegMkt',\n    `hedgeFillUMarkLmtPrc` ENUM('None','Yes','No') NOT NULL DEFAULT 'No' COMMENT 'set a price limit on the autohedge order based on the most recent option fillUMark',\n    `cxlUPrcRange` ENUM('None','Yes','No','YesHalt','NoHalt') NOT NULL DEFAULT 'None' COMMENT 'cancel parent order if/when outside min/max uPrc range [_Halt = also cancel if the security/underlier has been halted]',\n    `minUBid` FLOAT NOT NULL DEFAULT 0 COMMENT '[optional]',\n    `maxUAsk` FLOAT NOT NULL DEFAULT 0 COMMENT '[optional] (< $0.01 = none)',\n    `minMaxType` ENUM('None','Prc','Pct') NOT NULL DEFAULT 'Prc' COMMENT 'if Prc minUBid/maxUAsk are expressed as prices; if Pct then they are expresses as pct change since parent order arrival',\n    `maxChildOrders` INT NOT NULL DEFAULT 1000 COMMENT 'maximum number of child orders that can be generated by this parent order [order will terminate if/when this cap is reached;zero or neg = unlimited]',\n    `spdrStageType` ENUM('None','ModifyAny','ModifyAlgo') NOT NULL DEFAULT 'None' COMMENT 'SizeLock = stage pending modification (can reduce size); SizeModify = stage pending modification (can increase/reduce size)',\n    `marketSession` ENUM('None','PreMkt','RegMkt','PostMkt','PreRegMkt','RegPostMkt','AllDay') NOT NULL DEFAULT 'RegMkt',\n    `startDttm` DATETIME(6) NOT NULL DEFAULT '2000-01-01' COMMENT '[optional] (parent order start time)',\n    `orderDuration` INT NOT NULL DEFAULT -1 COMMENT '[optional] (number of seconds)',\n    `activeDuration` INT NOT NULL DEFAULT -1,\n    `goodTillDttm` DATETIME(6) NOT NULL DEFAULT '2000-01-01' COMMENT '[optional] (default: 2000-01-01)',\n    `startType` ENUM('None','WaitTrigger') NOT NULL DEFAULT 'None' COMMENT '[WaitTrigger]',\n    `parentOrderHandling` ENUM('None','Legger','Seeker','SeekerLegger','RFQRequest','AwayAlgo','ExchPing','BlockAuction','BlockResponse','SweepTake','CobMaker','TestParent') NOT NULL DEFAULT 'CobMaker',\n    `parentBalanceHandling` ENUM('None','PostWith','PostTurn','PostImprove','PostLimit','MaxIntern','PostWthF','PostImprvR','PostFlash','PostFlashW','PostPeg','PostFlashI') NOT NULL DEFAULT 'PostLimit',\n    `orderLimitType` ENUM('Market','MarketArrival','Prc','PrcDe','PrcDeX','RelMid','RelJoin','RelCross','RelTurn','Aux','UPrcPct') NOT NULL DEFAULT 'Market' COMMENT 'Various (Prc, PrcDe, Rel, Market);establishes the primary LimitPrice for a parent order',\n    `takeLimitClass` ENUM('Simple','Surface','Probability','SurfProb') NOT NULL DEFAULT 'Simple' COMMENT 'Simple = LimitPrice, Surface = BEST(LimitPrice, SurfLimit), Probability = BEST(LimitPrice, ProbLimit)',\n    `makeLimitClass` ENUM('Simple','Surface','Probability','SurfProb') NOT NULL DEFAULT 'Simple' COMMENT 'Simple = LimitPrice, Surface = BEST(LimitPrice, SurfLimit), Probability = BEST(LimitPrice, ProbLimit)',\n    `takeReachRule` ENUM('None','Delayed','Passive','WeakOnly','RespondOnly','FullSize','ISOSweep','AllOrNone','QtyOrMore','UpToQty','AtMost25','AtMost50','MinTakeFee') NOT NULL DEFAULT 'None' COMMENT 'None = reach room immediately available; Delayed = available after [1-3] seconds; Passive = available if contra side aggresses; WeakOnly = only take if available size < avgMarketSize; ISOSweep = Intermarket Sweep [requires WaitTrigger]',\n    `leadSide` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'None' COMMENT 'for legged orders, which side to lead with.  (optional, None ok)',\n    `maxCompletionSlippage` DOUBLE NOT NULL DEFAULT 0 COMMENT 'Maximum price slippage to complete an open basket or a cross auction (face side slippage)',\n    `orderPrcLimit` DOUBLE NOT NULL DEFAULT 0 COMMENT 'Applies if LimitType = Prc[]',\n    `takeSurfPrcOffset` DOUBLE NOT NULL DEFAULT 0 COMMENT 'default=0',\n    `takeSurfVolOffset` FLOAT NOT NULL DEFAULT 0 COMMENT 'default=0',\n    `orderPrcOffset` DOUBLE NOT NULL DEFAULT 0 COMMENT 'default=0',\n    `takeAlphaType` ENUM('None','Static','Eagle','Hawk','Falcon','Relative') NOT NULL DEFAULT 'None' COMMENT 'Applies if takeLimitClass = Probability',\n    `makeAlphaType` ENUM('None','Static','Eagle','Hawk','Falcon','Relative') NOT NULL DEFAULT 'None' COMMENT 'Applies if makeLimitClass = Probability',\n    `takeAlphaFactor` FLOAT NOT NULL DEFAULT 0 COMMENT '[-2,+2] takeProbLimit = MAX(takeProbability, takeProbAvg + takeAlphaFactor * takeProbStd) [if takeAlphaType = Relative]',\n    `makeAlphaFactor` FLOAT NOT NULL DEFAULT 0 COMMENT '[-2,+2] makeProbLimit = MAX(makeProbability, makeProbAvg + makeAlphaFactor * makeProbStd) [if takeAlphaType = Relative]',\n    `takeProbability` FLOAT NOT NULL DEFAULT 0 COMMENT 'takeProbLimit = takeProbability [if takeAlphaType = Static]',\n    `makeProbability` FLOAT NOT NULL DEFAULT 0 COMMENT 'makeProbLimit = makeProbability [if makeAlphaType = Static]',\n    `firmType` ENUM('None','Customer','Firm','MarketMaker','ProCustomer','BrokerDealer','AwayMM','FirmJBO','BrkrDlrCust') NOT NULL DEFAULT 'None' COMMENT 'Used to override firmType in account config. Default: None (use SpiderRock account configuration).',\n    `stockSide` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'None' COMMENT 'Stock Orde Side (if any).',\n    `ssaleFlag` ENUM('None','Long','Short','Exempt','Cover','Auto','NA') NOT NULL DEFAULT 'Auto' COMMENT 'Used to determine stock auto-hedge flags.',\n    `locateFirm` VARCHAR(6) NOT NULL DEFAULT '' COMMENT 'firm granting the locate if using an away locate source for this order',\n    `locatePool` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'locate pool @ firm granting the locate',\n    `stockShares` INT NOT NULL DEFAULT 0 COMMENT 'Number of shares in spread package.  Default: 0 (none).',\n    `altStkLegID` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'Optional stock leg ID.',\n    `numOptionLegs` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'The number of valid legs below.  The first leg is required and the rest are optional.  For each optional leg `okey_` and `mult_` must be valid values whereas `side_`, `positionType_`, and `legID_` will be assigned default values.',\n    `multihedge` ENUM('None','Simple','Complex','AllCash') NOT NULL DEFAULT 'None',\n    `optionType` ENUM('Equity','Index','Future','Binary','MapError') NOT NULL DEFAULT 'Equity',\n    `underliersPerCn` INT NOT NULL DEFAULT 100 COMMENT 'Default: 100.',\n    `okey1_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'Option symbol for leg #1.  Must be a valid option symbol.',\n    `okey1_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'Option symbol for leg #1.  Must be a valid option symbol.',\n    `okey1_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'Option symbol for leg #1.  Must be a valid option symbol.',\n    `okey1_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Option symbol for leg #1.  Must be a valid option symbol.',\n    `okey1_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Option symbol for leg #1.  Must be a valid option symbol.',\n    `okey1_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Option symbol for leg #1.  Must be a valid option symbol.',\n    `okey1_xx` DOUBLE NOT NULL DEFAULT 0 COMMENT 'Option symbol for leg #1.  Must be a valid option symbol.',\n    `okey1_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call' COMMENT 'Option symbol for leg #1.  Must be a valid option symbol.',\n    `mult1` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Multiplier for leg #1.  Must be greater than zero.',\n    `side1` ENUM('Buy','Sell') NOT NULL DEFAULT 'Buy' COMMENT 'Order side for leg #1.',\n    `positionType1` ENUM('Opening','Closing','Auto') NOT NULL DEFAULT 'Auto' COMMENT 'Position type for leg #1.',\n    `altLegID1` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'ID for leg #1.  If left blank will be assigned an auto-generated ID.',\n    `okey2_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'EQT' COMMENT 'Option symbol for leg #2.  Must be a valid option symbol.',\n    `okey2_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'NMS' COMMENT 'Option symbol for leg #2.  Must be a valid option symbol.',\n    `okey2_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'Option symbol for leg #2.  Must be a valid option symbol.',\n    `okey2_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 1900 COMMENT 'Option symbol for leg #2.  Must be a valid option symbol.',\n    `okey2_mn` TINYINT UNSIGNED NOT NULL DEFAULT 1 COMMENT 'Option symbol for leg #2.  Must be a valid option symbol.',\n    `okey2_dy` TINYINT UNSIGNED NOT NULL DEFAULT 1 COMMENT 'Option symbol for leg #2.  Must be a valid option symbol.',\n    `okey2_xx` DOUBLE NOT NULL DEFAULT 100 COMMENT 'Option symbol for leg #2.  Must be a valid option symbol.',\n    `okey2_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call' COMMENT 'Option symbol for leg #2.  Must be a valid option symbol.',\n    `mult2` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Multiplier for leg #2.  Must be greater than zero.',\n    `side2` ENUM('Buy','Sell') NOT NULL DEFAULT 'Buy' COMMENT 'Order side for leg #2.',\n    `positionType2` ENUM('Opening','Closing','Auto') NOT NULL DEFAULT 'Auto' COMMENT 'Position type for leg #2.',\n    `altLegID2` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'ID for leg #2.  If left blank will be assigned an auto-generated ID.',\n    `okey3_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'EQT' COMMENT 'Option symbol for leg #3.  Must be a valid option symbol.',\n    `okey3_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'NMS' COMMENT 'Option symbol for leg #3.  Must be a valid option symbol.',\n    `okey3_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'Option symbol for leg #3.  Must be a valid option symbol.',\n    `okey3_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 1900 COMMENT 'Option symbol for leg #3.  Must be a valid option symbol.',\n    `okey3_mn` TINYINT UNSIGNED NOT NULL DEFAULT 1 COMMENT 'Option symbol for leg #3.  Must be a valid option symbol.',\n    `okey3_dy` TINYINT UNSIGNED NOT NULL DEFAULT 1 COMMENT 'Option symbol for leg #3.  Must be a valid option symbol.',\n    `okey3_xx` DOUBLE NOT NULL DEFAULT 100 COMMENT 'Option symbol for leg #3.  Must be a valid option symbol.',\n    `okey3_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call' COMMENT 'Option symbol for leg #3.  Must be a valid option symbol.',\n    `mult3` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Multiplier for leg #3.  Must be greater than zero.',\n    `side3` ENUM('Buy','Sell') NOT NULL DEFAULT 'Buy' COMMENT 'Order side for leg #3.',\n    `positionType3` ENUM('Opening','Closing','Auto') NOT NULL DEFAULT 'Auto' COMMENT 'Position type for leg #3.',\n    `altLegID3` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'ID for leg #3.  If left blank will be assigned an auto-generated ID.',\n    `okey4_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'EQT' COMMENT 'Option symbol for leg #4.  Must be a valid option symbol.',\n    `okey4_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'NMS' COMMENT 'Option symbol for leg #4.  Must be a valid option symbol.',\n    `okey4_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'Option symbol for leg #4.  Must be a valid option symbol.',\n    `okey4_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 1900 COMMENT 'Option symbol for leg #4.  Must be a valid option symbol.',\n    `okey4_mn` TINYINT UNSIGNED NOT NULL DEFAULT 1 COMMENT 'Option symbol for leg #4.  Must be a valid option symbol.',\n    `okey4_dy` TINYINT UNSIGNED NOT NULL DEFAULT 1 COMMENT 'Option symbol for leg #4.  Must be a valid option symbol.',\n    `okey4_xx` DOUBLE NOT NULL DEFAULT 100 COMMENT 'Option symbol for leg #4.  Must be a valid option symbol.',\n    `okey4_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call' COMMENT 'Option symbol for leg #4.  Must be a valid option symbol.',\n    `mult4` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Multiplier for leg #4.  Must be greater than zero.',\n    `side4` ENUM('Buy','Sell') NOT NULL DEFAULT 'Buy' COMMENT 'Order side for leg #4.',\n    `positionType4` ENUM('Opening','Closing','Auto') NOT NULL DEFAULT 'Auto' COMMENT 'Position type for leg #4.',\n    `altLegID4` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'ID for leg #4.  If left blank will be assigned an auto-generated ID.',\n    `okey5_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'EQT' COMMENT 'Option symbol for leg #5.  Must be a valid option symbol.',\n    `okey5_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'NMS' COMMENT 'Option symbol for leg #5.  Must be a valid option symbol.',\n    `okey5_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'Option symbol for leg #5.  Must be a valid option symbol.',\n    `okey5_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 1900 COMMENT 'Option symbol for leg #5.  Must be a valid option symbol.',\n    `okey5_mn` TINYINT UNSIGNED NOT NULL DEFAULT 1 COMMENT 'Option symbol for leg #5.  Must be a valid option symbol.',\n    `okey5_dy` TINYINT UNSIGNED NOT NULL DEFAULT 1 COMMENT 'Option symbol for leg #5.  Must be a valid option symbol.',\n    `okey5_xx` DOUBLE NOT NULL DEFAULT 100 COMMENT 'Option symbol for leg #5.  Must be a valid option symbol.',\n    `okey5_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call' COMMENT 'Option symbol for leg #5.  Must be a valid option symbol.',\n    `mult5` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Multiplier for leg #5.  Must be greater than zero.',\n    `side5` ENUM('Buy','Sell') NOT NULL DEFAULT 'Buy' COMMENT 'Order side for leg #5.',\n    `positionType5` ENUM('Opening','Closing','Auto') NOT NULL DEFAULT 'Auto' COMMENT 'Position type for leg #5.',\n    `altLegID5` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'ID for leg #5.  If left blank will be assigned an auto-generated ID.',\n    `okey6_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'EQT' COMMENT 'Option symbol for leg #6.  Must be a valid option symbol.',\n    `okey6_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'NMS' COMMENT 'Option symbol for leg #6.  Must be a valid option symbol.',\n    `okey6_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'Option symbol for leg #6.  Must be a valid option symbol.',\n    `okey6_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 1900 COMMENT 'Option symbol for leg #6.  Must be a valid option symbol.',\n    `okey6_mn` TINYINT UNSIGNED NOT NULL DEFAULT 1 COMMENT 'Option symbol for leg #6.  Must be a valid option symbol.',\n    `okey6_dy` TINYINT UNSIGNED NOT NULL DEFAULT 1 COMMENT 'Option symbol for leg #6.  Must be a valid option symbol.',\n    `okey6_xx` DOUBLE NOT NULL DEFAULT 100 COMMENT 'Option symbol for leg #6.  Must be a valid option symbol.',\n    `okey6_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call' COMMENT 'Option symbol for leg #6.  Must be a valid option symbol.',\n    `mult6` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Multiplier for leg #6.  Must be greater than zero.',\n    `side6` ENUM('Buy','Sell') NOT NULL DEFAULT 'Buy' COMMENT 'Order side for leg #6.',\n    `positionType6` ENUM('Opening','Closing','Auto') NOT NULL DEFAULT 'Auto' COMMENT 'Position type for leg #6.',\n    `altLegID6` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'ID for leg #6.  If left blank will be assigned an auto-generated ID.',\n    `optPremium` FLOAT NOT NULL DEFAULT 0 COMMENT 'The premium for the option legs, a contribution to the order premium.  Valid range is  [-9999.0, 9999.0].  Default: 0.',\n    `orderRefUPrc` FLOAT NOT NULL DEFAULT 0 COMMENT 'The stock reference price, a contribution to the order premium.  Default: 0.',\n    `riskGroupId` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'Default: 0 (none).  Required to be non-zero if `autoHedge` is something other than None.',\n    `reqAuxRiskGroupCtrl` ENUM('None','Yes','No') NOT NULL DEFAULT 'None',\n    `refRMetric1Src` ENUM('None','User','Vega','WVega','WTVega','TVega','Theta','Gamma','DGamma','DDeltaIvS','BDDelta','OptDDelta','Premium','Notional') NOT NULL DEFAULT 'None',\n    `refRMetric2Src` ENUM('None','User','Vega','WVega','WTVega','TVega','Theta','Gamma','DGamma','DDeltaIvS','BDDelta','OptDDelta','Premium','Notional') NOT NULL DEFAULT 'None',\n    `refRMetric3Src` ENUM('None','User','Vega','WVega','WTVega','TVega','Theta','Gamma','DGamma','DDeltaIvS','BDDelta','OptDDelta','Premium','Notional') NOT NULL DEFAULT 'None',\n    `refRMetric4Src` ENUM('None','User','Vega','WVega','WTVega','TVega','Theta','Gamma','DGamma','DDeltaIvS','BDDelta','OptDDelta','Premium','Notional') NOT NULL DEFAULT 'None',\n    `refRMetric5Src` ENUM('None','User','Vega','WVega','WTVega','TVega','Theta','Gamma','DGamma','DDeltaIvS','BDDelta','OptDDelta','Premium','Notional') NOT NULL DEFAULT 'None',\n    `refRMetric6Src` ENUM('None','User','Vega','WVega','WTVega','TVega','Theta','Gamma','DGamma','DDeltaIvS','BDDelta','OptDDelta','Premium','Notional') NOT NULL DEFAULT 'None',\n    `refRMetric7Src` ENUM('None','User','Vega','WVega','WTVega','TVega','Theta','Gamma','DGamma','DDeltaIvS','BDDelta','OptDDelta','Premium','Notional') NOT NULL DEFAULT 'None',\n    `orderRefRMetric1` FLOAT NOT NULL DEFAULT 0 COMMENT 'user supplied RMetric1 value (used in RiskGroupID risk controls) [netRMetric1 = sum(fillQty * orderRefRMetric1 * underlierPerCn)]',\n    `orderRefRMetric2` FLOAT NOT NULL DEFAULT 0 COMMENT 'user supplied RMetric2 value (used in RiskGroupID risk controls) [netRMetric2 = sum(fillQty * orderRefRMetric2 * underlierPerCn)]',\n    `orderRefRMetric3` FLOAT NOT NULL DEFAULT 0 COMMENT 'user supplied RMetric3 value (used in RiskGroupID risk controls) [netRMetric3 = sum(fillQty * orderRefRMetric3 * underlierPerCn)]',\n    `orderRefRMetric4` FLOAT NOT NULL DEFAULT 0 COMMENT 'user supplied RMetric4 value (used in RiskGroupID risk controls) [netRMetric4 = sum(fillQty * orderRefRMetric4 * underlierPerCn)]',\n    `orderRefRMetric5` FLOAT NOT NULL DEFAULT 0 COMMENT 'user supplied RMetric5 value (used in RiskGroupID risk controls) [netRMetric5 = sum(fillQty * orderRefRMetric5 * underlierPerCn)]',\n    `orderRefRMetric6` FLOAT NOT NULL DEFAULT 0 COMMENT 'user supplied RMetric6 value (used in ExpDay risk controls) [netRMetric6 = sum(fillQty * orderRefRMetric6 * underlierPerCn)]',\n    `orderRefRMetric7` FLOAT NOT NULL DEFAULT 0 COMMENT 'user supplied RMetric7 value (used in SymDay risk controls) [netRMetric7 = sum(fillQty * orderRefRMetric7 * underlierPerCn)]',\n    `expDayWtVegaOffset` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+symbol day wtVega offset (target)',\n    `maxExpDayWtVegaLn` FLOAT NOT NULL DEFAULT -1 COMMENT 'max accnt+expiration day (time weighted) vega long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)',\n    `maxExpDayWtVegaSh` FLOAT NOT NULL DEFAULT -1 COMMENT 'max accnt+expiration day (time weighted) vega short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)',\n    `maxExpDayRMetric6Ln` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+expiration day rMetric6 long (positive number;-1=no limit);risk limit = max limit - current net counter',\n    `maxExpDayRMetric6Sh` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+expiration day rMetric6 short (positive number;-1=no limit);risk limit = max limit + current net counter',\n    `symDayDDeltaOffset` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+symbol day $delta offset (target)',\n    `maxSymDayDDeltaLn` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+symbol day $delta long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)',\n    `maxSymDayDDeltaSh` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+symbol day $delta short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)',\n    `symDayVegaOffset` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+symbol day vega offset (target)',\n    `maxSymDayVegaLn` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+symbol day vega long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)',\n    `maxSymDayVegaSh` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+symbol day vega short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)',\n    `symDayWtVegaOffset` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+symbol day wtVega offset (target)',\n    `maxSymDayWtVegaLn` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+symbol day (time weighted) vega long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)',\n    `maxSymDayWtVegaSh` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+symbol day (time weighted) vega short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)',\n    `maxSymDayRMetric7Ln` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+symbol day rMetric7 long (positive number;-1=no limit);risk limit = max limit - current net counter',\n    `maxSymDayRMetric7Sh` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+symbol day rMetric7 short (positive number;-1=no limit);risk limit = max limit + current net counter',\n    `maxGrpDayDDeltaLn` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day $delta long (positive number;-1=no limit);risk limit = max limit - current net counter',\n    `maxGrpDayDDeltaSh` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day $delta short (positive number;-1=no limit);risk limit = max limit + current net counter',\n    `maxGrpDayVegaLn` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day vega long (positive number;-1=no limit);risk limit = max limit - current net counter',\n    `maxGrpDayVegaSh` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day vega short (positive number;-1=no limit);risk limit = max limit + current net counter',\n    `maxGrpDayVegaAbs` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day vega abs (positive number;-1=no limit);risk limit = max limit - abs(current net counter)',\n    `grpDayVegaRatio` FLOAT NOT NULL DEFAULT 1.0 COMMENT 'target bot / sld ratio (eg ratio=2.0 means that neutral is bot vega = 2x sld vega)',\n    `maxGrpDayContractsLn` INT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day opt contracts long (positive number;-1=no limit);risk limit = max limit - current net counter',\n    `maxGrpDayContractsSh` INT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day opt contracts short (positive number;-1=no limit);risk limit = max limit + current net counter',\n    `maxGrpDayContractsAbs` INT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day opt contracts abs (positive number;-1=no limit);risk limit = max limit - abs(current net counter)',\n    `maxGrpDayRMetric1Ln` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day rMetric1 long (positive number;-1=no limit);risk limit = max limit - current net counter',\n    `maxGrpDayRMetric1Sh` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day rMetric1 short (positive number;-1=no limit);risk limit = max limit + current net counter',\n    `maxGrpDayRMetric1Abs` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day rMetric1 abs (positive number;-1=no limit);risk limit = max limit - abs(current net counter)',\n    `grpDayRMetric1Ratio` FLOAT NOT NULL DEFAULT 1.0 COMMENT 'target bot / sld ratio (eg ratio=0.5 means that neutral is bot rMetric1 = 0.5x sld rMetric1)',\n    `maxGrpDayRMetric2Ln` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day rMetric2 long (positive number;-1=no limit);risk limit = max limit - current net counter',\n    `maxGrpDayRMetric2Sh` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day rMetric2 short (positive number;-1=no limit);risk limit = max limit + current net counter',\n    `maxGrpDayRMetric3Ln` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day rMetric3 long (positive number;-1=no limit);risk limit = max limit - current net counter',\n    `maxGrpDayRMetric3Sh` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day rMetric3 short (positive number;-1=no limit);risk limit = max limit + current net counter',\n    `maxGrpDayRMetric4Ln` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day rMetric4 long (positive number;-1=no limit);risk limit = max limit - current net counter',\n    `maxGrpDayRMetric4Sh` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day rMetric4 short (positive number;-1=no limit);risk limit = max limit + current net counter',\n    `maxGrpDayRMetric5Ln` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day rMetric5 long (positive number;-1=no limit);risk limit = max limit - current net counter',\n    `maxGrpDayRMetric5Sh` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day rMetric5 short (positive number;-1=no limit);risk limit = max limit + current net counter',\n    `symEmaCxlDDeltaLn` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+symbol 60s EMA $delta long (positive number; <= 0 is no limit) [will immediately cxl all option orders in a symbol if any order in the symbol breaches]',\n    `symEmaCxlDDeltaSh` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+symbol 60s EMA $delta short (positive number; <= 0 is no limit)',\n    `symEmaCxlWtVegaLn` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+symbol 60s EMA wtVega long (positive number; <= 0 is no limit) [will immediately cxl all option orders in a symbol if any order in the symbol breaches]',\n    `symEmaCxlWtVegaSh` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+symbol 60s EMA wtVega short (positive number; <= 0 is no limit)',\n    `traderName` VARCHAR(32) NOT NULL DEFAULT '' COMMENT 'Name of the trader associated with the order',\n    `userData1` TINYTEXT NOT NULL DEFAULT '' COMMENT 'client supplied data field; passes through to parent and child executions and reports as well as FIX drops',\n    `userData2` TINYTEXT NOT NULL DEFAULT '' COMMENT 'client supplied data field; passes through to parent and child executions and reports as well as FIX drops',\n    `childData` TINYTEXT NOT NULL DEFAULT '' COMMENT 'client supplied data field; passes through to down stream child orders',\n    `checksum` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Must be set to 13.  This helps detect some column/value misalignments.',\n    CONSTRAINT nonnegative_groupingCode CHECK(ASCII(groupingCode) < 56),\n    CONSTRAINT nonnegative_noticeNumber CHECK(ASCII(noticeNumber) < 56),\n    CONSTRAINT nonnegative_riskGroupId CHECK(ASCII(riskGroupId) < 56),\n    PRIMARY KEY USING HASH (`ticker_tk`,`ticker_at`,`ticker_ts`,`accnt`,`groupingCode`,`orderSide`,`clientFirm`)\n) ENGINE=SRSE DEFAULT CHARSET=LATIN1 COMMENT='Records inserted, updated, or replaced into the MLegOrderGateway table are validated and then converted to SpdrParentOrder records and forwarded to the appropriate execution engine for futher processing.  Parent orders can be inserted as either active/ready or in a wait start mode that requires subsequent release.\\nSee the SpiderRock Execution Engine concept guide for more details.';\n\n"})}),"\n",(0,i.jsx)(t.h3,{id:"select-table-example-query",children:"SELECT TABLE EXAMPLE QUERY"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-sql",children:"SELECT\n    `ticker_at`,\n    `ticker_ts`,\n    `ticker_tk`,\n    `accnt`,\n    `groupingCode`,\n    `orderSide`,\n    `clientFirm`,\n    `spdrActionType`,\n    `altOrderId`,\n    `altAutoHedgeId`,\n    `altAccnt`,\n    `altUserName`,\n    `execBrkrCode`,\n    `strategy`,\n    `strategyAccnt`,\n    `orderDttm`,\n    `orderSize`,\n    `orderActiveSize`,\n    `addCumFillQuantity`,\n    `exchMask`,\n    `maxExposureSize`,\n    `numMakeExchanges`,\n    `publicSize`,\n    `randomizeSize`,\n    `canOverlapCxlRepl`,\n    `progressRule`,\n    `twapSliceCnt`,\n    `progressExposeTime`,\n    `auctionResponder`,\n    `blockVisibility`,\n    `includeSRNetwork`,\n    `noticeNumber`,\n    `respSide`,\n    `autoHedge`,\n    `hedgeInstrument`,\n    `hedgeSecKey_at`,\n    `hedgeSecKey_ts`,\n    `hedgeSecKey_tk`,\n    `hedgeSecKey_yr`,\n    `hedgeSecKey_mn`,\n    `hedgeSecKey_dy`,\n    `hedgeBetaRatio`,\n    `hedgeScope`,\n    `hedgeSession`,\n    `hedgeFillUMarkLmtPrc`,\n    `cxlUPrcRange`,\n    `minUBid`,\n    `maxUAsk`,\n    `minMaxType`,\n    `maxChildOrders`,\n    `spdrStageType`,\n    `marketSession`,\n    `startDttm`,\n    `orderDuration`,\n    `activeDuration`,\n    `goodTillDttm`,\n    `startType`,\n    `parentOrderHandling`,\n    `parentBalanceHandling`,\n    `orderLimitType`,\n    `takeLimitClass`,\n    `makeLimitClass`,\n    `takeReachRule`,\n    `leadSide`,\n    `maxCompletionSlippage`,\n    `orderPrcLimit`,\n    `takeSurfPrcOffset`,\n    `takeSurfVolOffset`,\n    `orderPrcOffset`,\n    `takeAlphaType`,\n    `makeAlphaType`,\n    `takeAlphaFactor`,\n    `makeAlphaFactor`,\n    `takeProbability`,\n    `makeProbability`,\n    `firmType`,\n    `stockSide`,\n    `ssaleFlag`,\n    `locateFirm`,\n    `locatePool`,\n    `stockShares`,\n    `altStkLegID`,\n    `numOptionLegs`,\n    `multihedge`,\n    `optionType`,\n    `underliersPerCn`,\n    `okey1_at`,\n    `okey1_ts`,\n    `okey1_tk`,\n    `okey1_yr`,\n    `okey1_mn`,\n    `okey1_dy`,\n    `okey1_xx`,\n    `okey1_cp`,\n    `mult1`,\n    `side1`,\n    `positionType1`,\n    `altLegID1`,\n    `okey2_at`,\n    `okey2_ts`,\n    `okey2_tk`,\n    `okey2_yr`,\n    `okey2_mn`,\n    `okey2_dy`,\n    `okey2_xx`,\n    `okey2_cp`,\n    `mult2`,\n    `side2`,\n    `positionType2`,\n    `altLegID2`,\n    `okey3_at`,\n    `okey3_ts`,\n    `okey3_tk`,\n    `okey3_yr`,\n    `okey3_mn`,\n    `okey3_dy`,\n    `okey3_xx`,\n    `okey3_cp`,\n    `mult3`,\n    `side3`,\n    `positionType3`,\n    `altLegID3`,\n    `okey4_at`,\n    `okey4_ts`,\n    `okey4_tk`,\n    `okey4_yr`,\n    `okey4_mn`,\n    `okey4_dy`,\n    `okey4_xx`,\n    `okey4_cp`,\n    `mult4`,\n    `side4`,\n    `positionType4`,\n    `altLegID4`,\n    `okey5_at`,\n    `okey5_ts`,\n    `okey5_tk`,\n    `okey5_yr`,\n    `okey5_mn`,\n    `okey5_dy`,\n    `okey5_xx`,\n    `okey5_cp`,\n    `mult5`,\n    `side5`,\n    `positionType5`,\n    `altLegID5`,\n    `okey6_at`,\n    `okey6_ts`,\n    `okey6_tk`,\n    `okey6_yr`,\n    `okey6_mn`,\n    `okey6_dy`,\n    `okey6_xx`,\n    `okey6_cp`,\n    `mult6`,\n    `side6`,\n    `positionType6`,\n    `altLegID6`,\n    `optPremium`,\n    `orderRefUPrc`,\n    `riskGroupId`,\n    `reqAuxRiskGroupCtrl`,\n    `refRMetric1Src`,\n    `refRMetric2Src`,\n    `refRMetric3Src`,\n    `refRMetric4Src`,\n    `refRMetric5Src`,\n    `refRMetric6Src`,\n    `refRMetric7Src`,\n    `orderRefRMetric1`,\n    `orderRefRMetric2`,\n    `orderRefRMetric3`,\n    `orderRefRMetric4`,\n    `orderRefRMetric5`,\n    `orderRefRMetric6`,\n    `orderRefRMetric7`,\n    `expDayWtVegaOffset`,\n    `maxExpDayWtVegaLn`,\n    `maxExpDayWtVegaSh`,\n    `maxExpDayRMetric6Ln`,\n    `maxExpDayRMetric6Sh`,\n    `symDayDDeltaOffset`,\n    `maxSymDayDDeltaLn`,\n    `maxSymDayDDeltaSh`,\n    `symDayVegaOffset`,\n    `maxSymDayVegaLn`,\n    `maxSymDayVegaSh`,\n    `symDayWtVegaOffset`,\n    `maxSymDayWtVegaLn`,\n    `maxSymDayWtVegaSh`,\n    `maxSymDayRMetric7Ln`,\n    `maxSymDayRMetric7Sh`,\n    `maxGrpDayDDeltaLn`,\n    `maxGrpDayDDeltaSh`,\n    `maxGrpDayVegaLn`,\n    `maxGrpDayVegaSh`,\n    `maxGrpDayVegaAbs`,\n    `grpDayVegaRatio`,\n    `maxGrpDayContractsLn`,\n    `maxGrpDayContractsSh`,\n    `maxGrpDayContractsAbs`,\n    `maxGrpDayRMetric1Ln`,\n    `maxGrpDayRMetric1Sh`,\n    `maxGrpDayRMetric1Abs`,\n    `grpDayRMetric1Ratio`,\n    `maxGrpDayRMetric2Ln`,\n    `maxGrpDayRMetric2Sh`,\n    `maxGrpDayRMetric3Ln`,\n    `maxGrpDayRMetric3Sh`,\n    `maxGrpDayRMetric4Ln`,\n    `maxGrpDayRMetric4Sh`,\n    `maxGrpDayRMetric5Ln`,\n    `maxGrpDayRMetric5Sh`,\n    `symEmaCxlDDeltaLn`,\n    `symEmaCxlDDeltaSh`,\n    `symEmaCxlWtVegaLn`,\n    `symEmaCxlWtVegaSh`,\n    `traderName`,\n    `userData1`,\n    `userData2`,\n    `childData`,\n    `checksum`\nFROM `SRTrade`.`MsgMLegOrderGateway`\nWHERE \n    /* Replace with a ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') */ \n    `ticker_at` = 'None'\n  AND\n    /* Replace with a ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') */ \n    `ticker_ts` = 'None'\n  AND\n    /* Replace with a VARCHAR(12) */ \n    `ticker_tk` = 'Example_ticker_tk'\n  AND\n    /* Replace with a VARCHAR(16) */ \n    `accnt` = 'Example_accnt'\n  AND\n    /* Replace with a CHAR(19) */\n    `groupingCode` = 'Example_groupingCode'\n  AND\n    /* Replace with a ENUM('None','Buy','Sell') */\n    `orderSide` = 'Buy'\n  AND\n    /* Replace with a VARCHAR(16) */ \n    `clientFirm` = 'Example_clientFirm';\n"})}),"\n",(0,i.jsx)(t.h3,{id:"insert-table-example-query",children:"INSERT TABLE EXAMPLE QUERY"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-sql",children:"INSERT INTO `SRTrade`.`MsgMLegOrderGateway`(\n    /* Replace with a ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') */ \n    `ticker_at`,\n    /* Replace with a ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') */ \n    `ticker_ts`,\n    /* Replace with a VARCHAR(12) */ \n    `ticker_tk`,\n    /* Replace with a VARCHAR(16) */ \n    `accnt`,\n    /* Replace with a CHAR(19) */\n    `groupingCode`,\n    /* Replace with a ENUM('None','Buy','Sell') */\n    `orderSide`,\n    /* Replace with a VARCHAR(16) */ \n    `clientFirm`,\n    /* Replace with a ENUM('Add','AddReplace','Replace','Cancel','Modify') */\n    `spdrActionType`,\n    /* Replace with a VARCHAR(24) */\n    `altOrderId`,\n    /* Replace with a VARCHAR(24) */\n    `altAutoHedgeId`,\n    /* Replace with a VARCHAR(32) */\n    `altAccnt`,\n    /* Replace with a VARCHAR(24) */\n    `altUserName`,\n    /* Replace with a VARCHAR(16) */\n    `execBrkrCode`,\n    /* Replace with a VARCHAR(36) */\n    `strategy`,\n    /* Replace with a VARCHAR(16) */ \n    `strategyAccnt`,\n    /* Replace with a DATETIME(6) */\n    `orderDttm`,\n    /* Replace with a INT */\n    `orderSize`,\n    /* Replace with a INT */\n    `orderActiveSize`,\n    /* Replace with a ENUM('Yes','No') */\n    `addCumFillQuantity`,\n    /* Replace with a INT UNSIGNED */\n    `exchMask`,\n    /* Replace with a INT */\n    `maxExposureSize`,\n    /* Replace with a TINYINT UNSIGNED */\n    `numMakeExchanges`,\n    /* Replace with a ENUM('None','Randomize','MktSize','FullSize','MktSizeA','MktSizeB','MktSizeC','FullSizeR') */\n    `publicSize`,\n    /* Replace with a ENUM('Yes','No') */\n    `randomizeSize`,\n    /* Replace with a ENUM('Yes','No') */\n    `canOverlapCxlRepl`,\n    /* Replace with a ENUM('None','Twap','Vwap','TwapReset','VwapReset','FastReset','SlowReset','TwapAlpha','VwapAlpha','TwapAlphaC','VwapAlphaC','AutoComplete','AllowImmediate','Manual','SpdrPulse','IOC','FlashMakeTake') */\n    `progressRule`,\n    /* Replace with a TINYINT UNSIGNED */\n    `twapSliceCnt`,\n    /* Replace with a INT */\n    `progressExposeTime`,\n    /* Replace with a ENUM('None','Any') */\n    `auctionResponder`,\n    /* Replace with a ENUM('None','Neither','Side','SidePrice') */\n    `blockVisibility`,\n    /* Replace with a ENUM('None','Include','Exclude','Disclose') */\n    `includeSRNetwork`,\n    /* Replace with a CHAR(19) */\n    `noticeNumber`,\n    /* Replace with a ENUM('None','Buy','Sell') */ \n    `respSide`,\n    /* Replace with a ENUM('None','Static','AutoMid','AutoCrx','AutoTrn','SpdrAuto','Spdr10S','Spdr30S','Spdr90S','Spdr5M','Spdr30M','SpdrDay','SmartFast','SmartNorm','FastCrx','FastDark','SlowDark','AlphaVwap1pct','AlphaVwap2pct','AlphaVwap5pct','AlphaVwap25pct','Custom','AwayAlgo','EuxMsAlgo') */\n    `autoHedge`,\n    /* Replace with a ENUM('None','Default','FrontMonth','Stock','Future') */\n    `hedgeInstrument`,\n    /* Replace with a ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') */\n    `hedgeSecKey_at`,\n    /* Replace with a ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') */\n    `hedgeSecKey_ts`,\n    /* Replace with a VARCHAR(12) */\n    `hedgeSecKey_tk`,\n    /* Replace with a SMALLINT UNSIGNED */\n    `hedgeSecKey_yr`,\n    /* Replace with a TINYINT UNSIGNED */\n    `hedgeSecKey_mn`,\n    /* Replace with a TINYINT UNSIGNED */\n    `hedgeSecKey_dy`,\n    /* Replace with a FLOAT */\n    `hedgeBetaRatio`,\n    /* Replace with a ENUM('None','Accnt','RiskGroup') */\n    `hedgeScope`,\n    /* Replace with a ENUM('None','PreMkt','RegMkt','PostMkt','PreRegMkt','RegPostMkt','AllDay') */\n    `hedgeSession`,\n    /* Replace with a ENUM('None','Yes','No') */\n    `hedgeFillUMarkLmtPrc`,\n    /* Replace with a ENUM('None','Yes','No','YesHalt','NoHalt') */\n    `cxlUPrcRange`,\n    /* Replace with a FLOAT */\n    `minUBid`,\n    /* Replace with a FLOAT */\n    `maxUAsk`,\n    /* Replace with a ENUM('None','Prc','Pct') */\n    `minMaxType`,\n    /* Replace with a INT */\n    `maxChildOrders`,\n    /* Replace with a ENUM('None','ModifyAny','ModifyAlgo') */\n    `spdrStageType`,\n    /* Replace with a ENUM('None','PreMkt','RegMkt','PostMkt','PreRegMkt','RegPostMkt','AllDay') */\n    `marketSession`,\n    /* Replace with a DATETIME(6) */\n    `startDttm`,\n    /* Replace with a INT */\n    `orderDuration`,\n    /* Replace with a INT */\n    `activeDuration`,\n    /* Replace with a DATETIME(6) */\n    `goodTillDttm`,\n    /* Replace with a ENUM('None','WaitTrigger') */\n    `startType`,\n    /* Replace with a ENUM('None','Legger','Seeker','SeekerLegger','RFQRequest','AwayAlgo','ExchPing','BlockAuction','BlockResponse','SweepTake','CobMaker','TestParent') */\n    `parentOrderHandling`,\n    /* Replace with a ENUM('None','PostWith','PostTurn','PostImprove','PostLimit','MaxIntern','PostWthF','PostImprvR','PostFlash','PostFlashW','PostPeg','PostFlashI') */\n    `parentBalanceHandling`,\n    /* Replace with a ENUM('Market','MarketArrival','Prc','PrcDe','PrcDeX','RelMid','RelJoin','RelCross','RelTurn','Aux','UPrcPct') */\n    `orderLimitType`,\n    /* Replace with a ENUM('Simple','Surface','Probability','SurfProb') */\n    `takeLimitClass`,\n    /* Replace with a ENUM('Simple','Surface','Probability','SurfProb') */\n    `makeLimitClass`,\n    /* Replace with a ENUM('None','Delayed','Passive','WeakOnly','RespondOnly','FullSize','ISOSweep','AllOrNone','QtyOrMore','UpToQty','AtMost25','AtMost50','MinTakeFee') */\n    `takeReachRule`,\n    /* Replace with a ENUM('None','Buy','Sell') */\n    `leadSide`,\n    /* Replace with a DOUBLE */\n    `maxCompletionSlippage`,\n    /* Replace with a DOUBLE */\n    `orderPrcLimit`,\n    /* Replace with a DOUBLE */ \n    `takeSurfPrcOffset`,\n    /* Replace with a FLOAT */ \n    `takeSurfVolOffset`,\n    /* Replace with a DOUBLE */\n    `orderPrcOffset`,\n    /* Replace with a ENUM('None','Static','Eagle','Hawk','Falcon','Relative') */\n    `takeAlphaType`,\n    /* Replace with a ENUM('None','Static','Eagle','Hawk','Falcon','Relative') */\n    `makeAlphaType`,\n    /* Replace with a FLOAT */\n    `takeAlphaFactor`,\n    /* Replace with a FLOAT */\n    `makeAlphaFactor`,\n    /* Replace with a FLOAT */\n    `takeProbability`,\n    /* Replace with a FLOAT */\n    `makeProbability`,\n    /* Replace with a ENUM('None','Customer','Firm','MarketMaker','ProCustomer','BrokerDealer','AwayMM','FirmJBO','BrkrDlrCust') */\n    `firmType`,\n    /* Replace with a ENUM('None','Buy','Sell') */\n    `stockSide`,\n    /* Replace with a ENUM('None','Long','Short','Exempt','Cover','Auto','NA') */\n    `ssaleFlag`,\n    /* Replace with a VARCHAR(6) */ \n    `locateFirm`,\n    /* Replace with a VARCHAR(16) */ \n    `locatePool`,\n    /* Replace with a INT */\n    `stockShares`,\n    /* Replace with a VARCHAR(24) */\n    `altStkLegID`,\n    /* Replace with a TINYINT UNSIGNED */ \n    `numOptionLegs`,\n    /* Replace with a ENUM('None','Simple','Complex','AllCash') */\n    `multihedge`,\n    /* Replace with a ENUM('Equity','Index','Future','Binary','MapError') */\n    `optionType`,\n    /* Replace with a INT */\n    `underliersPerCn`,\n    /* Replace with a ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') */ \n    `okey1_at`,\n    /* Replace with a ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') */ \n    `okey1_ts`,\n    /* Replace with a VARCHAR(12) */ \n    `okey1_tk`,\n    /* Replace with a SMALLINT UNSIGNED */ \n    `okey1_yr`,\n    /* Replace with a TINYINT UNSIGNED */ \n    `okey1_mn`,\n    /* Replace with a TINYINT UNSIGNED */ \n    `okey1_dy`,\n    /* Replace with a DOUBLE */ \n    `okey1_xx`,\n    /* Replace with a ENUM('Call','Put','Pair') */ \n    `okey1_cp`,\n    /* Replace with a SMALLINT UNSIGNED */ \n    `mult1`,\n    /* Replace with a ENUM('Buy','Sell') */ \n    `side1`,\n    /* Replace with a ENUM('Opening','Closing','Auto') */\n    `positionType1`,\n    /* Replace with a VARCHAR(24) */\n    `altLegID1`,\n    /* Replace with a ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') */\n    `okey2_at`,\n    /* Replace with a ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') */\n    `okey2_ts`,\n    /* Replace with a VARCHAR(12) */\n    `okey2_tk`,\n    /* Replace with a SMALLINT UNSIGNED */\n    `okey2_yr`,\n    /* Replace with a TINYINT UNSIGNED */\n    `okey2_mn`,\n    /* Replace with a TINYINT UNSIGNED */\n    `okey2_dy`,\n    /* Replace with a DOUBLE */\n    `okey2_xx`,\n    /* Replace with a ENUM('Call','Put','Pair') */\n    `okey2_cp`,\n    /* Replace with a SMALLINT UNSIGNED */\n    `mult2`,\n    /* Replace with a ENUM('Buy','Sell') */\n    `side2`,\n    /* Replace with a ENUM('Opening','Closing','Auto') */\n    `positionType2`,\n    /* Replace with a VARCHAR(24) */\n    `altLegID2`,\n    /* Replace with a ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') */\n    `okey3_at`,\n    /* Replace with a ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') */\n    `okey3_ts`,\n    /* Replace with a VARCHAR(12) */\n    `okey3_tk`,\n    /* Replace with a SMALLINT UNSIGNED */\n    `okey3_yr`,\n    /* Replace with a TINYINT UNSIGNED */\n    `okey3_mn`,\n    /* Replace with a TINYINT UNSIGNED */\n    `okey3_dy`,\n    /* Replace with a DOUBLE */\n    `okey3_xx`,\n    /* Replace with a ENUM('Call','Put','Pair') */\n    `okey3_cp`,\n    /* Replace with a SMALLINT UNSIGNED */\n    `mult3`,\n    /* Replace with a ENUM('Buy','Sell') */\n    `side3`,\n    /* Replace with a ENUM('Opening','Closing','Auto') */\n    `positionType3`,\n    /* Replace with a VARCHAR(24) */\n    `altLegID3`,\n    /* Replace with a ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') */\n    `okey4_at`,\n    /* Replace with a ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') */\n    `okey4_ts`,\n    /* Replace with a VARCHAR(12) */\n    `okey4_tk`,\n    /* Replace with a SMALLINT UNSIGNED */\n    `okey4_yr`,\n    /* Replace with a TINYINT UNSIGNED */\n    `okey4_mn`,\n    /* Replace with a TINYINT UNSIGNED */\n    `okey4_dy`,\n    /* Replace with a DOUBLE */\n    `okey4_xx`,\n    /* Replace with a ENUM('Call','Put','Pair') */\n    `okey4_cp`,\n    /* Replace with a SMALLINT UNSIGNED */\n    `mult4`,\n    /* Replace with a ENUM('Buy','Sell') */\n    `side4`,\n    /* Replace with a ENUM('Opening','Closing','Auto') */\n    `positionType4`,\n    /* Replace with a VARCHAR(24) */\n    `altLegID4`,\n    /* Replace with a ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') */\n    `okey5_at`,\n    /* Replace with a ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') */\n    `okey5_ts`,\n    /* Replace with a VARCHAR(12) */\n    `okey5_tk`,\n    /* Replace with a SMALLINT UNSIGNED */\n    `okey5_yr`,\n    /* Replace with a TINYINT UNSIGNED */\n    `okey5_mn`,\n    /* Replace with a TINYINT UNSIGNED */\n    `okey5_dy`,\n    /* Replace with a DOUBLE */\n    `okey5_xx`,\n    /* Replace with a ENUM('Call','Put','Pair') */\n    `okey5_cp`,\n    /* Replace with a SMALLINT UNSIGNED */\n    `mult5`,\n    /* Replace with a ENUM('Buy','Sell') */\n    `side5`,\n    /* Replace with a ENUM('Opening','Closing','Auto') */\n    `positionType5`,\n    /* Replace with a VARCHAR(24) */\n    `altLegID5`,\n    /* Replace with a ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') */\n    `okey6_at`,\n    /* Replace with a ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') */\n    `okey6_ts`,\n    /* Replace with a VARCHAR(12) */\n    `okey6_tk`,\n    /* Replace with a SMALLINT UNSIGNED */\n    `okey6_yr`,\n    /* Replace with a TINYINT UNSIGNED */\n    `okey6_mn`,\n    /* Replace with a TINYINT UNSIGNED */\n    `okey6_dy`,\n    /* Replace with a DOUBLE */\n    `okey6_xx`,\n    /* Replace with a ENUM('Call','Put','Pair') */\n    `okey6_cp`,\n    /* Replace with a SMALLINT UNSIGNED */\n    `mult6`,\n    /* Replace with a ENUM('Buy','Sell') */\n    `side6`,\n    /* Replace with a ENUM('Opening','Closing','Auto') */\n    `positionType6`,\n    /* Replace with a VARCHAR(24) */\n    `altLegID6`,\n    /* Replace with a FLOAT */\n    `optPremium`,\n    /* Replace with a FLOAT */\n    `orderRefUPrc`,\n    /* Replace with a CHAR(19) */\n    `riskGroupId`,\n    /* Replace with a ENUM('None','Yes','No') */ \n    `reqAuxRiskGroupCtrl`,\n    /* Replace with a ENUM('None','User','Vega','WVega','WTVega','TVega','Theta','Gamma','DGamma','DDeltaIvS','BDDelta','OptDDelta','Premium','Notional') */ \n    `refRMetric1Src`,\n    /* Replace with a ENUM('None','User','Vega','WVega','WTVega','TVega','Theta','Gamma','DGamma','DDeltaIvS','BDDelta','OptDDelta','Premium','Notional') */ \n    `refRMetric2Src`,\n    /* Replace with a ENUM('None','User','Vega','WVega','WTVega','TVega','Theta','Gamma','DGamma','DDeltaIvS','BDDelta','OptDDelta','Premium','Notional') */ \n    `refRMetric3Src`,\n    /* Replace with a ENUM('None','User','Vega','WVega','WTVega','TVega','Theta','Gamma','DGamma','DDeltaIvS','BDDelta','OptDDelta','Premium','Notional') */ \n    `refRMetric4Src`,\n    /* Replace with a ENUM('None','User','Vega','WVega','WTVega','TVega','Theta','Gamma','DGamma','DDeltaIvS','BDDelta','OptDDelta','Premium','Notional') */ \n    `refRMetric5Src`,\n    /* Replace with a ENUM('None','User','Vega','WVega','WTVega','TVega','Theta','Gamma','DGamma','DDeltaIvS','BDDelta','OptDDelta','Premium','Notional') */ \n    `refRMetric6Src`,\n    /* Replace with a ENUM('None','User','Vega','WVega','WTVega','TVega','Theta','Gamma','DGamma','DDeltaIvS','BDDelta','OptDDelta','Premium','Notional') */ \n    `refRMetric7Src`,\n    /* Replace with a FLOAT */ \n    `orderRefRMetric1`,\n    /* Replace with a FLOAT */ \n    `orderRefRMetric2`,\n    /* Replace with a FLOAT */ \n    `orderRefRMetric3`,\n    /* Replace with a FLOAT */ \n    `orderRefRMetric4`,\n    /* Replace with a FLOAT */ \n    `orderRefRMetric5`,\n    /* Replace with a FLOAT */ \n    `orderRefRMetric6`,\n    /* Replace with a FLOAT */ \n    `orderRefRMetric7`,\n    /* Replace with a FLOAT */\n    `expDayWtVegaOffset`,\n    /* Replace with a FLOAT */\n    `maxExpDayWtVegaLn`,\n    /* Replace with a FLOAT */\n    `maxExpDayWtVegaSh`,\n    /* Replace with a FLOAT */\n    `maxExpDayRMetric6Ln`,\n    /* Replace with a FLOAT */\n    `maxExpDayRMetric6Sh`,\n    /* Replace with a FLOAT */\n    `symDayDDeltaOffset`,\n    /* Replace with a FLOAT */\n    `maxSymDayDDeltaLn`,\n    /* Replace with a FLOAT */\n    `maxSymDayDDeltaSh`,\n    /* Replace with a FLOAT */\n    `symDayVegaOffset`,\n    /* Replace with a FLOAT */\n    `maxSymDayVegaLn`,\n    /* Replace with a FLOAT */\n    `maxSymDayVegaSh`,\n    /* Replace with a FLOAT */\n    `symDayWtVegaOffset`,\n    /* Replace with a FLOAT */\n    `maxSymDayWtVegaLn`,\n    /* Replace with a FLOAT */\n    `maxSymDayWtVegaSh`,\n    /* Replace with a FLOAT */\n    `maxSymDayRMetric7Ln`,\n    /* Replace with a FLOAT */\n    `maxSymDayRMetric7Sh`,\n    /* Replace with a FLOAT */\n    `maxGrpDayDDeltaLn`,\n    /* Replace with a FLOAT */\n    `maxGrpDayDDeltaSh`,\n    /* Replace with a FLOAT */\n    `maxGrpDayVegaLn`,\n    /* Replace with a FLOAT */\n    `maxGrpDayVegaSh`,\n    /* Replace with a FLOAT */\n    `maxGrpDayVegaAbs`,\n    /* Replace with a FLOAT */\n    `grpDayVegaRatio`,\n    /* Replace with a INT */\n    `maxGrpDayContractsLn`,\n    /* Replace with a INT */\n    `maxGrpDayContractsSh`,\n    /* Replace with a INT */\n    `maxGrpDayContractsAbs`,\n    /* Replace with a FLOAT */\n    `maxGrpDayRMetric1Ln`,\n    /* Replace with a FLOAT */\n    `maxGrpDayRMetric1Sh`,\n    /* Replace with a FLOAT */\n    `maxGrpDayRMetric1Abs`,\n    /* Replace with a FLOAT */\n    `grpDayRMetric1Ratio`,\n    /* Replace with a FLOAT */\n    `maxGrpDayRMetric2Ln`,\n    /* Replace with a FLOAT */\n    `maxGrpDayRMetric2Sh`,\n    /* Replace with a FLOAT */\n    `maxGrpDayRMetric3Ln`,\n    /* Replace with a FLOAT */\n    `maxGrpDayRMetric3Sh`,\n    /* Replace with a FLOAT */\n    `maxGrpDayRMetric4Ln`,\n    /* Replace with a FLOAT */\n    `maxGrpDayRMetric4Sh`,\n    /* Replace with a FLOAT */\n    `maxGrpDayRMetric5Ln`,\n    /* Replace with a FLOAT */\n    `maxGrpDayRMetric5Sh`,\n    /* Replace with a FLOAT */\n    `symEmaCxlDDeltaLn`,\n    /* Replace with a FLOAT */\n    `symEmaCxlDDeltaSh`,\n    /* Replace with a FLOAT */\n    `symEmaCxlWtVegaLn`,\n    /* Replace with a FLOAT */\n    `symEmaCxlWtVegaSh`,\n    /* Replace with a VARCHAR(32) */\n    `traderName`,\n    /* Replace with a TINYTEXT */\n    `userData1`,\n    /* Replace with a TINYTEXT */\n    `userData2`,\n    /* Replace with a TINYTEXT */\n    `childData`,\n    /* Replace with a TINYINT UNSIGNED */ \n    `checksum`\n) \nVALUES(\n    'None',\n    'None',\n    'Example_ticker_tk',\n    'Example_accnt',\n    'Example_groupingCode',\n    'Buy',\n    'Example_clientFirm',\n    'Add',\n    'Example_altOrderId',\n    'Example_altAutoHedgeId',\n    'Example_altAccnt',\n    'Example_altUserName',\n    'Example_execBrkrCode',\n    'Example_strategy',\n    'Example_strategyAccnt',\n    '2022-01-01 12:34:56.000000',\n    5,\n    5,\n    'No',\n    0,\n    5,\n    1,\n    'None',\n    'Yes',\n    'No',\n    'None',\n    1,\n    5,\n    'None',\n    'None',\n    'None',\n    'Example_noticeNumber',\n    'None',\n    'None',\n    'Default',\n    'EQT',\n    'NMS',\n    'Example_hedgeSecKey_tk',\n    123,\n    1,\n    1,\n    1.23,\n    'RiskGroup',\n    'RegMkt',\n    'No',\n    'None',\n    1.23,\n    1.23,\n    'Prc',\n    5,\n    'None',\n    'RegMkt',\n    '2022-01-01 12:34:56.000000',\n    5,\n    5,\n    '2022-01-01 12:34:56.000000',\n    'None',\n    'CobMaker',\n    'PostLimit',\n    'Market',\n    'Simple',\n    'Simple',\n    'None',\n    'None',\n    4.56,\n    4.56,\n    4.56,\n    1.23,\n    4.56,\n    'None',\n    'None',\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    'None',\n    'None',\n    'Auto',\n    'Example_locateFirm',\n    'Example_locatePool',\n    5,\n    'Example_altStkLegID',\n    1,\n    'None',\n    'Equity',\n    5,\n    'None',\n    'None',\n    'Example_okey1_tk',\n    123,\n    1,\n    1,\n    4.56,\n    'Call',\n    123,\n    'Buy',\n    'Auto',\n    'Example_altLegID1',\n    'EQT',\n    'NMS',\n    'Example_okey2_tk',\n    123,\n    1,\n    1,\n    4.56,\n    'Call',\n    123,\n    'Buy',\n    'Auto',\n    'Example_altLegID2',\n    'EQT',\n    'NMS',\n    'Example_okey3_tk',\n    123,\n    1,\n    1,\n    4.56,\n    'Call',\n    123,\n    'Buy',\n    'Auto',\n    'Example_altLegID3',\n    'EQT',\n    'NMS',\n    'Example_okey4_tk',\n    123,\n    1,\n    1,\n    4.56,\n    'Call',\n    123,\n    'Buy',\n    'Auto',\n    'Example_altLegID4',\n    'EQT',\n    'NMS',\n    'Example_okey5_tk',\n    123,\n    1,\n    1,\n    4.56,\n    'Call',\n    123,\n    'Buy',\n    'Auto',\n    'Example_altLegID5',\n    'EQT',\n    'NMS',\n    'Example_okey6_tk',\n    123,\n    1,\n    1,\n    4.56,\n    'Call',\n    123,\n    'Buy',\n    'Auto',\n    'Example_altLegID6',\n    1.23,\n    1.23,\n    'Example_riskGroupId',\n    'None',\n    'None',\n    'None',\n    'None',\n    'None',\n    'None',\n    'None',\n    'None',\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    5,\n    5,\n    5,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    'Example_traderName',\n    'dummy tiny text',\n    'dummy tiny text',\n    'dummy tiny text',\n    1\n);\n"})}),"\n",(0,i.jsx)(t.h3,{id:"delete-table-example-query",children:"DELETE TABLE EXAMPLE QUERY"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-sql",children:"DELETE FROM `SRTrade`.`MsgMLegOrderGateway` \nWHERE\n    /* Replace with a ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') */ \n    `ticker_at` = 'None'\n  AND\n    /* Replace with a ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') */ \n    `ticker_ts` = 'None'\n  AND\n    /* Replace with a VARCHAR(12) */ \n    `ticker_tk` = 'Example_ticker_tk'\n  AND\n    /* Replace with a VARCHAR(16) */ \n    `accnt` = 'Example_accnt'\n  AND\n    /* Replace with a CHAR(19) */\n    `groupingCode` = 'Example_groupingCode'\n  AND\n    /* Replace with a ENUM('None','Buy','Sell') */\n    `orderSide` = 'Buy'\n  AND\n    /* Replace with a VARCHAR(16) */ \n    `clientFirm` = 'Example_clientFirm';\n"})}),"\n",(0,i.jsx)(t.h3,{id:"doc-columns-query",children:"Doc Columns Query"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-sql",children:"SELECT * FROM SRTrade.doccolumns WHERE TABLE_NAME='MLegOrderGateway' ORDER BY ordinal_position ASC;\n"})})]})}function h(e={}){let{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},91503:function(e,t,n){n.d(t,{Z:function(){return d},a:function(){return l}});var r=n(75271);let i={},s=r.createContext(i);function l(e){let t=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);