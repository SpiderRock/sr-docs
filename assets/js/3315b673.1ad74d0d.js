"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[79469],{32574:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>h,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>o});var i=t(74848),d=t(28453),s=t(11470),n=t(19365);const a={title:"SpdrParentOrder"},l="Schema: SpdrParentOrder (ID: 4095)",c={id:"MessageSchemas/Schema/Topics/parent-orders/SpdrParentOrder",title:"SpdrParentOrder",description:"SpdrParentOrder records are visible in SRSE immediately after receipt.  Parent orders received via FIX, SRSE or SpiderRock GUI tools, or 3rd party vendor systems are all visible in this table.Parent orders can be for stocks, futures, options or spreads.  And they can be one-sided (agency) or two-sided (facilitation) orders.  Parent order records should be immutable and not update.SpdrParentOrder records are published to the SpiderRock elatic cluster on arrival.",source:"@site/docs/MessageSchemas/Schema/Topics/3985-parent-orders/SpdrParentOrder.md",sourceDirName:"MessageSchemas/Schema/Topics/3985-parent-orders",slug:"/MessageSchemas/Schema/Topics/parent-orders/SpdrParentOrder",permalink:"/docs/next/MessageSchemas/Schema/Topics/parent-orders/SpdrParentOrder",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"SpdrParentOrder"},sidebar:"messageSchemasSidebar",previous:{title:"SpdrParentLimit",permalink:"/docs/next/MessageSchemas/Schema/Topics/parent-orders/SpdrParentLimit"},next:{title:"SpdrParentReport",permalink:"/docs/next/MessageSchemas/Schema/Topics/parent-orders/SpdrParentReport"}},h={},o=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"REPEATING FIELDS",id:"repeating-fields",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3}];function x(e){const r={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(r.h1,{id:"schema-spdrparentorder-id-4095",children:["Schema: SpdrParentOrder ",(0,i.jsx)("span",{className:"small-text",children:"(ID: 4095)"})]}),"\n",(0,i.jsxs)(r.p,{children:["SpdrParentOrder records are visible in SRSE immediately after receipt.  Parent orders received via FIX, SRSE or SpiderRock GUI tools, or 3rd party vendor systems are all visible in this table.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"Parent orders can be for stocks, futures, options or spreads.  And they can be one-sided (agency) or two-sided (facilitation) orders.  Parent order records should be immutable and not update.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"SpdrParentOrder records are published to the SpiderRock elatic cluster on arrival."]}),"\n",(0,i.jsx)(r.h3,{id:"metadata",children:"METADATA"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Attribute"}),(0,i.jsx)(r.th,{children:"Value"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"Topic"}),(0,i.jsx)(r.td,{children:"3985-parent-orders"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"MLink Token"}),(0,i.jsx)(r.td,{children:"ClientTrading"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"SRSE Product"}),(0,i.jsx)(r.td,{children:"SRTrade"})]})]})]}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsxs)(r.blockquote,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Note:"})," The symbol ",(0,i.jsx)(r.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"body",children:"BODY"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"#"}),(0,i.jsx)(r.th,{children:"Field"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Comment"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"10="}),(0,i.jsx)(r.td,{children:"parentNumber"}),(0,i.jsx)(r.td,{children:"long"}),(0,i.jsx)(r.td,{children:"SPDR order number"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"100"}),(0,i.jsx)(r.td,{children:"sysEnvironment"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/SysEnvironment",children:"enum : SysEnvironment"})}),(0,i.jsx)(r.td,{children:"original (source) sys environment [Stable, Current, etc]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"103"}),(0,i.jsx)(r.td,{children:"runStatus"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/RunStatus",children:"enum : RunStatus"})}),(0,i.jsx)(r.td,{children:"original (source) run status [Prod,Beta]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"106"}),(0,i.jsx)(r.td,{children:"spdrActionType"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/SpdrActionType",children:"enum : SpdrActionType"})}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"109"}),(0,i.jsx)(r.td,{children:"parentShape"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/SpdrOrderShape",children:"enum : SpdrOrderShape"})}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"112"}),(0,i.jsx)(r.td,{children:"clientSeqNumIn"}),(0,i.jsx)(r.td,{children:"int"}),(0,i.jsx)(r.td,{children:"inbound client seq number (FIX orders only)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"115"}),(0,i.jsx)(r.td,{children:"altOrderId"}),(0,i.jsx)(r.td,{children:"string(24)"}),(0,i.jsx)(r.td,{children:"alternate order ID (usually clOrdId from client)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"118"}),(0,i.jsx)(r.td,{children:"altPrevOrderId"}),(0,i.jsx)(r.td,{children:"string(24)"}),(0,i.jsx)(r.td,{children:"alternate prev order ID (usually origClOrdId from client during cxl/replace)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"124"}),(0,i.jsx)(r.td,{children:"altAutoHedgeId"}),(0,i.jsx)(r.td,{children:"string(24)"}),(0,i.jsx)(r.td,{children:"alternate order ID for child autohedge orders (if any)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"127"}),(0,i.jsx)(r.td,{children:"altAccnt"}),(0,i.jsx)(r.td,{children:"string(32)"}),(0,i.jsx)(r.td,{children:'alternate (client assigned) "long" account string (optional) [used to map between client and SR account strings]'})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"130"}),(0,i.jsx)(r.td,{children:"altUserName"}),(0,i.jsx)(r.td,{children:"string(24)"}),(0,i.jsx)(r.td,{children:"alternate (client assigned) user name (optional) [used to map between client and SR account strings]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"133"}),(0,i.jsx)(r.td,{children:"srcRoutingCode"}),(0,i.jsx)(r.td,{children:"text1"}),(0,i.jsx)(r.td,{children:"inbound FIX routing code or SRSE/tool server appID (if any)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"136"}),(0,i.jsx)(r.td,{children:"packageId"}),(0,i.jsx)(r.td,{children:"long"}),(0,i.jsx)(r.td,{children:"references spread orderNumber, if a legged spread order or auto-hedge order"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"139"}),(0,i.jsx)(r.td,{children:"secKey"}),(0,i.jsx)(r.td,{children:"OptionKey"}),(0,i.jsx)(r.td,{children:"Composite Security Key"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"142"}),(0,i.jsx)(r.td,{children:"secType"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/SpdrKeyType",children:"enum : SpdrKeyType"})}),(0,i.jsx)(r.td,{children:"Security Type [Stock, Future, Option]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"145"}),(0,i.jsx)(r.td,{children:"securityDesc"}),(0,i.jsx)(r.td,{children:"text1"}),(0,i.jsx)(r.td,{children:"additional security description"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"148"}),(0,i.jsx)(r.td,{children:"accnt"}),(0,i.jsx)(r.td,{children:"string(16)"}),(0,i.jsx)(r.td,{children:"SR trading account"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"151"}),(0,i.jsx)(r.td,{children:"clientFirm"}),(0,i.jsx)(r.td,{children:"string(16)"}),(0,i.jsx)(r.td,{children:"SR client firm"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"154"}),(0,i.jsx)(r.td,{children:"spdrSource"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/SpdrSource",children:"enum : SpdrSource"})}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"157"}),(0,i.jsx)(r.td,{children:"groupingCode"}),(0,i.jsx)(r.td,{children:"long"}),(0,i.jsx)(r.td,{children:"unique broker code;broker.pkey = (key + accnt + spdrSource + groupingCode)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"1039"}),(0,i.jsx)(r.td,{children:"execBrkrCode"}),(0,i.jsx)(r.td,{children:"string(16)"}),(0,i.jsx)(r.td,{children:"overrides the default executing broker for this parent order"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"1040"}),(0,i.jsx)(r.td,{children:"externExDest"}),(0,i.jsx)(r.td,{children:"string(16)"}),(0,i.jsx)(r.td,{children:"routing code for orders directed to an external order router (default = null); must match an exDest associated with a RouteDefinition"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"166"}),(0,i.jsx)(r.td,{children:"externParams"}),(0,i.jsx)(r.td,{children:"text1"}),(0,i.jsx)(r.td,{children:"external algo names/parameters (usually just an algo name)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"169"}),(0,i.jsx)(r.td,{children:"strategy"}),(0,i.jsx)(r.td,{children:"string(36)"}),(0,i.jsx)(r.td,{children:"client-supplied strategy string;visible on SpiderRock GUI tools and other order reports."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"172"}),(0,i.jsx)(r.td,{children:"userName"}),(0,i.jsx)(r.td,{children:"string(24)"}),(0,i.jsx)(r.td,{children:"name of the user entering the order"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"1031"}),(0,i.jsx)(r.td,{children:"userSource"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/SpdrSource",children:"enum : SpdrSource"})}),(0,i.jsx)(r.td,{children:"SpdrSource of this order (assumed to be the same as spdrSource if None)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"178"}),(0,i.jsx)(r.td,{children:"orderDttm"}),(0,i.jsx)(r.td,{children:"DateTime"}),(0,i.jsx)(r.td,{children:"order entry time (from client;if any)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"181"}),(0,i.jsx)(r.td,{children:"orderSide"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"184"}),(0,i.jsx)(r.td,{children:"orderSize"}),(0,i.jsx)(r.td,{children:"int"}),(0,i.jsx)(r.td,{children:"maximum fill size (contracts)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"187"}),(0,i.jsx)(r.td,{children:"orderActiveSize"}),(0,i.jsx)(r.td,{children:"int"}),(0,i.jsx)(r.td,{children:"total activated size (total size released for execution) (-1 = all available size)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"190"}),(0,i.jsx)(r.td,{children:"curCumFillQuantity"}),(0,i.jsx)(r.td,{children:"int"}),(0,i.jsx)(r.td,{children:"set order size = orderSize - Max(0, curCumFillQty - ee.cumFillQty) (used to ensure integrity of submitted cxl/replace orders)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"193"}),(0,i.jsx)(r.td,{children:"addCumFillQuantity"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,i.jsx)(r.td,{children:"If Yes then OrderSize is calculated @ order arrival as requested OrderSize + existing 'CumFillQuantity'."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"196"}),(0,i.jsx)(r.td,{children:"maxExposureSize"}),(0,i.jsx)(r.td,{children:"int"}),(0,i.jsx)(r.td,{children:"maximum simultaneous cumulative child order public size exposure (-1 = orderActiveSize) [order can overfill if > orderActiveSize and numMakeExchanges > 1]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"199"}),(0,i.jsx)(r.td,{children:"numMakeExchanges"}),(0,i.jsx)(r.td,{children:"byte"}),(0,i.jsx)(r.td,{children:"number of exchanges (1 - 4) on which to publish public making orders.  Effective number might be less than requested number if sufficient exchanges are not available."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"202"}),(0,i.jsx)(r.td,{children:"publicSize"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/PublicSizeHandling",children:"enum : PublicSizeHandling"})}),(0,i.jsx)(r.td,{children:"public order size handling: None=algo default; Randomize=randomize public size; MktSize=expose typical market size; FullSize=expose entire order size where possible; FullSizeR=randomize full size"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"205"}),(0,i.jsx)(r.td,{children:"canOverlapCxlRepl"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,i.jsx)(r.td,{children:"can execution engines overlap cancel/replace operations [order can overfill if YES] (at most one active overlapping cxl/replace operation for each parent order)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"208"}),(0,i.jsx)(r.td,{children:"progressRule"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/ProgressRule",children:"enum : ProgressRule"})}),(0,i.jsx)(r.td,{children:"Immediate = all size immediately available; TWAP = work from arrival to expiration; VWAP = work order not faster than participation rate"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"211"}),(0,i.jsx)(r.td,{children:"blockVisibility"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/BlockVisibility",children:"enum : BlockVisibility"})}),(0,i.jsx)(r.td,{children:"for BlockAuction orders, visibility (to responders) is neither, side only, or side + price"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"214"}),(0,i.jsx)(r.td,{children:"progressSliceCnt"}),(0,i.jsx)(r.td,{children:"byte"}),(0,i.jsx)(r.td,{children:"number of slices to use (default = 4 or 8) [max 20]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"217"}),(0,i.jsx)(r.td,{children:"progressExposeTime"}),(0,i.jsx)(r.td,{children:"int"}),(0,i.jsx)(r.td,{children:"minimum time (secs) to expose order (0 = no minimum; used to guarantee that the order is exposed at mid-market for some time before actively taking)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"220"}),(0,i.jsx)(r.td,{children:"vwapParticipation"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"target vwap participation rate (target % of trade activity)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"223"}),(0,i.jsx)(r.td,{children:"minMktOnClosePct"}),(0,i.jsx)(r.td,{children:"byte"}),(0,i.jsx)(r.td,{children:"Minimum pct [0 - 100] of order reserved for the on-close (MOC) auction"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"226"}),(0,i.jsx)(r.td,{children:"triggerType"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/TriggerType",children:"enum : TriggerType"})}),(0,i.jsx)(r.td,{children:"type of trigger (PrintVol/SurfVol only for options) [print = print or actionable quote]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"229"}),(0,i.jsx)(r.td,{children:"triggerLevel"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"stop/trigger level for parent order to go active (can be either a price or vol)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"232"}),(0,i.jsx)(r.td,{children:"auctionResponder"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/AuctionResponder",children:"enum : AuctionResponder"})}),(0,i.jsx)(r.td,{children:"if set, parent order can be an auction responder"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"235"}),(0,i.jsx)(r.td,{children:"maxMakeExchFee"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"maximum making exchange fee (in point value) [zero = no limit; use non-zero number for limit to apply]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"238"}),(0,i.jsx)(r.td,{children:"maxTakeExchFee"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"maximum taking exchange fee (in point value) [zero = no limit; use non-zero number for limit to apply]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"241"}),(0,i.jsx)(r.td,{children:"incTakeExchFee"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/IncExchFee",children:"enum : IncExchFee"})}),(0,i.jsx)(r.td,{children:"include exchange fee in probability and surface based take limit calculations"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"244"}),(0,i.jsx)(r.td,{children:"incMakeExchFee"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/IncExchFee",children:"enum : IncExchFee"})}),(0,i.jsx)(r.td,{children:"include exchange fee in probability and surface based make limit calculations"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"247"}),(0,i.jsx)(r.td,{children:"makeExchRule"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/MakeExchRule",children:"enum : MakeExchRule"})}),(0,i.jsx)(r.td,{children:"ActiveMaker exch preference: 'MaxPart' = max participation; 'FeeOrder' = minimize fees [max rebates]; 'ImprvOnly' will only make when improving NBBO; 'RoundRobin' will rotate through exch list; 'ProRataOptim' will post on pro-rata only."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"250"}),(0,i.jsx)(r.td,{children:"cxlUPrcRange"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/UPrcCxl",children:"enum : UPrcCxl"})}),(0,i.jsx)(r.td,{children:"cancel parent order if/when outside the uPrice range [ _Halt = also cancel if halted ]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"253"}),(0,i.jsx)(r.td,{children:"minUBid"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"[optional]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"256"}),(0,i.jsx)(r.td,{children:"maxUAsk"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"[optional] (< $0.01 = none)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"259"}),(0,i.jsx)(r.td,{children:"minMaxType"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/MinMaxType",children:"enum : MinMaxType"})}),(0,i.jsx)(r.td,{children:"if Prc minUBid/maxUAsk are expressed as prices; if Pct then they are expresses as pct change since parent order arrival"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"262"}),(0,i.jsx)(r.td,{children:"minOptionPx"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"[optional] option price floor for tied to stock orders"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"265"}),(0,i.jsx)(r.td,{children:"maxChildOrders"}),(0,i.jsx)(r.td,{children:"int"}),(0,i.jsx)(r.td,{children:"maximum number of child orders that can be generated by this parent order [order will terminate if/when this cap is reached;zero or neg = unlimited]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"268"}),(0,i.jsx)(r.td,{children:"exchMask"}),(0,i.jsx)(r.td,{children:"uint"}),(0,i.jsx)(r.td,{children:"eligible exchanges (0 = all)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"271"}),(0,i.jsx)(r.td,{children:"spdrStageType"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/SpdrStageType",children:"enum : SpdrStageType"})}),(0,i.jsx)(r.td,{children:"note: stageType != None implies both KeepAlive behavior and makes the order visible on tools"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"1032"}),(0,i.jsx)(r.td,{children:"marketSession"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/MarketSession",children:"enum : MarketSession"})}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"277"}),(0,i.jsx)(r.td,{children:"startDttm"}),(0,i.jsx)(r.td,{children:"DateTime"}),(0,i.jsx)(r.td,{children:"[optional] (parent order start time)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"280"}),(0,i.jsx)(r.td,{children:"orderDuration"}),(0,i.jsx)(r.td,{children:"int"}),(0,i.jsx)(r.td,{children:"[optional] (number of seconds)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"1033"}),(0,i.jsx)(r.td,{children:"activeDuration"}),(0,i.jsx)(r.td,{children:"int"}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"283"}),(0,i.jsx)(r.td,{children:"goodTillDttm"}),(0,i.jsx)(r.td,{children:"DateTime"}),(0,i.jsx)(r.td,{children:"[optional] (default: 2099-01-01)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"286"}),(0,i.jsx)(r.td,{children:"startType"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/StartType",children:"enum : StartType"})}),(0,i.jsx)(r.td,{children:"WaitTrigger associates this order with a triggerGroupId.  The initial wave of child orders from the TriggerGroup will be send when a (final) parent order with startType=TriggerAll or when an external trigger signal is received."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"289"}),(0,i.jsx)(r.td,{children:"triggerGroupId"}),(0,i.jsx)(r.td,{children:"long"}),(0,i.jsx)(r.td,{children:"triggerGroupId is required if startType=WaitTrigger; note that child orders from all parent orders in the trigger group will be organized and released optimally when the triggerGroup is released"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"292"}),(0,i.jsx)(r.td,{children:"triggerTimestamp"}),(0,i.jsx)(r.td,{children:"long"}),(0,i.jsx)(r.td,{children:"WaitTrigger trigger timestamp (nanoseconds since epoch)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"298"}),(0,i.jsx)(r.td,{children:"parentOrderHandling"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/ParentOrderHandling",children:"enum : ParentOrderHandling"})}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"301"}),(0,i.jsx)(r.td,{children:"parentBalanceHandling"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/ParentBalanceHandling",children:"enum : ParentBalanceHandling"})}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"304"}),(0,i.jsx)(r.td,{children:"orderLimitType"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/SpdrLimitType",children:"enum : SpdrLimitType"})}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"307"}),(0,i.jsx)(r.td,{children:"takeLimitClass"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/SpdrLimitClass",children:"enum : SpdrLimitClass"})}),(0,i.jsx)(r.td,{children:"Simple = LimitPrice +/- offset, Surface = BEST(LimitPrice, SurfLimit), Probability = BEST(LimitPrice, ProbLimit), SurfProb  = BEST(LimitPrice, SurfLimit, ProbLimit)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"310"}),(0,i.jsx)(r.td,{children:"makeLimitClass"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/SpdrLimitClass",children:"enum : SpdrLimitClass"})}),(0,i.jsx)(r.td,{children:"Simple = LimitPrice +/- offset, Surface = BEST(LimitPrice, SurfLimit), Probability = BEST(LimitPrice, ProbLimit), SurfProb  = BEST(LimitPrice, SurfLimit, ProbLimit)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"313"}),(0,i.jsx)(r.td,{children:"takeReachRule"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/ReachRule",children:"enum : ReachRule"})}),(0,i.jsx)(r.td,{children:"None = size immediately available; Delayed = available after [1-3] seconds; Passive = available if contra side aggresses; WeakOnly = only take if available size < avgMarketSize; ISOSweep = Intermarket Sweep [requires WaitTrigger]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"316"}),(0,i.jsx)(r.td,{children:"orderPrcLimit"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"Applies if LimitType = Prc[]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"319"}),(0,i.jsx)(r.td,{children:"orderRefUPrc"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"default=underlier.mid"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"322"}),(0,i.jsx)(r.td,{children:"orderRefDelta"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"default=option.delta"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"325"}),(0,i.jsx)(r.td,{children:"orderRefGamma"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"default=option.gamma"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"328"}),(0,i.jsx)(r.td,{children:"orderVolLimit"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"Applies if LimitType = Vol[] [uses SR dividends and borrow rates]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"331"}),(0,i.jsx)(r.td,{children:"rateOverride"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"zero = ignore; > zero = override"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"334"}),(0,i.jsx)(r.td,{children:"sdivOverride"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"337"}),(0,i.jsx)(r.td,{children:"ddivOverride"}),(0,i.jsx)(r.td,{children:"text1"}),(0,i.jsxs)(r.td,{children:["discrete dividend string override ([yearsToExpiry,divYears",":divAmount",",divYears",":divAmount",", ...])"]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"340"}),(0,i.jsx)(r.td,{children:"overrideCode"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/OverrideCode",children:"enum : OverrideCode"})}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"343"}),(0,i.jsx)(r.td,{children:"orderPrcOffset"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"default=0 [surface, relX and pegX limit offsets]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"346"}),(0,i.jsx)(r.td,{children:"stateModel"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/StateModel",children:"enum : StateModel"})}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"349"}),(0,i.jsx)(r.td,{children:"uStateModel"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/StateModel",children:"enum : StateModel"})}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"352"}),(0,i.jsx)(r.td,{children:"takeAlphaType"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/AlphaType",children:"enum : AlphaType"})}),(0,i.jsx)(r.td,{children:"Applies if takeLimitClass = Probability"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"355"}),(0,i.jsx)(r.td,{children:"makeAlphaType"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/AlphaType",children:"enum : AlphaType"})}),(0,i.jsx)(r.td,{children:"Applies if makeLimitClass = Probability"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"358"}),(0,i.jsx)(r.td,{children:"takeAlphaFactor"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"[-2,+2] takeProbLimit = MAX(takeProbability, takeProbAvg + takeAlphaFactor * takeProbStd) [if AlphaType = Relative]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"361"}),(0,i.jsx)(r.td,{children:"makeAlphaFactor"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"[-2,+2] makeProbLimit = MAX(makeProbability, makeProbAvg + makeAlphaFactor * makeProbStd) [if AlphaType = Relative]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"364"}),(0,i.jsx)(r.td,{children:"takeProbability"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"takeProbLimit = takeProbability [if AlphaType = Static]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"367"}),(0,i.jsx)(r.td,{children:"makeProbability"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"makeProbLimit = makeProbability [if AlphaType = Static]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"370"}),(0,i.jsx)(r.td,{children:"takeSurfPrcOffset"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"default=0"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"373"}),(0,i.jsx)(r.td,{children:"takeSurfVolOffset"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"default=0"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"376"}),(0,i.jsx)(r.td,{children:"takeSurfWidthOffset"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"[-1.x to +1.x]       -1.0 = -0.5 * avgMktWidth, +1.0 = +0.5 * avgMktWidth"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"379"}),(0,i.jsx)(r.td,{children:"makeSurfPrcOffset"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"default=0"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"382"}),(0,i.jsx)(r.td,{children:"makeSurfVolOffset"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"default=0"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"385"}),(0,i.jsx)(r.td,{children:"makeSurfWidthOffset"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"[-1.x to +1.x]       -1.0 = -0.5 * avgMktWidth, +1.0 = +0.5 * avgMktWidth"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"388"}),(0,i.jsx)(r.td,{children:"orderRefEventMult"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"expected underlier abs move (0.01 = 1%) @ orderRefEventDttm"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"391"}),(0,i.jsx)(r.td,{children:"orderRefEventDttm"}),(0,i.jsx)(r.td,{children:"DateTime"}),(0,i.jsx)(r.td,{children:"Date/time of the next event.  Note that events are usually earnings but are not required to be."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"394"}),(0,i.jsx)(r.td,{children:"autoHedge"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/AutoHedge",children:"enum : AutoHedge"})}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"397"}),(0,i.jsx)(r.td,{children:"hedgeInstrument"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/HedgeInst",children:"enum : HedgeInst"})}),(0,i.jsx)(r.td,{children:"Default=actual underlier (EQT or FUT) [IndexOptions use ETF]; FrontMonth=actual underlier (EQT) or front month (FUT) [IndexOptions use FM Fut]; Stock=hedgeSecKey.TickerKey; Future=hedgeSecKey.ExpiryKey"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"400"}),(0,i.jsx)(r.td,{children:"hedgeSecKey"}),(0,i.jsx)(r.td,{children:"ExpiryKey"}),(0,i.jsx)(r.td,{children:"autohedge instrument (can be a TickerKey (stock) or ExpiryKey (future)) [required for Stock and Future]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"403"}),(0,i.jsx)(r.td,{children:"hedgeBetaRatio"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"portion of executed $money to auto-hedge (can be 1.0 / Beta for beta hedging) [-4.0 to +4.0]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"406"}),(0,i.jsx)(r.td,{children:"hedgeScope"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/HedgeScope",children:"enum : HedgeScope"})}),(0,i.jsx)(r.td,{children:"hedge group scope [RiskGroup or Accnt]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"1034"}),(0,i.jsx)(r.td,{children:"hedgeSession"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/MarketSession",children:"enum : MarketSession"})}),(0,i.jsx)(r.td,{children:"market session for the autohedge order [defaults to pOrder.marketSession]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"1041"}),(0,i.jsx)(r.td,{children:"externHedgeExDest"}),(0,i.jsx)(r.td,{children:"string(16)"}),(0,i.jsx)(r.td,{children:"external broker exDest (only used if orderHandling=Extern)\t\t\t# Should match FixRoutingTable.destination type (eg. #Nighthawk)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"415"}),(0,i.jsx)(r.td,{children:"externHedgeParams"}),(0,i.jsx)(r.td,{children:"text1"}),(0,i.jsx)(r.td,{children:"external algo names/parameters (usually just an algo name)\t\t\t# usually copied from the FixRoutingTable.externParams"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"418"}),(0,i.jsx)(r.td,{children:"firmType"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/FirmType",children:"enum : FirmType"})}),(0,i.jsx)(r.td,{children:"used to override firmType in account config"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"421"}),(0,i.jsx)(r.td,{children:"orderCapacity"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/OrderCapacity",children:"enum : OrderCapacity"})}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"424"}),(0,i.jsx)(r.td,{children:"positionType"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/PositionType",children:"enum : PositionType"})}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"427"}),(0,i.jsx)(r.td,{children:"ssaleFlag"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum : ShortSaleFlag"})}),(0,i.jsx)(r.td,{children:"used to determine stock auto-hedge flags"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"1042"}),(0,i.jsx)(r.td,{children:"locateFirm"}),(0,i.jsx)(r.td,{children:"string(6)"}),(0,i.jsx)(r.td,{children:"firm granting the locate (also locate firm used on street FIX orders) (required if selling short and no auto-locate is available)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"1043"}),(0,i.jsx)(r.td,{children:"locatePool"}),(0,i.jsx)(r.td,{children:"string(16)"}),(0,i.jsx)(r.td,{children:"locate pool @ firm granting the locate"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"430"}),(0,i.jsx)(r.td,{children:"noCrossGroup"}),(0,i.jsx)(r.td,{children:"string(16)"}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"433"}),(0,i.jsx)(r.td,{children:"exchTraderId"}),(0,i.jsx)(r.td,{children:"string(16)"}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"436"}),(0,i.jsx)(r.td,{children:"largeTraderId"}),(0,i.jsx)(r.td,{children:"string(16)"}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"439"}),(0,i.jsx)(r.td,{children:"tradingLocation"}),(0,i.jsx)(r.td,{children:"string(16)"}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"484"}),(0,i.jsx)(r.td,{children:"leadSide"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,i.jsx)(r.td,{children:"for legged orders, which side to lead with.  (optional, None ok)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"487"}),(0,i.jsx)(r.td,{children:"maxCompletionSlippage"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"maximum price slippage to complete an open basket"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"490"}),(0,i.jsx)(r.td,{children:"orderRefPremium"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"reference premium (mleg orders only)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"491"}),(0,i.jsx)(r.td,{children:"auctionCappedAtNbbo"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,i.jsx)(r.td,{children:"if Yes, auction is capped at NBBO. Only valid when parentOrderHandling = BlockAuction"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"1038"}),(0,i.jsx)(r.td,{children:"noticeNumber"}),(0,i.jsx)(r.td,{children:"long"}),(0,i.jsx)(r.td,{children:"required when parentOrderHandling = BlockResponse"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"496"}),(0,i.jsx)(r.td,{children:"theoVol"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"client supplied theoretical volatility (used for markup only)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"499"}),(0,i.jsx)(r.td,{children:"clArriveMark"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"client specified arrival mark (passed through to ParentExecution; markup only)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"502"}),(0,i.jsx)(r.td,{children:"riskGroupId"}),(0,i.jsx)(r.td,{children:"long"}),(0,i.jsx)(r.td,{children:"all orders with the same riskGroupId share a common set of risk counters;.Grp. risk limits apply to these shared counters"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"1036"}),(0,i.jsx)(r.td,{children:"reqAuxRiskGroupCtrl"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"442"}),(0,i.jsx)(r.td,{children:"refRMetric1Src"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/RMetricSource",children:"enum : RMetricSource"})}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"445"}),(0,i.jsx)(r.td,{children:"refRMetric2Src"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/RMetricSource",children:"enum : RMetricSource"})}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"448"}),(0,i.jsx)(r.td,{children:"refRMetric3Src"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/RMetricSource",children:"enum : RMetricSource"})}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"451"}),(0,i.jsx)(r.td,{children:"refRMetric4Src"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/RMetricSource",children:"enum : RMetricSource"})}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"454"}),(0,i.jsx)(r.td,{children:"refRMetric5Src"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/RMetricSource",children:"enum : RMetricSource"})}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"457"}),(0,i.jsx)(r.td,{children:"refRMetric6Src"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/RMetricSource",children:"enum : RMetricSource"})}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"460"}),(0,i.jsx)(r.td,{children:"refRMetric7Src"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/RMetricSource",children:"enum : RMetricSource"})}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"463"}),(0,i.jsx)(r.td,{children:"orderRefRMetric1"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"user supplied RMetric1 value (used in RiskGroupID risk controls) [netRMetric1 = sum(fillQty * orderRefRMetric1 * underlierPerCn)]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"466"}),(0,i.jsx)(r.td,{children:"orderRefRMetric2"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"user supplied RMetric2 value (used in RiskGroupID risk controls) [netRMetric2 = sum(fillQty * orderRefRMetric2 * underlierPerCn)]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"469"}),(0,i.jsx)(r.td,{children:"orderRefRMetric3"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"user supplied RMetric3 value (used in RiskGroupID risk controls) [netRMetric3 = sum(fillQty * orderRefRMetric3 * underlierPerCn)]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"472"}),(0,i.jsx)(r.td,{children:"orderRefRMetric4"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"user supplied RMetric4 value (used in RiskGroupID risk controls) [netRMetric4 = sum(fillQty * orderRefRMetric4 * underlierPerCn)]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"475"}),(0,i.jsx)(r.td,{children:"orderRefRMetric5"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"user supplied RMetric5 value (used in RiskGroupID risk controls) [netRMetric5 = sum(fillQty * orderRefRMetric5 * underlierPerCn)]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"478"}),(0,i.jsx)(r.td,{children:"orderRefRMetric6"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"user supplied RMetric6 value (used in ExpDay risk controls) [netRMetric6 = sum(fillQty * orderRefRMetric6 * underlierPerCn)]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"481"}),(0,i.jsx)(r.td,{children:"orderRefRMetric7"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"user supplied RMetric7 value (used in SymDay risk controls) [netRMetric7 = sum(fillQty * orderRefRMetric7 * underlierPerCn)]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"529"}),(0,i.jsx)(r.td,{children:"expDayWtVegaOffset"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"max acct+symbol day wtVega offset (target)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"523"}),(0,i.jsx)(r.td,{children:"maxExpDayWtVegaLn"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"max accnt+expiration day (time weighted) vega long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"526"}),(0,i.jsx)(r.td,{children:"maxExpDayWtVegaSh"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"max accnt+expiration day (time weighted) vega short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"559"}),(0,i.jsx)(r.td,{children:"maxExpDayRMetric6Ln"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"max acct+expiration day rMetric6 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"562"}),(0,i.jsx)(r.td,{children:"maxExpDayRMetric6Sh"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"max acct+expiration day rMetric6 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"556"}),(0,i.jsx)(r.td,{children:"symDayDDeltaOffset"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"max acct+symbol day $delta offset (target)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"550"}),(0,i.jsx)(r.td,{children:"maxSymDayDDeltaLn"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"max acct+symbol day $delta long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"553"}),(0,i.jsx)(r.td,{children:"maxSymDayDDeltaSh"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"max acct+symbol day $delta short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"538"}),(0,i.jsx)(r.td,{children:"symDayVegaOffset"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"max acct+symbol day vega offset (target)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"532"}),(0,i.jsx)(r.td,{children:"maxSymDayVegaLn"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"max acct+symbol day vega long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"535"}),(0,i.jsx)(r.td,{children:"maxSymDayVegaSh"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"max acct+symbol day vega short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"547"}),(0,i.jsx)(r.td,{children:"symDayWtVegaOffset"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"max acct+symbol day wtVega offset (target)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"541"}),(0,i.jsx)(r.td,{children:"maxSymDayWtVegaLn"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"max acct+symbol day (time weighted) vega long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"544"}),(0,i.jsx)(r.td,{children:"maxSymDayWtVegaSh"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"max acct+symbol day (time weighted) vega short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"568"}),(0,i.jsx)(r.td,{children:"maxSymDayRMetric7Ln"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"max acct+symbol day rMetric7 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"571"}),(0,i.jsx)(r.td,{children:"maxSymDayRMetric7Sh"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"max acct+symbol day rMetric7 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"577"}),(0,i.jsx)(r.td,{children:"maxGrpDayDDeltaLn"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"max acct+riskGroup day $delta long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"580"}),(0,i.jsx)(r.td,{children:"maxGrpDayDDeltaSh"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"max acct+riskGroup day $delta short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"586"}),(0,i.jsx)(r.td,{children:"maxGrpDayVegaLn"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"max acct+riskGroup day vega long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"589"}),(0,i.jsx)(r.td,{children:"maxGrpDayVegaSh"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"max acct+riskGroup day vega short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"592"}),(0,i.jsx)(r.td,{children:"maxGrpDayVegaAbs"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"max acct+riskGroup day vega abs (positive number;-1=no limit);risk limit = max limit - abs(current net counter)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"595"}),(0,i.jsx)(r.td,{children:"grpDayVegaRatio"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"target bot / sld ratio (eg ratio=2.0 means that neutral is bot vega = 2x sld vega)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"646"}),(0,i.jsx)(r.td,{children:"maxGrpDayContractsLn"}),(0,i.jsx)(r.td,{children:"int"}),(0,i.jsx)(r.td,{children:"max acct+riskGroup day opt contracts long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"649"}),(0,i.jsx)(r.td,{children:"maxGrpDayContractsSh"}),(0,i.jsx)(r.td,{children:"int"}),(0,i.jsx)(r.td,{children:"max acct+riskGroup day opt contracts short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"652"}),(0,i.jsx)(r.td,{children:"maxGrpDayContractsAbs"}),(0,i.jsx)(r.td,{children:"int"}),(0,i.jsx)(r.td,{children:"max acct+riskGroup day opt contracts abs (positive number;-1=no limit);risk limit = max limit - abs(current net counter)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"610"}),(0,i.jsx)(r.td,{children:"maxGrpDayRMetric1Ln"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"max acct+riskGroup day rMetric1 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"613"}),(0,i.jsx)(r.td,{children:"maxGrpDayRMetric1Sh"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"max acct+riskGroup day rMetric1 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"616"}),(0,i.jsx)(r.td,{children:"maxGrpDayRMetric1Abs"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"max acct+riskGroup day rMetric1 abs (positive number;-1=no limit);risk limit = max limit - abs(current net counter)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"619"}),(0,i.jsx)(r.td,{children:"grpDayRMetric1Ratio"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"target bot / sld ratio (eg ratio=0.5 means that neutral is bot rMetric1 = 0.5x sld rMetric1)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"622"}),(0,i.jsx)(r.td,{children:"maxGrpDayRMetric2Ln"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"max acct+riskGroup day rMetric2 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"625"}),(0,i.jsx)(r.td,{children:"maxGrpDayRMetric2Sh"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"max acct+riskGroup day rMetric2 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"628"}),(0,i.jsx)(r.td,{children:"maxGrpDayRMetric3Ln"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"max acct+riskGroup day rMetric3 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"631"}),(0,i.jsx)(r.td,{children:"maxGrpDayRMetric3Sh"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"max acct+riskGroup day rMetric3 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"634"}),(0,i.jsx)(r.td,{children:"maxGrpDayRMetric4Ln"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"max acct+riskGroup day rMetric4 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"637"}),(0,i.jsx)(r.td,{children:"maxGrpDayRMetric4Sh"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"max acct+riskGroup day rMetric4 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"640"}),(0,i.jsx)(r.td,{children:"maxGrpDayRMetric5Ln"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"max acct+riskGroup day rMetric5 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"643"}),(0,i.jsx)(r.td,{children:"maxGrpDayRMetric5Sh"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"max acct+riskGroup day rMetric5 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"655"}),(0,i.jsx)(r.td,{children:"symEmaCxlDDeltaLn"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"max acct+symbol 60s EMA $delta long (positive number; <= 0 is no limit) [will immediately cxl all option orders in a symbol if any order in the symbol breaches]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"658"}),(0,i.jsx)(r.td,{children:"symEmaCxlDDeltaSh"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"max acct+symbol 60s EMA $delta short (positive number; <= 0 is no limit)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"661"}),(0,i.jsx)(r.td,{children:"symEmaCxlWtVegaLn"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"max acct+symbol 60s EMA wtVega long (positive number; <= 0 is no limit) [will immediately cxl all option orders in a symbol if any order in the symbol breaches]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"664"}),(0,i.jsx)(r.td,{children:"symEmaCxlWtVegaSh"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"max acct+symbol 60s EMA wtVega short (positive number; <= 0 is no limit)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"667"}),(0,i.jsx)(r.td,{children:"lastFillDttm"}),(0,i.jsx)(r.td,{children:"DateTime"}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"670"}),(0,i.jsx)(r.td,{children:"userData1"}),(0,i.jsx)(r.td,{children:"text1"}),(0,i.jsx)(r.td,{children:"client supplied data field; passes through to parent and child executions and reports as well as FIX drops"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"673"}),(0,i.jsx)(r.td,{children:"userData2"}),(0,i.jsx)(r.td,{children:"text1"}),(0,i.jsx)(r.td,{children:"client supplied data field; passes through to parent and child executions and reports as well as FIX drops"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"676"}),(0,i.jsx)(r.td,{children:"childData"}),(0,i.jsx)(r.td,{children:"text1"}),(0,i.jsx)(r.td,{children:"client supplied data field; passes through to down stream child orders"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"679"}),(0,i.jsx)(r.td,{children:"srcTimestamp"}),(0,i.jsx)(r.td,{children:"long"}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"682"}),(0,i.jsx)(r.td,{children:"sgwTimestamp"}),(0,i.jsx)(r.td,{children:"long"}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"685"}),(0,i.jsx)(r.td,{children:"timestamp"}),(0,i.jsx)(r.td,{children:"DateTime"}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"1037"}),(0,i.jsx)(r.td,{children:"includeSRNetwork"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/InclExclDisclose",children:"enum : InclExclDisclose"})}),(0,i.jsx)(r.td,{})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"repeating-fields",children:"REPEATING FIELDS"}),"\n",(0,i.jsx)(r.p,{children:"DirectedCounterParty"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Field"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Comment"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"697"}),(0,i.jsx)(r.td,{children:"clientFirm"}),(0,i.jsx)(r.td,{children:"string(16)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"700"}),(0,i.jsx)(r.td,{children:"inclExcl"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/InclExclDisclose",children:"enum : InclExclDisclose"})})]})]})]}),"\n",(0,i.jsx)(r.p,{children:"OrderLegs"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Field"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Comment"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"754"}),(0,i.jsx)(r.td,{children:"ticker"}),(0,i.jsx)(r.td,{children:"TickerKey"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"757"}),(0,i.jsx)(r.td,{children:"stockSide"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"760"}),(0,i.jsx)(r.td,{children:"stockShares"}),(0,i.jsx)(r.td,{children:"int"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"763"}),(0,i.jsx)(r.td,{children:"stockLegId"}),(0,i.jsx)(r.td,{children:"long"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"766"}),(0,i.jsx)(r.td,{children:"altStkLegId"}),(0,i.jsx)(r.td,{children:"string(24)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"769"}),(0,i.jsx)(r.td,{children:"ssaleFlag"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum : ShortSaleFlag"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"775"}),(0,i.jsx)(r.td,{children:"refUPrc"}),(0,i.jsx)(r.td,{children:"float"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"778"}),(0,i.jsx)(r.td,{children:"numLegs"}),(0,i.jsx)(r.td,{children:"byte"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"781"}),(0,i.jsx)(r.td,{children:"secKey1"}),(0,i.jsx)(r.td,{children:"OptionKey"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"784"}),(0,i.jsx)(r.td,{children:"secType1"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/SpdrKeyType",children:"enum : SpdrKeyType"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"787"}),(0,i.jsx)(r.td,{children:"mult1"}),(0,i.jsx)(r.td,{children:"ushort"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"790"}),(0,i.jsx)(r.td,{children:"side1"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"793"}),(0,i.jsx)(r.td,{children:"legId1"}),(0,i.jsx)(r.td,{children:"long"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"796"}),(0,i.jsx)(r.td,{children:"altLegId1"}),(0,i.jsx)(r.td,{children:"string(24)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"799"}),(0,i.jsx)(r.td,{children:"posType1"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/PositionType",children:"enum : PositionType"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"805"}),(0,i.jsx)(r.td,{children:"ssaleFlag1"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum : ShortSaleFlag"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"811"}),(0,i.jsx)(r.td,{children:"vega1"}),(0,i.jsx)(r.td,{children:"float"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"814"}),(0,i.jsx)(r.td,{children:"refUPrc1"}),(0,i.jsx)(r.td,{children:"double"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"817"}),(0,i.jsx)(r.td,{children:"refDelta1"}),(0,i.jsx)(r.td,{children:"float"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"820"}),(0,i.jsx)(r.td,{children:"refEarnCnt1"}),(0,i.jsx)(r.td,{children:"byte"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"823"}),(0,i.jsx)(r.td,{children:"secKey2"}),(0,i.jsx)(r.td,{children:"OptionKey"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"826"}),(0,i.jsx)(r.td,{children:"secType2"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/SpdrKeyType",children:"enum : SpdrKeyType"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"829"}),(0,i.jsx)(r.td,{children:"mult2"}),(0,i.jsx)(r.td,{children:"ushort"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"832"}),(0,i.jsx)(r.td,{children:"side2"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"835"}),(0,i.jsx)(r.td,{children:"legId2"}),(0,i.jsx)(r.td,{children:"long"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"838"}),(0,i.jsx)(r.td,{children:"altLegId2"}),(0,i.jsx)(r.td,{children:"string(24)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"841"}),(0,i.jsx)(r.td,{children:"posType2"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/PositionType",children:"enum : PositionType"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"847"}),(0,i.jsx)(r.td,{children:"ssaleFlag2"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum : ShortSaleFlag"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"853"}),(0,i.jsx)(r.td,{children:"vega2"}),(0,i.jsx)(r.td,{children:"float"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"856"}),(0,i.jsx)(r.td,{children:"refUPrc2"}),(0,i.jsx)(r.td,{children:"double"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"859"}),(0,i.jsx)(r.td,{children:"refDelta2"}),(0,i.jsx)(r.td,{children:"float"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"862"}),(0,i.jsx)(r.td,{children:"refEarnCnt2"}),(0,i.jsx)(r.td,{children:"byte"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"865"}),(0,i.jsx)(r.td,{children:"secKey3"}),(0,i.jsx)(r.td,{children:"OptionKey"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"868"}),(0,i.jsx)(r.td,{children:"secType3"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/SpdrKeyType",children:"enum : SpdrKeyType"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"871"}),(0,i.jsx)(r.td,{children:"mult3"}),(0,i.jsx)(r.td,{children:"ushort"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"874"}),(0,i.jsx)(r.td,{children:"side3"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"877"}),(0,i.jsx)(r.td,{children:"legId3"}),(0,i.jsx)(r.td,{children:"long"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"880"}),(0,i.jsx)(r.td,{children:"altLegId3"}),(0,i.jsx)(r.td,{children:"string(24)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"883"}),(0,i.jsx)(r.td,{children:"posType3"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/PositionType",children:"enum : PositionType"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"889"}),(0,i.jsx)(r.td,{children:"ssaleFlag3"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum : ShortSaleFlag"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"895"}),(0,i.jsx)(r.td,{children:"vega3"}),(0,i.jsx)(r.td,{children:"float"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"898"}),(0,i.jsx)(r.td,{children:"refUPrc3"}),(0,i.jsx)(r.td,{children:"double"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"901"}),(0,i.jsx)(r.td,{children:"refDelta3"}),(0,i.jsx)(r.td,{children:"float"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"904"}),(0,i.jsx)(r.td,{children:"refEarnCnt3"}),(0,i.jsx)(r.td,{children:"byte"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"907"}),(0,i.jsx)(r.td,{children:"secKey4"}),(0,i.jsx)(r.td,{children:"OptionKey"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"910"}),(0,i.jsx)(r.td,{children:"secType4"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/SpdrKeyType",children:"enum : SpdrKeyType"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"913"}),(0,i.jsx)(r.td,{children:"mult4"}),(0,i.jsx)(r.td,{children:"ushort"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"916"}),(0,i.jsx)(r.td,{children:"side4"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"919"}),(0,i.jsx)(r.td,{children:"legId4"}),(0,i.jsx)(r.td,{children:"long"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"922"}),(0,i.jsx)(r.td,{children:"altLegId4"}),(0,i.jsx)(r.td,{children:"string(24)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"925"}),(0,i.jsx)(r.td,{children:"posType4"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/PositionType",children:"enum : PositionType"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"931"}),(0,i.jsx)(r.td,{children:"ssaleFlag4"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum : ShortSaleFlag"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"937"}),(0,i.jsx)(r.td,{children:"vega4"}),(0,i.jsx)(r.td,{children:"float"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"940"}),(0,i.jsx)(r.td,{children:"refUPrc4"}),(0,i.jsx)(r.td,{children:"double"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"943"}),(0,i.jsx)(r.td,{children:"refDelta4"}),(0,i.jsx)(r.td,{children:"float"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"946"}),(0,i.jsx)(r.td,{children:"refEarnCnt4"}),(0,i.jsx)(r.td,{children:"byte"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"949"}),(0,i.jsx)(r.td,{children:"secKey5"}),(0,i.jsx)(r.td,{children:"OptionKey"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"952"}),(0,i.jsx)(r.td,{children:"secType5"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/SpdrKeyType",children:"enum : SpdrKeyType"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"955"}),(0,i.jsx)(r.td,{children:"mult5"}),(0,i.jsx)(r.td,{children:"ushort"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"958"}),(0,i.jsx)(r.td,{children:"side5"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"961"}),(0,i.jsx)(r.td,{children:"legId5"}),(0,i.jsx)(r.td,{children:"long"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"964"}),(0,i.jsx)(r.td,{children:"altLegId5"}),(0,i.jsx)(r.td,{children:"string(24)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"967"}),(0,i.jsx)(r.td,{children:"posType5"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/PositionType",children:"enum : PositionType"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"973"}),(0,i.jsx)(r.td,{children:"ssaleFlag5"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum : ShortSaleFlag"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"979"}),(0,i.jsx)(r.td,{children:"vega5"}),(0,i.jsx)(r.td,{children:"float"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"982"}),(0,i.jsx)(r.td,{children:"refUPrc5"}),(0,i.jsx)(r.td,{children:"double"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"985"}),(0,i.jsx)(r.td,{children:"refDelta5"}),(0,i.jsx)(r.td,{children:"float"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"988"}),(0,i.jsx)(r.td,{children:"refEarnCnt5"}),(0,i.jsx)(r.td,{children:"byte"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"991"}),(0,i.jsx)(r.td,{children:"secKey6"}),(0,i.jsx)(r.td,{children:"OptionKey"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"994"}),(0,i.jsx)(r.td,{children:"secType6"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/SpdrKeyType",children:"enum : SpdrKeyType"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"997"}),(0,i.jsx)(r.td,{children:"mult6"}),(0,i.jsx)(r.td,{children:"ushort"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"1000"}),(0,i.jsx)(r.td,{children:"side6"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"1003"}),(0,i.jsx)(r.td,{children:"legId6"}),(0,i.jsx)(r.td,{children:"long"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"1006"}),(0,i.jsx)(r.td,{children:"altLegId6"}),(0,i.jsx)(r.td,{children:"string(24)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"1009"}),(0,i.jsx)(r.td,{children:"posType6"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/PositionType",children:"enum : PositionType"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"1015"}),(0,i.jsx)(r.td,{children:"ssaleFlag6"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum : ShortSaleFlag"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"1021"}),(0,i.jsx)(r.td,{children:"vega6"}),(0,i.jsx)(r.td,{children:"float"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"1024"}),(0,i.jsx)(r.td,{children:"refUPrc6"}),(0,i.jsx)(r.td,{children:"double"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"1027"}),(0,i.jsx)(r.td,{children:"refDelta6"}),(0,i.jsx)(r.td,{children:"float"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"1030"}),(0,i.jsx)(r.td,{children:"refEarnCnt6"}),(0,i.jsx)(r.td,{children:"byte"})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,i.jsxs)(s.A,{children:[(0,i.jsx)(n.A,{value:"Python",label:"Python",children:(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'SpdrParentOrder'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n#Required Parameters\n\"apiKey\": API_KEY,\n\"cmd\": 'getschema',\n\"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,i.jsx)(n.A,{value:"cUrl",label:"cUrl",children:(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=SpdrParentOrder'\n\n"})})})]}),"\n",(0,i.jsx)(r.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,i.jsxs)(s.A,{children:[(0,i.jsx)(n.A,{value:"Python",label:"Python",children:(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'SpdrParentOrder\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'sysEnvironment|runStatus|spdrActionType|parentShape|clientSeqNumIn|altOrderId|altPrevOrderId|altAutoHedgeId|altAccnt|altUserName|srcRoutingCode|packageId|secKey|secType|securityDesc|accnt|clientFirm|spdrSource|groupingCode|execBrkrCode|externExDest|externParams|strategy|userName|userSource|orderDttm|orderSide|orderSize|orderActiveSize|curCumFillQuantity|addCumFillQuantity|maxExposureSize|numMakeExchanges|publicSize|canOverlapCxlRepl|progressRule|blockVisibility|progressSliceCnt|progressExposeTime|vwapParticipation|minMktOnClosePct|triggerType|triggerLevel|auctionResponder|maxMakeExchFee|maxTakeExchFee|incTakeExchFee|incMakeExchFee|makeExchRule|cxlUPrcRange|minUBid|maxUAsk|minMaxType|minOptionPx|maxChildOrders|exchMask|spdrStageType|marketSession|startDttm|orderDuration|activeDuration|goodTillDttm|startType|triggerGroupId|triggerTimestamp|parentOrderHandling|parentBalanceHandling|orderLimitType|takeLimitClass|makeLimitClass|takeReachRule|orderPrcLimit|orderRefUPrc|orderRefDelta|orderRefGamma|orderVolLimit|rateOverride|sdivOverride|ddivOverride|overrideCode|orderPrcOffset|stateModel|uStateModel|takeAlphaType|makeAlphaType|takeAlphaFactor|makeAlphaFactor|takeProbability|makeProbability|takeSurfPrcOffset|takeSurfVolOffset|takeSurfWidthOffset|makeSurfPrcOffset|makeSurfVolOffset|makeSurfWidthOffset|orderRefEventMult|orderRefEventDttm|autoHedge|hedgeInstrument|hedgeSecKey|hedgeBetaRatio|hedgeScope|hedgeSession|externHedgeExDest|externHedgeParams|firmType|orderCapacity|positionType|ssaleFlag|locateFirm|locatePool|noCrossGroup|exchTraderId|largeTraderId|tradingLocation|leadSide|maxCompletionSlippage|orderRefPremium|auctionCappedAtNbbo|noticeNumber|theoVol|clArriveMark|riskGroupId|reqAuxRiskGroupCtrl|refRMetric1Src|refRMetric2Src|refRMetric3Src|refRMetric4Src|refRMetric5Src|refRMetric6Src|refRMetric7Src|orderRefRMetric1|orderRefRMetric2|orderRefRMetric3|orderRefRMetric4|orderRefRMetric5|orderRefRMetric6|orderRefRMetric7|expDayWtVegaOffset|maxExpDayWtVegaLn|maxExpDayWtVegaSh|maxExpDayRMetric6Ln|maxExpDayRMetric6Sh|symDayDDeltaOffset|maxSymDayDDeltaLn|maxSymDayDDeltaSh|symDayVegaOffset|maxSymDayVegaLn|maxSymDayVegaSh|symDayWtVegaOffset|maxSymDayWtVegaLn|maxSymDayWtVegaSh|maxSymDayRMetric7Ln|maxSymDayRMetric7Sh|maxGrpDayDDeltaLn|maxGrpDayDDeltaSh|maxGrpDayVegaLn|maxGrpDayVegaSh|maxGrpDayVegaAbs|grpDayVegaRatio|maxGrpDayContractsLn|maxGrpDayContractsSh|maxGrpDayContractsAbs|maxGrpDayRMetric1Ln|maxGrpDayRMetric1Sh|maxGrpDayRMetric1Abs|grpDayRMetric1Ratio|maxGrpDayRMetric2Ln|maxGrpDayRMetric2Sh|maxGrpDayRMetric3Ln|maxGrpDayRMetric3Sh|maxGrpDayRMetric4Ln|maxGrpDayRMetric4Sh|maxGrpDayRMetric5Ln|maxGrpDayRMetric5Sh|symEmaCxlDDeltaLn|symEmaCxlDDeltaSh|symEmaCxlWtVegaLn|symEmaCxlWtVegaSh|lastFillDttm|userData1|userData2|childData|srcTimestamp|sgwTimestamp|timestamp|includeSRNetwork\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'altOrderId:eq:ExampleString\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,i.jsx)(n.A,{value:"cUrl",label:"cUrl",children:(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=SpdrParentOrder' \\\n--data-urlencode 'view=sysEnvironment|runStatus|spdrActionType|parentShape|clientSeqNumIn|altOrderId|altPrevOrderId|altAutoHedgeId|altAccnt|altUserName|srcRoutingCode|packageId|secKey|secType|securityDesc|accnt|clientFirm|spdrSource|groupingCode|execBrkrCode|externExDest|externParams|strategy|userName|userSource|orderDttm|orderSide|orderSize|orderActiveSize|curCumFillQuantity|addCumFillQuantity|maxExposureSize|numMakeExchanges|publicSize|canOverlapCxlRepl|progressRule|blockVisibility|progressSliceCnt|progressExposeTime|vwapParticipation|minMktOnClosePct|triggerType|triggerLevel|auctionResponder|maxMakeExchFee|maxTakeExchFee|incTakeExchFee|incMakeExchFee|makeExchRule|cxlUPrcRange|minUBid|maxUAsk|minMaxType|minOptionPx|maxChildOrders|exchMask|spdrStageType|marketSession|startDttm|orderDuration|activeDuration|goodTillDttm|startType|triggerGroupId|triggerTimestamp|parentOrderHandling|parentBalanceHandling|orderLimitType|takeLimitClass|makeLimitClass|takeReachRule|orderPrcLimit|orderRefUPrc|orderRefDelta|orderRefGamma|orderVolLimit|rateOverride|sdivOverride|ddivOverride|overrideCode|orderPrcOffset|stateModel|uStateModel|takeAlphaType|makeAlphaType|takeAlphaFactor|makeAlphaFactor|takeProbability|makeProbability|takeSurfPrcOffset|takeSurfVolOffset|takeSurfWidthOffset|makeSurfPrcOffset|makeSurfVolOffset|makeSurfWidthOffset|orderRefEventMult|orderRefEventDttm|autoHedge|hedgeInstrument|hedgeSecKey|hedgeBetaRatio|hedgeScope|hedgeSession|externHedgeExDest|externHedgeParams|firmType|orderCapacity|positionType|ssaleFlag|locateFirm|locatePool|noCrossGroup|exchTraderId|largeTraderId|tradingLocation|leadSide|maxCompletionSlippage|orderRefPremium|auctionCappedAtNbbo|noticeNumber|theoVol|clArriveMark|riskGroupId|reqAuxRiskGroupCtrl|refRMetric1Src|refRMetric2Src|refRMetric3Src|refRMetric4Src|refRMetric5Src|refRMetric6Src|refRMetric7Src|orderRefRMetric1|orderRefRMetric2|orderRefRMetric3|orderRefRMetric4|orderRefRMetric5|orderRefRMetric6|orderRefRMetric7|expDayWtVegaOffset|maxExpDayWtVegaLn|maxExpDayWtVegaSh|maxExpDayRMetric6Ln|maxExpDayRMetric6Sh|symDayDDeltaOffset|maxSymDayDDeltaLn|maxSymDayDDeltaSh|symDayVegaOffset|maxSymDayVegaLn|maxSymDayVegaSh|symDayWtVegaOffset|maxSymDayWtVegaLn|maxSymDayWtVegaSh|maxSymDayRMetric7Ln|maxSymDayRMetric7Sh|maxGrpDayDDeltaLn|maxGrpDayDDeltaSh|maxGrpDayVegaLn|maxGrpDayVegaSh|maxGrpDayVegaAbs|grpDayVegaRatio|maxGrpDayContractsLn|maxGrpDayContractsSh|maxGrpDayContractsAbs|maxGrpDayRMetric1Ln|maxGrpDayRMetric1Sh|maxGrpDayRMetric1Abs|grpDayRMetric1Ratio|maxGrpDayRMetric2Ln|maxGrpDayRMetric2Sh|maxGrpDayRMetric3Ln|maxGrpDayRMetric3Sh|maxGrpDayRMetric4Ln|maxGrpDayRMetric4Sh|maxGrpDayRMetric5Ln|maxGrpDayRMetric5Sh|symEmaCxlDDeltaLn|symEmaCxlDDeltaSh|symEmaCxlWtVegaLn|symEmaCxlWtVegaSh|lastFillDttm|userData1|userData2|childData|srcTimestamp|sgwTimestamp|timestamp|includeSRNetwork' \\\n--data-urlencode 'where=altOrderId:eq:ExampleString'\n"})})})]}),"\n",(0,i.jsx)(r.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,i.jsxs)(s.A,{children:[(0,i.jsx)(n.A,{value:"Python",label:"Python",children:(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'SpdrParentOrder\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'sysEnvironment|runStatus|spdrActionType|parentShape|clientSeqNumIn|altOrderId|altPrevOrderId|altAutoHedgeId|altAccnt|altUserName|srcRoutingCode|packageId|secKey|secType|securityDesc|accnt|clientFirm|spdrSource|groupingCode|execBrkrCode|externExDest|externParams|strategy|userName|userSource|orderDttm|orderSide|orderSize|orderActiveSize|curCumFillQuantity|addCumFillQuantity|maxExposureSize|numMakeExchanges|publicSize|canOverlapCxlRepl|progressRule|blockVisibility|progressSliceCnt|progressExposeTime|vwapParticipation|minMktOnClosePct|triggerType|triggerLevel|auctionResponder|maxMakeExchFee|maxTakeExchFee|incTakeExchFee|incMakeExchFee|makeExchRule|cxlUPrcRange|minUBid|maxUAsk|minMaxType|minOptionPx|maxChildOrders|exchMask|spdrStageType|marketSession|startDttm|orderDuration|activeDuration|goodTillDttm|startType|triggerGroupId|triggerTimestamp|parentOrderHandling|parentBalanceHandling|orderLimitType|takeLimitClass|makeLimitClass|takeReachRule|orderPrcLimit|orderRefUPrc|orderRefDelta|orderRefGamma|orderVolLimit|rateOverride|sdivOverride|ddivOverride|overrideCode|orderPrcOffset|stateModel|uStateModel|takeAlphaType|makeAlphaType|takeAlphaFactor|makeAlphaFactor|takeProbability|makeProbability|takeSurfPrcOffset|takeSurfVolOffset|takeSurfWidthOffset|makeSurfPrcOffset|makeSurfVolOffset|makeSurfWidthOffset|orderRefEventMult|orderRefEventDttm|autoHedge|hedgeInstrument|hedgeSecKey|hedgeBetaRatio|hedgeScope|hedgeSession|externHedgeExDest|externHedgeParams|firmType|orderCapacity|positionType|ssaleFlag|locateFirm|locatePool|noCrossGroup|exchTraderId|largeTraderId|tradingLocation|leadSide|maxCompletionSlippage|orderRefPremium|auctionCappedAtNbbo|noticeNumber|theoVol|clArriveMark|riskGroupId|reqAuxRiskGroupCtrl|refRMetric1Src|refRMetric2Src|refRMetric3Src|refRMetric4Src|refRMetric5Src|refRMetric6Src|refRMetric7Src|orderRefRMetric1|orderRefRMetric2|orderRefRMetric3|orderRefRMetric4|orderRefRMetric5|orderRefRMetric6|orderRefRMetric7|expDayWtVegaOffset|maxExpDayWtVegaLn|maxExpDayWtVegaSh|maxExpDayRMetric6Ln|maxExpDayRMetric6Sh|symDayDDeltaOffset|maxSymDayDDeltaLn|maxSymDayDDeltaSh|symDayVegaOffset|maxSymDayVegaLn|maxSymDayVegaSh|symDayWtVegaOffset|maxSymDayWtVegaLn|maxSymDayWtVegaSh|maxSymDayRMetric7Ln|maxSymDayRMetric7Sh|maxGrpDayDDeltaLn|maxGrpDayDDeltaSh|maxGrpDayVegaLn|maxGrpDayVegaSh|maxGrpDayVegaAbs|grpDayVegaRatio|maxGrpDayContractsLn|maxGrpDayContractsSh|maxGrpDayContractsAbs|maxGrpDayRMetric1Ln|maxGrpDayRMetric1Sh|maxGrpDayRMetric1Abs|grpDayRMetric1Ratio|maxGrpDayRMetric2Ln|maxGrpDayRMetric2Sh|maxGrpDayRMetric3Ln|maxGrpDayRMetric3Sh|maxGrpDayRMetric4Ln|maxGrpDayRMetric4Sh|maxGrpDayRMetric5Ln|maxGrpDayRMetric5Sh|symEmaCxlDDeltaLn|symEmaCxlDDeltaSh|symEmaCxlWtVegaLn|symEmaCxlWtVegaSh|lastFillDttm|userData1|userData2|childData|srcTimestamp|sgwTimestamp|timestamp|includeSRNetwork\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'altOrderId:eq:ExampleString\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'sysEnvironment:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,i.jsx)(n.A,{value:"cUrl",label:"cUrl",children:(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=SpdrParentOrder' \\\n--data-urlencode 'view=sysEnvironment|runStatus|spdrActionType|parentShape|clientSeqNumIn|altOrderId|altPrevOrderId|altAutoHedgeId|altAccnt|altUserName|srcRoutingCode|packageId|secKey|secType|securityDesc|accnt|clientFirm|spdrSource|groupingCode|execBrkrCode|externExDest|externParams|strategy|userName|userSource|orderDttm|orderSide|orderSize|orderActiveSize|curCumFillQuantity|addCumFillQuantity|maxExposureSize|numMakeExchanges|publicSize|canOverlapCxlRepl|progressRule|blockVisibility|progressSliceCnt|progressExposeTime|vwapParticipation|minMktOnClosePct|triggerType|triggerLevel|auctionResponder|maxMakeExchFee|maxTakeExchFee|incTakeExchFee|incMakeExchFee|makeExchRule|cxlUPrcRange|minUBid|maxUAsk|minMaxType|minOptionPx|maxChildOrders|exchMask|spdrStageType|marketSession|startDttm|orderDuration|activeDuration|goodTillDttm|startType|triggerGroupId|triggerTimestamp|parentOrderHandling|parentBalanceHandling|orderLimitType|takeLimitClass|makeLimitClass|takeReachRule|orderPrcLimit|orderRefUPrc|orderRefDelta|orderRefGamma|orderVolLimit|rateOverride|sdivOverride|ddivOverride|overrideCode|orderPrcOffset|stateModel|uStateModel|takeAlphaType|makeAlphaType|takeAlphaFactor|makeAlphaFactor|takeProbability|makeProbability|takeSurfPrcOffset|takeSurfVolOffset|takeSurfWidthOffset|makeSurfPrcOffset|makeSurfVolOffset|makeSurfWidthOffset|orderRefEventMult|orderRefEventDttm|autoHedge|hedgeInstrument|hedgeSecKey|hedgeBetaRatio|hedgeScope|hedgeSession|externHedgeExDest|externHedgeParams|firmType|orderCapacity|positionType|ssaleFlag|locateFirm|locatePool|noCrossGroup|exchTraderId|largeTraderId|tradingLocation|leadSide|maxCompletionSlippage|orderRefPremium|auctionCappedAtNbbo|noticeNumber|theoVol|clArriveMark|riskGroupId|reqAuxRiskGroupCtrl|refRMetric1Src|refRMetric2Src|refRMetric3Src|refRMetric4Src|refRMetric5Src|refRMetric6Src|refRMetric7Src|orderRefRMetric1|orderRefRMetric2|orderRefRMetric3|orderRefRMetric4|orderRefRMetric5|orderRefRMetric6|orderRefRMetric7|expDayWtVegaOffset|maxExpDayWtVegaLn|maxExpDayWtVegaSh|maxExpDayRMetric6Ln|maxExpDayRMetric6Sh|symDayDDeltaOffset|maxSymDayDDeltaLn|maxSymDayDDeltaSh|symDayVegaOffset|maxSymDayVegaLn|maxSymDayVegaSh|symDayWtVegaOffset|maxSymDayWtVegaLn|maxSymDayWtVegaSh|maxSymDayRMetric7Ln|maxSymDayRMetric7Sh|maxGrpDayDDeltaLn|maxGrpDayDDeltaSh|maxGrpDayVegaLn|maxGrpDayVegaSh|maxGrpDayVegaAbs|grpDayVegaRatio|maxGrpDayContractsLn|maxGrpDayContractsSh|maxGrpDayContractsAbs|maxGrpDayRMetric1Ln|maxGrpDayRMetric1Sh|maxGrpDayRMetric1Abs|grpDayRMetric1Ratio|maxGrpDayRMetric2Ln|maxGrpDayRMetric2Sh|maxGrpDayRMetric3Ln|maxGrpDayRMetric3Sh|maxGrpDayRMetric4Ln|maxGrpDayRMetric4Sh|maxGrpDayRMetric5Ln|maxGrpDayRMetric5Sh|symEmaCxlDDeltaLn|symEmaCxlDDeltaSh|symEmaCxlWtVegaLn|symEmaCxlWtVegaSh|lastFillDttm|userData1|userData2|childData|srcTimestamp|sgwTimestamp|timestamp|includeSRNetwork' \\\n--data-urlencode 'where=altOrderId:eq:ExampleString' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=sysEnvironment:ASC'\n"})})})]}),"\n",(0,i.jsx)(r.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,i.jsxs)(s.A,{children:[(0,i.jsx)(n.A,{value:"Python",label:"Python",children:(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'SpdrParentOrder\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'sysEnvironment|runStatus|spdrActionType|parentShape|clientSeqNumIn|altOrderId|altPrevOrderId|altAutoHedgeId|altAccnt|altUserName|srcRoutingCode|packageId|secKey|secType|securityDesc|accnt|clientFirm|spdrSource|groupingCode|execBrkrCode|externExDest|externParams|strategy|userName|userSource|orderDttm|orderSide|orderSize|orderActiveSize|curCumFillQuantity|addCumFillQuantity|maxExposureSize|numMakeExchanges|publicSize|canOverlapCxlRepl|progressRule|blockVisibility|progressSliceCnt|progressExposeTime|vwapParticipation|minMktOnClosePct|triggerType|triggerLevel|auctionResponder|maxMakeExchFee|maxTakeExchFee|incTakeExchFee|incMakeExchFee|makeExchRule|cxlUPrcRange|minUBid|maxUAsk|minMaxType|minOptionPx|maxChildOrders|exchMask|spdrStageType|marketSession|startDttm|orderDuration|activeDuration|goodTillDttm|startType|triggerGroupId|triggerTimestamp|parentOrderHandling|parentBalanceHandling|orderLimitType|takeLimitClass|makeLimitClass|takeReachRule|orderPrcLimit|orderRefUPrc|orderRefDelta|orderRefGamma|orderVolLimit|rateOverride|sdivOverride|ddivOverride|overrideCode|orderPrcOffset|stateModel|uStateModel|takeAlphaType|makeAlphaType|takeAlphaFactor|makeAlphaFactor|takeProbability|makeProbability|takeSurfPrcOffset|takeSurfVolOffset|takeSurfWidthOffset|makeSurfPrcOffset|makeSurfVolOffset|makeSurfWidthOffset|orderRefEventMult|orderRefEventDttm|autoHedge|hedgeInstrument|hedgeSecKey|hedgeBetaRatio|hedgeScope|hedgeSession|externHedgeExDest|externHedgeParams|firmType|orderCapacity|positionType|ssaleFlag|locateFirm|locatePool|noCrossGroup|exchTraderId|largeTraderId|tradingLocation|leadSide|maxCompletionSlippage|orderRefPremium|auctionCappedAtNbbo|noticeNumber|theoVol|clArriveMark|riskGroupId|reqAuxRiskGroupCtrl|refRMetric1Src|refRMetric2Src|refRMetric3Src|refRMetric4Src|refRMetric5Src|refRMetric6Src|refRMetric7Src|orderRefRMetric1|orderRefRMetric2|orderRefRMetric3|orderRefRMetric4|orderRefRMetric5|orderRefRMetric6|orderRefRMetric7|expDayWtVegaOffset|maxExpDayWtVegaLn|maxExpDayWtVegaSh|maxExpDayRMetric6Ln|maxExpDayRMetric6Sh|symDayDDeltaOffset|maxSymDayDDeltaLn|maxSymDayDDeltaSh|symDayVegaOffset|maxSymDayVegaLn|maxSymDayVegaSh|symDayWtVegaOffset|maxSymDayWtVegaLn|maxSymDayWtVegaSh|maxSymDayRMetric7Ln|maxSymDayRMetric7Sh|maxGrpDayDDeltaLn|maxGrpDayDDeltaSh|maxGrpDayVegaLn|maxGrpDayVegaSh|maxGrpDayVegaAbs|grpDayVegaRatio|maxGrpDayContractsLn|maxGrpDayContractsSh|maxGrpDayContractsAbs|maxGrpDayRMetric1Ln|maxGrpDayRMetric1Sh|maxGrpDayRMetric1Abs|grpDayRMetric1Ratio|maxGrpDayRMetric2Ln|maxGrpDayRMetric2Sh|maxGrpDayRMetric3Ln|maxGrpDayRMetric3Sh|maxGrpDayRMetric4Ln|maxGrpDayRMetric4Sh|maxGrpDayRMetric5Ln|maxGrpDayRMetric5Sh|symEmaCxlDDeltaLn|symEmaCxlDDeltaSh|symEmaCxlWtVegaLn|symEmaCxlWtVegaSh|lastFillDttm|userData1|userData2|childData|srcTimestamp|sgwTimestamp|timestamp|includeSRNetwork\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'sysEnvironment|runStatus|spdrActionType|parentShape|secType|spdrSource|userSource|orderSide|addCumFillQuantity|publicSize|canOverlapCxlRepl|progressRule|blockVisibility|triggerType|auctionResponder|incTakeExchFee|incMakeExchFee|makeExchRule|cxlUPrcRange|minMaxType|spdrStageType|marketSession|startType|parentOrderHandling|parentBalanceHandling|orderLimitType|takeLimitClass|makeLimitClass|takeReachRule|overrideCode|stateModel|uStateModel|takeAlphaType|makeAlphaType|autoHedge|hedgeInstrument|hedgeScope|hedgeSession|firmType|orderCapacity|positionType|ssaleFlag|leadSide|auctionCappedAtNbbo|reqAuxRiskGroupCtrl|refRMetric1Src|refRMetric2Src|refRMetric3Src|refRMetric4Src|refRMetric5Src|refRMetric6Src|refRMetric7Src|includeSRNetwork\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'altOrderId:eq:ExampleString\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getaggregate\',\n"msgType": MSG_TYPE,\n"measure": MEASURE,\n"group": GROUP,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,i.jsx)(n.A,{value:"cUrl",label:"cUrl",children:(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=SpdrParentOrder' \\\n--data-urlencode 'measure=sysEnvironment|runStatus|spdrActionType|parentShape|clientSeqNumIn|altOrderId|altPrevOrderId|altAutoHedgeId|altAccnt|altUserName|srcRoutingCode|packageId|secKey|secType|securityDesc|accnt|clientFirm|spdrSource|groupingCode|execBrkrCode|externExDest|externParams|strategy|userName|userSource|orderDttm|orderSide|orderSize|orderActiveSize|curCumFillQuantity|addCumFillQuantity|maxExposureSize|numMakeExchanges|publicSize|canOverlapCxlRepl|progressRule|blockVisibility|progressSliceCnt|progressExposeTime|vwapParticipation|minMktOnClosePct|triggerType|triggerLevel|auctionResponder|maxMakeExchFee|maxTakeExchFee|incTakeExchFee|incMakeExchFee|makeExchRule|cxlUPrcRange|minUBid|maxUAsk|minMaxType|minOptionPx|maxChildOrders|exchMask|spdrStageType|marketSession|startDttm|orderDuration|activeDuration|goodTillDttm|startType|triggerGroupId|triggerTimestamp|parentOrderHandling|parentBalanceHandling|orderLimitType|takeLimitClass|makeLimitClass|takeReachRule|orderPrcLimit|orderRefUPrc|orderRefDelta|orderRefGamma|orderVolLimit|rateOverride|sdivOverride|ddivOverride|overrideCode|orderPrcOffset|stateModel|uStateModel|takeAlphaType|makeAlphaType|takeAlphaFactor|makeAlphaFactor|takeProbability|makeProbability|takeSurfPrcOffset|takeSurfVolOffset|takeSurfWidthOffset|makeSurfPrcOffset|makeSurfVolOffset|makeSurfWidthOffset|orderRefEventMult|orderRefEventDttm|autoHedge|hedgeInstrument|hedgeSecKey|hedgeBetaRatio|hedgeScope|hedgeSession|externHedgeExDest|externHedgeParams|firmType|orderCapacity|positionType|ssaleFlag|locateFirm|locatePool|noCrossGroup|exchTraderId|largeTraderId|tradingLocation|leadSide|maxCompletionSlippage|orderRefPremium|auctionCappedAtNbbo|noticeNumber|theoVol|clArriveMark|riskGroupId|reqAuxRiskGroupCtrl|refRMetric1Src|refRMetric2Src|refRMetric3Src|refRMetric4Src|refRMetric5Src|refRMetric6Src|refRMetric7Src|orderRefRMetric1|orderRefRMetric2|orderRefRMetric3|orderRefRMetric4|orderRefRMetric5|orderRefRMetric6|orderRefRMetric7|expDayWtVegaOffset|maxExpDayWtVegaLn|maxExpDayWtVegaSh|maxExpDayRMetric6Ln|maxExpDayRMetric6Sh|symDayDDeltaOffset|maxSymDayDDeltaLn|maxSymDayDDeltaSh|symDayVegaOffset|maxSymDayVegaLn|maxSymDayVegaSh|symDayWtVegaOffset|maxSymDayWtVegaLn|maxSymDayWtVegaSh|maxSymDayRMetric7Ln|maxSymDayRMetric7Sh|maxGrpDayDDeltaLn|maxGrpDayDDeltaSh|maxGrpDayVegaLn|maxGrpDayVegaSh|maxGrpDayVegaAbs|grpDayVegaRatio|maxGrpDayContractsLn|maxGrpDayContractsSh|maxGrpDayContractsAbs|maxGrpDayRMetric1Ln|maxGrpDayRMetric1Sh|maxGrpDayRMetric1Abs|grpDayRMetric1Ratio|maxGrpDayRMetric2Ln|maxGrpDayRMetric2Sh|maxGrpDayRMetric3Ln|maxGrpDayRMetric3Sh|maxGrpDayRMetric4Ln|maxGrpDayRMetric4Sh|maxGrpDayRMetric5Ln|maxGrpDayRMetric5Sh|symEmaCxlDDeltaLn|symEmaCxlDDeltaSh|symEmaCxlWtVegaLn|symEmaCxlWtVegaSh|lastFillDttm|userData1|userData2|childData|srcTimestamp|sgwTimestamp|timestamp|includeSRNetwork' \\\n--data-urlencode 'group=sysEnvironment|runStatus|spdrActionType|parentShape|secType|spdrSource|userSource|orderSide|addCumFillQuantity|publicSize|canOverlapCxlRepl|progressRule|blockVisibility|triggerType|auctionResponder|incTakeExchFee|incMakeExchFee|makeExchRule|cxlUPrcRange|minMaxType|spdrStageType|marketSession|startType|parentOrderHandling|parentBalanceHandling|orderLimitType|takeLimitClass|makeLimitClass|takeReachRule|overrideCode|stateModel|uStateModel|takeAlphaType|makeAlphaType|autoHedge|hedgeInstrument|hedgeScope|hedgeSession|firmType|orderCapacity|positionType|ssaleFlag|leadSide|auctionCappedAtNbbo|reqAuxRiskGroupCtrl|refRMetric1Src|refRMetric2Src|refRMetric3Src|refRMetric4Src|refRMetric5Src|refRMetric6Src|refRMetric7Src|includeSRNetwork' \\\n--data-urlencode 'where=altOrderId:eq:ExampleString'\n"})})})]}),"\n",(0,i.jsx)(r.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,i.jsxs)(s.A,{children:[(0,i.jsx)(n.A,{value:"Python",label:"Python",children:(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'SpdrParentOrder\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'altOrderId:eq:ExampleString\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,i.jsx)(n.A,{value:"cUrl",label:"cUrl",children:(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=SpdrParentOrder' \\\n--data-urlencode 'where=altOrderId:eq:ExampleString'\n"})})})]})]})}function m(e={}){const{wrapper:r}={...(0,d.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(x,{...e})}):x(e)}},19365:(e,r,t)=>{t.d(r,{A:()=>n});t(96540);var i=t(34164);const d={tabItem:"tabItem_Ymn6"};var s=t(74848);function n(e){let{children:r,hidden:t,className:n}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,i.A)(d.tabItem,n),hidden:t,children:r})}},11470:(e,r,t)=>{t.d(r,{A:()=>D});var i=t(96540),d=t(34164),s=t(23104),n=t(56347),a=t(205),l=t(57485),c=t(31682),h=t(70679);function o(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function x(e){const{values:r,children:t}=e;return(0,i.useMemo)((()=>{const e=r??function(e){return o(e).map((e=>{let{props:{value:r,label:t,attributes:i,default:d}}=e;return{value:r,label:t,attributes:i,default:d}}))}(t);return function(e){const r=(0,c.X)(e,((e,r)=>e.value===r.value));if(r.length>0)throw new Error(`Docusaurus error: Duplicate values "${r.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[r,t])}function m(e){let{value:r,tabValues:t}=e;return t.some((e=>e.value===r))}function j(e){let{queryString:r=!1,groupId:t}=e;const d=(0,n.W6)(),s=function(e){let{queryString:r=!1,groupId:t}=e;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:r,groupId:t});return[(0,l.aZ)(s),(0,i.useCallback)((e=>{if(!s)return;const r=new URLSearchParams(d.location.search);r.set(s,e),d.replace({...d.location,search:r.toString()})}),[s,d])]}function u(e){const{defaultValue:r,queryString:t=!1,groupId:d}=e,s=x(e),[n,l]=(0,i.useState)((()=>function(e){let{defaultValue:r,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!m({value:r,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${r}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return r}const i=t.find((e=>e.default))??t[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:r,tabValues:s}))),[c,o]=j({queryString:t,groupId:d}),[u,p]=function(e){let{groupId:r}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(r),[d,s]=(0,h.Dv)(t);return[d,(0,i.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:d}),y=(()=>{const e=c??u;return m({value:e,tabValues:s})?e:null})();(0,a.A)((()=>{y&&l(y)}),[y]);return{selectedValue:n,selectValue:(0,i.useCallback)((e=>{if(!m({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),o(e),p(e)}),[o,p,s]),tabValues:s}}var p=t(92303);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=t(74848);function f(e){let{className:r,block:t,selectedValue:i,selectValue:n,tabValues:a}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),h=e=>{const r=e.currentTarget,t=l.indexOf(r),d=a[t].value;d!==i&&(c(r),n(d))},o=e=>{let r=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;r=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;r=l[t]??l[l.length-1];break}}r?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,d.A)("tabs",{"tabs--block":t},r),children:a.map((e=>{let{value:r,label:t,attributes:s}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:i===r?0:-1,"aria-selected":i===r,ref:e=>l.push(e),onKeyDown:o,onClick:h,...s,className:(0,d.A)("tabs__item",y.tabItem,s?.className,{"tabs__item--active":i===r}),children:t??r},r)}))})}function S(e){let{lazy:r,children:t,selectedValue:d}=e;const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(r){const e=s.find((e=>e.props.value===d));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:s.map(((e,r)=>(0,i.cloneElement)(e,{key:r,hidden:e.props.value!==d})))})}function R(e){const r=u(e);return(0,g.jsxs)("div",{className:(0,d.A)("tabs-container",y.tabList),children:[(0,g.jsx)(f,{...r,...e}),(0,g.jsx)(S,{...r,...e})]})}function D(e){const r=(0,p.A)();return(0,g.jsx)(R,{...e,children:o(e.children)},String(r))}},28453:(e,r,t)=>{t.d(r,{R:()=>n,x:()=>a});var i=t(96540);const d={},s=i.createContext(d);function n(e){const r=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:n(e.components),i.createElement(s.Provider,{value:r},e.children)}}}]);