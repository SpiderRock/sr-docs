"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[89920],{65670:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>c,frontMatter:()=>N,metadata:()=>T,toc:()=>E});var i=n(74848),r=n(28453);const N={title:"FuturePrintSet"},s=void 0,T={id:"MessageSchemas/Schema/SRSE Products/SRAnalytics/FuturePrintSet/FuturePrintSet",title:"FuturePrintSet",description:"V8 Message Definition",source:"@site/docs/MessageSchemas/Schema/SRSE Products/SRAnalytics/FuturePrintSet/FuturePrintSet.md",sourceDirName:"MessageSchemas/Schema/SRSE Products/SRAnalytics/FuturePrintSet",slug:"/MessageSchemas/Schema/SRSE Products/SRAnalytics/FuturePrintSet/",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRAnalytics/FuturePrintSet/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"FuturePrintSet"},sidebar:"messageSchemasSidebar",previous:{title:"FuturePrintProbability",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRAnalytics/FuturePrintProbability/"},next:{title:"FutureQuoteProbability",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRAnalytics/FutureQuoteProbability/"}},a={},E=[];function L(e){const t={a:"a",code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"../../../Topics/market-data-futures/FuturePrintSet",children:"V8 Message Definition"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-sql",children:"CREATE TABLE `SRAnalytics`.`MsgFuturePrintSet` (\n    `fkey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None',\n    `fkey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None',\n    `fkey_tk` VARCHAR(12) NOT NULL DEFAULT '',\n    `fkey_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0,\n    `fkey_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0,\n    `fkey_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0,\n    `prtNumber` BIGINT NOT NULL DEFAULT 0 COMMENT 'Unique print set identifier; will increment but not guaranteed to be sequential.',\n    `ticker_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'underlying stock key',\n    `ticker_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'underlying stock key',\n    `ticker_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'underlying stock key',\n    `prtExch` ENUM('None','CFE','CME','CBOT','COMEX','NYMEX','ICE','EUREX','CEDX','NXAM','NXBR','NXLS','NXML','NXOS','NXP','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'print exchange',\n    `prtSize` INT NOT NULL DEFAULT 0 COMMENT 'print size [contracts]',\n    `prtPrice` DOUBLE NOT NULL DEFAULT 0 COMMENT 'print price',\n    `prtType` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'print type [exchange specific]',\n    `prtOrders` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'number of orders participating in this print',\n    `prtClusterNum` INT NOT NULL DEFAULT 0 COMMENT 'incremental print cluster counter (one counter per fkey; used to group prints into clusters)',\n    `prtClusterSize` INT NOT NULL DEFAULT 0 COMMENT 'cumulative size of prints in this sequence (prints @ same or more aggressive price with less than 25 ms elapsing since first print; can span exchanges)',\n    `prtVolume` INT NOT NULL DEFAULT 0 COMMENT 'cumulative day (electronic) print volume in contracts',\n    `prtSide` ENUM('None','Mid','Bid','Ask') NOT NULL DEFAULT 'None' COMMENT 'Print side: None; Mid; Bid; Ask',\n    `prtTimestamp` BIGINT NOT NULL DEFAULT 0 COMMENT 'exchange high precision timestamp (if available)',\n    `netTimestamp` BIGINT NOT NULL DEFAULT 0 COMMENT 'inbound packet PTP timestamp from SR gateway switch;usually syncronized with facility grandfather clock',\n    `timestamp` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000',\n    `bidPrice` DOUBLE NOT NULL DEFAULT 0 COMMENT 'exch best bid @ print arrival time',\n    `askPrice` DOUBLE NOT NULL DEFAULT 0 COMMENT 'exch best ask @ print arrival time',\n    `bidSize` INT NOT NULL DEFAULT 0 COMMENT 'bid size @ print arrival time',\n    `askSize` INT NOT NULL DEFAULT 0 COMMENT 'ask size @ print arrival time',\n    `bidPrice2` DOUBLE NOT NULL DEFAULT 0 COMMENT 'exch 2nd best bid @ print arrival time',\n    `askPrice2` DOUBLE NOT NULL DEFAULT 0 COMMENT 'exch 2nd best ask @ print arrival time',\n    `bidSize2` INT NOT NULL DEFAULT 0 COMMENT '2nd best bid @ print arrival time',\n    `askSize2` INT NOT NULL DEFAULT 0 COMMENT '2nd best ask @ print arrival time',\n    `prtProbability` FLOAT NOT NULL DEFAULT 0 COMMENT '[M1] probability that buying prtQuan contracts @ prtPrice will have positive m1 pnl (prtPriceM1 >= prtPrice) [recorded at time of print]',\n    `prtProbabilityM2` FLOAT NOT NULL DEFAULT 0 COMMENT 'alternate probability model',\n    `prtProbabilityM3` FLOAT NOT NULL DEFAULT 0 COMMENT 'alternate probability model',\n    `bidPriceM1` DOUBLE NOT NULL DEFAULT 0 COMMENT 'bid price +1 minute',\n    `askPriceM1` DOUBLE NOT NULL DEFAULT 0 COMMENT 'ask price +1 minute',\n    `prtPriceM1` DOUBLE NOT NULL DEFAULT 0 COMMENT 'market price +1 minute [mid-quote if not intervening prints;most recent print otherwise]',\n    `pnlM1` FLOAT NOT NULL DEFAULT 0 COMMENT 'pnl after 1 minute',\n    `pnlM1Err` ENUM('None','Yes','No') NOT NULL DEFAULT 'None',\n    `bidPriceM10` DOUBLE NOT NULL DEFAULT 0 COMMENT 'bid price +10 minutes',\n    `askPriceM10` DOUBLE NOT NULL DEFAULT 0 COMMENT 'bid price +10 minutes',\n    `prtPriceM10` DOUBLE NOT NULL DEFAULT 0 COMMENT 'market price +10 minutes [most recent print (if any) otherwise mid-quote]',\n    `pnlM10` FLOAT NOT NULL DEFAULT 0 COMMENT 'pnl after 10 minutes',\n    `pnlM10Err` ENUM('None','Yes','No') NOT NULL DEFAULT 'None',\n    PRIMARY KEY USING HASH (`fkey_tk`,`fkey_yr`,`fkey_mn`,`fkey_dy`,`fkey_at`,`fkey_ts`)\n) ENGINE=SRSE DEFAULT CHARSET=LATIN1 COMMENT='FuturePrintSet records are created for all future prints (outrights and spreads) and published to the SpiderRock elastic cluster when markup detail is complete (F+10M)';\n\n"})})]})}function c(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(L,{...e})}):L(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>T});var i=n(96540);const r={},N=i.createContext(r);function s(e){const t=i.useContext(N);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function T(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(N.Provider,{value:t},e.children)}}}]);