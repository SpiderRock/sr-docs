"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[79420],{98805:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>o,frontMatter:()=>l,metadata:()=>s,toc:()=>a});var r=t(74848),i=t(28453);const l={},d=void 0,s={id:"MessageSchemas/Schema/SRSE Products/SRTrade/ParentOrderGatewayExt/ParentOrderGatewayExt",title:"ParentOrderGatewayExt",description:"V8 Message Definiton",source:"@site/versioned_docs/version-8.4.10.2/MessageSchemas/Schema/SRSE Products/SRTrade/ParentOrderGatewayExt/ParentOrderGatewayExt.md",sourceDirName:"MessageSchemas/Schema/SRSE Products/SRTrade/ParentOrderGatewayExt",slug:"/MessageSchemas/Schema/SRSE Products/SRTrade/ParentOrderGatewayExt/",permalink:"/docs/8.4.10.2/MessageSchemas/Schema/SRSE Products/SRTrade/ParentOrderGatewayExt/",draft:!1,unlisted:!1,tags:[],version:"8.4.10.2",frontMatter:{},sidebar:"messageSchemasSidebar",previous:{title:"ParentOrderGateway",permalink:"/docs/8.4.10.2/MessageSchemas/Schema/SRSE Products/SRTrade/ParentOrderGateway/"},next:{title:"ResponderMarkupBX",permalink:"/docs/8.4.10.2/MessageSchemas/Schema/SRSE Products/SRTrade/ResponderMarkupBX/"}},c={},a=[{value:"METADATA",id:"metadata",level:3},{value:"Table Definition",id:"table-definition",level:3},{value:"PRIMARY KEY DEFINITION (Unique)",id:"primary-key-definition-unique",level:3},{value:"CREATE TABLE EXAMPLE QUERY",id:"create-table-example-query",level:3},{value:"SELECT TABLE EXAMPLE QUERY",id:"select-table-example-query",level:3},{value:"INSERT TABLE EXAMPLE QUERY",id:"insert-table-example-query",level:3},{value:"DELETE TABLE EXAMPLE QUERY",id:"delete-table-example-query",level:3},{value:"Doc Columns Query",id:"doc-columns-query",level:3}];function x(e){const n={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"../../../Topics/srse-gateway/ParentOrderGatewayExt",children:"V8 Message Definiton"})}),"\n",(0,r.jsx)(n.p,{children:"Records inserted, updated, or replaced into the ParentOrderGatewayExt table are validated and then converted to SpdrParentOrder records and forwarded to the appropriate execution engine for futher processing.  Parent orders can be inserted as either active/ready or in a wait start mode that requires subsequent release.\\nSee the SpiderRock Execution Engine concept guide for more details."}),"\n",(0,r.jsx)(n.h3,{id:"metadata",children:"METADATA"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Attribute"}),(0,r.jsx)(n.th,{children:"Value"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Topic"}),(0,r.jsx)(n.td,{children:"5120-srse-gateway"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"MLink Token"}),(0,r.jsx)(n.td,{children:"Internal"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Product"}),(0,r.jsx)(n.td,{children:"SRTrade"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"accessType"}),(0,r.jsx)(n.td,{children:"SELECT,UPDATE(spdrActionType),INSERT,DELETE"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"table-definition",children:"Table Definition"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Field"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Key"}),(0,r.jsx)(n.th,{children:"Default Value"}),(0,r.jsx)(n.th,{children:"Comment"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"secKey_at"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,r.jsx)(n.td,{children:"PRI"}),(0,r.jsx)(n.td,{children:"'EQT'"}),(0,r.jsx)(n.td,{children:"SR SecKey"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"secKey_ts"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,r.jsx)(n.td,{children:"PRI"}),(0,r.jsx)(n.td,{children:"'NMS'"}),(0,r.jsx)(n.td,{children:"SR SecKey"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"secKey_tk"}),(0,r.jsx)(n.td,{children:"VARCHAR(12)"}),(0,r.jsx)(n.td,{children:"PRI"}),(0,r.jsx)(n.td,{children:"''"}),(0,r.jsx)(n.td,{children:"SR SecKey"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"secKey_yr"}),(0,r.jsx)(n.td,{children:"SMALLINT UNSIGNED"}),(0,r.jsx)(n.td,{children:"PRI"}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"SR SecKey"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"secKey_mn"}),(0,r.jsx)(n.td,{children:"TINYINT UNSIGNED"}),(0,r.jsx)(n.td,{children:"PRI"}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"SR SecKey"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"secKey_dy"}),(0,r.jsx)(n.td,{children:"TINYINT UNSIGNED"}),(0,r.jsx)(n.td,{children:"PRI"}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"SR SecKey"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"secKey_xx"}),(0,r.jsx)(n.td,{children:"DOUBLE"}),(0,r.jsx)(n.td,{children:"PRI"}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"SR SecKey"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"secKey_cp"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/CallPut",children:"enum - CallPut"})}),(0,r.jsx)(n.td,{children:"PRI"}),(0,r.jsx)(n.td,{children:"'Call'"}),(0,r.jsx)(n.td,{children:"SR SecKey"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"secType"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/SpdrKeyType",children:"enum - SpdrKeyType"})}),(0,r.jsx)(n.td,{children:"PRI"}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{children:"SR SecKeyType Stock Future or Option"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"accnt"}),(0,r.jsx)(n.td,{children:"VARCHAR(16)"}),(0,r.jsx)(n.td,{children:"PRI"}),(0,r.jsx)(n.td,{children:"''"}),(0,r.jsx)(n.td,{children:"SR Account default  primary account associated with SRSE login"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"orderSide"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/BuySell",children:"enum - BuySell"})}),(0,r.jsx)(n.td,{children:"PRI"}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{children:"Parent Order Size"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"groupingCode"}),(0,r.jsx)(n.td,{children:"CHAR(19)"}),(0,r.jsx)(n.td,{children:"PRI"}),(0,r.jsx)(n.td,{children:"'0000-0000-0000-0000'"}),(0,r.jsx)(n.td,{children:"Parent Grouping Code"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"clientFirm"}),(0,r.jsx)(n.td,{children:"VARCHAR(16)"}),(0,r.jsx)(n.td,{children:"PRI"}),(0,r.jsx)(n.td,{children:"''"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"spdrActionType"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/SpdrActionType",children:"enum - SpdrActionType"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'Add'"}),(0,r.jsx)(n.td,{children:"Add new order AddReplace add or replace order Cancel cxl existing Replace update existing only Release modify order active size"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"altOrderId"}),(0,r.jsx)(n.td,{children:"VARCHAR(24)"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"''"}),(0,r.jsx)(n.td,{children:"Alternate client order ID  This order ID will be copied to all execution reports"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"altAutoHedgeId"}),(0,r.jsx)(n.td,{children:"VARCHAR(24)"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"''"}),(0,r.jsx)(n.td,{children:"alternate order ID for child autohedge orders if any"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"altAccnt"}),(0,r.jsx)(n.td,{children:"VARCHAR(32)"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"''"}),(0,r.jsx)(n.td,{children:"alternate client assigned long account string optional used to map between client and SR account strings"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"altUserName"}),(0,r.jsx)(n.td,{children:"VARCHAR(24)"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"''"}),(0,r.jsx)(n.td,{children:"alternate client assigned user name optional used to map between client and SR account strings"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"accntRouteCode"}),(0,r.jsx)(n.td,{children:"TINYTEXT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"''"}),(0,r.jsx)(n.td,{children:"accntRoute acronym"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"execBrkrCode"}),(0,r.jsx)(n.td,{children:"VARCHAR(16)"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"''"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"externExDest"}),(0,r.jsx)(n.td,{children:"VARCHAR(16)"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"''"}),(0,r.jsx)(n.td,{children:"routing code for orders directed to an external order router default  null should match FixRoutingTabledestination in SR accnt config"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"externParams"}),(0,r.jsx)(n.td,{children:"TINYTEXT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"''"}),(0,r.jsx)(n.td,{children:"external algo namesparameters usually just an algo name"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"strategy"}),(0,r.jsx)(n.td,{children:"VARCHAR(36)"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"''"}),(0,r.jsx)(n.td,{children:"Client strategy string  This value will appear on the SR Trade Monitor and in execution reports"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"securityDesc"}),(0,r.jsx)(n.td,{children:"TINYTEXT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"''"}),(0,r.jsx)(n.td,{children:"additional security description"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"orderDttm"}),(0,r.jsx)(n.td,{children:"DATETIME(6)"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'1900-01-01 00:00:00.000000'"}),(0,r.jsx)(n.td,{children:"order entry time from clientif any"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"orderSize"}),(0,r.jsx)(n.td,{children:"INT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"parent order size contracts 1  no changeused when spdrActionTypeRelease"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"orderActiveSize"}),(0,r.jsx)(n.td,{children:"INT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"total activated size total size released for execution 1  all available size"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"curCumFillQuantity"}),(0,r.jsx)(n.td,{children:"INT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"set order size  orderSize  Max0 curCumFillQty  eecumFillQty used to ensure integrity of submitted cxlreplace orders"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"addCumFillQuantity"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum - YesNo"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'No'"}),(0,r.jsx)(n.td,{children:"If Yes then OrderSize is calculated  order arrival as requested OrderSize  existing CumFillQuantity"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"exchMask"}),(0,r.jsx)(n.td,{children:"INT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"eligible exchanges 0  all"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxExposureSize"}),(0,r.jsx)(n.td,{children:"INT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"maximum simultaneous cumulative child order public size exposure 1  orderActiveSize order can overfill if  orderActiveSize and numMakeExchanges  1"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"numMakeExchanges"}),(0,r.jsx)(n.td,{children:"TINYINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"1"}),(0,r.jsx)(n.td,{children:"number of exchanges 1  4 on which to publish public making orders  Effective number might be less than requested number if sufficient exchanges are not available"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"publicSize"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/PublicSizeHandling",children:"enum - PublicSizeHandling"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{children:"public order size handling Noneuse default size handling usually limits public size to typical market size Randomizerandomize public size MktSizeexpose only typical market size FullSizeexpose entire order size where possible"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"randomizeSize"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum - YesNo"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'Yes'"}),(0,r.jsx)(n.td,{children:"randomize public order size"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"canOverlapCxlRepl"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum - YesNo"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'No'"}),(0,r.jsx)(n.td,{children:"can execution engines overlap cancelreplace operations order can overfill if YES at most one active overlapping cxlreplace operation for each parent order"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"progressRule"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/ProgressRule",children:"enum - ProgressRule"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{children:"None  all size immediately availableTWAP  size released in time intervalsVWAP  size released in volume intervals"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"twapSliceCnt"}),(0,r.jsx)(n.td,{children:"TINYINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"ProgressSliceCnt number of progress slices to use if none given will compute based on active size and duration max 20"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"progressExposeTime"}),(0,r.jsx)(n.td,{children:"INT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"minimum time secs to expose order 0  no minimum used to guarantee that the order is exposed at midmarket for some time before actively taking"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"auctionResponder"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/AuctionResponder",children:"enum - AuctionResponder"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{children:"if set parent order can be an auction responder"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxMakeExchFee"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"maximum making exchange fee in point value zero  no limit use nonzero number for limit to apply"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxTakeExchFee"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"maximum taking exchange fee in point value zero  no limit use nonzero number for limit to apply"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"incTakeExchFee"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/IncExchFee",children:"enum - IncExchFee"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{children:"include exchange fee in probability and surface based take limit calculations"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"incMakeExchFee"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/IncExchFee",children:"enum - IncExchFee"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{children:"include exchange fee in probability and surface based make limit calculations"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"makeExchRule"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/MakeExchRule",children:"enum - MakeExchRule"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{children:"ActiveMaker exchange preference rule MaxPart will pick exchanges to maximize participation FeeOrder will pick exchanges to minimize fees maximize rebates ImprvOnly will only make when improving NBBO"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"minMktOnClosePct"}),(0,r.jsx)(n.td,{children:"TINYINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"triggerType"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/TriggerType",children:"enum - TriggerType"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{children:"type of trigger PrintVolSurfVol only for options print  print or actionable quote"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"triggerLevel"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"stoptrigger price for parent order to go active"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"cxlUPrcRange"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/UPrcCxl",children:"enum - UPrcCxl"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{children:"cancel parent order ifwhen outside minmax uPrc range Halt  also cancel if the securityunderlier has been halted"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"minUBid"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"optional"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxUAsk"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"optional  001  none"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"minMaxType"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/MinMaxType",children:"enum - MinMaxType"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'Prc'"}),(0,r.jsx)(n.td,{children:"if Prc minUBidmaxUAsk are expressed as prices if Pct then they are expresses as pct change since parent order arrival"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"minOptionPx"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"optional option price floor for tied to stock orders"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxChildOrders"}),(0,r.jsx)(n.td,{children:"INT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"1000"}),(0,r.jsx)(n.td,{children:"maximum number of child orders that can be generated by this parent order order will terminate ifwhen this cap is reachedzero or neg  unlimited"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"spdrStageType"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/SpdrStageType",children:"enum - SpdrStageType"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{children:"SizeLock  stage pending modification can reduce size SizeModify  stage pending modification can increasereduce size"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"marketSession"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/MarketSession",children:"enum - MarketSession"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'RegMkt'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"startDttm"}),(0,r.jsx)(n.td,{children:"DATETIME(6)"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'2000-01-01'"}),(0,r.jsx)(n.td,{children:"optional parent order start time"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"orderDuration"}),(0,r.jsx)(n.td,{children:"INT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"optional number of seconds"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"activeDuration"}),(0,r.jsx)(n.td,{children:"INT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"optional number of seconds"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"goodTillDttm"}),(0,r.jsx)(n.td,{children:"DATETIME(6)"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'2000-01-01'"}),(0,r.jsx)(n.td,{children:"optional default 20000101"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"startType"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/StartType",children:"enum - StartType"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{children:"WaitTrigger"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"triggerGroupId"}),(0,r.jsx)(n.td,{children:"BIGINT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"WaitTrigger group Id all child orders parent orders with the same triggerGroupId will optimized and released together when the group is triggered used to effect cross exchange and cross product market ISO and price level sweeps"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"triggerTimestamp"}),(0,r.jsx)(n.td,{children:"BIGINT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"WaitTrigger trigger timestamp nanoseconds since epoch"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"parentOrderHandling"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/ParentOrderHandling",children:"enum - ParentOrderHandling"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'ActiveTaker'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"parentBalanceHandling"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/ParentBalanceHandling",children:"enum - ParentBalanceHandling"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'PostLimit'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"orderLimitType"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/SpdrLimitType",children:"enum - SpdrLimitType"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'Market'"}),(0,r.jsx)(n.td,{children:"Various Prc PrcDe Vol Rel Market establishes the primary LimitPrice for a parent order"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"takeLimitClass"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/SpdrLimitClass",children:"enum - SpdrLimitClass"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'Simple'"}),(0,r.jsx)(n.td,{children:"Simple  LimitPrice Surface  BESTLimitPrice SurfLimit Probability  BESTLimitPrice ProbLimit"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"makeLimitClass"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/SpdrLimitClass",children:"enum - SpdrLimitClass"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'Simple'"}),(0,r.jsx)(n.td,{children:"Simple  LimitPrice Surface  BESTLimitPrice SurfLimit Probability  BESTLimitPrice ProbLimit"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"takeReachRule"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/ReachRule",children:"enum - ReachRule"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{children:"None  reach room immediately available Delayed  available after 13 seconds Passive  available if contra side aggresses WeakOnly  only take if available size  avgMarketSize ISOSweep  Intermarket Sweep requires WaitTrigger"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"leadSide"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/BuySell",children:"enum - BuySell"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{children:"for legged orders which side to lead with  optional None ok"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxCompletionSlippage"}),(0,r.jsx)(n.td,{children:"DOUBLE"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"Maximum price slippage to complete an open basket or a cross auction face side slippage"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"orderPrcLimit"}),(0,r.jsx)(n.td,{children:"DOUBLE"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"Applies if LimitType  Prc"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"orderRefUPrc"}),(0,r.jsx)(n.td,{children:"DOUBLE"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"defaultunderliermid"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"orderRefDelta"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-99"}),(0,r.jsx)(n.td,{children:"defaultoptiondelta"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"orderRefGamma"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-99"}),(0,r.jsx)(n.td,{children:"defaultoptiongamma"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"orderVolLimit"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"Applies if LimitType  Vol uses SR dividends and borrow rates"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"rateOverride"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"zero  ignore zero  override"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"sdivOverride"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"Default 0"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"ddivOverride"}),(0,r.jsx)(n.td,{children:"TEXT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"''"}),(0,r.jsx)(n.td,{children:"Discrete dividend string override yearsToExpirydivYearsdivAmountdivYearsdivAmount"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"overrideCode"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/OverrideCode",children:"enum - OverrideCode"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{children:"override default SR dividend and rate details only used if LimitType  Vol"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"orderPrcOffset"}),(0,r.jsx)(n.td,{children:"DOUBLE"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"default0"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"orderRefEventMult"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"orderRefEventDttm"}),(0,r.jsx)(n.td,{children:"DATETIME(6)"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'1900-01-01 00:00:00.000000'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"takeAlphaType"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/AlphaType",children:"enum - AlphaType"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{children:"Applies if takeLimitClass  Probability"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"makeAlphaType"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/AlphaType",children:"enum - AlphaType"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{children:"Applies if makeLimitClass  Probability"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"takeAlphaFactor"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"22 takeProbLimit  MAXtakeProbability takeProbAvg  takeAlphaFactor  takeProbStd if takeAlphaType  Relative"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"makeAlphaFactor"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"22 makeProbLimit  MAXmakeProbability makeProbAvg  makeAlphaFactor  makeProbStd if makeAlphaType  Relative"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"takeProbability"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"takeProbLimit  takeProbability if takeAlphaType  Static"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"makeProbability"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"makeProbLimit  makeProbability if makeAlphaType  Static"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"takeSurfPrcOffset"}),(0,r.jsx)(n.td,{children:"DOUBLE"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"default0"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"takeSurfVolOffset"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"default0"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"takeSurfWidthOffset"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"1x to 1x       10  05  avgMktWidth 10  05  avgMktWidth"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"makeSurfPrcOffset"}),(0,r.jsx)(n.td,{children:"DOUBLE"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"default0"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"makeSurfVolOffset"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"default0"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"makeSurfWidthOffset"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"1x to 1x       10  05  avgMktWidth 10  05  avgMktWidth"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"autoHedge"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/AutoHedge",children:"enum - AutoHedge"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"hedgeInstrument"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/HedgeInst",children:"enum - HedgeInst"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'Default'"}),(0,r.jsx)(n.td,{children:"Defaultunderlier EQT or FUT Index Options use ETF FrontMonthunderlier EQT or front month FUT Index Options use FM Fut StockhedgeSecKey FuturehedgeSecKey"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"hedgeSecKey_at"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'EQT'"}),(0,r.jsx)(n.td,{children:"autohedge instrument can be a TickerKey stock or ExpiryKey future required for Stock and Future"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"hedgeSecKey_ts"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'NMS'"}),(0,r.jsx)(n.td,{children:"autohedge instrument can be a TickerKey stock or ExpiryKey future required for Stock and Future"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"hedgeSecKey_tk"}),(0,r.jsx)(n.td,{children:"VARCHAR(12)"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"''"}),(0,r.jsx)(n.td,{children:"autohedge instrument can be a TickerKey stock or ExpiryKey future required for Stock and Future"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"hedgeSecKey_yr"}),(0,r.jsx)(n.td,{children:"SMALLINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"1900"}),(0,r.jsx)(n.td,{children:"autohedge instrument can be a TickerKey stock or ExpiryKey future required for Stock and Future"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"hedgeSecKey_mn"}),(0,r.jsx)(n.td,{children:"TINYINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"1"}),(0,r.jsx)(n.td,{children:"autohedge instrument can be a TickerKey stock or ExpiryKey future required for Stock and Future"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"hedgeSecKey_dy"}),(0,r.jsx)(n.td,{children:"TINYINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"1"}),(0,r.jsx)(n.td,{children:"autohedge instrument can be a TickerKey stock or ExpiryKey future required for Stock and Future"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"hedgeBetaRatio"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"1.0"}),(0,r.jsx)(n.td,{children:"portion of executed delta to autohedge can be 10  Beta for beta hedging 40 to 40"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"hedgeScope"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/HedgeScope",children:"enum - HedgeScope"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'RiskGroup'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"hedgeSession"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/MarketSession",children:"enum - MarketSession"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'RegMkt'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"positionType"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/PositionType",children:"enum - PositionType"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'Auto'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"ssaleFlag"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/ShortSaleFlag",children:"enum - ShortSaleFlag"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'Auto'"}),(0,r.jsx)(n.td,{children:"Used to determine stock autohedge flags"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"firmType"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/FirmType",children:"enum - FirmType"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{children:"Used to override firmType in account config Default None use SpiderRock account configuration"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"theoVol"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"client supplied theoretical volatility used for markup only"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"riskGroupId"}),(0,r.jsx)(n.td,{children:"CHAR(19)"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'0000-0000-0000-0000'"}),(0,r.jsx)(n.td,{children:"All group grp risk limits below are relative to this riskGroupId  Default 0 none  Required to be nonzero if autoHedge is something other than None"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"reqAuxRiskGroupCtrl"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum - YesNo"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"refRMetric1Src"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/RMetricSource",children:"enum - RMetricSource"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"refRMetric2Src"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/RMetricSource",children:"enum - RMetricSource"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"refRMetric3Src"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/RMetricSource",children:"enum - RMetricSource"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"refRMetric4Src"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/RMetricSource",children:"enum - RMetricSource"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"refRMetric5Src"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/RMetricSource",children:"enum - RMetricSource"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"refRMetric6Src"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/RMetricSource",children:"enum - RMetricSource"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"refRMetric7Src"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/RMetricSource",children:"enum - RMetricSource"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"orderRefRMetric1"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"user supplied RMetric1 value used in RiskGroupID risk controls netRMetric1  sumfillQty  orderRefRMetric1  underlierPerCn"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"orderRefRMetric2"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"user supplied RMetric2 value used in RiskGroupID risk controls netRMetric2  sumfillQty  orderRefRMetric2  underlierPerCn"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"orderRefRMetric3"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"user supplied RMetric3 value used in RiskGroupID risk controls netRMetric3  sumfillQty  orderRefRMetric3  underlierPerCn"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"orderRefRMetric4"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"user supplied RMetric4 value used in RiskGroupID risk controls netRMetric4  sumfillQty  orderRefRMetric4  underlierPerCn"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"orderRefRMetric5"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"user supplied RMetric5 value used in RiskGroupID risk controls netRMetric5  sumfillQty  orderRefRMetric5  underlierPerCn"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"orderRefRMetric6"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"user supplied RMetric6 value used in ExpDay risk controls netRMetric6  sumfillQty  orderRefRMetric6  underlierPerCn"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"orderRefRMetric7"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"user supplied RMetric7 value used in SymDay risk controls netRMetric7  sumfillQty  orderRefRMetric7  underlierPerCn"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"expDayWtVegaOffset"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctsymbol day wtVega offset target"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxExpDayWtVegaLn"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max accntexpiration day time weighted vega long positive number1no limitrisk limit  max limit  current net counter  offset"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxExpDayWtVegaSh"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max accntexpiration day time weighted vega short positive number1no limitrisk limit  max limit  current net counter  offset"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxExpDayRMetric6Ln"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctexpiration day rMetric6 long positive number1no limitrisk limit  max limit  current net counter"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxExpDayRMetric6Sh"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctexpiration day rMetric6 short positive number1no limitrisk limit  max limit  current net counter"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"symDayDDeltaOffset"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctsymbol day delta offset target"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxSymDayDDeltaLn"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctsymbol day delta long positive number1no limitrisk limit  max limit  current net counter  offset"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxSymDayDDeltaSh"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctsymbol day delta short positive number1no limitrisk limit  max limit  current net counter  offset"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"symDayVegaOffset"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctsymbol day vega offset target"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxSymDayVegaLn"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctsymbol day vega long positive number1no limitrisk limit  max limit  current net counter  offset"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxSymDayVegaSh"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctsymbol day vega short positive number1no limitrisk limit  max limit  current net counter  offset"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"symDayWtVegaOffset"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctsymbol day wtVega offset target"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxSymDayWtVegaLn"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctsymbol day time weighted vega long positive number1no limitrisk limit  max limit  current net counter  offset"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxSymDayWtVegaSh"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctsymbol day time weighted vega short positive number1no limitrisk limit  max limit  current net counter  offset"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxSymDayRMetric7Ln"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctsymbol day rMetric7 long positive number1no limitrisk limit  max limit  current net counter"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxSymDayRMetric7Sh"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctsymbol day rMetric7 short positive number1no limitrisk limit  max limit  current net counter"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxGrpDayDDeltaLn"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctriskGroup day delta long positive number1no limitrisk limit  max limit  current net counter"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxGrpDayDDeltaSh"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctriskGroup day delta short positive number1no limitrisk limit  max limit  current net counter"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxGrpDayVegaLn"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctriskGroup day vega long positive number1no limitrisk limit  max limit  current net counter"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxGrpDayVegaSh"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctriskGroup day vega short positive number1no limitrisk limit  max limit  current net counter"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxGrpDayVegaAbs"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctriskGroup day vega abs positive number1no limitrisk limit  max limit  abscurrent net counter"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"grpDayVegaRatio"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"1.0"}),(0,r.jsx)(n.td,{children:"target bot  sld ratio eg ratio20 means that neutral is bot vega  2x sld vega"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxGrpDayContractsLn"}),(0,r.jsx)(n.td,{children:"INT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctriskGroup day opt contracts long positive number1no limitrisk limit  max limit  current net counter"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxGrpDayContractsSh"}),(0,r.jsx)(n.td,{children:"INT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctriskGroup day opt contracts short positive number1no limitrisk limit  max limit  current net counter"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxGrpDayContractsAbs"}),(0,r.jsx)(n.td,{children:"INT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctriskGroup day opt contracts abs positive number1no limitrisk limit  max limit  abscurrent net counter"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxGrpDayRMetric1Ln"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctriskGroup day rMetric1 long positive number1no limitrisk limit  max limit  current net counter"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxGrpDayRMetric1Sh"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctriskGroup day rMetric1 short positive number1no limitrisk limit  max limit  current net counter"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxGrpDayRMetric1Abs"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctriskGroup day rMetric1 abs positive number1no limitrisk limit  max limit  abscurrent net counter"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"grpDayRMetric1Ratio"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"1.0"}),(0,r.jsx)(n.td,{children:"target bot  sld ratio eg ratio05 means that neutral is bot rMetric1  05x sld rMetric1"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxGrpDayRMetric2Ln"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctriskGroup day rMetric2 long positive number1no limitrisk limit  max limit  current net counter"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxGrpDayRMetric2Sh"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctriskGroup day rMetric2 short positive number1no limitrisk limit  max limit  current net counter"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxGrpDayRMetric3Ln"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctriskGroup day rMetric3 long positive number1no limitrisk limit  max limit  current net counter"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxGrpDayRMetric3Sh"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctriskGroup day rMetric3 short positive number1no limitrisk limit  max limit  current net counter"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxGrpDayRMetric4Ln"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctriskGroup day rMetric4 long positive number1no limitrisk limit  max limit  current net counter"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxGrpDayRMetric4Sh"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctriskGroup day rMetric4 short positive number1no limitrisk limit  max limit  current net counter"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxGrpDayRMetric5Ln"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctriskGroup day rMetric5 long positive number1no limitrisk limit  max limit  current net counter"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"maxGrpDayRMetric5Sh"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctriskGroup day rMetric5 short positive number1no limitrisk limit  max limit  current net counter"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"symEmaCxlDDeltaLn"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctsymbol 60s EMA delta long positive number  0 is no limit will immediately cxl all option orders in a symbol if any order in the symbol breaches"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"symEmaCxlDDeltaSh"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctsymbol 60s EMA delta short positive number  0 is no limit"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"symEmaCxlWtVegaLn"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctsymbol 60s EMA wtVega long positive number  0 is no limit will immediately cxl all option orders in a symbol if any order in the symbol breaches"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"symEmaCxlWtVegaSh"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"max acctsymbol 60s EMA wtVega short positive number  0 is no limit"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"traderName"}),(0,r.jsx)(n.td,{children:"VARCHAR(32)"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"''"}),(0,r.jsx)(n.td,{children:"Name of the trader associated with the order"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"userData1"}),(0,r.jsx)(n.td,{children:"TINYTEXT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"''"}),(0,r.jsx)(n.td,{children:"client supplied data field passes through to parent and child executions and reports as well as FIX drops"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"userData2"}),(0,r.jsx)(n.td,{children:"TINYTEXT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"''"}),(0,r.jsx)(n.td,{children:"client supplied data field passes through to parent and child executions and reports as well as FIX drops"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"childData"}),(0,r.jsx)(n.td,{children:"TINYTEXT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"''"}),(0,r.jsx)(n.td,{children:"client supplied data field passes through to down stream child orders"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegTicker_at"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{children:"stock ticker"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegTicker_ts"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{children:"stock ticker"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegTicker_tk"}),(0,r.jsx)(n.td,{children:"VARCHAR(12)"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"''"}),(0,r.jsx)(n.td,{children:"stock ticker"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegStockSide"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/BuySell",children:"enum - BuySell"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{children:"Buy  Sell  None"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegStockShares"}),(0,r.jsx)(n.td,{children:"INT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"number of shares included zero if none"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegStockLegId"}),(0,r.jsx)(n.td,{children:"BIGINT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"SR stock leg ID"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegAltStkLegId"}),(0,r.jsx)(n.td,{children:"VARCHAR(24)"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"''"}),(0,r.jsx)(n.td,{children:"client stock leg ID usually from a FIX order"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSSaleFlag"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/ShortSaleFlag",children:"enum - ShortSaleFlag"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{children:"stock short sale flag"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegRefUPrc"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"reference underlier price PrcDe orders"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegNumLegs"}),(0,r.jsx)(n.td,{children:"TINYINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"number of valid legs below"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey1_at"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{children:"leg 1"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey1_ts"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{children:"leg 1"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey1_tk"}),(0,r.jsx)(n.td,{children:"VARCHAR(12)"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"''"}),(0,r.jsx)(n.td,{children:"leg 1"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey1_yr"}),(0,r.jsx)(n.td,{children:"SMALLINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"1900"}),(0,r.jsx)(n.td,{children:"leg 1"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey1_mn"}),(0,r.jsx)(n.td,{children:"TINYINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"leg 1"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey1_dy"}),(0,r.jsx)(n.td,{children:"TINYINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"leg 1"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey1_xx"}),(0,r.jsx)(n.td,{children:"DOUBLE"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"leg 1"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey1_cp"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/CallPut",children:"enum - CallPut"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'Call'"}),(0,r.jsx)(n.td,{children:"leg 1"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecType1"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/SpdrKeyType",children:"enum - SpdrKeyType"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegMult1"}),(0,r.jsx)(n.td,{children:"SMALLINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSide1"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/BuySell",children:"enum - BuySell"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegLegId1"}),(0,r.jsx)(n.td,{children:"BIGINT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"SR leg Id"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegAltLegId1"}),(0,r.jsx)(n.td,{children:"VARCHAR(24)"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"''"}),(0,r.jsx)(n.td,{children:"client leg Id usually from a FIX order"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegPosType1"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/PositionType",children:"enum - PositionType"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSsaleFlag1"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/ShortSaleFlag",children:"enum - ShortSaleFlag"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegVega1"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegRefUPrc1"}),(0,r.jsx)(n.td,{children:"DOUBLE"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"reference underlier price PrcDe orders"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegRefDelta1"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"reference delta for PrcDe order handling"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegRefEarnCnt1"}),(0,r.jsx)(n.td,{children:"TINYINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"reference  of earnings moves before expiration"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey2_at"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{children:"leg 2"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey2_ts"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{children:"leg 2"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey2_tk"}),(0,r.jsx)(n.td,{children:"VARCHAR(12)"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"''"}),(0,r.jsx)(n.td,{children:"leg 2"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey2_yr"}),(0,r.jsx)(n.td,{children:"SMALLINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"1900"}),(0,r.jsx)(n.td,{children:"leg 2"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey2_mn"}),(0,r.jsx)(n.td,{children:"TINYINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"leg 2"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey2_dy"}),(0,r.jsx)(n.td,{children:"TINYINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"leg 2"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey2_xx"}),(0,r.jsx)(n.td,{children:"DOUBLE"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"leg 2"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey2_cp"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/CallPut",children:"enum - CallPut"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'Call'"}),(0,r.jsx)(n.td,{children:"leg 2"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecType2"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/SpdrKeyType",children:"enum - SpdrKeyType"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegMult2"}),(0,r.jsx)(n.td,{children:"SMALLINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSide2"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/BuySell",children:"enum - BuySell"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegLegId2"}),(0,r.jsx)(n.td,{children:"BIGINT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"SR leg Id"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegAltLegId2"}),(0,r.jsx)(n.td,{children:"VARCHAR(24)"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"''"}),(0,r.jsx)(n.td,{children:"client leg Id usually from a FIX order"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegPosType2"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/PositionType",children:"enum - PositionType"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSsaleFlag2"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/ShortSaleFlag",children:"enum - ShortSaleFlag"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegVega2"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegRefUPrc2"}),(0,r.jsx)(n.td,{children:"DOUBLE"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"reference underlier price PrcDe orders"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegRefDelta2"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"reference delta for PrcDe order handling"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegRefEarnCnt2"}),(0,r.jsx)(n.td,{children:"TINYINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"reference  of earnings moves before expiration"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey3_at"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{children:"leg 3"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey3_ts"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{children:"leg 3"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey3_tk"}),(0,r.jsx)(n.td,{children:"VARCHAR(12)"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"''"}),(0,r.jsx)(n.td,{children:"leg 3"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey3_yr"}),(0,r.jsx)(n.td,{children:"SMALLINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"1900"}),(0,r.jsx)(n.td,{children:"leg 3"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey3_mn"}),(0,r.jsx)(n.td,{children:"TINYINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"leg 3"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey3_dy"}),(0,r.jsx)(n.td,{children:"TINYINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"leg 3"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey3_xx"}),(0,r.jsx)(n.td,{children:"DOUBLE"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"leg 3"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey3_cp"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/CallPut",children:"enum - CallPut"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'Call'"}),(0,r.jsx)(n.td,{children:"leg 3"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecType3"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/SpdrKeyType",children:"enum - SpdrKeyType"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegMult3"}),(0,r.jsx)(n.td,{children:"SMALLINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSide3"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/BuySell",children:"enum - BuySell"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegLegId3"}),(0,r.jsx)(n.td,{children:"BIGINT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"SR leg Id"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegAltLegId3"}),(0,r.jsx)(n.td,{children:"VARCHAR(24)"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"''"}),(0,r.jsx)(n.td,{children:"client leg Id usually from a FIX order"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegPosType3"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/PositionType",children:"enum - PositionType"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSsaleFlag3"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/ShortSaleFlag",children:"enum - ShortSaleFlag"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegVega3"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegRefUPrc3"}),(0,r.jsx)(n.td,{children:"DOUBLE"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"reference underlier price PrcDe orders"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegRefDelta3"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"reference delta for PrcDe order handling"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegRefEarnCnt3"}),(0,r.jsx)(n.td,{children:"TINYINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"reference  of earnings moves before expiration"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey4_at"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{children:"leg 4"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey4_ts"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{children:"leg 4"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey4_tk"}),(0,r.jsx)(n.td,{children:"VARCHAR(12)"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"''"}),(0,r.jsx)(n.td,{children:"leg 4"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey4_yr"}),(0,r.jsx)(n.td,{children:"SMALLINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"1900"}),(0,r.jsx)(n.td,{children:"leg 4"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey4_mn"}),(0,r.jsx)(n.td,{children:"TINYINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"leg 4"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey4_dy"}),(0,r.jsx)(n.td,{children:"TINYINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"leg 4"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey4_xx"}),(0,r.jsx)(n.td,{children:"DOUBLE"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"leg 4"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey4_cp"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/CallPut",children:"enum - CallPut"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'Call'"}),(0,r.jsx)(n.td,{children:"leg 4"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecType4"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/SpdrKeyType",children:"enum - SpdrKeyType"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegMult4"}),(0,r.jsx)(n.td,{children:"SMALLINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSide4"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/BuySell",children:"enum - BuySell"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegLegId4"}),(0,r.jsx)(n.td,{children:"BIGINT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"SR leg Id"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegAltLegId4"}),(0,r.jsx)(n.td,{children:"VARCHAR(24)"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"''"}),(0,r.jsx)(n.td,{children:"client leg Id usually from a FIX order"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegPosType4"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/PositionType",children:"enum - PositionType"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSsaleFlag4"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/ShortSaleFlag",children:"enum - ShortSaleFlag"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegVega4"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegRefUPrc4"}),(0,r.jsx)(n.td,{children:"DOUBLE"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"reference underlier price PrcDe orders"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegRefDelta4"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"reference delta for PrcDe order handling"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegRefEarnCnt4"}),(0,r.jsx)(n.td,{children:"TINYINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"reference  of earnings moves before expiration"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey5_at"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{children:"leg 5"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey5_ts"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{children:"leg 5"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey5_tk"}),(0,r.jsx)(n.td,{children:"VARCHAR(12)"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"''"}),(0,r.jsx)(n.td,{children:"leg 5"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey5_yr"}),(0,r.jsx)(n.td,{children:"SMALLINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"1900"}),(0,r.jsx)(n.td,{children:"leg 5"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey5_mn"}),(0,r.jsx)(n.td,{children:"TINYINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"leg 5"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey5_dy"}),(0,r.jsx)(n.td,{children:"TINYINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"leg 5"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey5_xx"}),(0,r.jsx)(n.td,{children:"DOUBLE"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"leg 5"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey5_cp"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/CallPut",children:"enum - CallPut"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'Call'"}),(0,r.jsx)(n.td,{children:"leg 5"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecType5"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/SpdrKeyType",children:"enum - SpdrKeyType"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegMult5"}),(0,r.jsx)(n.td,{children:"SMALLINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSide5"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/BuySell",children:"enum - BuySell"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegLegId5"}),(0,r.jsx)(n.td,{children:"BIGINT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"SR leg Id"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegAltLegId5"}),(0,r.jsx)(n.td,{children:"VARCHAR(24)"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"''"}),(0,r.jsx)(n.td,{children:"client leg Id usually from a FIX order"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegPosType5"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/PositionType",children:"enum - PositionType"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSsaleFlag5"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/ShortSaleFlag",children:"enum - ShortSaleFlag"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegVega5"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegRefUPrc5"}),(0,r.jsx)(n.td,{children:"DOUBLE"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"reference underlier price PrcDe orders"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegRefDelta5"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"reference delta for PrcDe order handling"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegRefEarnCnt5"}),(0,r.jsx)(n.td,{children:"TINYINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"reference  of earnings moves before expiration"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey6_at"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{children:"leg 6"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey6_ts"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{children:"leg 6"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey6_tk"}),(0,r.jsx)(n.td,{children:"VARCHAR(12)"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"''"}),(0,r.jsx)(n.td,{children:"leg 6"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey6_yr"}),(0,r.jsx)(n.td,{children:"SMALLINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"1900"}),(0,r.jsx)(n.td,{children:"leg 6"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey6_mn"}),(0,r.jsx)(n.td,{children:"TINYINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"leg 6"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey6_dy"}),(0,r.jsx)(n.td,{children:"TINYINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"leg 6"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey6_xx"}),(0,r.jsx)(n.td,{children:"DOUBLE"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"leg 6"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecKey6_cp"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/CallPut",children:"enum - CallPut"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'Call'"}),(0,r.jsx)(n.td,{children:"leg 6"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSecType6"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/SpdrKeyType",children:"enum - SpdrKeyType"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegMult6"}),(0,r.jsx)(n.td,{children:"SMALLINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSide6"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/BuySell",children:"enum - BuySell"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegLegId6"}),(0,r.jsx)(n.td,{children:"BIGINT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"SR leg Id"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegAltLegId6"}),(0,r.jsx)(n.td,{children:"VARCHAR(24)"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"''"}),(0,r.jsx)(n.td,{children:"client leg Id usually from a FIX order"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegPosType6"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/PositionType",children:"enum - PositionType"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegSsaleFlag6"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/ShortSaleFlag",children:"enum - ShortSaleFlag"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"'None'"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegVega6"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegRefUPrc6"}),(0,r.jsx)(n.td,{children:"DOUBLE"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"reference underlier price PrcDe orders"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegRefDelta6"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"reference delta for PrcDe order handling"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"mlegRefEarnCnt6"}),(0,r.jsx)(n.td,{children:"TINYINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"reference  of earnings moves before expiration"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"optPremium"}),(0,r.jsx)(n.td,{children:"FLOAT"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"The premium for the option legs a contribution to the order premium Valid range is 99990 99990 Default 0"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"checksum"}),(0,r.jsx)(n.td,{children:"TINYINT UNSIGNED"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"Must be set to 13  This helps detect some columnvalue misalignments"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"primary-key-definition-unique",children:"PRIMARY KEY DEFINITION (Unique)"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Field"}),(0,r.jsx)(n.th,{children:"Sequence"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"secKey_tk"}),(0,r.jsx)(n.td,{children:"1"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"secKey_yr"}),(0,r.jsx)(n.td,{children:"2"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"secKey_mn"}),(0,r.jsx)(n.td,{children:"3"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"secKey_dy"}),(0,r.jsx)(n.td,{children:"4"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"secKey_xx"}),(0,r.jsx)(n.td,{children:"5"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"secKey_cp"}),(0,r.jsx)(n.td,{children:"6"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"secKey_at"}),(0,r.jsx)(n.td,{children:"7"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"secKey_ts"}),(0,r.jsx)(n.td,{children:"8"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"secType"}),(0,r.jsx)(n.td,{children:"9"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"accnt"}),(0,r.jsx)(n.td,{children:"10"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"orderSide"}),(0,r.jsx)(n.td,{children:"11"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"groupingCode"}),(0,r.jsx)(n.td,{children:"12"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"clientFirm"}),(0,r.jsx)(n.td,{children:"13"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"create-table-example-query",children:"CREATE TABLE EXAMPLE QUERY"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE `SRTrade`.`MsgParentOrderGatewayExt` (\n    `secKey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'EQT' COMMENT 'SR SecKey',\n    `secKey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'NMS' COMMENT 'SR SecKey',\n    `secKey_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'SR SecKey',\n    `secKey_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'SR SecKey',\n    `secKey_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'SR SecKey',\n    `secKey_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'SR SecKey',\n    `secKey_xx` DOUBLE NOT NULL DEFAULT 0 COMMENT 'SR SecKey',\n    `secKey_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call' COMMENT 'SR SecKey',\n    `secType` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None' COMMENT 'SR SecKeyType (Stock, Future, or Option)',\n    `accnt` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'SR Account (default = primary account associated with SRSE login)',\n    `orderSide` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'None' COMMENT 'Parent Order Size',\n    `groupingCode` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'Parent Grouping Code',\n    `clientFirm` VARCHAR(16) NOT NULL DEFAULT '',\n    `spdrActionType` ENUM('Add','AddReplace','Replace','Cancel','Modify') NOT NULL DEFAULT 'Add' COMMENT '[Add (new order), AddReplace (add or replace order), Cancel (cxl existing), Replace (update existing only), Release (modify order active size)]',\n    `altOrderId` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'Alternate client order ID.  This order ID will be copied to all execution reports.',\n    `altAutoHedgeId` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'alternate order ID for child autohedge orders (if any)',\n    `altAccnt` VARCHAR(32) NOT NULL DEFAULT '' COMMENT 'alternate (client assigned) \"long\" account string (optional) [used to map between client and SR account strings]',\n    `altUserName` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'alternate (client assigned) user name (optional) [used to map between client and SR account strings]',\n    `accntRouteCode` TINYTEXT NOT NULL DEFAULT '' COMMENT 'accntRoute acronym',\n    `execBrkrCode` VARCHAR(16) NOT NULL DEFAULT '',\n    `externExDest` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'routing code for orders directed to an external order router (default = null); should match FixRoutingTable.destination (in SR accnt config)',\n    `externParams` TINYTEXT NOT NULL DEFAULT '' COMMENT 'external algo names/parameters (usually just an algo name)',\n    `strategy` VARCHAR(36) NOT NULL DEFAULT '' COMMENT 'Client strategy string.  This value will appear on the SR Trade Monitor and in execution reports.',\n    `securityDesc` TINYTEXT NOT NULL DEFAULT '' COMMENT 'additional security description',\n    `orderDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'order entry time (from client;if any)',\n    `orderSize` INT NOT NULL DEFAULT -1 COMMENT 'parent order size (contracts) [-1 = no change;used when spdrActionType=Release]',\n    `orderActiveSize` INT NOT NULL DEFAULT -1 COMMENT 'total activated size (total size released for execution) (-1 = all available size)',\n    `curCumFillQuantity` INT NOT NULL DEFAULT 0 COMMENT 'set order size = orderSize - Max(0, curCumFillQty - ee.cumFillQty) (used to ensure integrity of submitted cxl/replace orders)',\n    `addCumFillQuantity` ENUM('Yes','No') NOT NULL DEFAULT 'No' COMMENT 'If Yes then OrderSize is calculated @ order arrival as requested OrderSize + existing ''CumFillQuantity''.',\n    `exchMask` INT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'eligible exchanges (0 = all)',\n    `maxExposureSize` INT NOT NULL DEFAULT -1 COMMENT 'maximum simultaneous cumulative child order public size exposure (-1 = orderActiveSize) [order can overfill if > orderActiveSize and numMakeExchanges > 1]',\n    `numMakeExchanges` TINYINT UNSIGNED NOT NULL DEFAULT 1 COMMENT 'number of exchanges (1 - 4) on which to publish public making orders.  Effective number might be less than requested number if sufficient exchanges are not available.',\n    `publicSize` ENUM('None','Randomize','MktSize','FullSize','MktSizeA','MktSizeB','MktSizeC','FullSizeR') NOT NULL DEFAULT 'None' COMMENT 'public order size handling: None=use default size handling (usually limits public size to ''typical'' market size); Randomize=randomize public size; MktSize=expose only ''typical'' market size; FullSize=expose entire order size where possible',\n    `randomizeSize` ENUM('Yes','No') NOT NULL DEFAULT 'Yes' COMMENT 'randomize public order size',\n    `canOverlapCxlRepl` ENUM('Yes','No') NOT NULL DEFAULT 'No' COMMENT 'can execution engines overlap cancel/replace operations [order can overfill if YES] (at most one active overlapping cxl/replace operation for each parent order)',\n    `progressRule` ENUM('None','Twap','Vwap','TwapReset','VwapReset','FastReset','SlowReset','TwapAlpha','VwapAlpha','TwapAlphaC','VwapAlphaC','AutoComplete','AllowImmediate','Manual','SpdrPulse','IOC') NOT NULL DEFAULT 'None' COMMENT 'None = all size immediately available;TWAP = size released in time intervals;VWAP = size released in volume intervals;',\n    `twapSliceCnt` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT '[ProgressSliceCnt] number of progress slices to use. if none given will compute based on active size and duration. [max 20]',\n    `progressExposeTime` INT NOT NULL DEFAULT 0 COMMENT 'minimum time (secs) to expose order (0 = no minimum; used to guarantee that the order is exposed at mid-market for some time before actively taking)',\n    `auctionResponder` ENUM('None','Any') NOT NULL DEFAULT 'None' COMMENT 'if set, parent order can be an auction responder',\n    `maxMakeExchFee` FLOAT NOT NULL DEFAULT 0 COMMENT 'maximum making exchange fee (in point value) [zero = no limit; use non-zero number for limit to apply]',\n    `maxTakeExchFee` FLOAT NOT NULL DEFAULT 0 COMMENT 'maximum taking exchange fee (in point value) [zero = no limit; use non-zero number for limit to apply]',\n    `incTakeExchFee` ENUM('None','ExclFee','IncFee') NOT NULL DEFAULT 'None' COMMENT 'include exchange fee in probability and surface based take limit calculations',\n    `incMakeExchFee` ENUM('None','ExclFee','IncFee') NOT NULL DEFAULT 'None' COMMENT 'include exchange fee in probability and surface based make limit calculations',\n    `makeExchRule` ENUM('None','MaxPart','FeeOptimal','ImprvOnly','FeeStrict','RoundRobin','ProRataOptim') NOT NULL DEFAULT 'None' COMMENT 'ActiveMaker exchange preference rule: ''MaxPart'' will pick exchanges to maximize participation; ''FeeOrder'' will pick exchanges to minimize fees [maximize rebates]; ''ImprvOnly'' will only make when improving NBBO.',\n    `minMktOnClosePct` TINYINT UNSIGNED NOT NULL DEFAULT 0,\n    `triggerType` ENUM('None','PrintPrc','PrintVol','SurfVol','PrtSurfVol') NOT NULL DEFAULT 'None' COMMENT 'type of trigger (PrintVol/SurfVol only for options) [print = print or actionable quote]',\n    `triggerLevel` FLOAT NOT NULL DEFAULT 0 COMMENT 'stop/trigger price for parent order to go active',\n    `cxlUPrcRange` ENUM('None','Yes','No','YesHalt','NoHalt') NOT NULL DEFAULT 'None' COMMENT 'cancel parent order if/when outside min/max uPrc range [_Halt = also cancel if the security/underlier has been halted]',\n    `minUBid` FLOAT NOT NULL DEFAULT 0 COMMENT '[optional]',\n    `maxUAsk` FLOAT NOT NULL DEFAULT 0 COMMENT '[optional] (< $0.01 = none)',\n    `minMaxType` ENUM('None','Prc','Pct') NOT NULL DEFAULT 'Prc' COMMENT 'if Prc minUBid/maxUAsk are expressed as prices; if Pct then they are expresses as pct change since parent order arrival',\n    `minOptionPx` FLOAT NOT NULL DEFAULT 0 COMMENT '[optional] option price floor for tied to stock orders',\n    `maxChildOrders` INT NOT NULL DEFAULT 1000 COMMENT 'maximum number of child orders that can be generated by this parent order [order will terminate if/when this cap is reached;zero or neg = unlimited]',\n    `spdrStageType` ENUM('None','ModifyAny','ModifyAlgo') NOT NULL DEFAULT 'None' COMMENT 'SizeLock = stage pending modification (can reduce size); SizeModify = stage pending modification (can increase/reduce size)',\n    `marketSession` ENUM('None','PreMkt','RegMkt','PostMkt','PreRegMkt','RegPostMkt','AllDay') NOT NULL DEFAULT 'RegMkt',\n    `startDttm` DATETIME(6) NOT NULL DEFAULT '2000-01-01' COMMENT '[optional] (parent order start time)',\n    `orderDuration` INT NOT NULL DEFAULT -1 COMMENT '[optional] (number of seconds)',\n    `activeDuration` INT NOT NULL DEFAULT -1 COMMENT '[optional] (number of seconds)',\n    `goodTillDttm` DATETIME(6) NOT NULL DEFAULT '2000-01-01' COMMENT '[optional] (default: 2000-01-01)',\n    `startType` ENUM('None','WaitTrigger') NOT NULL DEFAULT 'None' COMMENT '[WaitTrigger]',\n    `triggerGroupId` BIGINT NOT NULL DEFAULT -1 COMMENT 'WaitTrigger group Id; all child orders parent orders with the same triggerGroupId will optimized and released together when the group is triggered; used to effect cross exchange and cross product market ISO and price level sweeps',\n    `triggerTimestamp` BIGINT NOT NULL DEFAULT 0 COMMENT 'WaitTrigger trigger timestamp (nanoseconds since epoch)',\n    `parentOrderHandling` ENUM('None','ActiveTaker','PostOnly','DMA','MktOnOpn','MktOnCls','Facilitate','Matrix','Legger','Seeker','SeekerLegger','CrossResponse','AuctionResponse','MLegAuctionResp','RFQRequest','AwayAlgo','ExchPing','BlockAuction','BlockResponse','SweepTake','CobMaker','FaceOmni','TestParent') NOT NULL DEFAULT 'ActiveTaker',\n    `parentBalanceHandling` ENUM('None','PostWith','PostTurn','PostImprove','PostLimit','MaxIntern','PostWthF','PostImprvR','PostFlash','PostFlashW','PostPeg','PostFlashI') NOT NULL DEFAULT 'PostLimit',\n    `orderLimitType` ENUM('None','Market','MarketArrival','Prc','PrcDe','PrcDeX','PrcDeT','PrcDeP','PrcDeXT','PrcDeXP','Vol','VolX','PrcV','PrcVX','NoLimit','RelMid','RelJoin','RelCross','SmrtFast','SmrtNorm','RelTurn','PrcDeEm','VolEm','Aux','UPrcPct','PkgNeutral','RcPrem','SynthLimitMM','SynthLimitBW','SynthLimitWW') NOT NULL DEFAULT 'Market' COMMENT 'Various (Prc, PrcDe, Vol, Rel, Market); establishes the primary LimitPrice for a parent order',\n    `takeLimitClass` ENUM('Simple','Surface','Probability','SurfProb') NOT NULL DEFAULT 'Simple' COMMENT 'Simple = LimitPrice, Surface = BEST(LimitPrice, SurfLimit), Probability = BEST(LimitPrice, ProbLimit)',\n    `makeLimitClass` ENUM('Simple','Surface','Probability','SurfProb') NOT NULL DEFAULT 'Simple' COMMENT 'Simple = LimitPrice, Surface = BEST(LimitPrice, SurfLimit), Probability = BEST(LimitPrice, ProbLimit)',\n    `takeReachRule` ENUM('None','Delayed','Passive','WeakOnly','RespondOnly','FullSize','ISOSweep','AllOrNone','QtyOrMore','UpToQty','AtMost25','AtMost50','MinTakeFee') NOT NULL DEFAULT 'None' COMMENT 'None = reach room immediately available; Delayed = available after [1-3] seconds; Passive = available if contra side aggresses; WeakOnly = only take if available size < avgMarketSize; ISOSweep = Intermarket Sweep [requires WaitTrigger]',\n    `leadSide` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'None' COMMENT 'for legged orders, which side to lead with.  (optional, None ok)',\n    `maxCompletionSlippage` DOUBLE NOT NULL DEFAULT 0 COMMENT 'Maximum price slippage to complete an open basket or a cross auction (face side slippage)',\n    `orderPrcLimit` DOUBLE NOT NULL DEFAULT 0 COMMENT 'Applies if LimitType = Prc[]',\n    `orderRefUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'default=underlier.mid',\n    `orderRefDelta` FLOAT NOT NULL DEFAULT -99 COMMENT 'default=option.delta',\n    `orderRefGamma` FLOAT NOT NULL DEFAULT -99 COMMENT 'default=option.gamma',\n    `orderVolLimit` FLOAT NOT NULL DEFAULT 0 COMMENT 'Applies if LimitType = Vol[] [uses SR dividends and borrow rates]',\n    `rateOverride` FLOAT NOT NULL DEFAULT -1 COMMENT 'zero = ignore;> zero = override',\n    `sdivOverride` FLOAT NOT NULL DEFAULT -1 COMMENT 'Default: 0.',\n    `ddivOverride` TEXT NOT NULL DEFAULT '' COMMENT 'Discrete dividend string override ([yearsToExpiry,divYears:divAmount,divYears:divAmount, ...])' CHECK(LENGTH(ddivOverride) <= 10000),\n    `overrideCode` ENUM('None','SDivOnly','DDivOnly','Both') NOT NULL DEFAULT 'None' COMMENT 'override default SR dividend and rate details (only used if LimitType = Vol)',\n    `orderPrcOffset` DOUBLE NOT NULL DEFAULT 0 COMMENT 'default=0',\n    `orderRefEventMult` FLOAT NOT NULL DEFAULT 0,\n    `orderRefEventDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000',\n    `takeAlphaType` ENUM('None','Static','Eagle','Hawk','Falcon','Relative') NOT NULL DEFAULT 'None' COMMENT 'Applies if takeLimitClass = Probability',\n    `makeAlphaType` ENUM('None','Static','Eagle','Hawk','Falcon','Relative') NOT NULL DEFAULT 'None' COMMENT 'Applies if makeLimitClass = Probability',\n    `takeAlphaFactor` FLOAT NOT NULL DEFAULT 0 COMMENT '[-2,+2] takeProbLimit = MAX(takeProbability, takeProbAvg + takeAlphaFactor * takeProbStd) [if takeAlphaType = Relative]',\n    `makeAlphaFactor` FLOAT NOT NULL DEFAULT 0 COMMENT '[-2,+2] makeProbLimit = MAX(makeProbability, makeProbAvg + makeAlphaFactor * makeProbStd) [if makeAlphaType = Relative]',\n    `takeProbability` FLOAT NOT NULL DEFAULT 0 COMMENT 'takeProbLimit = takeProbability [if takeAlphaType = Static]',\n    `makeProbability` FLOAT NOT NULL DEFAULT 0 COMMENT 'makeProbLimit = makeProbability [if makeAlphaType = Static]',\n    `takeSurfPrcOffset` DOUBLE NOT NULL DEFAULT 0 COMMENT 'default=0',\n    `takeSurfVolOffset` FLOAT NOT NULL DEFAULT 0 COMMENT 'default=0',\n    `takeSurfWidthOffset` FLOAT NOT NULL DEFAULT 0 COMMENT '[-1.x to +1.x]       -1.0 = -0.5 * avgMktWidth, +1.0 = +0.5 * avgMktWidth',\n    `makeSurfPrcOffset` DOUBLE NOT NULL DEFAULT 0 COMMENT 'default=0',\n    `makeSurfVolOffset` FLOAT NOT NULL DEFAULT 0 COMMENT 'default=0',\n    `makeSurfWidthOffset` FLOAT NOT NULL DEFAULT 0 COMMENT '[-1.x to +1.x]       -1.0 = -0.5 * avgMktWidth, +1.0 = +0.5 * avgMktWidth',\n    `autoHedge` ENUM('None','Static','AutoMid','AutoCrx','AutoTrn','SpdrAuto','Spdr10S','Spdr30S','Spdr90S','Spdr5M','Spdr30M','SpdrDay','SmartFast','SmartNorm','FastCrx','FastDark','SlowDark','AlphaVwap1pct','AlphaVwap2pct','AlphaVwap5pct','AlphaVwap25pct','Custom','AwayAlgo') NOT NULL DEFAULT 'None',\n    `hedgeInstrument` ENUM('None','Default','FrontMonth','Stock','Future') NOT NULL DEFAULT 'Default' COMMENT 'Default=underlier (EQT or FUT) [Index Options use ETF]; FrontMonth=underlier (EQT) or front month (FUT) [Index Options use FM Fut]; Stock=hedgeSecKey; Future=hedgeSecKey',\n    `hedgeSecKey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'EQT' COMMENT 'autohedge instrument (can be a TickerKey (stock) or ExpiryKey (future)) [required for Stock and Future]',\n    `hedgeSecKey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'NMS' COMMENT 'autohedge instrument (can be a TickerKey (stock) or ExpiryKey (future)) [required for Stock and Future]',\n    `hedgeSecKey_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'autohedge instrument (can be a TickerKey (stock) or ExpiryKey (future)) [required for Stock and Future]',\n    `hedgeSecKey_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 1900 COMMENT 'autohedge instrument (can be a TickerKey (stock) or ExpiryKey (future)) [required for Stock and Future]',\n    `hedgeSecKey_mn` TINYINT UNSIGNED NOT NULL DEFAULT 1 COMMENT 'autohedge instrument (can be a TickerKey (stock) or ExpiryKey (future)) [required for Stock and Future]',\n    `hedgeSecKey_dy` TINYINT UNSIGNED NOT NULL DEFAULT 1 COMMENT 'autohedge instrument (can be a TickerKey (stock) or ExpiryKey (future)) [required for Stock and Future]',\n    `hedgeBetaRatio` FLOAT NOT NULL DEFAULT 1.0 COMMENT 'portion of executed $delta to auto-hedge (can be 1.0 / Beta for beta hedging) [-4.0 to +4.0])',\n    `hedgeScope` ENUM('None','Accnt','RiskGroup') NOT NULL DEFAULT 'RiskGroup',\n    `hedgeSession` ENUM('None','PreMkt','RegMkt','PostMkt','PreRegMkt','RegPostMkt','AllDay') NOT NULL DEFAULT 'RegMkt',\n    `positionType` ENUM('Opening','Closing','Auto') NOT NULL DEFAULT 'Auto',\n    `ssaleFlag` ENUM('None','Long','Short','Exempt','Cover','Auto','NA') NOT NULL DEFAULT 'Auto' COMMENT 'Used to determine stock auto-hedge flags.',\n    `firmType` ENUM('None','Customer','Firm','MarketMaker','ProCustomer','BrokerDealer','AwayMM','FirmJBO','BrkrDlrCust') NOT NULL DEFAULT 'None' COMMENT 'Used to override firmType in account config. Default: None (use SpiderRock account configuration).',\n    `theoVol` FLOAT NOT NULL DEFAULT 0 COMMENT 'client supplied theoretical volatility (used for markup only)',\n    `riskGroupId` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'All group (grp) risk limits below are relative to this riskGroupId.  Default: 0 (none).  Required to be non-zero if `autoHedge` is something other than None.',\n    `reqAuxRiskGroupCtrl` ENUM('None','Yes','No') NOT NULL DEFAULT 'None',\n    `refRMetric1Src` ENUM('None','User','Vega','WVega','WTVega','TVega','Theta','Gamma','DGamma','DDeltaIvS','BDDelta','OptDDelta','Premium','Notional') NOT NULL DEFAULT 'None',\n    `refRMetric2Src` ENUM('None','User','Vega','WVega','WTVega','TVega','Theta','Gamma','DGamma','DDeltaIvS','BDDelta','OptDDelta','Premium','Notional') NOT NULL DEFAULT 'None',\n    `refRMetric3Src` ENUM('None','User','Vega','WVega','WTVega','TVega','Theta','Gamma','DGamma','DDeltaIvS','BDDelta','OptDDelta','Premium','Notional') NOT NULL DEFAULT 'None',\n    `refRMetric4Src` ENUM('None','User','Vega','WVega','WTVega','TVega','Theta','Gamma','DGamma','DDeltaIvS','BDDelta','OptDDelta','Premium','Notional') NOT NULL DEFAULT 'None',\n    `refRMetric5Src` ENUM('None','User','Vega','WVega','WTVega','TVega','Theta','Gamma','DGamma','DDeltaIvS','BDDelta','OptDDelta','Premium','Notional') NOT NULL DEFAULT 'None',\n    `refRMetric6Src` ENUM('None','User','Vega','WVega','WTVega','TVega','Theta','Gamma','DGamma','DDeltaIvS','BDDelta','OptDDelta','Premium','Notional') NOT NULL DEFAULT 'None',\n    `refRMetric7Src` ENUM('None','User','Vega','WVega','WTVega','TVega','Theta','Gamma','DGamma','DDeltaIvS','BDDelta','OptDDelta','Premium','Notional') NOT NULL DEFAULT 'None',\n    `orderRefRMetric1` FLOAT NOT NULL DEFAULT 0 COMMENT 'user supplied RMetric1 value (used in RiskGroupID risk controls) [netRMetric1 = sum(fillQty * orderRefRMetric1 * underlierPerCn)]',\n    `orderRefRMetric2` FLOAT NOT NULL DEFAULT 0 COMMENT 'user supplied RMetric2 value (used in RiskGroupID risk controls) [netRMetric2 = sum(fillQty * orderRefRMetric2 * underlierPerCn)]',\n    `orderRefRMetric3` FLOAT NOT NULL DEFAULT 0 COMMENT 'user supplied RMetric3 value (used in RiskGroupID risk controls) [netRMetric3 = sum(fillQty * orderRefRMetric3 * underlierPerCn)]',\n    `orderRefRMetric4` FLOAT NOT NULL DEFAULT 0 COMMENT 'user supplied RMetric4 value (used in RiskGroupID risk controls) [netRMetric4 = sum(fillQty * orderRefRMetric4 * underlierPerCn)]',\n    `orderRefRMetric5` FLOAT NOT NULL DEFAULT 0 COMMENT 'user supplied RMetric5 value (used in RiskGroupID risk controls) [netRMetric5 = sum(fillQty * orderRefRMetric5 * underlierPerCn)]',\n    `orderRefRMetric6` FLOAT NOT NULL DEFAULT 0 COMMENT 'user supplied RMetric6 value (used in ExpDay risk controls) [netRMetric6 = sum(fillQty * orderRefRMetric6 * underlierPerCn)]',\n    `orderRefRMetric7` FLOAT NOT NULL DEFAULT 0 COMMENT 'user supplied RMetric7 value (used in SymDay risk controls) [netRMetric7 = sum(fillQty * orderRefRMetric7 * underlierPerCn)]',\n    `expDayWtVegaOffset` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+symbol day wtVega offset (target)',\n    `maxExpDayWtVegaLn` FLOAT NOT NULL DEFAULT -1 COMMENT 'max accnt+expiration day (time weighted) vega long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)',\n    `maxExpDayWtVegaSh` FLOAT NOT NULL DEFAULT -1 COMMENT 'max accnt+expiration day (time weighted) vega short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)',\n    `maxExpDayRMetric6Ln` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+expiration day rMetric6 long (positive number;-1=no limit);risk limit = max limit - current net counter',\n    `maxExpDayRMetric6Sh` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+expiration day rMetric6 short (positive number;-1=no limit);risk limit = max limit + current net counter',\n    `symDayDDeltaOffset` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+symbol day $delta offset (target)',\n    `maxSymDayDDeltaLn` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+symbol day $delta long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)',\n    `maxSymDayDDeltaSh` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+symbol day $delta short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)',\n    `symDayVegaOffset` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+symbol day vega offset (target)',\n    `maxSymDayVegaLn` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+symbol day vega long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)',\n    `maxSymDayVegaSh` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+symbol day vega short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)',\n    `symDayWtVegaOffset` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+symbol day wtVega offset (target)',\n    `maxSymDayWtVegaLn` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+symbol day (time weighted) vega long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)',\n    `maxSymDayWtVegaSh` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+symbol day (time weighted) vega short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)',\n    `maxSymDayRMetric7Ln` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+symbol day rMetric7 long (positive number;-1=no limit);risk limit = max limit - current net counter',\n    `maxSymDayRMetric7Sh` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+symbol day rMetric7 short (positive number;-1=no limit);risk limit = max limit + current net counter',\n    `maxGrpDayDDeltaLn` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day $delta long (positive number;-1=no limit);risk limit = max limit - current net counter',\n    `maxGrpDayDDeltaSh` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day $delta short (positive number;-1=no limit);risk limit = max limit + current net counter',\n    `maxGrpDayVegaLn` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day vega long (positive number;-1=no limit);risk limit = max limit - current net counter',\n    `maxGrpDayVegaSh` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day vega short (positive number;-1=no limit);risk limit = max limit + current net counter',\n    `maxGrpDayVegaAbs` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day vega abs (positive number;-1=no limit);risk limit = max limit - abs(current net counter)',\n    `grpDayVegaRatio` FLOAT NOT NULL DEFAULT 1.0 COMMENT 'target bot / sld ratio (eg ratio=2.0 means that neutral is bot vega = 2x sld vega)',\n    `maxGrpDayContractsLn` INT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day opt contracts long (positive number;-1=no limit);risk limit = max limit - current net counter',\n    `maxGrpDayContractsSh` INT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day opt contracts short (positive number;-1=no limit);risk limit = max limit + current net counter',\n    `maxGrpDayContractsAbs` INT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day opt contracts abs (positive number;-1=no limit);risk limit = max limit - abs(current net counter)',\n    `maxGrpDayRMetric1Ln` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day rMetric1 long (positive number;-1=no limit);risk limit = max limit - current net counter',\n    `maxGrpDayRMetric1Sh` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day rMetric1 short (positive number;-1=no limit);risk limit = max limit + current net counter',\n    `maxGrpDayRMetric1Abs` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day rMetric1 abs (positive number;-1=no limit);risk limit = max limit - abs(current net counter)',\n    `grpDayRMetric1Ratio` FLOAT NOT NULL DEFAULT 1.0 COMMENT 'target bot / sld ratio (eg ratio=0.5 means that neutral is bot rMetric1 = 0.5x sld rMetric1)',\n    `maxGrpDayRMetric2Ln` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day rMetric2 long (positive number;-1=no limit);risk limit = max limit - current net counter',\n    `maxGrpDayRMetric2Sh` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day rMetric2 short (positive number;-1=no limit);risk limit = max limit + current net counter',\n    `maxGrpDayRMetric3Ln` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day rMetric3 long (positive number;-1=no limit);risk limit = max limit - current net counter',\n    `maxGrpDayRMetric3Sh` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day rMetric3 short (positive number;-1=no limit);risk limit = max limit + current net counter',\n    `maxGrpDayRMetric4Ln` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day rMetric4 long (positive number;-1=no limit);risk limit = max limit - current net counter',\n    `maxGrpDayRMetric4Sh` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day rMetric4 short (positive number;-1=no limit);risk limit = max limit + current net counter',\n    `maxGrpDayRMetric5Ln` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day rMetric5 long (positive number;-1=no limit);risk limit = max limit - current net counter',\n    `maxGrpDayRMetric5Sh` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+riskGroup day rMetric5 short (positive number;-1=no limit);risk limit = max limit + current net counter',\n    `symEmaCxlDDeltaLn` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+symbol 60s EMA $delta long (positive number; <= 0 is no limit) [will immediately cxl all option orders in a symbol if any order in the symbol breaches]',\n    `symEmaCxlDDeltaSh` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+symbol 60s EMA $delta short (positive number; <= 0 is no limit)',\n    `symEmaCxlWtVegaLn` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+symbol 60s EMA wtVega long (positive number; <= 0 is no limit) [will immediately cxl all option orders in a symbol if any order in the symbol breaches]',\n    `symEmaCxlWtVegaSh` FLOAT NOT NULL DEFAULT -1 COMMENT 'max acct+symbol 60s EMA wtVega short (positive number; <= 0 is no limit)',\n    `traderName` VARCHAR(32) NOT NULL DEFAULT '' COMMENT 'Name of the trader associated with the order',\n    `userData1` TINYTEXT NOT NULL DEFAULT '' COMMENT 'client supplied data field; passes through to parent and child executions and reports as well as FIX drops',\n    `userData2` TINYTEXT NOT NULL DEFAULT '' COMMENT 'client supplied data field; passes through to parent and child executions and reports as well as FIX drops',\n    `childData` TINYTEXT NOT NULL DEFAULT '' COMMENT 'client supplied data field; passes through to down stream child orders',\n    `mlegTicker_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'stock ticker',\n    `mlegTicker_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'stock ticker',\n    `mlegTicker_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'stock ticker',\n    `mlegStockSide` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'None' COMMENT '[Buy | Sell | None]',\n    `mlegStockShares` INT NOT NULL DEFAULT 0 COMMENT 'number of shares included (zero if none)',\n    `mlegStockLegId` BIGINT NOT NULL DEFAULT 0 COMMENT 'SR stock leg ID',\n    `mlegAltStkLegId` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'client stock leg ID (usually from a FIX order)',\n    `mlegSSaleFlag` ENUM('None','Long','Short','Exempt','Auto','Open','Close','Cover','NA') NOT NULL DEFAULT 'None' COMMENT 'stock short sale flag',\n    `mlegRefUPrc` FLOAT NOT NULL DEFAULT 0 COMMENT 'reference underlier price (PrcDe orders)',\n    `mlegNumLegs` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'number of valid legs below',\n    `mlegSecKey1_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'leg #1',\n    `mlegSecKey1_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'leg #1',\n    `mlegSecKey1_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'leg #1',\n    `mlegSecKey1_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 1900 COMMENT 'leg #1',\n    `mlegSecKey1_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'leg #1',\n    `mlegSecKey1_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'leg #1',\n    `mlegSecKey1_xx` DOUBLE NOT NULL DEFAULT 0 COMMENT 'leg #1',\n    `mlegSecKey1_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call' COMMENT 'leg #1',\n    `mlegSecType1` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None',\n    `mlegMult1` SMALLINT UNSIGNED NOT NULL DEFAULT 0,\n    `mlegSide1` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'None',\n    `mlegLegId1` BIGINT NOT NULL DEFAULT 0 COMMENT 'SR leg Id',\n    `mlegAltLegId1` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'client leg Id (usually from a FIX order)',\n    `mlegPosType1` ENUM('None','Opening','Closing','Auto') NOT NULL DEFAULT 'None',\n    `mlegSsaleFlag1` ENUM('None','Long','Short','Exempt','Auto','Open','Close','Cover','NA') NOT NULL DEFAULT 'None',\n    `mlegVega1` FLOAT NOT NULL DEFAULT 0,\n    `mlegRefUPrc1` DOUBLE NOT NULL DEFAULT 0 COMMENT 'reference underlier price (PrcDe orders)',\n    `mlegRefDelta1` FLOAT NOT NULL DEFAULT 0 COMMENT 'reference delta (for PrcDe order handling)',\n    `mlegRefEarnCnt1` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'reference # of earnings moves before expiration',\n    `mlegSecKey2_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'leg #2',\n    `mlegSecKey2_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'leg #2',\n    `mlegSecKey2_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'leg #2',\n    `mlegSecKey2_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 1900 COMMENT 'leg #2',\n    `mlegSecKey2_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'leg #2',\n    `mlegSecKey2_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'leg #2',\n    `mlegSecKey2_xx` DOUBLE NOT NULL DEFAULT 0 COMMENT 'leg #2',\n    `mlegSecKey2_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call' COMMENT 'leg #2',\n    `mlegSecType2` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None',\n    `mlegMult2` SMALLINT UNSIGNED NOT NULL DEFAULT 0,\n    `mlegSide2` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'None',\n    `mlegLegId2` BIGINT NOT NULL DEFAULT 0 COMMENT 'SR leg Id',\n    `mlegAltLegId2` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'client leg Id (usually from a FIX order)',\n    `mlegPosType2` ENUM('None','Opening','Closing','Auto') NOT NULL DEFAULT 'None',\n    `mlegSsaleFlag2` ENUM('None','Long','Short','Exempt','Auto','Open','Close','Cover','NA') NOT NULL DEFAULT 'None',\n    `mlegVega2` FLOAT NOT NULL DEFAULT 0,\n    `mlegRefUPrc2` DOUBLE NOT NULL DEFAULT 0 COMMENT 'reference underlier price (PrcDe orders)',\n    `mlegRefDelta2` FLOAT NOT NULL DEFAULT 0 COMMENT 'reference delta (for PrcDe order handling)',\n    `mlegRefEarnCnt2` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'reference # of earnings moves before expiration',\n    `mlegSecKey3_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'leg #3',\n    `mlegSecKey3_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'leg #3',\n    `mlegSecKey3_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'leg #3',\n    `mlegSecKey3_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 1900 COMMENT 'leg #3',\n    `mlegSecKey3_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'leg #3',\n    `mlegSecKey3_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'leg #3',\n    `mlegSecKey3_xx` DOUBLE NOT NULL DEFAULT 0 COMMENT 'leg #3',\n    `mlegSecKey3_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call' COMMENT 'leg #3',\n    `mlegSecType3` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None',\n    `mlegMult3` SMALLINT UNSIGNED NOT NULL DEFAULT 0,\n    `mlegSide3` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'None',\n    `mlegLegId3` BIGINT NOT NULL DEFAULT 0 COMMENT 'SR leg Id',\n    `mlegAltLegId3` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'client leg Id (usually from a FIX order)',\n    `mlegPosType3` ENUM('None','Opening','Closing','Auto') NOT NULL DEFAULT 'None',\n    `mlegSsaleFlag3` ENUM('None','Long','Short','Exempt','Auto','Open','Close','Cover','NA') NOT NULL DEFAULT 'None',\n    `mlegVega3` FLOAT NOT NULL DEFAULT 0,\n    `mlegRefUPrc3` DOUBLE NOT NULL DEFAULT 0 COMMENT 'reference underlier price (PrcDe orders)',\n    `mlegRefDelta3` FLOAT NOT NULL DEFAULT 0 COMMENT 'reference delta (for PrcDe order handling)',\n    `mlegRefEarnCnt3` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'reference # of earnings moves before expiration',\n    `mlegSecKey4_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'leg #4',\n    `mlegSecKey4_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'leg #4',\n    `mlegSecKey4_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'leg #4',\n    `mlegSecKey4_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 1900 COMMENT 'leg #4',\n    `mlegSecKey4_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'leg #4',\n    `mlegSecKey4_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'leg #4',\n    `mlegSecKey4_xx` DOUBLE NOT NULL DEFAULT 0 COMMENT 'leg #4',\n    `mlegSecKey4_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call' COMMENT 'leg #4',\n    `mlegSecType4` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None',\n    `mlegMult4` SMALLINT UNSIGNED NOT NULL DEFAULT 0,\n    `mlegSide4` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'None',\n    `mlegLegId4` BIGINT NOT NULL DEFAULT 0 COMMENT 'SR leg Id',\n    `mlegAltLegId4` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'client leg Id (usually from a FIX order)',\n    `mlegPosType4` ENUM('None','Opening','Closing','Auto') NOT NULL DEFAULT 'None',\n    `mlegSsaleFlag4` ENUM('None','Long','Short','Exempt','Auto','Open','Close','Cover','NA') NOT NULL DEFAULT 'None',\n    `mlegVega4` FLOAT NOT NULL DEFAULT 0,\n    `mlegRefUPrc4` DOUBLE NOT NULL DEFAULT 0 COMMENT 'reference underlier price (PrcDe orders)',\n    `mlegRefDelta4` FLOAT NOT NULL DEFAULT 0 COMMENT 'reference delta (for PrcDe order handling)',\n    `mlegRefEarnCnt4` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'reference # of earnings moves before expiration',\n    `mlegSecKey5_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'leg #5',\n    `mlegSecKey5_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'leg #5',\n    `mlegSecKey5_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'leg #5',\n    `mlegSecKey5_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 1900 COMMENT 'leg #5',\n    `mlegSecKey5_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'leg #5',\n    `mlegSecKey5_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'leg #5',\n    `mlegSecKey5_xx` DOUBLE NOT NULL DEFAULT 0 COMMENT 'leg #5',\n    `mlegSecKey5_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call' COMMENT 'leg #5',\n    `mlegSecType5` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None',\n    `mlegMult5` SMALLINT UNSIGNED NOT NULL DEFAULT 0,\n    `mlegSide5` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'None',\n    `mlegLegId5` BIGINT NOT NULL DEFAULT 0 COMMENT 'SR leg Id',\n    `mlegAltLegId5` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'client leg Id (usually from a FIX order)',\n    `mlegPosType5` ENUM('None','Opening','Closing','Auto') NOT NULL DEFAULT 'None',\n    `mlegSsaleFlag5` ENUM('None','Long','Short','Exempt','Auto','Open','Close','Cover','NA') NOT NULL DEFAULT 'None',\n    `mlegVega5` FLOAT NOT NULL DEFAULT 0,\n    `mlegRefUPrc5` DOUBLE NOT NULL DEFAULT 0 COMMENT 'reference underlier price (PrcDe orders)',\n    `mlegRefDelta5` FLOAT NOT NULL DEFAULT 0 COMMENT 'reference delta (for PrcDe order handling)',\n    `mlegRefEarnCnt5` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'reference # of earnings moves before expiration',\n    `mlegSecKey6_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'leg #6',\n    `mlegSecKey6_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'leg #6',\n    `mlegSecKey6_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'leg #6',\n    `mlegSecKey6_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 1900 COMMENT 'leg #6',\n    `mlegSecKey6_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'leg #6',\n    `mlegSecKey6_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'leg #6',\n    `mlegSecKey6_xx` DOUBLE NOT NULL DEFAULT 0 COMMENT 'leg #6',\n    `mlegSecKey6_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call' COMMENT 'leg #6',\n    `mlegSecType6` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None',\n    `mlegMult6` SMALLINT UNSIGNED NOT NULL DEFAULT 0,\n    `mlegSide6` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'None',\n    `mlegLegId6` BIGINT NOT NULL DEFAULT 0 COMMENT 'SR leg Id',\n    `mlegAltLegId6` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'client leg Id (usually from a FIX order)',\n    `mlegPosType6` ENUM('None','Opening','Closing','Auto') NOT NULL DEFAULT 'None',\n    `mlegSsaleFlag6` ENUM('None','Long','Short','Exempt','Auto','Open','Close','Cover','NA') NOT NULL DEFAULT 'None',\n    `mlegVega6` FLOAT NOT NULL DEFAULT 0,\n    `mlegRefUPrc6` DOUBLE NOT NULL DEFAULT 0 COMMENT 'reference underlier price (PrcDe orders)',\n    `mlegRefDelta6` FLOAT NOT NULL DEFAULT 0 COMMENT 'reference delta (for PrcDe order handling)',\n    `mlegRefEarnCnt6` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'reference # of earnings moves before expiration',\n    `optPremium` FLOAT NOT NULL DEFAULT 0 COMMENT 'The premium for the option legs, a contribution to the order premium. Valid range is [-9999.0, 9999.0]. Default: 0.',\n    `checksum` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Must be set to 13.  This helps detect some column/value misalignments.',\n    CONSTRAINT nonnegative_groupingCode CHECK(ASCII(groupingCode) < 56),\n    CONSTRAINT nonnegative_riskGroupId CHECK(ASCII(riskGroupId) < 56),\n    PRIMARY KEY USING HASH (`secKey_tk`,`secKey_yr`,`secKey_mn`,`secKey_dy`,`secKey_xx`,`secKey_cp`,`secKey_at`,`secKey_ts`,`secType`,`accnt`,`orderSide`,`groupingCode`,`clientFirm`)\n) ENGINE=SRSE DEFAULT CHARSET=LATIN1 COMMENT='Records inserted, updated, or replaced into the ParentOrderGatewayExt table are validated and then converted to SpdrParentOrder records and forwarded to the appropriate execution engine for futher processing.  Parent orders can be inserted as either active/ready or in a wait start mode that requires subsequent release.\\nSee the SpiderRock Execution Engine concept guide for more details.';\n\n"})}),"\n",(0,r.jsx)(n.h3,{id:"select-table-example-query",children:"SELECT TABLE EXAMPLE QUERY"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT\n    `secKey_at`,\n    `secKey_ts`,\n    `secKey_tk`,\n    `secKey_yr`,\n    `secKey_mn`,\n    `secKey_dy`,\n    `secKey_xx`,\n    `secKey_cp`,\n    `secType`,\n    `accnt`,\n    `orderSide`,\n    `groupingCode`,\n    `clientFirm`,\n    `spdrActionType`,\n    `altOrderId`,\n    `altAutoHedgeId`,\n    `altAccnt`,\n    `altUserName`,\n    `accntRouteCode`,\n    `execBrkrCode`,\n    `externExDest`,\n    `externParams`,\n    `strategy`,\n    `securityDesc`,\n    `orderDttm`,\n    `orderSize`,\n    `orderActiveSize`,\n    `curCumFillQuantity`,\n    `addCumFillQuantity`,\n    `exchMask`,\n    `maxExposureSize`,\n    `numMakeExchanges`,\n    `publicSize`,\n    `randomizeSize`,\n    `canOverlapCxlRepl`,\n    `progressRule`,\n    `twapSliceCnt`,\n    `progressExposeTime`,\n    `auctionResponder`,\n    `maxMakeExchFee`,\n    `maxTakeExchFee`,\n    `incTakeExchFee`,\n    `incMakeExchFee`,\n    `makeExchRule`,\n    `minMktOnClosePct`,\n    `triggerType`,\n    `triggerLevel`,\n    `cxlUPrcRange`,\n    `minUBid`,\n    `maxUAsk`,\n    `minMaxType`,\n    `minOptionPx`,\n    `maxChildOrders`,\n    `spdrStageType`,\n    `marketSession`,\n    `startDttm`,\n    `orderDuration`,\n    `activeDuration`,\n    `goodTillDttm`,\n    `startType`,\n    `triggerGroupId`,\n    `triggerTimestamp`,\n    `parentOrderHandling`,\n    `parentBalanceHandling`,\n    `orderLimitType`,\n    `takeLimitClass`,\n    `makeLimitClass`,\n    `takeReachRule`,\n    `leadSide`,\n    `maxCompletionSlippage`,\n    `orderPrcLimit`,\n    `orderRefUPrc`,\n    `orderRefDelta`,\n    `orderRefGamma`,\n    `orderVolLimit`,\n    `rateOverride`,\n    `sdivOverride`,\n    `ddivOverride`,\n    `overrideCode`,\n    `orderPrcOffset`,\n    `orderRefEventMult`,\n    `orderRefEventDttm`,\n    `takeAlphaType`,\n    `makeAlphaType`,\n    `takeAlphaFactor`,\n    `makeAlphaFactor`,\n    `takeProbability`,\n    `makeProbability`,\n    `takeSurfPrcOffset`,\n    `takeSurfVolOffset`,\n    `takeSurfWidthOffset`,\n    `makeSurfPrcOffset`,\n    `makeSurfVolOffset`,\n    `makeSurfWidthOffset`,\n    `autoHedge`,\n    `hedgeInstrument`,\n    `hedgeSecKey_at`,\n    `hedgeSecKey_ts`,\n    `hedgeSecKey_tk`,\n    `hedgeSecKey_yr`,\n    `hedgeSecKey_mn`,\n    `hedgeSecKey_dy`,\n    `hedgeBetaRatio`,\n    `hedgeScope`,\n    `hedgeSession`,\n    `positionType`,\n    `ssaleFlag`,\n    `firmType`,\n    `theoVol`,\n    `riskGroupId`,\n    `reqAuxRiskGroupCtrl`,\n    `refRMetric1Src`,\n    `refRMetric2Src`,\n    `refRMetric3Src`,\n    `refRMetric4Src`,\n    `refRMetric5Src`,\n    `refRMetric6Src`,\n    `refRMetric7Src`,\n    `orderRefRMetric1`,\n    `orderRefRMetric2`,\n    `orderRefRMetric3`,\n    `orderRefRMetric4`,\n    `orderRefRMetric5`,\n    `orderRefRMetric6`,\n    `orderRefRMetric7`,\n    `expDayWtVegaOffset`,\n    `maxExpDayWtVegaLn`,\n    `maxExpDayWtVegaSh`,\n    `maxExpDayRMetric6Ln`,\n    `maxExpDayRMetric6Sh`,\n    `symDayDDeltaOffset`,\n    `maxSymDayDDeltaLn`,\n    `maxSymDayDDeltaSh`,\n    `symDayVegaOffset`,\n    `maxSymDayVegaLn`,\n    `maxSymDayVegaSh`,\n    `symDayWtVegaOffset`,\n    `maxSymDayWtVegaLn`,\n    `maxSymDayWtVegaSh`,\n    `maxSymDayRMetric7Ln`,\n    `maxSymDayRMetric7Sh`,\n    `maxGrpDayDDeltaLn`,\n    `maxGrpDayDDeltaSh`,\n    `maxGrpDayVegaLn`,\n    `maxGrpDayVegaSh`,\n    `maxGrpDayVegaAbs`,\n    `grpDayVegaRatio`,\n    `maxGrpDayContractsLn`,\n    `maxGrpDayContractsSh`,\n    `maxGrpDayContractsAbs`,\n    `maxGrpDayRMetric1Ln`,\n    `maxGrpDayRMetric1Sh`,\n    `maxGrpDayRMetric1Abs`,\n    `grpDayRMetric1Ratio`,\n    `maxGrpDayRMetric2Ln`,\n    `maxGrpDayRMetric2Sh`,\n    `maxGrpDayRMetric3Ln`,\n    `maxGrpDayRMetric3Sh`,\n    `maxGrpDayRMetric4Ln`,\n    `maxGrpDayRMetric4Sh`,\n    `maxGrpDayRMetric5Ln`,\n    `maxGrpDayRMetric5Sh`,\n    `symEmaCxlDDeltaLn`,\n    `symEmaCxlDDeltaSh`,\n    `symEmaCxlWtVegaLn`,\n    `symEmaCxlWtVegaSh`,\n    `traderName`,\n    `userData1`,\n    `userData2`,\n    `childData`,\n    `mlegTicker_at`,\n    `mlegTicker_ts`,\n    `mlegTicker_tk`,\n    `mlegStockSide`,\n    `mlegStockShares`,\n    `mlegStockLegId`,\n    `mlegAltStkLegId`,\n    `mlegSSaleFlag`,\n    `mlegRefUPrc`,\n    `mlegNumLegs`,\n    `mlegSecKey1_at`,\n    `mlegSecKey1_ts`,\n    `mlegSecKey1_tk`,\n    `mlegSecKey1_yr`,\n    `mlegSecKey1_mn`,\n    `mlegSecKey1_dy`,\n    `mlegSecKey1_xx`,\n    `mlegSecKey1_cp`,\n    `mlegSecType1`,\n    `mlegMult1`,\n    `mlegSide1`,\n    `mlegLegId1`,\n    `mlegAltLegId1`,\n    `mlegPosType1`,\n    `mlegSsaleFlag1`,\n    `mlegVega1`,\n    `mlegRefUPrc1`,\n    `mlegRefDelta1`,\n    `mlegRefEarnCnt1`,\n    `mlegSecKey2_at`,\n    `mlegSecKey2_ts`,\n    `mlegSecKey2_tk`,\n    `mlegSecKey2_yr`,\n    `mlegSecKey2_mn`,\n    `mlegSecKey2_dy`,\n    `mlegSecKey2_xx`,\n    `mlegSecKey2_cp`,\n    `mlegSecType2`,\n    `mlegMult2`,\n    `mlegSide2`,\n    `mlegLegId2`,\n    `mlegAltLegId2`,\n    `mlegPosType2`,\n    `mlegSsaleFlag2`,\n    `mlegVega2`,\n    `mlegRefUPrc2`,\n    `mlegRefDelta2`,\n    `mlegRefEarnCnt2`,\n    `mlegSecKey3_at`,\n    `mlegSecKey3_ts`,\n    `mlegSecKey3_tk`,\n    `mlegSecKey3_yr`,\n    `mlegSecKey3_mn`,\n    `mlegSecKey3_dy`,\n    `mlegSecKey3_xx`,\n    `mlegSecKey3_cp`,\n    `mlegSecType3`,\n    `mlegMult3`,\n    `mlegSide3`,\n    `mlegLegId3`,\n    `mlegAltLegId3`,\n    `mlegPosType3`,\n    `mlegSsaleFlag3`,\n    `mlegVega3`,\n    `mlegRefUPrc3`,\n    `mlegRefDelta3`,\n    `mlegRefEarnCnt3`,\n    `mlegSecKey4_at`,\n    `mlegSecKey4_ts`,\n    `mlegSecKey4_tk`,\n    `mlegSecKey4_yr`,\n    `mlegSecKey4_mn`,\n    `mlegSecKey4_dy`,\n    `mlegSecKey4_xx`,\n    `mlegSecKey4_cp`,\n    `mlegSecType4`,\n    `mlegMult4`,\n    `mlegSide4`,\n    `mlegLegId4`,\n    `mlegAltLegId4`,\n    `mlegPosType4`,\n    `mlegSsaleFlag4`,\n    `mlegVega4`,\n    `mlegRefUPrc4`,\n    `mlegRefDelta4`,\n    `mlegRefEarnCnt4`,\n    `mlegSecKey5_at`,\n    `mlegSecKey5_ts`,\n    `mlegSecKey5_tk`,\n    `mlegSecKey5_yr`,\n    `mlegSecKey5_mn`,\n    `mlegSecKey5_dy`,\n    `mlegSecKey5_xx`,\n    `mlegSecKey5_cp`,\n    `mlegSecType5`,\n    `mlegMult5`,\n    `mlegSide5`,\n    `mlegLegId5`,\n    `mlegAltLegId5`,\n    `mlegPosType5`,\n    `mlegSsaleFlag5`,\n    `mlegVega5`,\n    `mlegRefUPrc5`,\n    `mlegRefDelta5`,\n    `mlegRefEarnCnt5`,\n    `mlegSecKey6_at`,\n    `mlegSecKey6_ts`,\n    `mlegSecKey6_tk`,\n    `mlegSecKey6_yr`,\n    `mlegSecKey6_mn`,\n    `mlegSecKey6_dy`,\n    `mlegSecKey6_xx`,\n    `mlegSecKey6_cp`,\n    `mlegSecType6`,\n    `mlegMult6`,\n    `mlegSide6`,\n    `mlegLegId6`,\n    `mlegAltLegId6`,\n    `mlegPosType6`,\n    `mlegSsaleFlag6`,\n    `mlegVega6`,\n    `mlegRefUPrc6`,\n    `mlegRefDelta6`,\n    `mlegRefEarnCnt6`,\n    `optPremium`,\n    `checksum`\nFROM `SRTrade`.`MsgParentOrderGatewayExt`\nWHERE \n    /* Replace with a ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') */\n    `secKey_at` = 'EQT'\n  AND\n    /* Replace with a ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') */\n    `secKey_ts` = 'NMS'\n  AND\n    /* Replace with a VARCHAR(12) */\n    `secKey_tk` = 'Example_secKey_tk'\n  AND\n    /* Replace with a SMALLINT UNSIGNED */ \n    `secKey_yr` = 123\n  AND\n    /* Replace with a TINYINT UNSIGNED */ \n    `secKey_mn` = 1\n  AND\n    /* Replace with a TINYINT UNSIGNED */ \n    `secKey_dy` = 1\n  AND\n    /* Replace with a DOUBLE */ \n    `secKey_xx` = 4.56\n  AND\n    /* Replace with a ENUM('Call','Put','Pair') */ \n    `secKey_cp` = 'Call'\n  AND\n    /* Replace with a ENUM('None','Stock','Future','Option','MLeg') */ \n    `secType` = 'None'\n  AND\n    /* Replace with a VARCHAR(16) */\n    `accnt` = 'Example_accnt'\n  AND\n    /* Replace with a ENUM('None','Buy','Sell') */ \n    `orderSide` = 'None'\n  AND\n    /* Replace with a CHAR(19) */\n    `groupingCode` = 'Example_groupingCode'\n  AND\n    /* Replace with a VARCHAR(16) */ \n    `clientFirm` = 'Example_clientFirm';\n"})}),"\n",(0,r.jsx)(n.h3,{id:"insert-table-example-query",children:"INSERT TABLE EXAMPLE QUERY"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"INSERT INTO `SRTrade`.`MsgParentOrderGatewayExt`(\n    /* Replace with a ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') */\n    `secKey_at`,\n    /* Replace with a ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') */\n    `secKey_ts`,\n    /* Replace with a VARCHAR(12) */\n    `secKey_tk`,\n    /* Replace with a SMALLINT UNSIGNED */ \n    `secKey_yr`,\n    /* Replace with a TINYINT UNSIGNED */ \n    `secKey_mn`,\n    /* Replace with a TINYINT UNSIGNED */ \n    `secKey_dy`,\n    /* Replace with a DOUBLE */ \n    `secKey_xx`,\n    /* Replace with a ENUM('Call','Put','Pair') */ \n    `secKey_cp`,\n    /* Replace with a ENUM('None','Stock','Future','Option','MLeg') */ \n    `secType`,\n    /* Replace with a VARCHAR(16) */\n    `accnt`,\n    /* Replace with a ENUM('None','Buy','Sell') */ \n    `orderSide`,\n    /* Replace with a CHAR(19) */\n    `groupingCode`,\n    /* Replace with a VARCHAR(16) */ \n    `clientFirm`,\n    /* Replace with a ENUM('Add','AddReplace','Replace','Cancel','Modify') */\n    `spdrActionType`,\n    /* Replace with a VARCHAR(24) */\n    `altOrderId`,\n    /* Replace with a VARCHAR(24) */\n    `altAutoHedgeId`,\n    /* Replace with a VARCHAR(32) */\n    `altAccnt`,\n    /* Replace with a VARCHAR(24) */\n    `altUserName`,\n    /* Replace with a TINYTEXT */\n    `accntRouteCode`,\n    /* Replace with a VARCHAR(16) */ \n    `execBrkrCode`,\n    /* Replace with a VARCHAR(16) */\n    `externExDest`,\n    /* Replace with a TINYTEXT */\n    `externParams`,\n    /* Replace with a VARCHAR(36) */\n    `strategy`,\n    /* Replace with a TINYTEXT */ \n    `securityDesc`,\n    /* Replace with a DATETIME(6) */\n    `orderDttm`,\n    /* Replace with a INT */\n    `orderSize`,\n    /* Replace with a INT */\n    `orderActiveSize`,\n    /* Replace with a INT */ \n    `curCumFillQuantity`,\n    /* Replace with a ENUM('Yes','No') */\n    `addCumFillQuantity`,\n    /* Replace with a INT UNSIGNED */\n    `exchMask`,\n    /* Replace with a INT */\n    `maxExposureSize`,\n    /* Replace with a TINYINT UNSIGNED */\n    `numMakeExchanges`,\n    /* Replace with a ENUM('None','Randomize','MktSize','FullSize','MktSizeA','MktSizeB','MktSizeC','FullSizeR') */\n    `publicSize`,\n    /* Replace with a ENUM('Yes','No') */\n    `randomizeSize`,\n    /* Replace with a ENUM('Yes','No') */\n    `canOverlapCxlRepl`,\n    /* Replace with a ENUM('None','Twap','Vwap','TwapReset','VwapReset','FastReset','SlowReset','TwapAlpha','VwapAlpha','TwapAlphaC','VwapAlphaC','AutoComplete','AllowImmediate','Manual','SpdrPulse','IOC') */\n    `progressRule`,\n    /* Replace with a TINYINT UNSIGNED */\n    `twapSliceCnt`,\n    /* Replace with a INT */\n    `progressExposeTime`,\n    /* Replace with a ENUM('None','Any') */\n    `auctionResponder`,\n    /* Replace with a FLOAT */\n    `maxMakeExchFee`,\n    /* Replace with a FLOAT */\n    `maxTakeExchFee`,\n    /* Replace with a ENUM('None','ExclFee','IncFee') */\n    `incTakeExchFee`,\n    /* Replace with a ENUM('None','ExclFee','IncFee') */\n    `incMakeExchFee`,\n    /* Replace with a ENUM('None','MaxPart','FeeOptimal','ImprvOnly','FeeStrict','RoundRobin','ProRataOptim') */\n    `makeExchRule`,\n    /* Replace with a TINYINT UNSIGNED */ \n    `minMktOnClosePct`,\n    /* Replace with a ENUM('None','PrintPrc','PrintVol','SurfVol','PrtSurfVol') */ \n    `triggerType`,\n    /* Replace with a FLOAT */ \n    `triggerLevel`,\n    /* Replace with a ENUM('None','Yes','No','YesHalt','NoHalt') */\n    `cxlUPrcRange`,\n    /* Replace with a FLOAT */\n    `minUBid`,\n    /* Replace with a FLOAT */\n    `maxUAsk`,\n    /* Replace with a ENUM('None','Prc','Pct') */\n    `minMaxType`,\n    /* Replace with a FLOAT */\n    `minOptionPx`,\n    /* Replace with a INT */\n    `maxChildOrders`,\n    /* Replace with a ENUM('None','ModifyAny','ModifyAlgo') */\n    `spdrStageType`,\n    /* Replace with a ENUM('None','PreMkt','RegMkt','PostMkt','PreRegMkt','RegPostMkt','AllDay') */\n    `marketSession`,\n    /* Replace with a DATETIME(6) */\n    `startDttm`,\n    /* Replace with a INT */\n    `orderDuration`,\n    /* Replace with a INT */\n    `activeDuration`,\n    /* Replace with a DATETIME(6) */\n    `goodTillDttm`,\n    /* Replace with a ENUM('None','WaitTrigger') */\n    `startType`,\n    /* Replace with a BIGINT */\n    `triggerGroupId`,\n    /* Replace with a BIGINT */\n    `triggerTimestamp`,\n    /* Replace with a ENUM('None','ActiveTaker','PostOnly','DMA','MktOnOpn','MktOnCls','Facilitate','Matrix','Legger','Seeker','SeekerLegger','CrossResponse','AuctionResponse','MLegAuctionResp','RFQRequest','AwayAlgo','ExchPing','BlockAuction','BlockResponse','SweepTake','CobMaker','FaceOmni','TestParent') */\n    `parentOrderHandling`,\n    /* Replace with a ENUM('None','PostWith','PostTurn','PostImprove','PostLimit','MaxIntern','PostWthF','PostImprvR','PostFlash','PostFlashW','PostPeg','PostFlashI') */\n    `parentBalanceHandling`,\n    /* Replace with a ENUM('None','Market','MarketArrival','Prc','PrcDe','PrcDeX','PrcDeT','PrcDeP','PrcDeXT','PrcDeXP','Vol','VolX','PrcV','PrcVX','NoLimit','RelMid','RelJoin','RelCross','SmrtFast','SmrtNorm','RelTurn','PrcDeEm','VolEm','Aux','UPrcPct','PkgNeutral','RcPrem','SynthLimitMM','SynthLimitBW','SynthLimitWW') */\n    `orderLimitType`,\n    /* Replace with a ENUM('Simple','Surface','Probability','SurfProb') */\n    `takeLimitClass`,\n    /* Replace with a ENUM('Simple','Surface','Probability','SurfProb') */\n    `makeLimitClass`,\n    /* Replace with a ENUM('None','Delayed','Passive','WeakOnly','RespondOnly','FullSize','ISOSweep','AllOrNone','QtyOrMore','UpToQty','AtMost25','AtMost50','MinTakeFee') */\n    `takeReachRule`,\n    /* Replace with a ENUM('None','Buy','Sell') */\n    `leadSide`,\n    /* Replace with a DOUBLE */\n    `maxCompletionSlippage`,\n    /* Replace with a DOUBLE */\n    `orderPrcLimit`,\n    /* Replace with a DOUBLE */\n    `orderRefUPrc`,\n    /* Replace with a FLOAT */\n    `orderRefDelta`,\n    /* Replace with a FLOAT */\n    `orderRefGamma`,\n    /* Replace with a FLOAT */\n    `orderVolLimit`,\n    /* Replace with a FLOAT */\n    `rateOverride`,\n    /* Replace with a FLOAT */\n    `sdivOverride`,\n    /* Replace with a TEXT */\n    `ddivOverride`,\n    /* Replace with a ENUM('None','SDivOnly','DDivOnly','Both') */\n    `overrideCode`,\n    /* Replace with a DOUBLE */\n    `orderPrcOffset`,\n    /* Replace with a FLOAT */ \n    `orderRefEventMult`,\n    /* Replace with a DATETIME(6) */\n    `orderRefEventDttm`,\n    /* Replace with a ENUM('None','Static','Eagle','Hawk','Falcon','Relative') */\n    `takeAlphaType`,\n    /* Replace with a ENUM('None','Static','Eagle','Hawk','Falcon','Relative') */\n    `makeAlphaType`,\n    /* Replace with a FLOAT */\n    `takeAlphaFactor`,\n    /* Replace with a FLOAT */\n    `makeAlphaFactor`,\n    /* Replace with a FLOAT */\n    `takeProbability`,\n    /* Replace with a FLOAT */\n    `makeProbability`,\n    /* Replace with a DOUBLE */\n    `takeSurfPrcOffset`,\n    /* Replace with a FLOAT */\n    `takeSurfVolOffset`,\n    /* Replace with a FLOAT */\n    `takeSurfWidthOffset`,\n    /* Replace with a DOUBLE */\n    `makeSurfPrcOffset`,\n    /* Replace with a FLOAT */\n    `makeSurfVolOffset`,\n    /* Replace with a FLOAT */\n    `makeSurfWidthOffset`,\n    /* Replace with a ENUM('None','Static','AutoMid','AutoCrx','AutoTrn','SpdrAuto','Spdr10S','Spdr30S','Spdr90S','Spdr5M','Spdr30M','SpdrDay','SmartFast','SmartNorm','FastCrx','FastDark','SlowDark','AlphaVwap1pct','AlphaVwap2pct','AlphaVwap5pct','AlphaVwap25pct','Custom','AwayAlgo') */\n    `autoHedge`,\n    /* Replace with a ENUM('None','Default','FrontMonth','Stock','Future') */\n    `hedgeInstrument`,\n    /* Replace with a ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') */\n    `hedgeSecKey_at`,\n    /* Replace with a ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') */\n    `hedgeSecKey_ts`,\n    /* Replace with a VARCHAR(12) */\n    `hedgeSecKey_tk`,\n    /* Replace with a SMALLINT UNSIGNED */\n    `hedgeSecKey_yr`,\n    /* Replace with a TINYINT UNSIGNED */\n    `hedgeSecKey_mn`,\n    /* Replace with a TINYINT UNSIGNED */\n    `hedgeSecKey_dy`,\n    /* Replace with a FLOAT */\n    `hedgeBetaRatio`,\n    /* Replace with a ENUM('None','Accnt','RiskGroup') */\n    `hedgeScope`,\n    /* Replace with a ENUM('None','PreMkt','RegMkt','PostMkt','PreRegMkt','RegPostMkt','AllDay') */\n    `hedgeSession`,\n    /* Replace with a ENUM('Opening','Closing','Auto') */\n    `positionType`,\n    /* Replace with a ENUM('None','Long','Short','Exempt','Cover','Auto','NA') */\n    `ssaleFlag`,\n    /* Replace with a ENUM('None','Customer','Firm','MarketMaker','ProCustomer','BrokerDealer','AwayMM','FirmJBO','BrkrDlrCust') */\n    `firmType`,\n    /* Replace with a FLOAT */\n    `theoVol`,\n    /* Replace with a CHAR(19) */\n    `riskGroupId`,\n    /* Replace with a ENUM('None','Yes','No') */ \n    `reqAuxRiskGroupCtrl`,\n    /* Replace with a ENUM('None','User','Vega','WVega','WTVega','TVega','Theta','Gamma','DGamma','DDeltaIvS','BDDelta','OptDDelta','Premium','Notional') */ \n    `refRMetric1Src`,\n    /* Replace with a ENUM('None','User','Vega','WVega','WTVega','TVega','Theta','Gamma','DGamma','DDeltaIvS','BDDelta','OptDDelta','Premium','Notional') */ \n    `refRMetric2Src`,\n    /* Replace with a ENUM('None','User','Vega','WVega','WTVega','TVega','Theta','Gamma','DGamma','DDeltaIvS','BDDelta','OptDDelta','Premium','Notional') */ \n    `refRMetric3Src`,\n    /* Replace with a ENUM('None','User','Vega','WVega','WTVega','TVega','Theta','Gamma','DGamma','DDeltaIvS','BDDelta','OptDDelta','Premium','Notional') */ \n    `refRMetric4Src`,\n    /* Replace with a ENUM('None','User','Vega','WVega','WTVega','TVega','Theta','Gamma','DGamma','DDeltaIvS','BDDelta','OptDDelta','Premium','Notional') */ \n    `refRMetric5Src`,\n    /* Replace with a ENUM('None','User','Vega','WVega','WTVega','TVega','Theta','Gamma','DGamma','DDeltaIvS','BDDelta','OptDDelta','Premium','Notional') */ \n    `refRMetric6Src`,\n    /* Replace with a ENUM('None','User','Vega','WVega','WTVega','TVega','Theta','Gamma','DGamma','DDeltaIvS','BDDelta','OptDDelta','Premium','Notional') */ \n    `refRMetric7Src`,\n    /* Replace with a FLOAT */ \n    `orderRefRMetric1`,\n    /* Replace with a FLOAT */ \n    `orderRefRMetric2`,\n    /* Replace with a FLOAT */ \n    `orderRefRMetric3`,\n    /* Replace with a FLOAT */ \n    `orderRefRMetric4`,\n    /* Replace with a FLOAT */ \n    `orderRefRMetric5`,\n    /* Replace with a FLOAT */ \n    `orderRefRMetric6`,\n    /* Replace with a FLOAT */ \n    `orderRefRMetric7`,\n    /* Replace with a FLOAT */\n    `expDayWtVegaOffset`,\n    /* Replace with a FLOAT */\n    `maxExpDayWtVegaLn`,\n    /* Replace with a FLOAT */\n    `maxExpDayWtVegaSh`,\n    /* Replace with a FLOAT */\n    `maxExpDayRMetric6Ln`,\n    /* Replace with a FLOAT */\n    `maxExpDayRMetric6Sh`,\n    /* Replace with a FLOAT */\n    `symDayDDeltaOffset`,\n    /* Replace with a FLOAT */\n    `maxSymDayDDeltaLn`,\n    /* Replace with a FLOAT */\n    `maxSymDayDDeltaSh`,\n    /* Replace with a FLOAT */\n    `symDayVegaOffset`,\n    /* Replace with a FLOAT */\n    `maxSymDayVegaLn`,\n    /* Replace with a FLOAT */\n    `maxSymDayVegaSh`,\n    /* Replace with a FLOAT */\n    `symDayWtVegaOffset`,\n    /* Replace with a FLOAT */\n    `maxSymDayWtVegaLn`,\n    /* Replace with a FLOAT */\n    `maxSymDayWtVegaSh`,\n    /* Replace with a FLOAT */\n    `maxSymDayRMetric7Ln`,\n    /* Replace with a FLOAT */\n    `maxSymDayRMetric7Sh`,\n    /* Replace with a FLOAT */\n    `maxGrpDayDDeltaLn`,\n    /* Replace with a FLOAT */\n    `maxGrpDayDDeltaSh`,\n    /* Replace with a FLOAT */\n    `maxGrpDayVegaLn`,\n    /* Replace with a FLOAT */\n    `maxGrpDayVegaSh`,\n    /* Replace with a FLOAT */\n    `maxGrpDayVegaAbs`,\n    /* Replace with a FLOAT */\n    `grpDayVegaRatio`,\n    /* Replace with a INT */\n    `maxGrpDayContractsLn`,\n    /* Replace with a INT */\n    `maxGrpDayContractsSh`,\n    /* Replace with a INT */\n    `maxGrpDayContractsAbs`,\n    /* Replace with a FLOAT */\n    `maxGrpDayRMetric1Ln`,\n    /* Replace with a FLOAT */\n    `maxGrpDayRMetric1Sh`,\n    /* Replace with a FLOAT */\n    `maxGrpDayRMetric1Abs`,\n    /* Replace with a FLOAT */\n    `grpDayRMetric1Ratio`,\n    /* Replace with a FLOAT */\n    `maxGrpDayRMetric2Ln`,\n    /* Replace with a FLOAT */\n    `maxGrpDayRMetric2Sh`,\n    /* Replace with a FLOAT */\n    `maxGrpDayRMetric3Ln`,\n    /* Replace with a FLOAT */\n    `maxGrpDayRMetric3Sh`,\n    /* Replace with a FLOAT */\n    `maxGrpDayRMetric4Ln`,\n    /* Replace with a FLOAT */\n    `maxGrpDayRMetric4Sh`,\n    /* Replace with a FLOAT */\n    `maxGrpDayRMetric5Ln`,\n    /* Replace with a FLOAT */\n    `maxGrpDayRMetric5Sh`,\n    /* Replace with a FLOAT */\n    `symEmaCxlDDeltaLn`,\n    /* Replace with a FLOAT */\n    `symEmaCxlDDeltaSh`,\n    /* Replace with a FLOAT */\n    `symEmaCxlWtVegaLn`,\n    /* Replace with a FLOAT */\n    `symEmaCxlWtVegaSh`,\n    /* Replace with a VARCHAR(32) */\n    `traderName`,\n    /* Replace with a TINYTEXT */\n    `userData1`,\n    /* Replace with a TINYTEXT */\n    `userData2`,\n    /* Replace with a TINYTEXT */\n    `childData`,\n    /* Replace with a ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') */\n    `mlegTicker_at`,\n    /* Replace with a ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') */\n    `mlegTicker_ts`,\n    /* Replace with a VARCHAR(12) */\n    `mlegTicker_tk`,\n    /* Replace with a ENUM('None','Buy','Sell') */\n    `mlegStockSide`,\n    /* Replace with a INT */\n    `mlegStockShares`,\n    /* Replace with a BIGINT */\n    `mlegStockLegId`,\n    /* Replace with a VARCHAR(24) */\n    `mlegAltStkLegId`,\n    /* Replace with a ENUM('None','Long','Short','Exempt','Auto','Open','Close','Cover','NA') */\n    `mlegSSaleFlag`,\n    /* Replace with a FLOAT */\n    `mlegRefUPrc`,\n    /* Replace with a TINYINT UNSIGNED */\n    `mlegNumLegs`,\n    /* Replace with a ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') */\n    `mlegSecKey1_at`,\n    /* Replace with a ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') */\n    `mlegSecKey1_ts`,\n    /* Replace with a VARCHAR(12) */\n    `mlegSecKey1_tk`,\n    /* Replace with a SMALLINT UNSIGNED */\n    `mlegSecKey1_yr`,\n    /* Replace with a TINYINT UNSIGNED */\n    `mlegSecKey1_mn`,\n    /* Replace with a TINYINT UNSIGNED */\n    `mlegSecKey1_dy`,\n    /* Replace with a DOUBLE */\n    `mlegSecKey1_xx`,\n    /* Replace with a ENUM('Call','Put','Pair') */\n    `mlegSecKey1_cp`,\n    /* Replace with a ENUM('None','Stock','Future','Option','MLeg') */\n    `mlegSecType1`,\n    /* Replace with a SMALLINT UNSIGNED */\n    `mlegMult1`,\n    /* Replace with a ENUM('None','Buy','Sell') */\n    `mlegSide1`,\n    /* Replace with a BIGINT */\n    `mlegLegId1`,\n    /* Replace with a VARCHAR(24) */\n    `mlegAltLegId1`,\n    /* Replace with a ENUM('None','Opening','Closing','Auto') */\n    `mlegPosType1`,\n    /* Replace with a ENUM('None','Long','Short','Exempt','Auto','Open','Close','Cover','NA') */\n    `mlegSsaleFlag1`,\n    /* Replace with a FLOAT */\n    `mlegVega1`,\n    /* Replace with a DOUBLE */\n    `mlegRefUPrc1`,\n    /* Replace with a FLOAT */\n    `mlegRefDelta1`,\n    /* Replace with a TINYINT UNSIGNED */\n    `mlegRefEarnCnt1`,\n    /* Replace with a ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') */\n    `mlegSecKey2_at`,\n    /* Replace with a ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') */\n    `mlegSecKey2_ts`,\n    /* Replace with a VARCHAR(12) */\n    `mlegSecKey2_tk`,\n    /* Replace with a SMALLINT UNSIGNED */\n    `mlegSecKey2_yr`,\n    /* Replace with a TINYINT UNSIGNED */\n    `mlegSecKey2_mn`,\n    /* Replace with a TINYINT UNSIGNED */\n    `mlegSecKey2_dy`,\n    /* Replace with a DOUBLE */\n    `mlegSecKey2_xx`,\n    /* Replace with a ENUM('Call','Put','Pair') */\n    `mlegSecKey2_cp`,\n    /* Replace with a ENUM('None','Stock','Future','Option','MLeg') */\n    `mlegSecType2`,\n    /* Replace with a SMALLINT UNSIGNED */\n    `mlegMult2`,\n    /* Replace with a ENUM('None','Buy','Sell') */\n    `mlegSide2`,\n    /* Replace with a BIGINT */\n    `mlegLegId2`,\n    /* Replace with a VARCHAR(24) */\n    `mlegAltLegId2`,\n    /* Replace with a ENUM('None','Opening','Closing','Auto') */\n    `mlegPosType2`,\n    /* Replace with a ENUM('None','Long','Short','Exempt','Auto','Open','Close','Cover','NA') */\n    `mlegSsaleFlag2`,\n    /* Replace with a FLOAT */\n    `mlegVega2`,\n    /* Replace with a DOUBLE */\n    `mlegRefUPrc2`,\n    /* Replace with a FLOAT */\n    `mlegRefDelta2`,\n    /* Replace with a TINYINT UNSIGNED */\n    `mlegRefEarnCnt2`,\n    /* Replace with a ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') */\n    `mlegSecKey3_at`,\n    /* Replace with a ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') */\n    `mlegSecKey3_ts`,\n    /* Replace with a VARCHAR(12) */\n    `mlegSecKey3_tk`,\n    /* Replace with a SMALLINT UNSIGNED */\n    `mlegSecKey3_yr`,\n    /* Replace with a TINYINT UNSIGNED */\n    `mlegSecKey3_mn`,\n    /* Replace with a TINYINT UNSIGNED */\n    `mlegSecKey3_dy`,\n    /* Replace with a DOUBLE */\n    `mlegSecKey3_xx`,\n    /* Replace with a ENUM('Call','Put','Pair') */\n    `mlegSecKey3_cp`,\n    /* Replace with a ENUM('None','Stock','Future','Option','MLeg') */\n    `mlegSecType3`,\n    /* Replace with a SMALLINT UNSIGNED */\n    `mlegMult3`,\n    /* Replace with a ENUM('None','Buy','Sell') */\n    `mlegSide3`,\n    /* Replace with a BIGINT */\n    `mlegLegId3`,\n    /* Replace with a VARCHAR(24) */\n    `mlegAltLegId3`,\n    /* Replace with a ENUM('None','Opening','Closing','Auto') */\n    `mlegPosType3`,\n    /* Replace with a ENUM('None','Long','Short','Exempt','Auto','Open','Close','Cover','NA') */\n    `mlegSsaleFlag3`,\n    /* Replace with a FLOAT */\n    `mlegVega3`,\n    /* Replace with a DOUBLE */\n    `mlegRefUPrc3`,\n    /* Replace with a FLOAT */\n    `mlegRefDelta3`,\n    /* Replace with a TINYINT UNSIGNED */\n    `mlegRefEarnCnt3`,\n    /* Replace with a ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') */\n    `mlegSecKey4_at`,\n    /* Replace with a ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') */\n    `mlegSecKey4_ts`,\n    /* Replace with a VARCHAR(12) */\n    `mlegSecKey4_tk`,\n    /* Replace with a SMALLINT UNSIGNED */\n    `mlegSecKey4_yr`,\n    /* Replace with a TINYINT UNSIGNED */\n    `mlegSecKey4_mn`,\n    /* Replace with a TINYINT UNSIGNED */\n    `mlegSecKey4_dy`,\n    /* Replace with a DOUBLE */\n    `mlegSecKey4_xx`,\n    /* Replace with a ENUM('Call','Put','Pair') */\n    `mlegSecKey4_cp`,\n    /* Replace with a ENUM('None','Stock','Future','Option','MLeg') */\n    `mlegSecType4`,\n    /* Replace with a SMALLINT UNSIGNED */\n    `mlegMult4`,\n    /* Replace with a ENUM('None','Buy','Sell') */\n    `mlegSide4`,\n    /* Replace with a BIGINT */\n    `mlegLegId4`,\n    /* Replace with a VARCHAR(24) */\n    `mlegAltLegId4`,\n    /* Replace with a ENUM('None','Opening','Closing','Auto') */\n    `mlegPosType4`,\n    /* Replace with a ENUM('None','Long','Short','Exempt','Auto','Open','Close','Cover','NA') */\n    `mlegSsaleFlag4`,\n    /* Replace with a FLOAT */\n    `mlegVega4`,\n    /* Replace with a DOUBLE */\n    `mlegRefUPrc4`,\n    /* Replace with a FLOAT */\n    `mlegRefDelta4`,\n    /* Replace with a TINYINT UNSIGNED */\n    `mlegRefEarnCnt4`,\n    /* Replace with a ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') */\n    `mlegSecKey5_at`,\n    /* Replace with a ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') */\n    `mlegSecKey5_ts`,\n    /* Replace with a VARCHAR(12) */\n    `mlegSecKey5_tk`,\n    /* Replace with a SMALLINT UNSIGNED */\n    `mlegSecKey5_yr`,\n    /* Replace with a TINYINT UNSIGNED */\n    `mlegSecKey5_mn`,\n    /* Replace with a TINYINT UNSIGNED */\n    `mlegSecKey5_dy`,\n    /* Replace with a DOUBLE */\n    `mlegSecKey5_xx`,\n    /* Replace with a ENUM('Call','Put','Pair') */\n    `mlegSecKey5_cp`,\n    /* Replace with a ENUM('None','Stock','Future','Option','MLeg') */\n    `mlegSecType5`,\n    /* Replace with a SMALLINT UNSIGNED */\n    `mlegMult5`,\n    /* Replace with a ENUM('None','Buy','Sell') */\n    `mlegSide5`,\n    /* Replace with a BIGINT */\n    `mlegLegId5`,\n    /* Replace with a VARCHAR(24) */\n    `mlegAltLegId5`,\n    /* Replace with a ENUM('None','Opening','Closing','Auto') */\n    `mlegPosType5`,\n    /* Replace with a ENUM('None','Long','Short','Exempt','Auto','Open','Close','Cover','NA') */\n    `mlegSsaleFlag5`,\n    /* Replace with a FLOAT */\n    `mlegVega5`,\n    /* Replace with a DOUBLE */\n    `mlegRefUPrc5`,\n    /* Replace with a FLOAT */\n    `mlegRefDelta5`,\n    /* Replace with a TINYINT UNSIGNED */\n    `mlegRefEarnCnt5`,\n    /* Replace with a ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') */\n    `mlegSecKey6_at`,\n    /* Replace with a ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') */\n    `mlegSecKey6_ts`,\n    /* Replace with a VARCHAR(12) */\n    `mlegSecKey6_tk`,\n    /* Replace with a SMALLINT UNSIGNED */\n    `mlegSecKey6_yr`,\n    /* Replace with a TINYINT UNSIGNED */\n    `mlegSecKey6_mn`,\n    /* Replace with a TINYINT UNSIGNED */\n    `mlegSecKey6_dy`,\n    /* Replace with a DOUBLE */\n    `mlegSecKey6_xx`,\n    /* Replace with a ENUM('Call','Put','Pair') */\n    `mlegSecKey6_cp`,\n    /* Replace with a ENUM('None','Stock','Future','Option','MLeg') */\n    `mlegSecType6`,\n    /* Replace with a SMALLINT UNSIGNED */\n    `mlegMult6`,\n    /* Replace with a ENUM('None','Buy','Sell') */\n    `mlegSide6`,\n    /* Replace with a BIGINT */\n    `mlegLegId6`,\n    /* Replace with a VARCHAR(24) */\n    `mlegAltLegId6`,\n    /* Replace with a ENUM('None','Opening','Closing','Auto') */\n    `mlegPosType6`,\n    /* Replace with a ENUM('None','Long','Short','Exempt','Auto','Open','Close','Cover','NA') */\n    `mlegSsaleFlag6`,\n    /* Replace with a FLOAT */\n    `mlegVega6`,\n    /* Replace with a DOUBLE */\n    `mlegRefUPrc6`,\n    /* Replace with a FLOAT */\n    `mlegRefDelta6`,\n    /* Replace with a TINYINT UNSIGNED */\n    `mlegRefEarnCnt6`,\n    /* Replace with a FLOAT */\n    `optPremium`,\n    /* Replace with a TINYINT UNSIGNED */ \n    `checksum`\n) \nVALUES(\n    'EQT',\n    'NMS',\n    'Example_secKey_tk',\n    123,\n    1,\n    1,\n    4.56,\n    'Call',\n    'None',\n    'Example_accnt',\n    'None',\n    'Example_groupingCode',\n    'Example_clientFirm',\n    'Add',\n    'Example_altOrderId',\n    'Example_altAutoHedgeId',\n    'Example_altAccnt',\n    'Example_altUserName',\n    'dummy tiny text',\n    'Example_execBrkrCode',\n    'Example_externExDest',\n    'dummy tiny text',\n    'Example_strategy',\n    'dummy tiny text',\n    '2022-01-01 12:34:56.000000',\n    5,\n    5,\n    5,\n    'No',\n    0,\n    5,\n    1,\n    'None',\n    'Yes',\n    'No',\n    'None',\n    1,\n    5,\n    'None',\n    1.23,\n    1.23,\n    'None',\n    'None',\n    'None',\n    1,\n    'None',\n    1.23,\n    'None',\n    1.23,\n    1.23,\n    'Prc',\n    1.23,\n    5,\n    'None',\n    'RegMkt',\n    '2022-01-01 12:34:56.000000',\n    5,\n    5,\n    '2022-01-01 12:34:56.000000',\n    'None',\n    1234567890,\n    1234567890,\n    'ActiveTaker',\n    'PostLimit',\n    'Market',\n    'Simple',\n    'Simple',\n    'None',\n    'None',\n    4.56,\n    4.56,\n    4.56,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    'dummy text',\n    'None',\n    4.56,\n    1.23,\n    '2022-01-01 12:34:56.000000',\n    'None',\n    'None',\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    4.56,\n    1.23,\n    1.23,\n    4.56,\n    1.23,\n    1.23,\n    'None',\n    'Default',\n    'EQT',\n    'NMS',\n    'Example_hedgeSecKey_tk',\n    123,\n    1,\n    1,\n    1.23,\n    'RiskGroup',\n    'RegMkt',\n    'Auto',\n    'Auto',\n    'None',\n    1.23,\n    'Example_riskGroupId',\n    'None',\n    'None',\n    'None',\n    'None',\n    'None',\n    'None',\n    'None',\n    'None',\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    5,\n    5,\n    5,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    1.23,\n    'Example_traderName',\n    'dummy tiny text',\n    'dummy tiny text',\n    'dummy tiny text',\n    'None',\n    'None',\n    'Example_mlegTicker_tk',\n    'None',\n    5,\n    1234567890,\n    'Example_mlegAltStkLegId',\n    'None',\n    1.23,\n    1,\n    'None',\n    'None',\n    'Example_mlegSecKey1_tk',\n    123,\n    1,\n    1,\n    4.56,\n    'Call',\n    'None',\n    123,\n    'None',\n    1234567890,\n    'Example_mlegAltLegId1',\n    'None',\n    'None',\n    1.23,\n    4.56,\n    1.23,\n    1,\n    'None',\n    'None',\n    'Example_mlegSecKey2_tk',\n    123,\n    1,\n    1,\n    4.56,\n    'Call',\n    'None',\n    123,\n    'None',\n    1234567890,\n    'Example_mlegAltLegId2',\n    'None',\n    'None',\n    1.23,\n    4.56,\n    1.23,\n    1,\n    'None',\n    'None',\n    'Example_mlegSecKey3_tk',\n    123,\n    1,\n    1,\n    4.56,\n    'Call',\n    'None',\n    123,\n    'None',\n    1234567890,\n    'Example_mlegAltLegId3',\n    'None',\n    'None',\n    1.23,\n    4.56,\n    1.23,\n    1,\n    'None',\n    'None',\n    'Example_mlegSecKey4_tk',\n    123,\n    1,\n    1,\n    4.56,\n    'Call',\n    'None',\n    123,\n    'None',\n    1234567890,\n    'Example_mlegAltLegId4',\n    'None',\n    'None',\n    1.23,\n    4.56,\n    1.23,\n    1,\n    'None',\n    'None',\n    'Example_mlegSecKey5_tk',\n    123,\n    1,\n    1,\n    4.56,\n    'Call',\n    'None',\n    123,\n    'None',\n    1234567890,\n    'Example_mlegAltLegId5',\n    'None',\n    'None',\n    1.23,\n    4.56,\n    1.23,\n    1,\n    'None',\n    'None',\n    'Example_mlegSecKey6_tk',\n    123,\n    1,\n    1,\n    4.56,\n    'Call',\n    'None',\n    123,\n    'None',\n    1234567890,\n    'Example_mlegAltLegId6',\n    'None',\n    'None',\n    1.23,\n    4.56,\n    1.23,\n    1,\n    1.23,\n    1\n);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"delete-table-example-query",children:"DELETE TABLE EXAMPLE QUERY"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"DELETE FROM `SRTrade`.`MsgParentOrderGatewayExt` \nWHERE\n    /* Replace with a ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') */\n    `secKey_at` = 'EQT'\n  AND\n    /* Replace with a ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') */\n    `secKey_ts` = 'NMS'\n  AND\n    /* Replace with a VARCHAR(12) */\n    `secKey_tk` = 'Example_secKey_tk'\n  AND\n    /* Replace with a SMALLINT UNSIGNED */ \n    `secKey_yr` = 123\n  AND\n    /* Replace with a TINYINT UNSIGNED */ \n    `secKey_mn` = 1\n  AND\n    /* Replace with a TINYINT UNSIGNED */ \n    `secKey_dy` = 1\n  AND\n    /* Replace with a DOUBLE */ \n    `secKey_xx` = 4.56\n  AND\n    /* Replace with a ENUM('Call','Put','Pair') */ \n    `secKey_cp` = 'Call'\n  AND\n    /* Replace with a ENUM('None','Stock','Future','Option','MLeg') */ \n    `secType` = 'None'\n  AND\n    /* Replace with a VARCHAR(16) */\n    `accnt` = 'Example_accnt'\n  AND\n    /* Replace with a ENUM('None','Buy','Sell') */ \n    `orderSide` = 'None'\n  AND\n    /* Replace with a CHAR(19) */\n    `groupingCode` = 'Example_groupingCode'\n  AND\n    /* Replace with a VARCHAR(16) */ \n    `clientFirm` = 'Example_clientFirm';\n"})}),"\n",(0,r.jsx)(n.h3,{id:"doc-columns-query",children:"Doc Columns Query"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM SRTrade.doccolumns WHERE TABLE_NAME='ParentOrderGatewayExt' ORDER BY ordinal_position ASC;\n"})})]})}function o(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(x,{...e})}):x(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>s});var r=t(96540);const i={},l=r.createContext(i);function d(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);