"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([["12033"],{56781:function(e,n,s){s.r(n),s.d(n,{default:()=>h,frontMatter:()=>a,metadata:()=>t,assets:()=>c,toc:()=>u,contentTitle:()=>o});var t=JSON.parse('{"id":"MessageSchemas/Schema/Topics/liquidity-notice/ResponderMarkupVegaDir","title":"ResponderMarkupVegaDir","description":"METADATA","source":"@site/docs/MessageSchemas/Schema/Topics/2450-liquidity-notice/ResponderMarkupVegaDir.md","sourceDirName":"MessageSchemas/Schema/Topics/2450-liquidity-notice","slug":"/MessageSchemas/Schema/Topics/liquidity-notice/ResponderMarkupVegaDir","permalink":"/docs/next/MessageSchemas/Schema/Topics/liquidity-notice/ResponderMarkupVegaDir","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"ResponderMarkupVegaDir"},"sidebar":"messageSchemasSidebar","previous":{"title":"ResponderMarkupSN","permalink":"/docs/next/MessageSchemas/Schema/Topics/liquidity-notice/ResponderMarkupSN"},"next":{"title":"2510-market-data-auctions","permalink":"/docs/next/MessageSchemas/Schema/Topics/market-data-auctions/"}}'),i=s("52676"),d=s("91503"),r=s("71386"),l=s("9641");let a={title:"ResponderMarkupVegaDir"},o="Schema: ResponderMarkupVegaDir (ID: 2500)",c={},u=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"REPEATING FIELDS",id:"repeating-fields",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3},{value:"Post Msgs API Call",id:"post-msgs-api-call",level:3}];function m(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsxs)(n.h1,{id:"schema-respondermarkupvegadir-id-2500",children:["Schema: ResponderMarkupVegaDir ",(0,i.jsx)("span",{className:"small-text",children:"(ID: 2500)"})]})}),"\n",(0,i.jsx)(n.h3,{id:"metadata",children:"METADATA"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Attribute"}),(0,i.jsx)(n.th,{children:"Value"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Topic"}),(0,i.jsx)(n.td,{children:"2450-liquidity-notice"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"MLink Token"}),(0,i.jsx)(n.td,{children:"SRATS"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"SRSE Product"}),(0,i.jsx)(n.td,{children:"SRTrade"})]})]})]}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Note:"})," The symbol ",(0,i.jsx)(n.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"body",children:"BODY"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"#"}),(0,i.jsx)(n.th,{children:"Field"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Default Value"}),(0,i.jsx)(n.th,{children:"Comment"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"10="}),(0,i.jsx)(n.td,{children:"accnt"}),(0,i.jsx)(n.td,{children:"string(16)"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"11="}),(0,i.jsx)(n.td,{children:"clientFirm"}),(0,i.jsx)(n.td,{children:"string(16)"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"15="}),(0,i.jsx)(n.td,{children:"root"}),(0,i.jsx)(n.td,{children:"TickerKey"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"13="}),(0,i.jsx)(n.td,{children:"respSide"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"auction responder side (your side)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"16="}),(0,i.jsx)(n.td,{children:"responderID"}),(0,i.jsx)(n.td,{children:"int"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"client supplied responder ID (can be any number including zero)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"100"}),(0,i.jsx)(n.td,{children:"userName"}),(0,i.jsx)(n.td,{children:"string(24)"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"username used for responding to auction notices"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"101"}),(0,i.jsx)(n.td,{children:"isDisabled"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"if Yes, this auto-responder record is disabled"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"137"}),(0,i.jsx)(n.td,{children:"enabledUntil"}),(0,i.jsx)(n.td,{children:"DateTime"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"will be enabled up until this time"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"102"}),(0,i.jsx)(n.td,{children:"canIncludeFlex"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"if yes, can respond to auction notices that include flex option legs"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"103"}),(0,i.jsx)(n.td,{children:"canIncludeStock"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"if yes, can respond to auction notices that include a stock leg"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"178"}),(0,i.jsx)(n.td,{children:"canRespondSR"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"if yes, can respond to auction notices from SR"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"179"}),(0,i.jsx)(n.td,{children:"canRespondExch"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"if yes, can respond to auction notices from exchanges"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"104"}),(0,i.jsx)(n.td,{children:"cpFlag"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"../../../Enums/CallPut",children:"enum : CallPut"})}),(0,i.jsx)(n.td,{children:"Pair"}),(0,i.jsx)(n.td,{children:"if not Pair must match all option legs"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"138"}),(0,i.jsx)(n.td,{children:"minNetVegaRatio"}),(0,i.jsx)(n.td,{children:"float"}),(0,i.jsx)(n.td,{children:"1.0"}),(0,i.jsx)(n.td,{children:"minimum ratio of abs(netVega)/totalVega to enable a response (hard lower limit of 0.25)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"105"}),(0,i.jsx)(n.td,{children:"minYears"}),(0,i.jsx)(n.td,{children:"float"}),(0,i.jsx)(n.td,{children:"0"}),(0,i.jsx)(n.td,{children:"both markup.minYears and markup.maxYears must be between [minYears, maxYears]"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"106"}),(0,i.jsx)(n.td,{children:"maxYears"}),(0,i.jsx)(n.td,{children:"float"}),(0,i.jsx)(n.td,{children:"10.0"}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"107"}),(0,i.jsx)(n.td,{children:"minExpiry"}),(0,i.jsx)(n.td,{children:"DateTime"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"both markup.minExpiry and markup.maxExpiry must be between [minExpiry, maxExpiry]"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"108"}),(0,i.jsx)(n.td,{children:"maxExpiry"}),(0,i.jsx)(n.td,{children:"DateTime"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"109"}),(0,i.jsx)(n.td,{children:"minXDelta"}),(0,i.jsx)(n.td,{children:"float"}),(0,i.jsx)(n.td,{children:"-0.50"}),(0,i.jsx)(n.td,{children:"all leg xDelta must be between [minXDelta, maxXDelta]"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"110"}),(0,i.jsx)(n.td,{children:"maxXDelta"}),(0,i.jsx)(n.td,{children:"float"}),(0,i.jsx)(n.td,{children:"+0.50"}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"111"}),(0,i.jsx)(n.td,{children:"minStrike"}),(0,i.jsx)(n.td,{children:"double"}),(0,i.jsx)(n.td,{children:"0"}),(0,i.jsx)(n.td,{children:"all leg strikes must be between [minStrike, maxStrike]"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"112"}),(0,i.jsx)(n.td,{children:"maxStrike"}),(0,i.jsx)(n.td,{children:"double"}),(0,i.jsx)(n.td,{children:"999999"}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"113"}),(0,i.jsx)(n.td,{children:"minSurfEdgePrem"}),(0,i.jsx)(n.td,{children:"float"}),(0,i.jsx)(n.td,{children:"-99"}),(0,i.jsx)(n.td,{children:"spread surface edge (in premium) (+ = through surface; - = behind surface)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"114"}),(0,i.jsx)(n.td,{children:"minSurfEdgeVol"}),(0,i.jsx)(n.td,{children:"float"}),(0,i.jsx)(n.td,{children:"-99"}),(0,i.jsx)(n.td,{children:"spread surface edge (in vol) (0.01 = 1.0 vol pts) (+ = through surface; - = behind surface)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"184"}),(0,i.jsx)(n.td,{children:"minProbability"}),(0,i.jsx)(n.td,{children:"float"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"option response probability must be >= minProbability"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"115"}),(0,i.jsx)(n.td,{children:"incFeesInResp"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"include all estimated responder fees in final response price"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"116"}),(0,i.jsx)(n.td,{children:"roundRule"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"../../../Enums/RoundRule",children:"enum : RoundRule"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"117"}),(0,i.jsx)(n.td,{children:"maxResponseSize"}),(0,i.jsx)(n.td,{children:"int"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"maximum number of contracts per response (will respond for 100% if auction size <= maxResponseSize)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"118"}),(0,i.jsx)(n.td,{children:"maxResponseVega"}),(0,i.jsx)(n.td,{children:"float"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"maximum total vega per response"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"119"}),(0,i.jsx)(n.td,{children:"totalResponseVega"}),(0,i.jsx)(n.td,{children:"float"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"maximum vega (filled) all day"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"120"}),(0,i.jsx)(n.td,{children:"totalResponseWtVega"}),(0,i.jsx)(n.td,{children:"float"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"maximum wtVega (filled) all day"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"185"}),(0,i.jsx)(n.td,{children:"notMktPenny"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"None or Yes will respond to non-marketable penny name orders"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"186"}),(0,i.jsx)(n.td,{children:"mktPenny1"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"None or Yes will respond to marketable (mkt 1 tick wide) penny name orders"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"187"}),(0,i.jsx)(n.td,{children:"mktPenny2"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"None or Yes will respond to marketable (mkt 2 tick wide) penny name orders"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"188"}),(0,i.jsx)(n.td,{children:"mktPenny3p"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"None or Yes will respond to marketable (mkt 3+ tick wide) penny name orders"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"189"}),(0,i.jsx)(n.td,{children:"notMktNickle"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"None or Yes will respond to non-marketable nickle/dime name orders"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"190"}),(0,i.jsx)(n.td,{children:"mktNickle1"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"None or Yes will respond to marketable (mkt 1 tick wide) nickel/dime name orders"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"191"}),(0,i.jsx)(n.td,{children:"mktNickle2"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"None or Yes will respond to marketable (mkt 2 tick wide) nickel/dime name orders"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"192"}),(0,i.jsx)(n.td,{children:"mktNickle3p"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"None or Yes will respond to marketable (mkt 3+ tick wide) nickel/dime name orders"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"121"}),(0,i.jsx)(n.td,{children:"autoHedge"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"../../../Enums/AutoHedge",children:"enum : AutoHedge"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"122"}),(0,i.jsx)(n.td,{children:"hedgeInstrument"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"../../../Enums/HedgeInst",children:"enum : HedgeInst"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Default=actual underlier (EQT or FUT) [IndexOptions use ETF]; FrontMonth=actual underlier (EQT) or front month (FUT) [IndexOptions use FM Fut]; Stock=hedgeSecKey.TickerKey; Future=hedgeSecKey.ExpiryKey"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"123"}),(0,i.jsx)(n.td,{children:"hedgeSecKey"}),(0,i.jsx)(n.td,{children:"ExpiryKey"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"autohedge instrument (can be a TickerKey (stock) or ExpiryKey (future)) [required for Stock and Future]"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"124"}),(0,i.jsx)(n.td,{children:"hedgeBetaRatio"}),(0,i.jsx)(n.td,{children:"float"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"portion of executed $money to auto-hedge (can be 1.0 / Beta for beta hedging) [-4.0 to +4.0]"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"125"}),(0,i.jsx)(n.td,{children:"hedgeScope"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"../../../Enums/HedgeScope",children:"enum : HedgeScope"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"hedge group scope [RiskGroup or Accnt]"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"126"}),(0,i.jsx)(n.td,{children:"hedgeSession"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"../../../Enums/MarketSession",children:"enum : MarketSession"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"time in force for the autohedge order (can be Day or ExtDay) [None defaults to pOrder.timeInForce]"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"127"}),(0,i.jsx)(n.td,{children:"riskGroupId"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{children:"0"}),(0,i.jsxs)(n.td,{children:["Default: 0 (none).  Required to be non-zero if ",(0,i.jsx)(n.code,{children:"autoHedge"})," is something other than None."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"129"}),(0,i.jsx)(n.td,{children:"numNotices"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number of notices that match response bucket"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"193"}),(0,i.jsx)(n.td,{children:"numNoticeBlock"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number of SR block auction numNotices"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"194"}),(0,i.jsx)(n.td,{children:"numNoticeFlash"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number of SR flash auction numNotices"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"195"}),(0,i.jsx)(n.td,{children:"numNoticeExchPI"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number of Exch Price Improvement auction numNotices"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"196"}),(0,i.jsx)(n.td,{children:"numNoticeExchEX"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number of Exch Exposure auction numNotices"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"197"}),(0,i.jsx)(n.td,{children:"numNotMktPenny"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number auction numNotices"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"198"}),(0,i.jsx)(n.td,{children:"numMktPenny1"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number auction numNotices"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"199"}),(0,i.jsx)(n.td,{children:"numMktPenny2"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number auction numNotices"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"200"}),(0,i.jsx)(n.td,{children:"numMktPenny3p"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number auction numNotices"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"201"}),(0,i.jsx)(n.td,{children:"numNotMktNickle"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number auction numNotices"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"202"}),(0,i.jsx)(n.td,{children:"numMktNickle1"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number auction numNotices"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"203"}),(0,i.jsx)(n.td,{children:"numMktNickle2"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number auction numNotices"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"204"}),(0,i.jsx)(n.td,{children:"numMktNickle3p"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number auction numNotices"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"158"}),(0,i.jsx)(n.td,{children:"respDisabledSkips"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number skipped from isDisabled"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"159"}),(0,i.jsx)(n.td,{children:"stockDisabledSkips"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number skipped from canIncludeStock != Yes"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"160"}),(0,i.jsx)(n.td,{children:"cpFlagSkips"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number skipped from cpFlag not matching notice legs CallPut"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"161"}),(0,i.jsx)(n.td,{children:"expiryRangeSkips"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number skipped from out of range expiry value"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"162"}),(0,i.jsx)(n.td,{children:"yearsRangeSkips"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number skipped from out of range years value"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"163"}),(0,i.jsx)(n.td,{children:"listedFlexSkips"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number skipped from flex/listed filter"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"164"}),(0,i.jsx)(n.td,{children:"noticePriceSkips"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number skipped from limit price filter (exchange only)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"165"}),(0,i.jsx)(n.td,{children:"aggSizeLimitSkips"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number skipped from aggregate contract/vega size limit"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"166"}),(0,i.jsx)(n.td,{children:"riskGroupLimitSkips"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number skipped from riskGroup limits"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"167"}),(0,i.jsx)(n.td,{children:"rootSkips"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number skipped from leg root mismatch"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"168"}),(0,i.jsx)(n.td,{children:"xDeltaRangeSkips"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number skipped from out of range XDelta value"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"169"}),(0,i.jsx)(n.td,{children:"strikeRangeSkips"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number skipped from out of range strike"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"170"}),(0,i.jsx)(n.td,{children:"minVegaRatioSkips"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number skipped from not qualifying ratio netVega/sum(abs(vega))"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"205"}),(0,i.jsx)(n.td,{children:"probabilitySkips"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number skipped from min probability threshold not being met"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"131"}),(0,i.jsx)(n.td,{children:"numResponses"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number of response attempts (number of parentOrders/NoticeExecReports)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"206"}),(0,i.jsx)(n.td,{children:"numRespondsBlock"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number of SR block auction responses"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"207"}),(0,i.jsx)(n.td,{children:"numRespondsFlash"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number of SR flash auction responses"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"208"}),(0,i.jsx)(n.td,{children:"numResponsesExchPI"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number of Exch Price Improvement auction responses"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"209"}),(0,i.jsx)(n.td,{children:"numResponsesExchEX"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number of Exch Exposure auction responses"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"171"}),(0,i.jsx)(n.td,{children:"numFullSize"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"172"}),(0,i.jsx)(n.td,{children:"numAllocSize"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"173"}),(0,i.jsx)(n.td,{children:"numPriceMiss"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"174"}),(0,i.jsx)(n.td,{children:"numTooLate"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"175"}),(0,i.jsx)(n.td,{children:"numOtherMiss"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"176"}),(0,i.jsx)(n.td,{children:"numDidNotTrade"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"210"}),(0,i.jsx)(n.td,{children:"numTraded"}),(0,i.jsx)(n.td,{children:"int"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"132"}),(0,i.jsx)(n.td,{children:"qtyTraded"}),(0,i.jsx)(n.td,{children:"int"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"133"}),(0,i.jsx)(n.td,{children:"vegaTraded"}),(0,i.jsx)(n.td,{children:"double"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"177"}),(0,i.jsx)(n.td,{children:"wtVegaTraded"}),(0,i.jsx)(n.td,{children:"double"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"211"}),(0,i.jsx)(n.td,{children:"sumWidthTraded"}),(0,i.jsx)(n.td,{children:"double"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"SUM: marketWidth * trdQty      => AvgMktWidth = sumWidthTraded / qtyTraded"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"212"}),(0,i.jsx)(n.td,{children:"sumSurfEdgeTraded"}),(0,i.jsx)(n.td,{children:"double"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"SUM: printEdge * trdQty        => AvgPrintEdge = sumSurfEdgeTraded / qtyTraded"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"213"}),(0,i.jsx)(n.td,{children:"sumM1PnLTraded"}),(0,i.jsx)(n.td,{children:"double"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"SUM: M1PnL * trdQty            => AvgM1PnL = sumM1PnLTraded / qtyTraded"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"214"}),(0,i.jsx)(n.td,{children:"sumM10PnLTraded"}),(0,i.jsx)(n.td,{children:"double"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"SUM: M10PnL * trdQty           => AvgM10PnL = sumM10PnLTraded / qtyTraded"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"215"}),(0,i.jsx)(n.td,{children:"numTradedBlock"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number of SR block auctions traded"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"216"}),(0,i.jsx)(n.td,{children:"numTradedFlash"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number of SR flash auctions traded"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"217"}),(0,i.jsx)(n.td,{children:"numTradedExchPI"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number of Exch Price Improvement auctions traded"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"218"}),(0,i.jsx)(n.td,{children:"numTradedExchEX"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number of Exch Exposure auctions traded"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"134"}),(0,i.jsx)(n.td,{children:"modifiedBy"}),(0,i.jsx)(n.td,{children:"string(24)"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"user who last modified this record"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"135"}),(0,i.jsx)(n.td,{children:"modifiedIn"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"../../../Enums/SysEnvironment",children:"enum : SysEnvironment"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"136"}),(0,i.jsx)(n.td,{children:"timestamp"}),(0,i.jsx)(n.td,{children:"DateTime"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"timestamp of last modification"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"repeating-fields",children:"REPEATING FIELDS"}),"\n",(0,i.jsx)(n.p,{children:"CFirmInclFilter"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"#"}),(0,i.jsx)(n.th,{children:"Field"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Default Value"}),(0,i.jsx)(n.th,{children:"Comment"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"181"}),(0,i.jsx)(n.td,{children:"inititorCFirm"}),(0,i.jsx)(n.td,{children:"string(16)"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"<missing> will respond to all initiating client firms; non-empty will only respond if (one of) matches initiator ClientFirm"})]})})]}),"\n",(0,i.jsx)(n.p,{children:"CFirmExclFilter"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"#"}),(0,i.jsx)(n.th,{children:"Field"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Default Value"}),(0,i.jsx)(n.th,{children:"Comment"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"183"}),(0,i.jsx)(n.td,{children:"inititorCFirm"}),(0,i.jsx)(n.td,{children:"string(16)"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"<missing> will not exclude any initiating client firms; non-empty will only respond if (none of) matches initiator ClientFirm"})]})})]}),"\n",(0,i.jsx)(n.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,i.jsxs)(r.Z,{children:[(0,i.jsx)(l.Z,{value:"Python",label:"Python",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'ResponderMarkupVegaDir'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n    # Required Parameters\n    \"apiKey\": API_KEY,\n    \"cmd\": 'getschema',\n    \"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,i.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=ResponderMarkupVegaDir'\n\n"})})})]}),"\n",(0,i.jsx)(n.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,i.jsxs)(r.Z,{children:[(0,i.jsx)(l.Z,{value:"Python",label:"Python",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'ResponderMarkupVegaDir\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'userName|isDisabled|enabledUntil|canIncludeFlex|canIncludeStock|canRespondSR|canRespondExch|cpFlag|minNetVegaRatio|minYears|maxYears|minExpiry|maxExpiry|minXDelta|maxXDelta|minStrike|maxStrike|minSurfEdgePrem|minSurfEdgeVol|minProbability|incFeesInResp|roundRule|maxResponseSize|maxResponseVega|totalResponseVega|totalResponseWtVega|notMktPenny|mktPenny1|mktPenny2|mktPenny3p|notMktNickle|mktNickle1|mktNickle2|mktNickle3p|autoHedge|hedgeInstrument|hedgeSecKey|hedgeBetaRatio|hedgeScope|hedgeSession|riskGroupId|numNotices|numNoticeBlock|numNoticeFlash|numNoticeExchPI|numNoticeExchEX|numNotMktPenny|numMktPenny1|numMktPenny2|numMktPenny3p|numNotMktNickle|numMktNickle1|numMktNickle2|numMktNickle3p|respDisabledSkips|stockDisabledSkips|cpFlagSkips|expiryRangeSkips|yearsRangeSkips|listedFlexSkips|noticePriceSkips|aggSizeLimitSkips|riskGroupLimitSkips|rootSkips|xDeltaRangeSkips|strikeRangeSkips|minVegaRatioSkips|probabilitySkips|numResponses|numRespondsBlock|numRespondsFlash|numResponsesExchPI|numResponsesExchEX|numFullSize|numAllocSize|numPriceMiss|numTooLate|numOtherMiss|numDidNotTrade|numTraded|qtyTraded|vegaTraded|wtVegaTraded|sumWidthTraded|sumSurfEdgeTraded|sumM1PnLTraded|sumM10PnLTraded|numTradedBlock|numTradedFlash|numTradedExchPI|numTradedExchEX|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,i.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=ResponderMarkupVegaDir' \\\n--data-urlencode 'view=userName|isDisabled|enabledUntil|canIncludeFlex|canIncludeStock|canRespondSR|canRespondExch|cpFlag|minNetVegaRatio|minYears|maxYears|minExpiry|maxExpiry|minXDelta|maxXDelta|minStrike|maxStrike|minSurfEdgePrem|minSurfEdgeVol|minProbability|incFeesInResp|roundRule|maxResponseSize|maxResponseVega|totalResponseVega|totalResponseWtVega|notMktPenny|mktPenny1|mktPenny2|mktPenny3p|notMktNickle|mktNickle1|mktNickle2|mktNickle3p|autoHedge|hedgeInstrument|hedgeSecKey|hedgeBetaRatio|hedgeScope|hedgeSession|riskGroupId|numNotices|numNoticeBlock|numNoticeFlash|numNoticeExchPI|numNoticeExchEX|numNotMktPenny|numMktPenny1|numMktPenny2|numMktPenny3p|numNotMktNickle|numMktNickle1|numMktNickle2|numMktNickle3p|respDisabledSkips|stockDisabledSkips|cpFlagSkips|expiryRangeSkips|yearsRangeSkips|listedFlexSkips|noticePriceSkips|aggSizeLimitSkips|riskGroupLimitSkips|rootSkips|xDeltaRangeSkips|strikeRangeSkips|minVegaRatioSkips|probabilitySkips|numResponses|numRespondsBlock|numRespondsFlash|numResponsesExchPI|numResponsesExchEX|numFullSize|numAllocSize|numPriceMiss|numTooLate|numOtherMiss|numDidNotTrade|numTraded|qtyTraded|vegaTraded|wtVegaTraded|sumWidthTraded|sumSurfEdgeTraded|sumM1PnLTraded|sumM10PnLTraded|numTradedBlock|numTradedFlash|numTradedExchPI|numTradedExchEX|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,i.jsx)(n.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,i.jsxs)(r.Z,{children:[(0,i.jsx)(l.Z,{value:"Python",label:"Python",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'ResponderMarkupVegaDir\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'userName|isDisabled|enabledUntil|canIncludeFlex|canIncludeStock|canRespondSR|canRespondExch|cpFlag|minNetVegaRatio|minYears|maxYears|minExpiry|maxExpiry|minXDelta|maxXDelta|minStrike|maxStrike|minSurfEdgePrem|minSurfEdgeVol|minProbability|incFeesInResp|roundRule|maxResponseSize|maxResponseVega|totalResponseVega|totalResponseWtVega|notMktPenny|mktPenny1|mktPenny2|mktPenny3p|notMktNickle|mktNickle1|mktNickle2|mktNickle3p|autoHedge|hedgeInstrument|hedgeSecKey|hedgeBetaRatio|hedgeScope|hedgeSession|riskGroupId|numNotices|numNoticeBlock|numNoticeFlash|numNoticeExchPI|numNoticeExchEX|numNotMktPenny|numMktPenny1|numMktPenny2|numMktPenny3p|numNotMktNickle|numMktNickle1|numMktNickle2|numMktNickle3p|respDisabledSkips|stockDisabledSkips|cpFlagSkips|expiryRangeSkips|yearsRangeSkips|listedFlexSkips|noticePriceSkips|aggSizeLimitSkips|riskGroupLimitSkips|rootSkips|xDeltaRangeSkips|strikeRangeSkips|minVegaRatioSkips|probabilitySkips|numResponses|numRespondsBlock|numRespondsFlash|numResponsesExchPI|numResponsesExchEX|numFullSize|numAllocSize|numPriceMiss|numTooLate|numOtherMiss|numDidNotTrade|numTraded|qtyTraded|vegaTraded|wtVegaTraded|sumWidthTraded|sumSurfEdgeTraded|sumM1PnLTraded|sumM10PnLTraded|numTradedBlock|numTradedFlash|numTradedExchPI|numTradedExchEX|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'userName:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,i.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=ResponderMarkupVegaDir' \\\n--data-urlencode 'view=userName|isDisabled|enabledUntil|canIncludeFlex|canIncludeStock|canRespondSR|canRespondExch|cpFlag|minNetVegaRatio|minYears|maxYears|minExpiry|maxExpiry|minXDelta|maxXDelta|minStrike|maxStrike|minSurfEdgePrem|minSurfEdgeVol|minProbability|incFeesInResp|roundRule|maxResponseSize|maxResponseVega|totalResponseVega|totalResponseWtVega|notMktPenny|mktPenny1|mktPenny2|mktPenny3p|notMktNickle|mktNickle1|mktNickle2|mktNickle3p|autoHedge|hedgeInstrument|hedgeSecKey|hedgeBetaRatio|hedgeScope|hedgeSession|riskGroupId|numNotices|numNoticeBlock|numNoticeFlash|numNoticeExchPI|numNoticeExchEX|numNotMktPenny|numMktPenny1|numMktPenny2|numMktPenny3p|numNotMktNickle|numMktNickle1|numMktNickle2|numMktNickle3p|respDisabledSkips|stockDisabledSkips|cpFlagSkips|expiryRangeSkips|yearsRangeSkips|listedFlexSkips|noticePriceSkips|aggSizeLimitSkips|riskGroupLimitSkips|rootSkips|xDeltaRangeSkips|strikeRangeSkips|minVegaRatioSkips|probabilitySkips|numResponses|numRespondsBlock|numRespondsFlash|numResponsesExchPI|numResponsesExchEX|numFullSize|numAllocSize|numPriceMiss|numTooLate|numOtherMiss|numDidNotTrade|numTraded|qtyTraded|vegaTraded|wtVegaTraded|sumWidthTraded|sumSurfEdgeTraded|sumM1PnLTraded|sumM10PnLTraded|numTradedBlock|numTradedFlash|numTradedExchPI|numTradedExchEX|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'where=accnt:eq:ExampleString' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=userName:ASC'\n"})})})]}),"\n",(0,i.jsx)(n.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,i.jsxs)(r.Z,{children:[(0,i.jsx)(l.Z,{value:"Python",label:"Python",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'ResponderMarkupVegaDir\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'userName|isDisabled|enabledUntil|canIncludeFlex|canIncludeStock|canRespondSR|canRespondExch|cpFlag|minNetVegaRatio|minYears|maxYears|minExpiry|maxExpiry|minXDelta|maxXDelta|minStrike|maxStrike|minSurfEdgePrem|minSurfEdgeVol|minProbability|incFeesInResp|roundRule|maxResponseSize|maxResponseVega|totalResponseVega|totalResponseWtVega|notMktPenny|mktPenny1|mktPenny2|mktPenny3p|notMktNickle|mktNickle1|mktNickle2|mktNickle3p|autoHedge|hedgeInstrument|hedgeSecKey|hedgeBetaRatio|hedgeScope|hedgeSession|riskGroupId|numNotices|numNoticeBlock|numNoticeFlash|numNoticeExchPI|numNoticeExchEX|numNotMktPenny|numMktPenny1|numMktPenny2|numMktPenny3p|numNotMktNickle|numMktNickle1|numMktNickle2|numMktNickle3p|respDisabledSkips|stockDisabledSkips|cpFlagSkips|expiryRangeSkips|yearsRangeSkips|listedFlexSkips|noticePriceSkips|aggSizeLimitSkips|riskGroupLimitSkips|rootSkips|xDeltaRangeSkips|strikeRangeSkips|minVegaRatioSkips|probabilitySkips|numResponses|numRespondsBlock|numRespondsFlash|numResponsesExchPI|numResponsesExchEX|numFullSize|numAllocSize|numPriceMiss|numTooLate|numOtherMiss|numDidNotTrade|numTraded|qtyTraded|vegaTraded|wtVegaTraded|sumWidthTraded|sumSurfEdgeTraded|sumM1PnLTraded|sumM10PnLTraded|numTradedBlock|numTradedFlash|numTradedExchPI|numTradedExchEX|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'isDisabled|canIncludeFlex|canIncludeStock|canRespondSR|canRespondExch|cpFlag|incFeesInResp|roundRule|notMktPenny|mktPenny1|mktPenny2|mktPenny3p|notMktNickle|mktNickle1|mktNickle2|mktNickle3p|autoHedge|hedgeInstrument|hedgeScope|hedgeSession|modifiedIn\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getaggregate\',\n    "msgType": MSG_TYPE,\n    "measure": MEASURE,\n    "group": GROUP,\n    # Optional Parameters\n    "where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,i.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=ResponderMarkupVegaDir' \\\n--data-urlencode 'measure=userName|isDisabled|enabledUntil|canIncludeFlex|canIncludeStock|canRespondSR|canRespondExch|cpFlag|minNetVegaRatio|minYears|maxYears|minExpiry|maxExpiry|minXDelta|maxXDelta|minStrike|maxStrike|minSurfEdgePrem|minSurfEdgeVol|minProbability|incFeesInResp|roundRule|maxResponseSize|maxResponseVega|totalResponseVega|totalResponseWtVega|notMktPenny|mktPenny1|mktPenny2|mktPenny3p|notMktNickle|mktNickle1|mktNickle2|mktNickle3p|autoHedge|hedgeInstrument|hedgeSecKey|hedgeBetaRatio|hedgeScope|hedgeSession|riskGroupId|numNotices|numNoticeBlock|numNoticeFlash|numNoticeExchPI|numNoticeExchEX|numNotMktPenny|numMktPenny1|numMktPenny2|numMktPenny3p|numNotMktNickle|numMktNickle1|numMktNickle2|numMktNickle3p|respDisabledSkips|stockDisabledSkips|cpFlagSkips|expiryRangeSkips|yearsRangeSkips|listedFlexSkips|noticePriceSkips|aggSizeLimitSkips|riskGroupLimitSkips|rootSkips|xDeltaRangeSkips|strikeRangeSkips|minVegaRatioSkips|probabilitySkips|numResponses|numRespondsBlock|numRespondsFlash|numResponsesExchPI|numResponsesExchEX|numFullSize|numAllocSize|numPriceMiss|numTooLate|numOtherMiss|numDidNotTrade|numTraded|qtyTraded|vegaTraded|wtVegaTraded|sumWidthTraded|sumSurfEdgeTraded|sumM1PnLTraded|sumM10PnLTraded|numTradedBlock|numTradedFlash|numTradedExchPI|numTradedExchEX|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'group=isDisabled|canIncludeFlex|canIncludeStock|canRespondSR|canRespondExch|cpFlag|incFeesInResp|roundRule|notMktPenny|mktPenny1|mktPenny2|mktPenny3p|notMktNickle|mktNickle1|mktNickle2|mktNickle3p|autoHedge|hedgeInstrument|hedgeScope|hedgeSession|modifiedIn' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,i.jsx)(n.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,i.jsxs)(r.Z,{children:[(0,i.jsx)(l.Z,{value:"Python",label:"Python",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'ResponderMarkupVegaDir\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,i.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=ResponderMarkupVegaDir' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,i.jsx)(n.h3,{id:"post-msgs-api-call",children:"Post Msgs API Call"}),"\n",(0,i.jsxs)(r.Z,{children:[(0,i.jsx)(l.Z,{value:"Python",label:"Python",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import requests\n\n# Replace with your desired MLINK URL\nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Request Parameters\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'postmsgs\',\n    "postaction": "U", # (U)pdate, (I)nsert, or (R)eplace\n    "postmerge": "Y", # (Y)es or (N)o\n}\n\npayload = {\n    "header": {\n        "mTyp": "ResponderMarkupVegaDir"\n    },\n    "message": {\n        "pkey": {\n            "accnt": "exampleString", // string\n            "clientFirm": "exampleString", // string\n            "root": {\n                "at": "EQT",\n                "ts": "NMS",\n                "tk": "AAPL"\n            },\n            "respSide": "enumValue", // enum(BuySell) - None, Buy, Sell\n            "responderID": 1 // int\n        },\n        "userName": "exampleString", // string\n        "isDisabled": "enumValue", // enum(YesNo) - None, Yes, No\n        "enabledUntil": "2025-01-01 12:00:00.000000", // yyyy-MM-dd HH:mm:ss.SSSSSS\n        "canIncludeFlex": "enumValue", // enum(YesNo) - None, Yes, No\n        "canIncludeStock": "enumValue", // enum(YesNo) - None, Yes, No\n        "canRespondSR": "enumValue", // enum(YesNo) - None, Yes, No\n        "canRespondExch": "enumValue", // enum(YesNo) - None, Yes, No\n        "cpFlag": "Pair", // enum(CallPut) - Call, Put, Pair. Default=Pair\n        "minNetVegaRatio": 1.0, // float. Default=1.0\n        "minYears": 0, // float. Default=0\n        "maxYears": 10.0, // float. Default=10.0\n        "minExpiry": "2025-01-01 12:00:00.000000", // yyyy-MM-dd HH:mm:ss.SSSSSS\n        "maxExpiry": "2025-01-01 12:00:00.000000", // yyyy-MM-dd HH:mm:ss.SSSSSS\n        "minXDelta": -0.50, // float. Default=-0.50\n        "maxXDelta": +0.50, // float. Default=+0.50\n        "minStrike": 0, // double. Default=0\n        "maxStrike": 999999, // double. Default=999999\n        "minSurfEdgePrem": -99, // float. Default=-99\n        "minSurfEdgeVol": -99, // float. Default=-99\n        "minProbability": 1.0, // float\n        "incFeesInResp": "enumValue", // enum(YesNo) - None, Yes, No\n        "roundRule": "enumValue", // enum(RoundRule) - None, Exact, Fuzzy\n        "maxResponseSize": 1, // int\n        "maxResponseVega": 1.0, // float\n        "totalResponseVega": 1.0, // float\n        "totalResponseWtVega": 1.0, // float\n        "notMktPenny": "enumValue", // enum(YesNo) - None, Yes, No\n        "mktPenny1": "enumValue", // enum(YesNo) - None, Yes, No\n        "mktPenny2": "enumValue", // enum(YesNo) - None, Yes, No\n        "mktPenny3p": "enumValue", // enum(YesNo) - None, Yes, No\n        "notMktNickle": "enumValue", // enum(YesNo) - None, Yes, No\n        "mktNickle1": "enumValue", // enum(YesNo) - None, Yes, No\n        "mktNickle2": "enumValue", // enum(YesNo) - None, Yes, No\n        "mktNickle3p": "enumValue", // enum(YesNo) - None, Yes, No\n        "autoHedge": "enumValue", // enum(AutoHedge) - None, Static, AutoMid, AutoCrx, AutoTrn, SpdrAuto, Spdr10S, Spdr30S, Spdr90S, Spdr5M, Spdr30M, SpdrDay, SmartFast, SmartNorm, FastCrx, FastDark, SlowDark, AlphaVwap1pct, AlphaVwap2pct, AlphaVwap5pct, AlphaVwap25pct, Custom, AwayAlgo, EuxMsAlgo\n        "hedgeInstrument": "enumValue", // enum(HedgeInst) - None, Default, FrontMonth, Stock, Future\n        "hedgeSecKey": {\n            "at": "EQT",\n            "ts": "NMS",\n            "tk": "AAPL",\n            "dt": "2025-01-01"\n        },\n        "hedgeBetaRatio": 1.0, // float\n        "hedgeScope": "enumValue", // enum(HedgeScope) - None, Accnt, RiskGroup\n        "hedgeSession": "enumValue", // enum(MarketSession) - None, PreMkt, RegMkt, PostMkt, PreRegMkt, RegPostMkt, AllDay\n        "riskGroupId": 0, // long. Default=0\n        "numNotices": 1, // long\n        "numNoticeBlock": 1, // long\n        "numNoticeFlash": 1, // long\n        "numNoticeExchPI": 1, // long\n        "numNoticeExchEX": 1, // long\n        "numNotMktPenny": 1, // long\n        "numMktPenny1": 1, // long\n        "numMktPenny2": 1, // long\n        "numMktPenny3p": 1, // long\n        "numNotMktNickle": 1, // long\n        "numMktNickle1": 1, // long\n        "numMktNickle2": 1, // long\n        "numMktNickle3p": 1, // long\n        "respDisabledSkips": 1, // long\n        "stockDisabledSkips": 1, // long\n        "cpFlagSkips": 1, // long\n        "expiryRangeSkips": 1, // long\n        "yearsRangeSkips": 1, // long\n        "listedFlexSkips": 1, // long\n        "noticePriceSkips": 1, // long\n        "aggSizeLimitSkips": 1, // long\n        "riskGroupLimitSkips": 1, // long\n        "rootSkips": 1, // long\n        "xDeltaRangeSkips": 1, // long\n        "strikeRangeSkips": 1, // long\n        "minVegaRatioSkips": 1, // long\n        "probabilitySkips": 1, // long\n        "numResponses": 1, // long\n        "numRespondsBlock": 1, // long\n        "numRespondsFlash": 1, // long\n        "numResponsesExchPI": 1, // long\n        "numResponsesExchEX": 1, // long\n        "numFullSize": 1, // long\n        "numAllocSize": 1, // long\n        "numPriceMiss": 1, // long\n        "numTooLate": 1, // long\n        "numOtherMiss": 1, // long\n        "numDidNotTrade": 1, // long\n        "numTraded": 1, // int\n        "qtyTraded": 1, // int\n        "vegaTraded": 1.0, // double\n        "wtVegaTraded": 1.0, // double\n        "sumWidthTraded": 1.0, // double\n        "sumSurfEdgeTraded": 1.0, // double\n        "sumM1PnLTraded": 1.0, // double\n        "sumM10PnLTraded": 1.0, // double\n        "numTradedBlock": 1, // long\n        "numTradedFlash": 1, // long\n        "numTradedExchPI": 1, // long\n        "numTradedExchEX": 1, // long\n        "modifiedBy": "exampleString", // string\n        "modifiedIn": "enumValue", // enum(SysEnvironment) - None, Neptune, Pluto, V7_Stable, V7_Latest, Saturn, Venus, Mars, SysTest, V7_Current\n        "timestamp": "2025-01-01 12:00:00.000000", // yyyy-MM-dd HH:mm:ss.SSSSSS\n        "CFirmInclFilter": [ // Repeating Field\n            {\n                "inititorCFirm": "exampleString" // string\n            }\n        ],\n        "CFirmExclFilter": [ // Repeating Field\n            {\n                "inititorCFirm": "exampleString" // string\n            }\n        ]\n    }\n}\n\nresponse = requests.post(MLINK_PROD_URL, params=params, json=payload)\n'})})}),(0,i.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X POST \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\' \\\n--data-urlencode \'apiKey=XXXX-XXXX-XXXX-XXXX\' \\\n--data-urlencode \'cmd=postmsgs\' \\\n--data-urlencode \'postaction=U\' \\ # (U)pdate, (I)nsert, or (R)eplace\n--data-urlencode \'postmerge=Y\' \\ # (Y)es or (N)o\n--header \'Content-Type: application/json\' \\\n--data \'{\n    "header": {\n        "mTyp": "ResponderMarkupVegaDir"\n    },\n    "message": {\n        "pkey": {\n            "accnt": "exampleString", // string\n            "clientFirm": "exampleString", // string\n            "root": {\n                "at": "EQT",\n                "ts": "NMS",\n                "tk": "AAPL"\n            },\n            "respSide": "enumValue", // enum(BuySell) - None, Buy, Sell\n            "responderID": 1 // int\n        },\n        "userName": "exampleString", // string\n        "isDisabled": "enumValue", // enum(YesNo) - None, Yes, No\n        "enabledUntil": "2025-01-01 12:00:00.000000", // yyyy-MM-dd HH:mm:ss.SSSSSS\n        "canIncludeFlex": "enumValue", // enum(YesNo) - None, Yes, No\n        "canIncludeStock": "enumValue", // enum(YesNo) - None, Yes, No\n        "canRespondSR": "enumValue", // enum(YesNo) - None, Yes, No\n        "canRespondExch": "enumValue", // enum(YesNo) - None, Yes, No\n        "cpFlag": "Pair", // enum(CallPut) - Call, Put, Pair. Default=Pair\n        "minNetVegaRatio": 1.0, // float. Default=1.0\n        "minYears": 0, // float. Default=0\n        "maxYears": 10.0, // float. Default=10.0\n        "minExpiry": "2025-01-01 12:00:00.000000", // yyyy-MM-dd HH:mm:ss.SSSSSS\n        "maxExpiry": "2025-01-01 12:00:00.000000", // yyyy-MM-dd HH:mm:ss.SSSSSS\n        "minXDelta": -0.50, // float. Default=-0.50\n        "maxXDelta": +0.50, // float. Default=+0.50\n        "minStrike": 0, // double. Default=0\n        "maxStrike": 999999, // double. Default=999999\n        "minSurfEdgePrem": -99, // float. Default=-99\n        "minSurfEdgeVol": -99, // float. Default=-99\n        "minProbability": 1.0, // float\n        "incFeesInResp": "enumValue", // enum(YesNo) - None, Yes, No\n        "roundRule": "enumValue", // enum(RoundRule) - None, Exact, Fuzzy\n        "maxResponseSize": 1, // int\n        "maxResponseVega": 1.0, // float\n        "totalResponseVega": 1.0, // float\n        "totalResponseWtVega": 1.0, // float\n        "notMktPenny": "enumValue", // enum(YesNo) - None, Yes, No\n        "mktPenny1": "enumValue", // enum(YesNo) - None, Yes, No\n        "mktPenny2": "enumValue", // enum(YesNo) - None, Yes, No\n        "mktPenny3p": "enumValue", // enum(YesNo) - None, Yes, No\n        "notMktNickle": "enumValue", // enum(YesNo) - None, Yes, No\n        "mktNickle1": "enumValue", // enum(YesNo) - None, Yes, No\n        "mktNickle2": "enumValue", // enum(YesNo) - None, Yes, No\n        "mktNickle3p": "enumValue", // enum(YesNo) - None, Yes, No\n        "autoHedge": "enumValue", // enum(AutoHedge) - None, Static, AutoMid, AutoCrx, AutoTrn, SpdrAuto, Spdr10S, Spdr30S, Spdr90S, Spdr5M, Spdr30M, SpdrDay, SmartFast, SmartNorm, FastCrx, FastDark, SlowDark, AlphaVwap1pct, AlphaVwap2pct, AlphaVwap5pct, AlphaVwap25pct, Custom, AwayAlgo, EuxMsAlgo\n        "hedgeInstrument": "enumValue", // enum(HedgeInst) - None, Default, FrontMonth, Stock, Future\n        "hedgeSecKey": {\n            "at": "EQT",\n            "ts": "NMS",\n            "tk": "AAPL",\n            "dt": "2025-01-01"\n        },\n        "hedgeBetaRatio": 1.0, // float\n        "hedgeScope": "enumValue", // enum(HedgeScope) - None, Accnt, RiskGroup\n        "hedgeSession": "enumValue", // enum(MarketSession) - None, PreMkt, RegMkt, PostMkt, PreRegMkt, RegPostMkt, AllDay\n        "riskGroupId": 0, // long. Default=0\n        "numNotices": 1, // long\n        "numNoticeBlock": 1, // long\n        "numNoticeFlash": 1, // long\n        "numNoticeExchPI": 1, // long\n        "numNoticeExchEX": 1, // long\n        "numNotMktPenny": 1, // long\n        "numMktPenny1": 1, // long\n        "numMktPenny2": 1, // long\n        "numMktPenny3p": 1, // long\n        "numNotMktNickle": 1, // long\n        "numMktNickle1": 1, // long\n        "numMktNickle2": 1, // long\n        "numMktNickle3p": 1, // long\n        "respDisabledSkips": 1, // long\n        "stockDisabledSkips": 1, // long\n        "cpFlagSkips": 1, // long\n        "expiryRangeSkips": 1, // long\n        "yearsRangeSkips": 1, // long\n        "listedFlexSkips": 1, // long\n        "noticePriceSkips": 1, // long\n        "aggSizeLimitSkips": 1, // long\n        "riskGroupLimitSkips": 1, // long\n        "rootSkips": 1, // long\n        "xDeltaRangeSkips": 1, // long\n        "strikeRangeSkips": 1, // long\n        "minVegaRatioSkips": 1, // long\n        "probabilitySkips": 1, // long\n        "numResponses": 1, // long\n        "numRespondsBlock": 1, // long\n        "numRespondsFlash": 1, // long\n        "numResponsesExchPI": 1, // long\n        "numResponsesExchEX": 1, // long\n        "numFullSize": 1, // long\n        "numAllocSize": 1, // long\n        "numPriceMiss": 1, // long\n        "numTooLate": 1, // long\n        "numOtherMiss": 1, // long\n        "numDidNotTrade": 1, // long\n        "numTraded": 1, // int\n        "qtyTraded": 1, // int\n        "vegaTraded": 1.0, // double\n        "wtVegaTraded": 1.0, // double\n        "sumWidthTraded": 1.0, // double\n        "sumSurfEdgeTraded": 1.0, // double\n        "sumM1PnLTraded": 1.0, // double\n        "sumM10PnLTraded": 1.0, // double\n        "numTradedBlock": 1, // long\n        "numTradedFlash": 1, // long\n        "numTradedExchPI": 1, // long\n        "numTradedExchEX": 1, // long\n        "modifiedBy": "exampleString", // string\n        "modifiedIn": "enumValue", // enum(SysEnvironment) - None, Neptune, Pluto, V7_Stable, V7_Latest, Saturn, Venus, Mars, SysTest, V7_Current\n        "timestamp": "2025-01-01 12:00:00.000000", // yyyy-MM-dd HH:mm:ss.SSSSSS\n        "CFirmInclFilter": [ // Repeating Field\n            {\n                "inititorCFirm": "exampleString" // string\n            }\n        ],\n        "CFirmExclFilter": [ // Repeating Field\n            {\n                "inititorCFirm": "exampleString" // string\n            }\n        ]\n    }\n}\'\n'})})})]})]})}function h(e={}){let{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}},9641:function(e,n,s){s.d(n,{Z:()=>d});var t=s("52676");s("75271");var i=s("54461");function d(e){let{children:n,hidden:s,className:d}=e;return(0,t.jsx)("div",{role:"tabpanel",className:(0,i.Z)("tabItem_SSzl",d),hidden:s,children:n})}},71386:function(e,n,s){s.d(n,{Z:()=>k});var t=s("52676"),i=s("75271"),d=s("54461"),r=s("52289"),l=s("3225"),a=s("42834"),o=s("40578"),c=s("35834"),u=s("79616");function m(e){return i.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||i.isValidElement(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h(e){let{value:n,tabValues:s}=e;return s.some(e=>e.value===n)}var x=s("44537");function p(e){let{className:n,block:s,selectedValue:i,selectValue:l,tabValues:a}=e,o=[],{blockElementScrollPositionUntilNextRender:c}=(0,r.o5)(),u=e=>{let n=e.currentTarget,s=a[o.indexOf(n)].value;s!==i&&(c(n),l(s))},m=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{let s=o.indexOf(e.currentTarget)+1;n=o[s]??o[0];break}case"ArrowLeft":{let s=o.indexOf(e.currentTarget)-1;n=o[s]??o[o.length-1]}}n?.focus()};return(0,t.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,d.Z)("tabs",{"tabs--block":s},n),children:a.map(e=>{let{value:n,label:s,attributes:r}=e;return(0,t.jsx)("li",{role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:e=>o.push(e),onKeyDown:m,onClick:u,...r,className:(0,d.Z)("tabs__item","tabItem_aitt",r?.className,{"tabs__item--active":i===n}),children:s??n},n)})})}function j(e){let{lazy:n,children:s,selectedValue:r}=e,l=(Array.isArray(s)?s:[s]).filter(Boolean);if(n){let e=l.find(e=>e.props.value===r);return e?(0,i.cloneElement)(e,{className:(0,d.Z)("margin-top--md",e.props.className)}):null}return(0,t.jsx)("div",{className:"margin-top--md",children:l.map((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==r}))})}function g(e){let n=function(e){let{defaultValue:n,queryString:s=!1,groupId:t}=e,d=function(e){let{values:n,children:s}=e;return(0,i.useMemo)(()=>{let e=n??m(s).map(e=>{let{props:{value:n,label:s,attributes:t,default:i}}=e;return{value:n,label:s,attributes:t,default:i}});return!function(e){let n=(0,c.lx)(e,(e,n)=>e.value===n.value);if(n.length>0)throw Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,s])}(e),[r,x]=(0,i.useState)(()=>(function(e){let{defaultValue:n,tabValues:s}=e;if(0===s.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:s}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${s.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}let t=s.find(e=>e.default)??s[0];if(!t)throw Error("Unexpected error: 0 tabValues");return t.value})({defaultValue:n,tabValues:d})),[p,j]=function(e){let{queryString:n=!1,groupId:s}=e,t=(0,l.k6)(),d=function(e){let{queryString:n=!1,groupId:s}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!s)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return s??null}({queryString:n,groupId:s});return[(0,o._X)(d),(0,i.useCallback)(e=>{if(!d)return;let n=new URLSearchParams(t.location.search);n.set(d,e),t.replace({...t.location,search:n.toString()})},[d,t])]}({queryString:s,groupId:t}),[g,k]=function(e){let{groupId:n}=e,s=n?`docusaurus.tab.${n}`:null,[t,d]=(0,u.Nk)(s);return[t,(0,i.useCallback)(e=>{s&&d.set(e)},[s,d])]}({groupId:t}),S=(()=>{let e=p??g;return h({value:e,tabValues:d})?e:null})();return(0,a.Z)(()=>{S&&x(S)},[S]),{selectedValue:r,selectValue:(0,i.useCallback)(e=>{if(!h({value:e,tabValues:d}))throw Error(`Can't select invalid tab value=${e}`);x(e),j(e),k(e)},[j,k,d]),tabValues:d}}(e);return(0,t.jsxs)("div",{className:(0,d.Z)("tabs-container","tabList_ArS0"),children:[(0,t.jsx)(p,{...n,...e}),(0,t.jsx)(j,{...n,...e})]})}function k(e){let n=(0,x.Z)();return(0,t.jsx)(g,{...e,children:m(e.children)},String(n))}},91503:function(e,n,s){s.d(n,{Z:function(){return l},a:function(){return r}});var t=s(75271);let i={},d=t.createContext(i);function r(e){let n=t.useContext(d);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(d.Provider,{value:n},e.children)}}}]);