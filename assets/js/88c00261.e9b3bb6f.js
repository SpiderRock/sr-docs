"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[74339],{12712:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>h,contentTitle:()=>c,default:()=>j,frontMatter:()=>l,metadata:()=>a,toc:()=>o});var t=r(74848),i=r(28453),d=r(11470),n=r(19365);const l={title:"LiveSurfaceCurve"},c="Schema: LiveSurfaceCurve (ID: 1035)",a={id:"MessageSchemas/Schema/Topics/analytics/LiveSurfaceCurve",title:"LiveSurfaceCurve",description:"LiveSurfaceCurve (surfaceType = 'Live') records are computed and publish continuously during trading hours and represent a current best implied volatility market fit.SurfaceType = 'PriorDay' records contain the `closing surface record from the prior trading period (usually from just before the last main session close).",source:"@site/versioned_docs/version-8.5.3.1/MessageSchemas/Schema/Topics/1000-analytics/LiveSurfaceCurve.md",sourceDirName:"MessageSchemas/Schema/Topics/1000-analytics",slug:"/MessageSchemas/Schema/Topics/analytics/LiveSurfaceCurve",permalink:"/docs/8.5.3.1/MessageSchemas/Schema/Topics/analytics/LiveSurfaceCurve",draft:!1,unlisted:!1,tags:[],version:"8.5.3.1",frontMatter:{title:"LiveSurfaceCurve"},sidebar:"messageSchemasSidebar",previous:{title:"LiveSurfaceAtm",permalink:"/docs/8.5.3.1/MessageSchemas/Schema/Topics/analytics/LiveSurfaceAtm"},next:{title:"LiveSurfaceDetail",permalink:"/docs/8.5.3.1/MessageSchemas/Schema/Topics/analytics/LiveSurfaceDetail"}},h={},o=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3}];function x(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.h1,{id:"schema-livesurfacecurve-id-1035",children:["Schema: LiveSurfaceCurve ",(0,t.jsx)("span",{className:"small-text",children:"(ID: 1035)"})]}),"\n",(0,t.jsxs)(s.p,{children:["LiveSurfaceCurve (surfaceType = 'Live') records are computed and publish continuously during trading hours and represent a current best implied volatility market fit.",(0,t.jsx)("br",{}),(0,t.jsx)("br",{}),"SurfaceType = 'PriorDay' records contain the `closing surface record from the prior trading period (usually from just before the last main session close)."]}),"\n",(0,t.jsx)(s.h3,{id:"metadata",children:"METADATA"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Attribute"}),(0,t.jsx)(s.th,{children:"Value"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Topic"}),(0,t.jsx)(s.td,{children:"1000-analytics"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"MLink Token"}),(0,t.jsx)(s.td,{children:"OptSurface"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"SRSE Product"}),(0,t.jsx)(s.td,{children:"SRAnalytics"})]})]})]}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Note:"})," The symbol ",(0,t.jsx)(s.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"body",children:"BODY"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"#"}),(0,t.jsx)(s.th,{children:"Field"}),(0,t.jsx)(s.th,{children:"Type"}),(0,t.jsx)(s.th,{children:"Comment"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"10="}),(0,t.jsx)(s.td,{children:"ekey"}),(0,t.jsx)(s.td,{children:"ExpiryKey"}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"11="}),(0,t.jsx)(s.td,{children:"surfaceType"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"../../../Enums/SurfaceCurveType",children:"enum : SurfaceCurveType"})}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"100"}),(0,t.jsx)(s.td,{children:"ticker"}),(0,t.jsx)(s.td,{children:"TickerKey"}),(0,t.jsx)(s.td,{children:"underlying stock key that this option expiration attaches to"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"103"}),(0,t.jsx)(s.td,{children:"fkey"}),(0,t.jsx)(s.td,{children:"ExpiryKey"}),(0,t.jsx)(s.td,{children:"underlying future key (if any)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"106"}),(0,t.jsx)(s.td,{children:"uPrcDriverKey"}),(0,t.jsx)(s.td,{children:"ExpiryKey"}),(0,t.jsx)(s.td,{children:"underlier driver key"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"109"}),(0,t.jsx)(s.td,{children:"uPrcDriverType"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"../../../Enums/SpdrKeyType",children:"enum : SpdrKeyType"})}),(0,t.jsx)(s.td,{children:"underlier driver key type (stock or future)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"112"}),(0,t.jsx)(s.td,{children:"uPrcDriver"}),(0,t.jsx)(s.td,{children:"double"}),(0,t.jsx)(s.td,{children:"underlier driver (mid-market)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"115"}),(0,t.jsx)(s.td,{children:"uPrc"}),(0,t.jsx)(s.td,{children:"double"}),(0,t.jsx)(s.td,{children:"effective uPrc used for surface fitting"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"118"}),(0,t.jsx)(s.td,{children:"uBid"}),(0,t.jsx)(s.td,{children:"double"}),(0,t.jsx)(s.td,{children:"effective uBid"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"121"}),(0,t.jsx)(s.td,{children:"uAsk"}),(0,t.jsx)(s.td,{children:"double"}),(0,t.jsx)(s.td,{children:"effective uAsk"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"124"}),(0,t.jsx)(s.td,{children:"years"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"time to expiration (in years)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"127"}),(0,t.jsx)(s.td,{children:"rate"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"average interest rate to expiration (SR global rate curve)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"130"}),(0,t.jsx)(s.td,{children:"sdiv"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"stock dividend (borrow rate)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"133"}),(0,t.jsx)(s.td,{children:"ddiv"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"(expected) cumulative discrete dividend $ amounts prior to expiration"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"136"}),(0,t.jsx)(s.td,{children:"ddivPv"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"(expected) cumulative npv of discrete dividend $ amounts prior to expiration (SR global rate curve)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"139"}),(0,t.jsx)(s.td,{children:"ddivSource"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"../../../Enums/DDivSource",children:"enum : DDivSource"})}),(0,t.jsx)(s.td,{children:"Forecast if any of the dividends prior to expiry are forecast rather than announced"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"142"}),(0,t.jsx)(s.td,{children:"symbolRatio"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"underlier price ratio (usually 1.0 or a multi-hedge option price ratio; if one exists)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"145"}),(0,t.jsx)(s.td,{children:"exType"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"../../../Enums/ExerciseType",children:"enum : ExerciseType"})}),(0,t.jsx)(s.td,{children:"exercise type (American or European)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"148"}),(0,t.jsx)(s.td,{children:"modelType"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"../../../Enums/CalcModelType",children:"enum : CalcModelType"})}),(0,t.jsx)(s.td,{children:"option pricing model used for price calcs (Normal, LogNormal, etc.)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"151"}),(0,t.jsx)(s.td,{children:"priceType"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"../../../Enums/CalcPriceType",children:"enum : CalcPriceType"})}),(0,t.jsx)(s.td,{children:"Equity has independent sdiv and rate, Future has sdiv = rate"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"154"}),(0,t.jsx)(s.td,{children:"earnCnt"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"number of qualifying earnings events prior to expiration [can be fractional] (from StockEarningsCalendar)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"157"}),(0,t.jsx)(s.td,{children:"earnCntAdj"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"number of qualifying earnings events prior to expiration [adjusted] (from StockEarningsCalendar + LiveSurfaceTerm)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"160"}),(0,t.jsx)(s.td,{children:"axisVolRT"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"axis volatility x sqrt(years) (used to compute xAxis) [usually 4m atm vol]"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"163"}),(0,t.jsx)(s.td,{children:"axisFUPrc"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"axis FwdUPrc (fwd underlying price used to compute xAxis)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"164"}),(0,t.jsx)(s.td,{children:"synSpot"}),(0,t.jsx)(s.td,{children:"double"}),(0,t.jsx)(s.td,{children:"Synthetic spot price (market-derived spot when the underlying is not a traded instrument)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"165"}),(0,t.jsx)(s.td,{children:"synCarry"}),(0,t.jsx)(s.td,{children:"double"}),(0,t.jsx)(s.td,{children:"Synthetic carry rate; corresponds to the relationship between uPrc and synSpot (set when the underlying is not a traded instrument)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"166"}),(0,t.jsx)(s.td,{children:"atmStrike"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"synthetic strike with cPrice = pPrice"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"169"}),(0,t.jsx)(s.td,{children:"moneynessType"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"../../../Enums/MoneynessType",children:"enum : MoneynessType"})}),(0,t.jsx)(s.td,{children:"moneyness (xAxis) convention"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"172"}),(0,t.jsx)(s.td,{children:"underlierMode"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"../../../Enums/UnderlierMode",children:"enum : UnderlierMode"})}),(0,t.jsx)(s.td,{children:"underlier pricing mode (None=use spot/stock market; FrontMonth=use front month future market * uPrcRatio; Actual = use actual underlier future market)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"175"}),(0,t.jsx)(s.td,{children:"cpAdjType"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"../../../Enums/CPAdjType",children:"enum : CPAdjType"})}),(0,t.jsx)(s.td,{children:"adjustment used to align calls/puts (if any)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"178"}),(0,t.jsx)(s.td,{children:"priceQuoteType"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"../../../Enums/PriceQuoteType",children:"enum : PriceQuoteType"})}),(0,t.jsx)(s.td,{children:"Price or Vol"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"181"}),(0,t.jsx)(s.td,{children:"atmVol"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"atm vol (xAxis = 0)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"184"}),(0,t.jsx)(s.td,{children:"atmCen"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"atm vol (xAxis = 0) (eMove/earnCntAdj censored)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"187"}),(0,t.jsx)(s.td,{children:"atmVolHist"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"historical realized volatility (includes eMoveHist x earnCntAdj adjustment).  Note that this is the default atmVol if no implied markets existed previous day."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"190"}),(0,t.jsx)(s.td,{children:"atmCenHist"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"censored (earnings events removed) historical realized volatility.  Trailing periods is 2x forward time to expiration.  From HistoricalVolatility(windowType=hlCen).mv_nnn"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"193"}),(0,t.jsx)(s.td,{children:"eMove"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"implied earnings move (from LiveSurfaceTerm)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"196"}),(0,t.jsx)(s.td,{children:"eMoveHist"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"historical earnings move (avg of trailing 8 moves). From StockEarningsCalendar.eMoveHist"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"199"}),(0,t.jsx)(s.td,{children:"uPrcRatio"}),(0,t.jsx)(s.td,{children:"double"}),(0,t.jsx)(s.td,{children:"uPrcAdj = uPrc * uPrcRatioFit"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"202"}),(0,t.jsx)(s.td,{children:"minAtmVol"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"minimum estimated atm vol"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"205"}),(0,t.jsx)(s.td,{children:"maxAtmVol"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"maximum estimated atm vol"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"208"}),(0,t.jsx)(s.td,{children:"minCPAdjVal"}),(0,t.jsx)(s.td,{children:"double"}),(0,t.jsx)(s.td,{children:"minimum cpAdjVal (sdiv or uPrcRatio)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"211"}),(0,t.jsx)(s.td,{children:"maxCPAdjVal"}),(0,t.jsx)(s.td,{children:"double"}),(0,t.jsx)(s.td,{children:"minimum cpAdjVal (sdiv or uPrcRatio)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"214"}),(0,t.jsx)(s.td,{children:"atmFixedMove"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"fixed strike atm move from prior period"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"217"}),(0,t.jsx)(s.td,{children:"atmPhi"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"surface phi @ xAxis = 0"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"220"}),(0,t.jsx)(s.td,{children:"atmRho"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"surface rho @ xAxis = 0"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"223"}),(0,t.jsx)(s.td,{children:"atmVega"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"surface vega @ xAxis = 0"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"226"}),(0,t.jsx)(s.td,{children:"slope"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"volatility surface slope (dVol / dXAxis) @ ATM (xAxis=0)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"229"}),(0,t.jsx)(s.td,{children:"varSwapFV"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"variance swap fair value (estimated by numerical integration over OTM price surface)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"232"}),(0,t.jsx)(s.td,{children:"gridType"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"../../../Enums/GridType",children:"enum : GridType"})}),(0,t.jsx)(s.td,{children:"gridType defines skew curve coeff points + spline type"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"235"}),(0,t.jsx)(s.td,{children:"knotShift"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"constant that should be added to each base knot location [-3.0 - +3.0]"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"238"}),(0,t.jsx)(s.td,{children:"fitPowerC"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"fit power of the vol fit (call wing)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"241"}),(0,t.jsx)(s.td,{children:"fitPowerP"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"fit power of the vol fit (put wing)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"244"}),(0,t.jsx)(s.td,{children:"minXAxis"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"minimum xAxis value; xAxis values to the left extrapolate horizontally"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"247"}),(0,t.jsx)(s.td,{children:"maxXAxis"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"maximum xAxis value; xAxis values to the right extrapolate horizontally"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"250"}),(0,t.jsx)(s.td,{children:"asymptoticVolC"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"asymptotic volatility (call wing)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"253"}),(0,t.jsx)(s.td,{children:"asymptoticVolP"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"asymptotic volatility (put wing)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"256"}),(0,t.jsx)(s.td,{children:"minCurvValue"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"minimum curvature (2nd derivative) of skew curve (can be negative if curve is not strictly convex)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"259"}),(0,t.jsx)(s.td,{children:"minCurvXAxis"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"xAxis of minimum curvature point"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"262"}),(0,t.jsx)(s.td,{children:"maxCurvValue"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"maximum curvature (2nd derivative) of skew curve"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"265"}),(0,t.jsx)(s.td,{children:"maxCurvXAxis"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"xAxis of maximum curvature point"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"268"}),(0,t.jsx)(s.td,{children:"skewMinX"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"xAxis = (effStrike / effAxisFUPrc - 1.0) / axisVolRT; effStrike = strike * strikeRatio; effAxisFUPrc = axisFUPrc * symbolRatio"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"271"}),(0,t.jsx)(s.td,{children:"skewMinY"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"skewMinX / skewMinY are the skew curve minimum point (usually a positive x value and a negative y value)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"274"}),(0,t.jsx)(s.td,{children:"surfaceFit"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"../../../Enums/SurfaceFit",children:"enum : SurfaceFit"})}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"277"}),(0,t.jsx)(s.td,{children:"skewC00"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"curve coeff[0]"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"280"}),(0,t.jsx)(s.td,{children:"skewC01"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"curve coeff[1]"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"283"}),(0,t.jsx)(s.td,{children:"skewC02"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"286"}),(0,t.jsx)(s.td,{children:"skewC03"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"289"}),(0,t.jsx)(s.td,{children:"skewC04"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"292"}),(0,t.jsx)(s.td,{children:"skewC05"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"295"}),(0,t.jsx)(s.td,{children:"skewC06"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"298"}),(0,t.jsx)(s.td,{children:"skewC07"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"301"}),(0,t.jsx)(s.td,{children:"skewC08"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"304"}),(0,t.jsx)(s.td,{children:"skewC09"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"307"}),(0,t.jsx)(s.td,{children:"skewC10"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"310"}),(0,t.jsx)(s.td,{children:"skewC11"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"313"}),(0,t.jsx)(s.td,{children:"skewC12"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"316"}),(0,t.jsx)(s.td,{children:"skewC13"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"319"}),(0,t.jsx)(s.td,{children:"skewC14"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"322"}),(0,t.jsx)(s.td,{children:"skewC15"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"325"}),(0,t.jsx)(s.td,{children:"skewC16"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"328"}),(0,t.jsx)(s.td,{children:"skewC17"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"331"}),(0,t.jsx)(s.td,{children:"skewC18"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"334"}),(0,t.jsx)(s.td,{children:"skewC19"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"337"}),(0,t.jsx)(s.td,{children:"skewC20"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"340"}),(0,t.jsx)(s.td,{children:"skewC21"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"343"}),(0,t.jsx)(s.td,{children:"skewC22"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"346"}),(0,t.jsx)(s.td,{children:"skewC23"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"349"}),(0,t.jsx)(s.td,{children:"skewC24"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"352"}),(0,t.jsx)(s.td,{children:"skewC25"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"355"}),(0,t.jsx)(s.td,{children:"skewC26"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"358"}),(0,t.jsx)(s.td,{children:"skewC27"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"361"}),(0,t.jsx)(s.td,{children:"skewC28"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"364"}),(0,t.jsx)(s.td,{children:"ivAdjD07"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"xAxis = -5.0"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"367"}),(0,t.jsx)(s.td,{children:"ivAdjD06"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"xAxis = -4.0"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"370"}),(0,t.jsx)(s.td,{children:"ivAdjD05"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"xAxis = -3.0"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"373"}),(0,t.jsx)(s.td,{children:"ivAdjD04"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"xAxis = -2.0"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"376"}),(0,t.jsx)(s.td,{children:"ivAdjD03"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"xAxis = -1.5"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"379"}),(0,t.jsx)(s.td,{children:"ivAdjD02"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"xAxis = -1.0"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"382"}),(0,t.jsx)(s.td,{children:"ivAdjD01"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"xAxis = -0.5"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"385"}),(0,t.jsx)(s.td,{children:"ivAdjU01"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"xAxis = +0.5"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"388"}),(0,t.jsx)(s.td,{children:"ivAdjU02"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"xAxis = +1.0"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"391"}),(0,t.jsx)(s.td,{children:"ivAdjU03"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"xAxis = +1.5"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"394"}),(0,t.jsx)(s.td,{children:"ivAdjU04"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"xAxis = +2.0"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"397"}),(0,t.jsx)(s.td,{children:"ivAdjU05"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"xAxis = +3.0"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"400"}),(0,t.jsx)(s.td,{children:"ivAdjU06"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"xAxis = +4.0"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"403"}),(0,t.jsx)(s.td,{children:"ivAdjU07"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"xAxis = +5.0"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"406"}),(0,t.jsx)(s.td,{children:"cpAdjD04"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"xAxis = -4.0"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"409"}),(0,t.jsx)(s.td,{children:"cpAdjD03"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"xAxis = -3.0"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"412"}),(0,t.jsx)(s.td,{children:"cpAdjD02"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"xAxis = -2.0"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"415"}),(0,t.jsx)(s.td,{children:"cpAdjD01"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"xAxis = -1.0"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"418"}),(0,t.jsx)(s.td,{children:"cpAdjU01"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"xAxis = +1.0"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"421"}),(0,t.jsx)(s.td,{children:"cpAdjU02"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"xAxis = +2.0"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"424"}),(0,t.jsx)(s.td,{children:"cpAdjU03"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"xAxis = +3.0"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"427"}),(0,t.jsx)(s.td,{children:"cpAdjU04"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"xAxis = +4.0"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"430"}),(0,t.jsx)(s.td,{children:"pwidth"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"minimum mkt premium width"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"433"}),(0,t.jsx)(s.td,{children:"vwidth"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"minimum mkt volatility width"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"436"}),(0,t.jsx)(s.td,{children:"cCnt"}),(0,t.jsx)(s.td,{children:"byte"}),(0,t.jsx)(s.td,{children:"num call strikes in base fit"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"439"}),(0,t.jsx)(s.td,{children:"pCnt"}),(0,t.jsx)(s.td,{children:"byte"}),(0,t.jsx)(s.td,{children:"num put strikes in base fit"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"442"}),(0,t.jsx)(s.td,{children:"cBidMiss"}),(0,t.jsx)(s.td,{children:"byte"}),(0,t.jsx)(s.td,{children:"number of call bid violations (surface outside the market)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"445"}),(0,t.jsx)(s.td,{children:"cAskMiss"}),(0,t.jsx)(s.td,{children:"byte"}),(0,t.jsx)(s.td,{children:"number of call ask violations (surface outside the market)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"448"}),(0,t.jsx)(s.td,{children:"pBidMiss"}),(0,t.jsx)(s.td,{children:"byte"}),(0,t.jsx)(s.td,{children:"number of put bid violations"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"451"}),(0,t.jsx)(s.td,{children:"pAskMiss"}),(0,t.jsx)(s.td,{children:"byte"}),(0,t.jsx)(s.td,{children:"number of put ask violations"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"454"}),(0,t.jsx)(s.td,{children:"fitAvgErr"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"average error (sPrc - midPrc)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"457"}),(0,t.jsx)(s.td,{children:"fitAvgAbsErr"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"average absolute error (sPrc - midPrc)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"460"}),(0,t.jsx)(s.td,{children:"fitMaxPrcErr"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"worst case surface premium violation"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"463"}),(0,t.jsx)(s.td,{children:"fitErrXX"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"okey_xx of the option with the largest fit error in this expiration"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"466"}),(0,t.jsx)(s.td,{children:"fitErrCP"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"../../../Enums/CallPut",children:"enum : CallPut"})}),(0,t.jsx)(s.td,{children:"okey_cp of the option with the largest fit error in this expiration"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"469"}),(0,t.jsx)(s.td,{children:"fitErrDe"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"delta of fixErrXX"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"472"}),(0,t.jsx)(s.td,{children:"fitErrBid"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"bid of the option with the largest fit error"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"475"}),(0,t.jsx)(s.td,{children:"fitErrAsk"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"ask of the option with the largest fit error"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"478"}),(0,t.jsx)(s.td,{children:"fitErrPrc"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"surface prc of the option with the largest fit error"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"481"}),(0,t.jsx)(s.td,{children:"fitErrVol"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"surface vol of the option with the largest fit error"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"484"}),(0,t.jsx)(s.td,{children:"numSaddlePts"}),(0,t.jsx)(s.td,{children:"byte"}),(0,t.jsx)(s.td,{children:"number of saddle points"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"487"}),(0,t.jsx)(s.td,{children:"minSaddleSpan"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"smallest distance between saddle points"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"490"}),(0,t.jsx)(s.td,{children:"maxSaddleCurvature"}),(0,t.jsx)(s.td,{children:"float"}),(0,t.jsx)(s.td,{children:"maximum saddle point curvature"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"493"}),(0,t.jsx)(s.td,{children:"skewCounter"}),(0,t.jsx)(s.td,{children:"int"}),(0,t.jsx)(s.td,{children:"skew surface fit counter"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"496"}),(0,t.jsx)(s.td,{children:"sdivCounter"}),(0,t.jsx)(s.td,{children:"int"}),(0,t.jsx)(s.td,{children:"sdiv surface fit counter"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"515"}),(0,t.jsx)(s.td,{children:"tradingSession"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"../../../Enums/TradingSession",children:"enum : TradingSession"})}),(0,t.jsx)(s.td,{children:"trading session this surface is from"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"502"}),(0,t.jsx)(s.td,{children:"tradeableStatus"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"../../../Enums/TradeableStatus",children:"enum : TradeableStatus"})}),(0,t.jsx)(s.td,{children:"indicates whether the surface is currently tradeable or not (all server surface integrity checks pass)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"505"}),(0,t.jsx)(s.td,{children:"surfaceResult"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"../../../Enums/SurfaceResult",children:"enum : SurfaceResult"})}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"508"}),(0,t.jsx)(s.td,{children:"sTimestamp"}),(0,t.jsx)(s.td,{children:"DateTime"}),(0,t.jsx)(s.td,{children:"last surface curve fit timestamp"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"511"}),(0,t.jsx)(s.td,{children:"time"}),(0,t.jsx)(s.td,{children:"TimeSpan"}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"514"}),(0,t.jsx)(s.td,{children:"timestamp"}),(0,t.jsx)(s.td,{children:"DateTime"}),(0,t.jsx)(s.td,{})]})]})]}),"\n",(0,t.jsx)(s.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,t.jsxs)(d.A,{children:[(0,t.jsx)(n.A,{value:"Python",label:"Python",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'LiveSurfaceCurve'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n    # Required Parameters\n    \"apiKey\": API_KEY,\n    \"cmd\": 'getschema',\n    \"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,t.jsx)(n.A,{value:"cUrl",label:"cUrl",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=LiveSurfaceCurve'\n\n"})})})]}),"\n",(0,t.jsx)(s.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,t.jsxs)(d.A,{children:[(0,t.jsx)(n.A,{value:"Python",label:"Python",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'LiveSurfaceCurve\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'ticker|fkey|uPrcDriverKey|uPrcDriverType|uPrcDriver|uPrc|uBid|uAsk|years|rate|sdiv|ddiv|ddivPv|ddivSource|symbolRatio|exType|modelType|priceType|earnCnt|earnCntAdj|axisVolRT|axisFUPrc|synSpot|synCarry|atmStrike|moneynessType|underlierMode|cpAdjType|priceQuoteType|atmVol|atmCen|atmVolHist|atmCenHist|eMove|eMoveHist|uPrcRatio|minAtmVol|maxAtmVol|minCPAdjVal|maxCPAdjVal|atmFixedMove|atmPhi|atmRho|atmVega|slope|varSwapFV|gridType|knotShift|fitPowerC|fitPowerP|minXAxis|maxXAxis|asymptoticVolC|asymptoticVolP|minCurvValue|minCurvXAxis|maxCurvValue|maxCurvXAxis|skewMinX|skewMinY|surfaceFit|skewC00|skewC01|skewC02|skewC03|skewC04|skewC05|skewC06|skewC07|skewC08|skewC09|skewC10|skewC11|skewC12|skewC13|skewC14|skewC15|skewC16|skewC17|skewC18|skewC19|skewC20|skewC21|skewC22|skewC23|skewC24|skewC25|skewC26|skewC27|skewC28|ivAdjD07|ivAdjD06|ivAdjD05|ivAdjD04|ivAdjD03|ivAdjD02|ivAdjD01|ivAdjU01|ivAdjU02|ivAdjU03|ivAdjU04|ivAdjU05|ivAdjU06|ivAdjU07|cpAdjD04|cpAdjD03|cpAdjD02|cpAdjD01|cpAdjU01|cpAdjU02|cpAdjU03|cpAdjU04|pwidth|vwidth|cCnt|pCnt|cBidMiss|cAskMiss|pBidMiss|pAskMiss|fitAvgErr|fitAvgAbsErr|fitMaxPrcErr|fitErrXX|fitErrCP|fitErrDe|fitErrBid|fitErrAsk|fitErrPrc|fitErrVol|numSaddlePts|minSaddleSpan|maxSaddleCurvature|skewCounter|sdivCounter|tradingSession|tradeableStatus|surfaceResult|sTimestamp|time|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,t.jsx)(n.A,{value:"cUrl",label:"cUrl",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=LiveSurfaceCurve' \\\n--data-urlencode 'view=ticker|fkey|uPrcDriverKey|uPrcDriverType|uPrcDriver|uPrc|uBid|uAsk|years|rate|sdiv|ddiv|ddivPv|ddivSource|symbolRatio|exType|modelType|priceType|earnCnt|earnCntAdj|axisVolRT|axisFUPrc|synSpot|synCarry|atmStrike|moneynessType|underlierMode|cpAdjType|priceQuoteType|atmVol|atmCen|atmVolHist|atmCenHist|eMove|eMoveHist|uPrcRatio|minAtmVol|maxAtmVol|minCPAdjVal|maxCPAdjVal|atmFixedMove|atmPhi|atmRho|atmVega|slope|varSwapFV|gridType|knotShift|fitPowerC|fitPowerP|minXAxis|maxXAxis|asymptoticVolC|asymptoticVolP|minCurvValue|minCurvXAxis|maxCurvValue|maxCurvXAxis|skewMinX|skewMinY|surfaceFit|skewC00|skewC01|skewC02|skewC03|skewC04|skewC05|skewC06|skewC07|skewC08|skewC09|skewC10|skewC11|skewC12|skewC13|skewC14|skewC15|skewC16|skewC17|skewC18|skewC19|skewC20|skewC21|skewC22|skewC23|skewC24|skewC25|skewC26|skewC27|skewC28|ivAdjD07|ivAdjD06|ivAdjD05|ivAdjD04|ivAdjD03|ivAdjD02|ivAdjD01|ivAdjU01|ivAdjU02|ivAdjU03|ivAdjU04|ivAdjU05|ivAdjU06|ivAdjU07|cpAdjD04|cpAdjD03|cpAdjD02|cpAdjD01|cpAdjU01|cpAdjU02|cpAdjU03|cpAdjU04|pwidth|vwidth|cCnt|pCnt|cBidMiss|cAskMiss|pBidMiss|pAskMiss|fitAvgErr|fitAvgAbsErr|fitMaxPrcErr|fitErrXX|fitErrCP|fitErrDe|fitErrBid|fitErrAsk|fitErrPrc|fitErrVol|numSaddlePts|minSaddleSpan|maxSaddleCurvature|skewCounter|sdivCounter|tradingSession|tradeableStatus|surfaceResult|sTimestamp|time|timestamp' \\\n--data-urlencode 'where='\n"})})})]}),"\n",(0,t.jsx)(s.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,t.jsxs)(d.A,{children:[(0,t.jsx)(n.A,{value:"Python",label:"Python",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'LiveSurfaceCurve\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'ticker|fkey|uPrcDriverKey|uPrcDriverType|uPrcDriver|uPrc|uBid|uAsk|years|rate|sdiv|ddiv|ddivPv|ddivSource|symbolRatio|exType|modelType|priceType|earnCnt|earnCntAdj|axisVolRT|axisFUPrc|synSpot|synCarry|atmStrike|moneynessType|underlierMode|cpAdjType|priceQuoteType|atmVol|atmCen|atmVolHist|atmCenHist|eMove|eMoveHist|uPrcRatio|minAtmVol|maxAtmVol|minCPAdjVal|maxCPAdjVal|atmFixedMove|atmPhi|atmRho|atmVega|slope|varSwapFV|gridType|knotShift|fitPowerC|fitPowerP|minXAxis|maxXAxis|asymptoticVolC|asymptoticVolP|minCurvValue|minCurvXAxis|maxCurvValue|maxCurvXAxis|skewMinX|skewMinY|surfaceFit|skewC00|skewC01|skewC02|skewC03|skewC04|skewC05|skewC06|skewC07|skewC08|skewC09|skewC10|skewC11|skewC12|skewC13|skewC14|skewC15|skewC16|skewC17|skewC18|skewC19|skewC20|skewC21|skewC22|skewC23|skewC24|skewC25|skewC26|skewC27|skewC28|ivAdjD07|ivAdjD06|ivAdjD05|ivAdjD04|ivAdjD03|ivAdjD02|ivAdjD01|ivAdjU01|ivAdjU02|ivAdjU03|ivAdjU04|ivAdjU05|ivAdjU06|ivAdjU07|cpAdjD04|cpAdjD03|cpAdjD02|cpAdjD01|cpAdjU01|cpAdjU02|cpAdjU03|cpAdjU04|pwidth|vwidth|cCnt|pCnt|cBidMiss|cAskMiss|pBidMiss|pAskMiss|fitAvgErr|fitAvgAbsErr|fitMaxPrcErr|fitErrXX|fitErrCP|fitErrDe|fitErrBid|fitErrAsk|fitErrPrc|fitErrVol|numSaddlePts|minSaddleSpan|maxSaddleCurvature|skewCounter|sdivCounter|tradingSession|tradeableStatus|surfaceResult|sTimestamp|time|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'ticker:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,t.jsx)(n.A,{value:"cUrl",label:"cUrl",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=LiveSurfaceCurve' \\\n--data-urlencode 'view=ticker|fkey|uPrcDriverKey|uPrcDriverType|uPrcDriver|uPrc|uBid|uAsk|years|rate|sdiv|ddiv|ddivPv|ddivSource|symbolRatio|exType|modelType|priceType|earnCnt|earnCntAdj|axisVolRT|axisFUPrc|synSpot|synCarry|atmStrike|moneynessType|underlierMode|cpAdjType|priceQuoteType|atmVol|atmCen|atmVolHist|atmCenHist|eMove|eMoveHist|uPrcRatio|minAtmVol|maxAtmVol|minCPAdjVal|maxCPAdjVal|atmFixedMove|atmPhi|atmRho|atmVega|slope|varSwapFV|gridType|knotShift|fitPowerC|fitPowerP|minXAxis|maxXAxis|asymptoticVolC|asymptoticVolP|minCurvValue|minCurvXAxis|maxCurvValue|maxCurvXAxis|skewMinX|skewMinY|surfaceFit|skewC00|skewC01|skewC02|skewC03|skewC04|skewC05|skewC06|skewC07|skewC08|skewC09|skewC10|skewC11|skewC12|skewC13|skewC14|skewC15|skewC16|skewC17|skewC18|skewC19|skewC20|skewC21|skewC22|skewC23|skewC24|skewC25|skewC26|skewC27|skewC28|ivAdjD07|ivAdjD06|ivAdjD05|ivAdjD04|ivAdjD03|ivAdjD02|ivAdjD01|ivAdjU01|ivAdjU02|ivAdjU03|ivAdjU04|ivAdjU05|ivAdjU06|ivAdjU07|cpAdjD04|cpAdjD03|cpAdjD02|cpAdjD01|cpAdjU01|cpAdjU02|cpAdjU03|cpAdjU04|pwidth|vwidth|cCnt|pCnt|cBidMiss|cAskMiss|pBidMiss|pAskMiss|fitAvgErr|fitAvgAbsErr|fitMaxPrcErr|fitErrXX|fitErrCP|fitErrDe|fitErrBid|fitErrAsk|fitErrPrc|fitErrVol|numSaddlePts|minSaddleSpan|maxSaddleCurvature|skewCounter|sdivCounter|tradingSession|tradeableStatus|surfaceResult|sTimestamp|time|timestamp' \\\n--data-urlencode 'where=' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=ticker:ASC'\n"})})})]}),"\n",(0,t.jsx)(s.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,t.jsxs)(d.A,{children:[(0,t.jsx)(n.A,{value:"Python",label:"Python",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'LiveSurfaceCurve\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'ticker|fkey|uPrcDriverKey|uPrcDriverType|uPrcDriver|uPrc|uBid|uAsk|years|rate|sdiv|ddiv|ddivPv|ddivSource|symbolRatio|exType|modelType|priceType|earnCnt|earnCntAdj|axisVolRT|axisFUPrc|synSpot|synCarry|atmStrike|moneynessType|underlierMode|cpAdjType|priceQuoteType|atmVol|atmCen|atmVolHist|atmCenHist|eMove|eMoveHist|uPrcRatio|minAtmVol|maxAtmVol|minCPAdjVal|maxCPAdjVal|atmFixedMove|atmPhi|atmRho|atmVega|slope|varSwapFV|gridType|knotShift|fitPowerC|fitPowerP|minXAxis|maxXAxis|asymptoticVolC|asymptoticVolP|minCurvValue|minCurvXAxis|maxCurvValue|maxCurvXAxis|skewMinX|skewMinY|surfaceFit|skewC00|skewC01|skewC02|skewC03|skewC04|skewC05|skewC06|skewC07|skewC08|skewC09|skewC10|skewC11|skewC12|skewC13|skewC14|skewC15|skewC16|skewC17|skewC18|skewC19|skewC20|skewC21|skewC22|skewC23|skewC24|skewC25|skewC26|skewC27|skewC28|ivAdjD07|ivAdjD06|ivAdjD05|ivAdjD04|ivAdjD03|ivAdjD02|ivAdjD01|ivAdjU01|ivAdjU02|ivAdjU03|ivAdjU04|ivAdjU05|ivAdjU06|ivAdjU07|cpAdjD04|cpAdjD03|cpAdjD02|cpAdjD01|cpAdjU01|cpAdjU02|cpAdjU03|cpAdjU04|pwidth|vwidth|cCnt|pCnt|cBidMiss|cAskMiss|pBidMiss|pAskMiss|fitAvgErr|fitAvgAbsErr|fitMaxPrcErr|fitErrXX|fitErrCP|fitErrDe|fitErrBid|fitErrAsk|fitErrPrc|fitErrVol|numSaddlePts|minSaddleSpan|maxSaddleCurvature|skewCounter|sdivCounter|tradingSession|tradeableStatus|surfaceResult|sTimestamp|time|timestamp\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'uPrcDriverType|ddivSource|exType|modelType|priceType|moneynessType|underlierMode|cpAdjType|priceQuoteType|gridType|surfaceFit|fitErrCP|tradingSession|tradeableStatus|surfaceResult\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getaggregate\',\n    "msgType": MSG_TYPE,\n    "measure": MEASURE,\n    "group": GROUP,\n    # Optional Parameters\n    "where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,t.jsx)(n.A,{value:"cUrl",label:"cUrl",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=LiveSurfaceCurve' \\\n--data-urlencode 'measure=ticker|fkey|uPrcDriverKey|uPrcDriverType|uPrcDriver|uPrc|uBid|uAsk|years|rate|sdiv|ddiv|ddivPv|ddivSource|symbolRatio|exType|modelType|priceType|earnCnt|earnCntAdj|axisVolRT|axisFUPrc|synSpot|synCarry|atmStrike|moneynessType|underlierMode|cpAdjType|priceQuoteType|atmVol|atmCen|atmVolHist|atmCenHist|eMove|eMoveHist|uPrcRatio|minAtmVol|maxAtmVol|minCPAdjVal|maxCPAdjVal|atmFixedMove|atmPhi|atmRho|atmVega|slope|varSwapFV|gridType|knotShift|fitPowerC|fitPowerP|minXAxis|maxXAxis|asymptoticVolC|asymptoticVolP|minCurvValue|minCurvXAxis|maxCurvValue|maxCurvXAxis|skewMinX|skewMinY|surfaceFit|skewC00|skewC01|skewC02|skewC03|skewC04|skewC05|skewC06|skewC07|skewC08|skewC09|skewC10|skewC11|skewC12|skewC13|skewC14|skewC15|skewC16|skewC17|skewC18|skewC19|skewC20|skewC21|skewC22|skewC23|skewC24|skewC25|skewC26|skewC27|skewC28|ivAdjD07|ivAdjD06|ivAdjD05|ivAdjD04|ivAdjD03|ivAdjD02|ivAdjD01|ivAdjU01|ivAdjU02|ivAdjU03|ivAdjU04|ivAdjU05|ivAdjU06|ivAdjU07|cpAdjD04|cpAdjD03|cpAdjD02|cpAdjD01|cpAdjU01|cpAdjU02|cpAdjU03|cpAdjU04|pwidth|vwidth|cCnt|pCnt|cBidMiss|cAskMiss|pBidMiss|pAskMiss|fitAvgErr|fitAvgAbsErr|fitMaxPrcErr|fitErrXX|fitErrCP|fitErrDe|fitErrBid|fitErrAsk|fitErrPrc|fitErrVol|numSaddlePts|minSaddleSpan|maxSaddleCurvature|skewCounter|sdivCounter|tradingSession|tradeableStatus|surfaceResult|sTimestamp|time|timestamp' \\\n--data-urlencode 'group=uPrcDriverType|ddivSource|exType|modelType|priceType|moneynessType|underlierMode|cpAdjType|priceQuoteType|gridType|surfaceFit|fitErrCP|tradingSession|tradeableStatus|surfaceResult' \\\n--data-urlencode 'where='\n"})})})]}),"\n",(0,t.jsx)(s.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,t.jsxs)(d.A,{children:[(0,t.jsx)(n.A,{value:"Python",label:"Python",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'LiveSurfaceCurve\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,t.jsx)(n.A,{value:"cUrl",label:"cUrl",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=LiveSurfaceCurve' \\\n--data-urlencode 'where='\n"})})})]})]})}function j(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(x,{...e})}):x(e)}},19365:(e,s,r)=>{r.d(s,{A:()=>n});r(96540);var t=r(34164);const i={tabItem:"tabItem_Ymn6"};var d=r(74848);function n(e){let{children:s,hidden:r,className:n}=e;return(0,d.jsx)("div",{role:"tabpanel",className:(0,t.A)(i.tabItem,n),hidden:r,children:s})}},11470:(e,s,r)=>{r.d(s,{A:()=>y});var t=r(96540),i=r(34164),d=r(23104),n=r(56347),l=r(205),c=r(57485),a=r(31682),h=r(70679);function o(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:s}=e;return!!s&&"object"==typeof s&&"value"in s}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function x(e){const{values:s,children:r}=e;return(0,t.useMemo)((()=>{const e=s??function(e){return o(e).map((e=>{let{props:{value:s,label:r,attributes:t,default:i}}=e;return{value:s,label:r,attributes:t,default:i}}))}(r);return function(e){const s=(0,a.X)(e,((e,s)=>e.value===s.value));if(s.length>0)throw new Error(`Docusaurus error: Duplicate values "${s.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[s,r])}function j(e){let{value:s,tabValues:r}=e;return r.some((e=>e.value===s))}function u(e){let{queryString:s=!1,groupId:r}=e;const i=(0,n.W6)(),d=function(e){let{queryString:s=!1,groupId:r}=e;if("string"==typeof s)return s;if(!1===s)return null;if(!0===s&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:s,groupId:r});return[(0,c.aZ)(d),(0,t.useCallback)((e=>{if(!d)return;const s=new URLSearchParams(i.location.search);s.set(d,e),i.replace({...i.location,search:s.toString()})}),[d,i])]}function m(e){const{defaultValue:s,queryString:r=!1,groupId:i}=e,d=x(e),[n,c]=(0,t.useState)((()=>function(e){let{defaultValue:s,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(s){if(!j({value:s,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${s}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return s}const t=r.find((e=>e.default))??r[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:s,tabValues:d}))),[a,o]=u({queryString:r,groupId:i}),[m,p]=function(e){let{groupId:s}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(s),[i,d]=(0,h.Dv)(r);return[i,(0,t.useCallback)((e=>{r&&d.set(e)}),[r,d])]}({groupId:i}),v=(()=>{const e=a??m;return j({value:e,tabValues:d})?e:null})();(0,l.A)((()=>{v&&c(v)}),[v]);return{selectedValue:n,selectValue:(0,t.useCallback)((e=>{if(!j({value:e,tabValues:d}))throw new Error(`Can't select invalid tab value=${e}`);c(e),o(e),p(e)}),[o,p,d]),tabValues:d}}var p=r(92303);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=r(74848);function A(e){let{className:s,block:r,selectedValue:t,selectValue:n,tabValues:l}=e;const c=[],{blockElementScrollPositionUntilNextRender:a}=(0,d.a_)(),h=e=>{const s=e.currentTarget,r=c.indexOf(s),i=l[r].value;i!==t&&(a(s),n(i))},o=e=>{let s=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{const r=c.indexOf(e.currentTarget)+1;s=c[r]??c[0];break}case"ArrowLeft":{const r=c.indexOf(e.currentTarget)-1;s=c[r]??c[c.length-1];break}}s?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":r},s),children:l.map((e=>{let{value:s,label:r,attributes:d}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:t===s?0:-1,"aria-selected":t===s,ref:e=>c.push(e),onKeyDown:o,onClick:h,...d,className:(0,i.A)("tabs__item",v.tabItem,d?.className,{"tabs__item--active":t===s}),children:r??s},s)}))})}function C(e){let{lazy:s,children:r,selectedValue:i}=e;const d=(Array.isArray(r)?r:[r]).filter(Boolean);if(s){const e=d.find((e=>e.props.value===i));return e?(0,t.cloneElement)(e,{className:"margin-top--md"}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:d.map(((e,s)=>(0,t.cloneElement)(e,{key:s,hidden:e.props.value!==i})))})}function w(e){const s=m(e);return(0,f.jsxs)("div",{className:(0,i.A)("tabs-container",v.tabList),children:[(0,f.jsx)(A,{...s,...e}),(0,f.jsx)(C,{...s,...e})]})}function y(e){const s=(0,p.A)();return(0,f.jsx)(w,{...e,children:o(e.children)},String(s))}},28453:(e,s,r)=>{r.d(s,{R:()=>n,x:()=>l});var t=r(96540);const i={},d=t.createContext(i);function n(e){const s=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:n(e.components),t.createElement(d.Provider,{value:s},e.children)}}}]);