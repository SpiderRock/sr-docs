"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[89187],{66572:(e,d,r)=>{r.r(d),r.d(d,{assets:()=>c,contentTitle:()=>n,default:()=>j,frontMatter:()=>i,metadata:()=>l,toc:()=>x});var s=r(74848),t=r(28453);const i={title:"Order Entry Specs",sidebar_position:2},n=void 0,l={id:"Documentation/PlatformAPIs/FIX/order-entry-specs",title:"Order Entry Specs",description:"This document describes the application level FIX messages used to submit and manage orders for equities, futures, and options,",source:"@site/docs/Documentation/PlatformAPIs/FIX/order-entry-specs.md",sourceDirName:"Documentation/PlatformAPIs/FIX",slug:"/Documentation/PlatformAPIs/FIX/order-entry-specs",permalink:"/docs/next/Documentation/PlatformAPIs/FIX/order-entry-specs",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Order Entry Specs",sidebar_position:2},sidebar:"documentationSidebar",previous:{title:"FIX Session Guide",permalink:"/docs/next/Documentation/PlatformAPIs/FIX/fix-session-guide"},next:{title:"Drop Receive FIX Spec",permalink:"/docs/next/Documentation/PlatformAPIs/FIX/drop-receive"}},c={},x=[{value:"Supported Order Types",id:"supported-order-types",level:2},{value:"Order Life Cyce",id:"order-life-cyce",level:2},{value:"Application Messages",id:"application-messages",level:2},{value:"NewOrderSingle (Client to SpiderRock)",id:"newordersingle-client-to-spiderrock",level:3},{value:"Example -- DMA",id:"example----dma",level:3},{value:"Example - Smart/Sweep",id:"example---smartsweep",level:3},{value:"Example - Staged/WaitStart",id:"example---stagedwaitstart",level:3},{value:"Example - Market-On-Open/Market-On-Close",id:"example---market-on-openmarket-on-close",level:3},{value:"Example - SpiderRock Algorithm",id:"example---spiderrock-algorithm",level:3},{value:"Algorithmic Order -- Option Specific Fields",id:"algorithmic-order----option-specific-fields",level:3},{value:"Algorithmic Order -- Option Autohedging Fields",id:"algorithmic-order----option-autohedging-fields",level:3},{value:"OrderCancelReplace (Client to SpiderRock)",id:"ordercancelreplace-client-to-spiderrock",level:2},{value:"NewOrderMultileg (Client to SpiderRock)",id:"newordermultileg-client-to-spiderrock",level:2},{value:"Example - DMA",id:"example---dma",level:3},{value:"Example - Smart/Sweep",id:"example---smartsweep-1",level:3},{value:"Example - Staged/WaitStart",id:"example---stagedwaitstart-1",level:3},{value:"Example - Multileg Algorithm",id:"example---multileg-algorithm",level:3},{value:"Example - Legger",id:"example---legger",level:3},{value:"MultilegCancelReplace (Client to SpiderRock)",id:"multilegcancelreplace-client-to-spiderrock",level:2},{value:"ExecutionReport (SpiderRock to Client)",id:"executionreport-spiderrock-to-client",level:2},{value:"OrderCancelRequest (Client to SpiderRock)",id:"ordercancelrequest-client-to-spiderrock",level:2},{value:"OrderCancelReject (SpiderRock to Client)",id:"ordercancelreject-spiderrock-to-client",level:2}];function h(e){const d={em:"em",h2:"h2",h3:"h3",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(d.p,{children:"This document describes the application level FIX messages used to submit and manage orders for equities, futures, and options,\nincluding single-leg and multi-leg variants."}),"\n",(0,s.jsx)(d.p,{children:"This document is intended to be used in conjunction with the SpiderRock FIX Session Guide which describes session level message\nhandling and other SpiderRock FIX conventions in more detail."}),"\n",(0,s.jsx)(d.p,{children:"Please refer to the OrderManagement section of this site for more information about SpiderRock execution and order management algos and concepts."}),"\n",(0,s.jsx)(d.h2,{id:"supported-order-types",children:"Supported Order Types"}),"\n",(0,s.jsxs)(d.p,{children:[(0,s.jsx)(d.strong,{children:"DMA style orders"})," - These are market or limit orders with a simple limit price and a designated exchange."]}),"\n",(0,s.jsxs)(d.p,{children:[(0,s.jsx)(d.strong,{children:"Smart/Sweep style orders"})," - These market or limit orders, with a simple limit price, and no designated exchange.  These orders will be routed to one or more exchanges at SpiderRock's discretion."]}),"\n",(0,s.jsxs)(d.p,{children:[(0,s.jsx)(d.strong,{children:"Algorithmic orders"}),"  These are orders with complex algo behavior and complex price and size limits. They can both provide and interact with liquidity on any public exchange."]}),"\n",(0,s.jsxs)(d.p,{children:[(0,s.jsx)(d.strong,{children:"Multi-Leg orders"})," - Also known as spread orders, these are orders to buy and sell orders with more than one option simulaneously.  Multi-Leg orders can have DMA, Smart/Sweep, or Complex Algo style order handling. They can also work legs individually across all relevant exchanges."]}),"\n",(0,s.jsxs)(d.p,{children:[(0,s.jsx)(d.strong,{children:"Opening/Closing auctions"})," - Orders designated for participation in either exchange opening or closing auctions."]}),"\n",(0,s.jsx)(d.h2,{id:"order-life-cyce",children:"Order Life Cyce"}),"\n",(0,s.jsxs)(d.p,{children:[(0,s.jsx)(d.strong,{children:"Delayed start time"})," The order may contain a start time parameter to specify when an order becomes active."]}),"\n",(0,s.jsxs)(d.p,{children:[(0,s.jsx)(d.strong,{children:"Wait-start"})," The order can be be staged so that it does not become active until released (active size is initially zero)."]}),"\n",(0,s.jsxs)(d.p,{children:[(0,s.jsx)(d.strong,{children:"Staged"})," The order is entered by one user, and activated by another user."]}),"\n",(0,s.jsxs)(d.p,{children:[(0,s.jsx)(d.strong,{children:"StageReview"})," The order is entered by one trading system, and activated by another system (compliance/risk)."]}),"\n",(0,s.jsxs)(d.p,{children:[(0,s.jsx)(d.strong,{children:"Stop Time"}),"  The order stops working when the stop time is reached."]}),"\n",(0,s.jsxs)(d.p,{children:[(0,s.jsx)(d.strong,{children:"Order Duration"}),"  The order stops working when the order duration is reached"]}),"\n",(0,s.jsxs)(d.p,{children:[(0,s.jsx)(d.strong,{children:"Price Range Cancel"})," The order stops working when an underlying price is reached."]}),"\n",(0,s.jsxs)(d.p,{children:[(0,s.jsx)(d.strong,{children:"User Cancel"}),"  The order is explicitly cancelled by the client"]}),"\n",(0,s.jsx)(d.p,{children:(0,s.jsx)(d.em,{children:"Note: Orders can be staged, released, and cancelled by any combination of SpiderRock GUI tools, the SpiderRock SRSE API, and FIX messaging."})}),"\n",(0,s.jsx)(d.h2,{id:"application-messages",children:"Application Messages"}),"\n",(0,s.jsx)(d.h3,{id:"newordersingle-client-to-spiderrock",children:"NewOrderSingle (Client to SpiderRock)"}),"\n",(0,s.jsx)(d.p,{children:"NewOrderSingle<D> messages are used to submit orders for single securities. Both the standard order types and algorithmic order\ntypes offered by SpiderRock are communicated using this message."}),"\n",(0,s.jsx)(d.p,{children:"In addition to standard FIX fields, SpiderRock uses custom FIX fields with tag numbers in the range 5,000-5,999 for SpiderRock specific parameters."}),"\n",(0,s.jsxs)(d.table,{children:[(0,s.jsx)(d.thead,{children:(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.th,{children:"Tag"}),(0,s.jsx)(d.th,{children:"Field Name"}),(0,s.jsx)(d.th,{children:"Req'd"}),(0,s.jsx)(d.th,{children:"Type"}),(0,s.jsxs)(d.th,{children:["Associated Record Value",(0,s.jsx)("br",{}),"(SpdrParentOrder)"]}),(0,s.jsx)(d.th,{children:"Comments"})]})}),(0,s.jsxs)(d.tbody,{children:[(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.strong,{children:"Standard Header"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.strong,{children:"Y"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.strong,{children:"MsgType = D"})})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"11"}),(0,s.jsx)(d.td,{children:"ClOrdId"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"altOrderId"}),(0,s.jsx)(d.td,{children:"Client order ID (24 character max)"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"1"}),(0,s.jsx)(d.td,{children:"Account"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"accnt"}),(0,s.jsxs)(d.td,{children:["SR account acronym. ",(0,s.jsx)(d.em,{children:"Must be configured prior to testing or trading"})," ",(0,s.jsx)("br",{}),"Account superceded by: SRAccnt"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"100"}),(0,s.jsx)(d.td,{children:"ExDestination"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsxs)(d.td,{children:["multiple-value",(0,s.jsx)("br",{}),"string"]}),(0,s.jsx)(d.td,{children:"exchMask"}),(0,s.jsxs)(d.td,{children:["SR Destination Code (see appendix) ",(0,s.jsx)("br",{})," ",(0,s.jsx)(d.em,{children:"Required for DMA style orders"})," ",(0,s.jsx)("br",{}),"Superceded by: SRExDestination"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"40"}),(0,s.jsx)(d.td,{children:"OrdType"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"char"}),(0,s.jsx)(d.td,{children:"orderLimitType"}),(0,s.jsxs)(d.td,{children:["1 = Market ",(0,s.jsx)("br",{})," 2 = Limit ",(0,s.jsx)("br",{})," 5 = Market on Close ",(0,s.jsx)("br",{})," B = Limit on Close",(0,s.jsx)("br",{}),"  ",(0,s.jsx)(d.em,{children:"Required for DMA and Smart/Sweep style orders. Not required for more complex order types. If necessary, use Market as the order type when submitting orders with more complex behavior."})," ",(0,s.jsx)("br",{}),"Superceded by: SROrderLimitType"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"44"}),(0,s.jsx)(d.td,{children:"Price"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"orderPrcLimit"}),(0,s.jsxs)(d.td,{children:["Required for limit order types ",(0,s.jsx)("br",{})," Superceded by: SROrderPrcLimit"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"59"}),(0,s.jsx)(d.td,{children:"TimeInForce"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsxs)(d.td,{children:["orderDuration",(0,s.jsx)("br",{}),"parentOrderHandling"]}),(0,s.jsxs)(d.td,{children:["0 = Day ",(0,s.jsx)("br",{})," 2 = Opening  ",(0,s.jsx)("br",{})," 3 = Immediate or Cancel (IOC) ",(0,s.jsx)("br",{})," 6 = Good Till Date/Time (or Duration) ",(0,s.jsx)("br",{})," 7 = Closing ",(0,s.jsx)("br",{}),"OrderDuration superceded by: SROrderDuration SRTimeInForce ",(0,s.jsx)("br",{}),"ParentOrderHandling superceded by SROrderHandling"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"207"}),(0,s.jsx)(d.td,{children:"SecurityExchange"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"secKey"}),(0,s.jsxs)(d.td,{children:[(0,s.jsx)(d.strong,{children:"Currently Ignored"}),(0,s.jsx)("br",{})," Market used to identify a security's issuing authority (see Appendix A for those accepted by SpiderRock) ",(0,s.jsx)("br",{})," ",(0,s.jsx)(d.em,{children:"For Futures products: the issuing authority must be supplied"})," ",(0,s.jsx)("br",{})," ",(0,s.jsx)(d.em,{children:"For Equities and Equity Options in which the issuing authority SecurityExchange<207> is not explicitly supplied, NMS is assumed."})," ",(0,s.jsx)("br",{}),"Superceded by: SRSecKey"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"461"}),(0,s.jsx)(d.td,{children:"CFICode"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"seckey"}),(0,s.jsxs)(d.td,{children:[(0,s.jsx)(d.strong,{children:"Currently Ignored"}),(0,s.jsx)("br",{}),"ES = Equity Common Shares [CS] ",(0,s.jsx)("br",{})," F = Future [FUT] ",(0,s.jsx)("br",{})," OC = Option - Call [OPT] ",(0,s.jsx)("br",{})," OP = Option - Put [OPT]"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"201"}),(0,s.jsx)(d.td,{children:"PutOrCall"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"secKey"}),(0,s.jsxs)(d.td,{children:["Alternative to CFICode<461> ",(0,s.jsx)("br",{})," 0 = Put ",(0,s.jsx)("br",{})," 1 = Call ",(0,s.jsx)("br",{}),"Superceded by: SRSecKey"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"167"}),(0,s.jsx)(d.td,{children:"SecurityType"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"secType"}),(0,s.jsxs)(d.td,{children:["Alternative to CFICode<461> ",(0,s.jsx)("br",{})," CS = Equity ",(0,s.jsx)(d.em,{children:"default"}),(0,s.jsx)("br",{})," FUT = Future/Future Options ",(0,s.jsx)("br",{})," OPT = Equity Option  ",(0,s.jsx)("br",{})," Superceded by: SRSecType"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"55"}),(0,s.jsx)(d.td,{children:"Symbol"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"secKey"}),(0,s.jsxs)(d.td,{children:["Exchange symbol ",(0,s.jsx)("br",{})," May incorporate symbol suffix (e.g. VIA.A) ",(0,s.jsx)("br",{})," For OPRA options, SpiderRock accepts an OSI code in this field ",(0,s.jsx)("br",{})," For standardized futures products, maturity information can be included in this field, e.g. GCZ22 ",(0,s.jsx)("br",{})," Superceded by: SRSecKey"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"65"}),(0,s.jsx)(d.td,{children:"SymbolSfx"}),(0,s.jsx)(d.td,{children:"B"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"secKey"}),(0,s.jsxs)(d.td,{children:["Symbol suffix ",(0,s.jsx)("br",{})," Superceded by: SRSecKey"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"22"}),(0,s.jsx)(d.td,{children:"IDSource"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"secKey"}),(0,s.jsxs)(d.td,{children:["8 = Exchange Symbol is accepted when used in conjunction with SecurityID<48> to communicate the Exchange Symbol. ",(0,s.jsx)("br",{})," Superceded by: SRSecKey"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"48"}),(0,s.jsx)(d.td,{children:"SecurityID"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"secKey"}),(0,s.jsxs)(d.td,{children:["Exchange symbol, when IDSource = 8 and Symbol<55> is blank. ",(0,s.jsx)("br",{})," Superceded by: SRSecKey"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"541"}),(0,s.jsx)(d.td,{children:"MaturityDate"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"secKey"}),(0,s.jsxs)(d.td,{children:["For Futures and Options YYYYMMDD ",(0,s.jsx)("br",{})," Superceded by: SRSecKey"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"200"}),(0,s.jsx)(d.td,{children:"MaturityMonthYear"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"secKey"}),(0,s.jsxs)(d.td,{children:["Alternative to MaturityDate<541> YYYYMM ",(0,s.jsx)("br",{})," Superceded by: SRSecKey"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"205"}),(0,s.jsx)(d.td,{children:"MaturityDay"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"secKey"}),(0,s.jsxs)(d.td,{children:["Alternative to MaturityDate<541> 1-31 ",(0,s.jsx)("br",{})," Superceded by: SRSecKey"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"202"}),(0,s.jsx)(d.td,{children:"StrikePrice"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"secKey"}),(0,s.jsxs)(d.td,{children:["Option strike price ",(0,s.jsx)("br",{})," Superceded by: SRSecKey"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"54"}),(0,s.jsx)(d.td,{children:"Side"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"char"}),(0,s.jsxs)(d.td,{children:["orderSide",(0,s.jsx)("br",{}),"ssaleFlag"]}),(0,s.jsxs)(d.td,{children:["1 = Buy ",(0,s.jsx)("br",{})," 2 = Sell ",(0,s.jsx)("br",{})," 5 = Sell short ",(0,s.jsx)("br",{})," 6 = Sell short exempt ",(0,s.jsx)("br",{})," Y= Sell auto (SR determines whether child orders should be selling long or short by looking up account/aggregate group position when child orders are created). ",(0,s.jsx)("br",{}),"OrderSide superceded by: SROrderSide",(0,s.jsx)("br",{})," SsaleFlag superceded by: SRShortSaleFlag"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"77"}),(0,s.jsx)(d.td,{children:"OpenClose"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"char"}),(0,s.jsx)(d.td,{children:"positionType"}),(0,s.jsxs)(d.td,{children:["For Options: ",(0,s.jsx)("br",{})," O = Open ",(0,s.jsx)("br",{})," C = Close ",(0,s.jsx)("br",{})," A = Auto (SR determines whether child orders should be marked open or closed by looking up account/aggregate group position when child orders are created). ",(0,s.jsx)("br",{})," Superceded by: SRPositionType"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"204"}),(0,s.jsx)(d.td,{children:"CustomerOrFirm"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"char"}),(0,s.jsx)(d.td,{children:"firmType"}),(0,s.jsxs)(d.td,{children:["0 = Customer ",(0,s.jsx)("br",{})," 1 = Firm ",(0,s.jsx)("br",{})," 2 = Broker / Dealer  4 = Market Maker ",(0,s.jsx)("br",{})," 5 = Non-Member Market Maker ",(0,s.jsx)("br",{})," 8 = Customer Professional ",(0,s.jsx)("br",{}),(0,s.jsx)(d.em,{children:"Will default to SR account configuration if not specified"})," ",(0,s.jsx)("br",{}),"Superceded by: SRFirmType"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"528"}),(0,s.jsx)(d.td,{children:"OrderCapacity"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"char"}),(0,s.jsx)(d.td,{children:"orderCapacity"}),(0,s.jsxs)(d.td,{children:["A = Agency ",(0,s.jsx)("br",{})," G = Prop ",(0,s.jsx)("br",{})," I = Individual ",(0,s.jsx)("br",{})," P = Principal ",(0,s.jsx)("br",{})," R = Riskless ",(0,s.jsx)("br",{})," W = AgentOtherMember ",(0,s.jsx)("br",{}),(0,s.jsx)(d.em,{children:"Will default to SR account configuration if not specified"})," ",(0,s.jsx)("br",{}),"Superceded by: SROrderCapacity"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"60"}),(0,s.jsx)(d.td,{children:"TransactTime"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"utcDttm"}),(0,s.jsx)(d.td,{}),(0,s.jsxs)(d.td,{children:["Time this order request was initiated/released. Formatted as: ",(0,s.jsxs)(d.em,{children:["YYYYMMDD-HH:MM",":SS",".fff"]})," ",(0,s.jsx)("br",{}),(0,s.jsx)(d.em,{children:"Note: this order must arrive at SpiderRock within 15 seconds of the TransactTime to be considered a valid order."})]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"38"}),(0,s.jsx)(d.td,{children:"OrderQty"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"orderSize"}),(0,s.jsxs)(d.td,{children:["Executable quantity ",(0,s.jsx)("br",{}),"Superceded by: SROrderSize"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Standard Trailer"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Y"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{})]})]})]}),"\n",(0,s.jsx)(d.h3,{id:"example----dma",children:"Example -- DMA"}),"\n",(0,s.jsx)(d.p,{children:"DMA orders are used to send a single order to a specific exchange or destination. This order type allows the client to control where the order is traded. Note that DMA orders may interact with dark liquidity in the SpiderRock platform if this is desired."}),"\n",(0,s.jsxs)(d.table,{children:[(0,s.jsx)(d.thead,{children:(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.th,{children:"Tag"}),(0,s.jsx)(d.th,{children:"Field Name"}),(0,s.jsx)(d.th,{children:"Req'd"}),(0,s.jsx)(d.th,{children:"Type"}),(0,s.jsxs)(d.th,{children:["Associated Record Value",(0,s.jsx)("br",{}),"(SpdrParentOrder)"]}),(0,s.jsx)(d.th,{children:"Comments"})]})}),(0,s.jsxs)(d.tbody,{children:[(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Standard Header"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Y"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"MsgType = D"})})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Basic NewOrderSingle Fields"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:'See "NewOrderSingle" above'})})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"100"}),(0,s.jsx)(d.td,{children:"ExDestination"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"exchMask"}),(0,s.jsx)(d.td,{children:"SR Destination Code (see appendix)"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Standard Trailer"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Y"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{})]})]})]}),"\n",(0,s.jsx)(d.h3,{id:"example---smartsweep",children:"Example - Smart/Sweep"}),"\n",(0,s.jsx)(d.p,{children:"Smart/Sweep orders are used to send an order without specifying a destination. SpiderRock will determine the optimal destination(s) for the order and will automatically sweep multiple destinations to maximize liquidity capture. This order type can optionally post any unfilled balance on an exchange."}),"\n",(0,s.jsxs)(d.table,{children:[(0,s.jsx)(d.thead,{children:(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.th,{children:"Tag"}),(0,s.jsx)(d.th,{children:"Field Name"}),(0,s.jsx)(d.th,{children:"Req'd"}),(0,s.jsx)(d.th,{children:"Type"}),(0,s.jsxs)(d.th,{children:["Associated Record Value",(0,s.jsx)("br",{}),"(SpdrParentOrder)"]}),(0,s.jsx)(d.th,{children:"Comments"})]})}),(0,s.jsxs)(d.tbody,{children:[(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Standard Header"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Y"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"MsgType = D"})})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Basic NewOrderSingle Fields"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:'See "NewOrderSingle" above'})})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Standard Trailer"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Y"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{})]})]})]}),"\n",(0,s.jsx)(d.h3,{id:"example---stagedwaitstart",children:"Example - Staged/WaitStart"}),"\n",(0,s.jsx)(d.p,{children:"The SRStartType<5090> tag is used to send staged/wait orders to SpiderRock. These orders will be sent to the exchange once the client commands their release. Note that orders can be released in multiple ways: via the SpiderRock GUI tools, the SpiderRock SRSE/SQL API, and a Listexecute<L> FIX message. Staged orders will be acknowledged immediately; fills will only be reported after the order has been released."}),"\n",(0,s.jsxs)(d.table,{children:[(0,s.jsx)(d.thead,{children:(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.th,{children:"Tag"}),(0,s.jsx)(d.th,{children:"Field Name"}),(0,s.jsx)(d.th,{children:"Req'd"}),(0,s.jsx)(d.th,{children:"Type"}),(0,s.jsxs)(d.th,{children:["Associated Record Value",(0,s.jsx)("br",{}),"(SpdrParentOrder)"]}),(0,s.jsx)(d.th,{children:"Comments"})]})}),(0,s.jsxs)(d.tbody,{children:[(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Standard Header"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Y"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"MsgType = D"})})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Basic NewOrderSingle Fields"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:'See "NewOrderSingle" above'})})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Algorithmic NewOrderSingle Fields"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:'See "NewOrderSingle" above'})})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5086"}),(0,s.jsx)(d.td,{children:"SRStageType"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"spdrStageType"}),(0,s.jsxs)(d.td,{children:["1 = ModifyAny ",(0,s.jsx)("br",{})," 2 = ModifyAlgo"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5090"}),(0,s.jsx)(d.td,{children:"SRStartType"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"startType"}),(0,s.jsx)(d.td,{children:"2 = WaitTrigger (wait start)"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Standard Trailer"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Y"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{})]})]})]}),"\n",(0,s.jsx)(d.h3,{id:"example---market-on-openmarket-on-close",children:"Example - Market-On-Open/Market-On-Close"}),"\n",(0,s.jsx)(d.p,{children:"Market-On-Open/Market-On-Close orders are used when participating in opening and closing exchange auctions. Note: Either FIX 4.2 or FIX 4.4style OrdType/TimeInForce tagging is allowed."}),"\n",(0,s.jsxs)(d.table,{children:[(0,s.jsx)(d.thead,{children:(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.th,{children:"Tag"}),(0,s.jsx)(d.th,{children:"Field Name"}),(0,s.jsx)(d.th,{children:"Req'd"}),(0,s.jsx)(d.th,{children:"Type"}),(0,s.jsxs)(d.th,{children:["Associated Record Value",(0,s.jsx)("br",{}),"(SpdrParentOrder)"]}),(0,s.jsx)(d.th,{children:"Comments"})]})}),(0,s.jsxs)(d.tbody,{children:[(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Standard Header"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Y"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"MsgType = D"})})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Basic NewOrderSingle Fields"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:'See "NewOrderSingle" above'})})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"59"}),(0,s.jsx)(d.td,{children:"TimeInForce"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"char"}),(0,s.jsx)(d.td,{children:"parentOrderHandling"}),(0,s.jsxs)(d.td,{children:["2 = At the opening ",(0,s.jsx)("br",{})," 7 = At the Close"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Standard Trailer"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Y"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{})]})]})]}),"\n",(0,s.jsx)(d.h3,{id:"example---spiderrock-algorithm",children:"Example - SpiderRock Algorithm"}),"\n",(0,s.jsx)(d.p,{children:"Complex Algo/Parent orders express intent to interact with the market in a variety of ways. These parent orders can, and frequently do, result in multiple child orders being generated and routed to the exchange."}),"\n",(0,s.jsxs)(d.table,{children:[(0,s.jsx)(d.thead,{children:(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.th,{children:"Tag"}),(0,s.jsx)(d.th,{children:"Field Name"}),(0,s.jsx)(d.th,{children:"Req'd"}),(0,s.jsx)(d.th,{children:"Type"}),(0,s.jsxs)(d.th,{children:["Associated Record Value",(0,s.jsx)("br",{}),"(SpdrParentOrder)"]}),(0,s.jsx)(d.th,{children:"Comments"})]})}),(0,s.jsxs)(d.tbody,{children:[(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Standard Header"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Y"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"MsgType = D"})})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Basic NewOrderSingle Fields"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:'See "NewOrderSingle" above'})})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5036"}),(0,s.jsx)(d.td,{children:"SRUsername"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"userName"}),(0,s.jsxs)(d.td,{children:["Client defined username ",(0,s.jsx)("br",{})," ",(0,s.jsx)(d.em,{children:"Used for customer service and futures compliance"})," ",(0,s.jsx)("br",{})," ",(0,s.jsx)(d.em,{children:"If necessary, a default may be assigned to the FIX session. (24 character max)"})]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5055"}),(0,s.jsx)(d.td,{children:"SRProgressExposeTime"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"progressExposeTime"}),(0,s.jsx)(d.td,{children:"Duration in seconds"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5094"}),(0,s.jsx)(d.td,{children:"SROrderHandling"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"orderHandling"}),(0,s.jsxs)(d.td,{children:["Primary order handling algorithm ",(0,s.jsx)("br",{}),"  1 = ActiveTaker ",(0,s.jsx)("br",{})," 2 = PostOnly  ",(0,s.jsx)("br",{})," 3 = DMA ",(0,s.jsx)("br",{}),"4 = MktOnOpn ",(0,s.jsx)("br",{})," 5 = MktOnCls ",(0,s.jsx)("br",{})," 11 =  CrossResponse ",(0,s.jsx)("br",{})," 12 =  AuctionResponse"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5096"}),(0,s.jsx)(d.td,{children:"SRBalanceHandling"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"parentBalanceHandling"}),(0,s.jsxs)(d.td,{children:["0 = None (non-marketable balance will not be posted) ",(0,s.jsx)(d.em,{children:"default"})," ",(0,s.jsx)("br",{})," 1 = PostWith ",(0,s.jsx)("br",{})," 2 = PostTurn  ",(0,s.jsx)("br",{})," 3 = PostImprove ",(0,s.jsx)("br",{})," 4 = PostLimit ",(0,s.jsx)("br",{})," 5 = PostLmtW ",(0,s.jsx)("br",{})," 7 = PostWthF ",(0,s.jsx)("br",{})," 9 =  PostFlash ",(0,s.jsx)("br",{})," 10 =  PostFlashW ",(0,s.jsx)("br",{})," 12 =  PostFlashI"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5090"}),(0,s.jsx)(d.td,{children:"SRStartType"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"startType"}),(0,s.jsxs)(d.td,{children:["0 = Immediate ",(0,s.jsx)("br",{})," 1 = WaitTrigger (wait for RiskGroup/Sweep trigger) ",(0,s.jsx)("br",{})," 2 = Staged (wait for order to be modified/r eleased)"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5084"}),(0,s.jsx)(d.td,{children:"SRTimeInForce"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"timeInForce"}),(0,s.jsxs)(d.td,{children:[(0,s.jsx)(d.em,{children:"Day = Order remains working until the end of the day's primary trading session."})," ",(0,s.jsx)("br",{})," ",(0,s.jsx)(d.em,{children:"EXT = Extended Day - Order remains working through the day's intended trading session until the next top of day rotation."})," ",(0,s.jsx)("br",{})," ",(0,s.jsx)(d.em,{children:"WK = Week - Order remains working for the remainder of the week's normal trading sessions."})," ",(0,s.jsx)("br",{})," ",(0,s.jsx)(d.em,{children:"EWK = Extended Week - Order remains working for the week's remaining extended trading sessions until the next Friday/EndOfWeek rotation."})," ",(0,s.jsx)("br",{})," ",(0,s.jsx)(d.em,{children:"IOC = Immediate or Cancel - Order expires after one attempt at execution OR after one second."})," ",(0,s.jsx)("br",{})," ",(0,s.jsx)(d.em,{children:"GTD = Good Till Duration - Order remains working through the day's extended trading session until the next top of day rotation OR when SRGoodTillDttm time is reached OR after working for SROrderDuration seconds."})]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5086"}),(0,s.jsx)(d.td,{children:"SROrderDuration"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"orderDuration"}),(0,s.jsx)(d.td,{children:"Order with SrTimeInForce = GTD expires after working for this  number of seconds."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5088"}),(0,s.jsx)(d.td,{children:"SRGoodTillDttm"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"utcDttm"}),(0,s.jsx)(d.td,{children:"goodTillDttm"}),(0,s.jsx)(d.td,{children:"Order with SrTimeInForce = GTD expires at this time."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5028"}),(0,s.jsx)(d.td,{children:"SRExecBrokerCode"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"execBrkrCode"}),(0,s.jsx)(d.td,{children:"Overrides the default executing broker for this parent order"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5034"}),(0,s.jsx)(d.td,{children:"SRStrategy"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"strategy"}),(0,s.jsx)(d.td,{children:"Client strategy label.  Displayed on SR Order Manager"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5082"}),(0,s.jsx)(d.td,{children:"SRExDestination"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"exchMask"}),(0,s.jsx)(d.td,{children:"Space separated exchange list;  default = all available exchanges"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5046"}),(0,s.jsx)(d.td,{children:"SRMaxExposureSize"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"maxExposureSize"}),(0,s.jsx)(d.td,{children:"Maximum simultaneous public exposure size across all exchanges"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5048"}),(0,s.jsx)(d.td,{children:"SRNumMakeExchanges"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"numMakeExchanges"}),(0,s.jsx)(d.td,{children:"Number of public exposure  exchanges"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5050"}),(0,s.jsx)(d.td,{children:"SRPublicSize"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"char"}),(0,s.jsx)(d.td,{children:"publicSize"}),(0,s.jsxs)(d.td,{children:["0 = None  ",(0,s.jsx)("br",{})," 1 = Randomize  ",(0,s.jsx)("br",{})," 2 = MktSize ",(0,s.jsx)("br",{}),"  3 = FullSize  ",(0,s.jsx)("br",{})," 4 = MktSizeA  ",(0,s.jsx)("br",{})," 5 = MktSizeB  ",(0,s.jsx)("br",{})," 6 = MktSizeC  ",(0,s.jsx)("br",{})," 7 = FullSizeR  ",(0,s.jsx)("br",{})," Max25Pct=8  ",(0,s.jsx)("br",{})," Max50Pct=9  ",(0,s.jsx)("br",{})," Max75Pct=10  ",(0,s.jsx)("br",{})," NoSize=11"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5052"}),(0,s.jsx)(d.td,{children:"SRCanCxlOverlap"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"char"}),(0,s.jsx)(d.td,{children:"canOverlapCxlRepl"}),(0,s.jsxs)(d.td,{children:["When replacing (cancel-with-replacement) a child order, can cancel request overlap with new order? The order may overfill if 'Y'. ",(0,s.jsx)("br",{}),"Y = Yes",(0,s.jsx)("br",{}),"N = No"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5080"}),(0,s.jsx)(d.td,{children:"SRMaxChildOrders"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"maxChildOrders"}),(0,s.jsxs)(d.td,{children:["Upper bound for the number of  child orders generated for this parent order",(0,s.jsx)("br",{}),"Default: 1000"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5054"}),(0,s.jsx)(d.td,{children:"SRProgressRule"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"progressRule"}),(0,s.jsxs)(d.td,{children:["0 = Immediate ",(0,s.jsx)(d.em,{children:"default"}),"  ",(0,s.jsx)("br",{})," 1 = Twap  ",(0,s.jsx)("br",{})," 2 = Vwap (not available for  options)  ",(0,s.jsx)("br",{})," 3 = TwapReset  ",(0,s.jsx)("br",{})," 4 = VwapReset (not available  for options)  ",(0,s.jsx)("br",{})," 5 = FastReset  ",(0,s.jsx)("br",{})," 6 = SlowReset  ",(0,s.jsx)("br",{})," 7 = TwapAlpha  ",(0,s.jsx)("br",{})," 8 = VwapAlpha (not available  for options)",(0,s.jsx)("br",{})," 11 =  SpdrPulse"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5056"}),(0,s.jsx)(d.td,{children:"SRProgressSliceCnt"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"progressSliceCnt"}),(0,s.jsx)(d.td,{children:"number of slices to use (default = 4 or 8) [max 20]"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5104"}),(0,s.jsx)(d.td,{children:"SRTakeReachRule"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"takeReachRule"}),(0,s.jsxs)(d.td,{children:["0 = None ",(0,s.jsx)("br",{})," 1 = Delayed ",(0,s.jsx)("br",{})," 2 = Passive ",(0,s.jsx)("br",{})," 3 = WeakOnly ",(0,s.jsx)("br",{})," 4 = RespondOnly ",(0,s.jsx)("br",{})," 5 = FullSize ",(0,s.jsx)("br",{})," 6 = ISOSweep ",(0,s.jsx)("br",{})," 7 = AllOrNone ",(0,s.jsx)("br",{})," 8 = QtyOrMore ",(0,s.jsx)("br",{})," 9 = UpToQty ",(0,s.jsx)("br",{})," 10 = AtMost25 ",(0,s.jsx)("br",{})," 11 = AtMost50 ",(0,s.jsx)("br",{})," 12 = MinTakeFee"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5098"}),(0,s.jsx)(d.td,{children:"SROrderLimitType"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"orderLimitType"}),(0,s.jsxs)(d.td,{children:["0 = Market ",(0,s.jsx)("br",{})," 1 = MarketArrival ",(0,s.jsx)("br",{})," 2 = Prc ",(0,s.jsx)("br",{})," 3 = PrcDe ",(0,s.jsx)("br",{})," 4 = PrcDeX ",(0,s.jsx)("br",{})," 5 = PrcDeT ",(0,s.jsx)("br",{})," 6 = PrcDeP ",(0,s.jsx)("br",{})," 7 = PrcDeXT ",(0,s.jsx)("br",{})," 8 = PrcD ",(0,s.jsx)("br",{}),"eXP 9 = Vol ",(0,s.jsx)("br",{})," 10 = VolX ",(0,s.jsx)("br",{})," 11 = PrcV ",(0,s.jsx)("br",{})," 12 = PrcVX ",(0,s.jsx)("br",{})," 13 = VolPrc ",(0,s.jsx)("br",{})," 14 = RelMid ",(0,s.jsx)("br",{})," 15 = RelJoin ",(0,s.jsx)("br",{})," 16 = RelCross ",(0,s.jsx)("br",{})," 17 = SmrtFast ",(0,s.jsx)("br",{})," 18 = SmrtNorm ",(0,s.jsx)("br",{})," 19 = RelTurn ",(0,s.jsx)("br",{})," 20 = PrcDeEm ",(0,s.jsx)("br",{})," 22 = VolEm ",(0,s.jsx)("br",{})," 23 = Aux ",(0,s.jsx)("br",{})," 24 = UPrcPct ",(0,s.jsx)("br",{})," 25 = PkgNeutral ",(0,s.jsx)("br",{})," 26 = RcPrem ",(0,s.jsx)("br",{})," 27 = SynthLimitMM ",(0,s.jsx)("br",{})," 28 = SynthLimitBW ",(0,s.jsx)("br",{})," 29 = SynthLimitWW"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5106"}),(0,s.jsx)(d.td,{children:"SROrderPrcLimit"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"orderPrcLimit"}),(0,s.jsx)(d.td,{children:"Applies if SROrderLimitType<5098> = Prc"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5126"}),(0,s.jsx)(d.td,{children:"SROrderPrcOffset"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"orderPrcOffset"}),(0,s.jsx)(d.td,{children:"Default=0"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5132"}),(0,s.jsx)(d.td,{children:"SRTakeAlphaFactor"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"takeAlphaFactor"}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5134"}),(0,s.jsx)(d.td,{children:"SRMakeAlphaFactor"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"makeAlphaFactor"}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5136"}),(0,s.jsx)(d.td,{children:"SRTakeProbability"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"takeProbability"}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5138"}),(0,s.jsx)(d.td,{children:"SRMakeProbability"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"makeProbability"}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5259"}),(0,s.jsx)(d.td,{children:"SRMaxSymDayDDeltaLn"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"maxSymDayDDeltaLn"}),(0,s.jsxs)(d.td,{children:["max acct+symbol day $delta  long",(0,s.jsx)("br",{}),"Should be a positive number; Defaults to no limit"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5260"}),(0,s.jsx)(d.td,{children:"SRMaxSymDayDDeltaSh"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"maxSymDayDDeltaSh"}),(0,s.jsxs)(d.td,{children:["max acct+symbol day $delta  short",(0,s.jsx)("br",{}),"Should be a positive number; Defaults to no limit"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5058"}),(0,s.jsx)(d.td,{children:"SRVwap Participation"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"vwapParticipation"}),(0,s.jsx)(d.td,{children:"Target VWAP participation rate  (target % of trade activity)"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5290"}),(0,s.jsx)(d.td,{children:"SRUserData1"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"userData1"}),(0,s.jsx)(d.td,{children:"User defined field (max 255  chars) - Can be returned on exec reports, forwarded on drop lines, or copied onto child orders.  Please advise SpiderRock support staff of intended behavior."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5291"}),(0,s.jsx)(d.td,{children:"SRUserData2"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"userData2"}),(0,s.jsx)(d.td,{children:"User defined field (max 255  chars) - Can be returned on exec reports, forwarded on drop lines, or copied onto child orders.  Please advise SpiderRock support staff of intended behavior."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"SR Option Specific Fields"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:'See "Algorithmic Order -- Option Specific Fields" below'})})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Standard  Trailer"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Y"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{})]})]})]}),"\n",(0,s.jsx)(d.h3,{id:"algorithmic-order----option-specific-fields",children:"Algorithmic Order -- Option Specific Fields"}),"\n",(0,s.jsx)(d.p,{children:"The following fields can be included in Algorithmic orders when SecurityType<167> = Option."}),"\n",(0,s.jsxs)(d.table,{children:[(0,s.jsx)(d.thead,{children:(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.th,{children:"Tag"}),(0,s.jsx)(d.th,{children:"Field Name"}),(0,s.jsx)(d.th,{children:"Req'd"}),(0,s.jsx)(d.th,{children:"Type"}),(0,s.jsxs)(d.th,{children:["Associated Record Value",(0,s.jsx)("br",{}),"(SpdrParentOrder)"]}),(0,s.jsx)(d.th,{children:"Comments"})]})}),(0,s.jsxs)(d.tbody,{children:[(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5170"}),(0,s.jsx)(d.td,{children:"SRPositionType"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"positionType"}),(0,s.jsx)(d.td,{children:"Primary position type (single  leg orders)"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5060"}),(0,s.jsx)(d.td,{children:"SRAuctionResponder"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"auctionResponder"}),(0,s.jsxs)(d.td,{children:["0 =None ",(0,s.jsx)("br",{})," ANY = parent order can be an  auction responder  ",(0,s.jsx)("br",{})]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5108"}),(0,s.jsx)(d.td,{children:"SROrderRefUPrc"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"orderRefUPrc"}),(0,s.jsx)(d.td,{children:"The stock reference price, a  contribution to the order  premium."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5110"}),(0,s.jsx)(d.td,{children:"SROrderRefDelta"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"orderRefDelta"}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5112"}),(0,s.jsx)(d.td,{children:"SROrderRefGamma"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"orderRefGamma"}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5192"}),(0,s.jsx)(d.td,{children:"SROrderRefRMetric1"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"orderRefRMetric1"}),(0,s.jsx)(d.td,{children:"User supplied custom risk metric"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5194"}),(0,s.jsx)(d.td,{children:"SROrderRefRMetric2"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"orderRefRMetric2"}),(0,s.jsx)(d.td,{children:"User supplied RMetric2 value"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5196"}),(0,s.jsx)(d.td,{children:"SROrderRefRMetric3"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"orderRefRMetric3"}),(0,s.jsx)(d.td,{children:"User supplied RMetric3 value"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5198"}),(0,s.jsx)(d.td,{children:"SROrderRefRMetric4"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"orderRefRMetric4"}),(0,s.jsx)(d.td,{children:"User supplied RMetric4 value"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5200"}),(0,s.jsx)(d.td,{children:"SROrderRefRMetric5"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"orderRefRMetric5"}),(0,s.jsx)(d.td,{children:"User supplied RMetric5 value"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5212"}),(0,s.jsx)(d.td,{children:"SROrderRefRMetric6"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"orderRefRMetric6"}),(0,s.jsx)(d.td,{children:"User supplied RMetric6 value"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5236"}),(0,s.jsx)(d.td,{children:"SROrderRefRMetric7"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"orderRefRMetric7"}),(0,s.jsx)(d.td,{children:"User supplied RMetric7 value"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5116"}),(0,s.jsx)(d.td,{children:"SROrderVolLimit"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"orderVolLimit"}),(0,s.jsxs)(d.td,{children:["Order volatility limit - Valid range: [0.005, 9.000]. ",(0,s.jsx)("br",{})," Required if SROrderLimitType<5098> is Vol, VolX, or VolPrc ",(0,s.jsx)("br",{}),"Ignored if SROrderLimitType is Market"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5118"}),(0,s.jsx)(d.td,{children:"SRRateOverride"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"rateOverride"}),(0,s.jsx)(d.td,{children:"Must be positive"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5120"}),(0,s.jsx)(d.td,{children:"SRSDivOverride"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"sdivOverride"}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5122"}),(0,s.jsx)(d.td,{children:"SRDDivOverride"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"ddivOverride"}),(0,s.jsxs)(d.td,{children:["Discrete dividends override ",(0,s.jsx)("br",{})," Format:[years: amount, years",":amount",", ...]"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5124"}),(0,s.jsx)(d.td,{children:"SROverrideCode"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"char"}),(0,s.jsx)(d.td,{children:"overrideCode"}),(0,s.jsxs)(d.td,{children:["SDiv/DDiv override rule  (applies if LimitType = Vol) ",(0,s.jsx)("br",{}),"0 = None ",(0,s.jsx)("br",{})," S = SDivOnly",(0,s.jsx)("br",{})," D = DDivOnly ",(0,s.jsx)("br",{}),"B = Both"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5228"}),(0,s.jsx)(d.td,{children:"SRMakeSurfWidthOffset"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"makeSurfWidthOffset"}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5229"}),(0,s.jsx)(d.td,{children:"SRTakeSurfWidthOffset"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"takeSurfWidthOffset"}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5140"}),(0,s.jsx)(d.td,{children:"SRTakeSurfPrcOffset"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"takeSurfPrcOffset"}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5142"}),(0,s.jsx)(d.td,{children:"SRTakeSurfVolOffset"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"takeSurfVolOffset"}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5144"}),(0,s.jsx)(d.td,{children:"SRMakeSurfPrcOffset"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"makeSurfPrcOffset"}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5146"}),(0,s.jsx)(d.td,{children:"SRMakeSurfVolOffset"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"makeSurfVolOffset"}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5072"}),(0,s.jsx)(d.td,{children:"SRCxlUPrcRange"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"bool"}),(0,s.jsx)(d.td,{children:"cxlUPrcRange"}),(0,s.jsxs)(d.td,{children:["Cancel order if outside stock price range ",(0,s.jsx)("br",{}),"\t\tY = Yes ",(0,s.jsx)("br",{})," N = No ",(0,s.jsx)("br",{})," Z = Yes/Halt - Yes and also cancel on underlying halt",(0,s.jsx)("br",{})," M = No/Halt - No, but cancel on underlying halt"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5074"}),(0,s.jsx)(d.td,{children:"SRMinUBid"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"minUBid"}),(0,s.jsx)(d.td,{children:"Any non-hold status will  revert to markup if stock NBBO Mid  is outside [midStockPx,maxUAsk]  range."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5076"}),(0,s.jsx)(d.td,{children:"SRMaxUAsk"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"See description for minUBid"}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5078"}),(0,s.jsx)(d.td,{children:"SRMinOptionPx"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"maxUAsk"}),(0,s.jsx)(d.td,{children:"Option price floor for orders tied to stock"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5255"}),(0,s.jsx)(d.td,{children:"SRMaxExpDayWtVegaLn"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"maxExpDayWtVegaLn"}),(0,s.jsx)(d.td,{children:"max accnt+expiration day wvega  (time weighted) long.  Should be a positive number; Defaults to no limit"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5256"}),(0,s.jsx)(d.td,{children:"SRMaxExpDayWtVegaSh"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"maxExpDayWtVegaSh"}),(0,s.jsx)(d.td,{children:"max accnt+expiration day wvega  (time weighted) short.  Should be a positive number; Defaults to no limit"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5257"}),(0,s.jsx)(d.td,{children:"SRMaxSymDayWtVegaLn"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"maxSymDayWtVegaLn"}),(0,s.jsx)(d.td,{children:"max acct+symbol day vega long.  Should be a positive number; Defaults to no limit"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5258"}),(0,s.jsx)(d.td,{children:"SRMaxSymDayWtVegaSh"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"maxExpDayWtVegaSh"}),(0,s.jsx)(d.td,{children:"max acct+symbol day $delta  short. Should be a positive number; Defaults to no limit"})]})]})]}),"\n",(0,s.jsx)(d.h3,{id:"algorithmic-order----option-autohedging-fields",children:"Algorithmic Order -- Option Autohedging Fields"}),"\n",(0,s.jsx)(d.p,{children:"If autohedging is enabled, then any resulting autohedge fills will be reported using the orders. Note that since autohedge trades are generated in response to option fills, perhaps over multiple orders, some accommodations must be made in the resulting autohedge execution reports.\nThey cannot be reported back to the client on an order entry line; all autohedged drop reports are reported down a separate FIX drop line."}),"\n",(0,s.jsxs)(d.table,{children:[(0,s.jsx)(d.thead,{children:(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.th,{children:"Tag"}),(0,s.jsx)(d.th,{children:"Field Name"}),(0,s.jsx)(d.th,{children:"Req'd"}),(0,s.jsx)(d.th,{children:"Type"}),(0,s.jsxs)(d.th,{children:["Associated Record Value",(0,s.jsx)("br",{}),"(SpdrParentOrder)"]}),(0,s.jsx)(d.th,{children:"Comments"})]})}),(0,s.jsx)(d.tbody,{children:(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5152"}),(0,s.jsx)(d.td,{children:"SRAutoHedge"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"char"}),(0,s.jsx)(d.td,{children:"autoHedge"}),(0,s.jsxs)(d.td,{children:["N = NoHedge ",(0,s.jsx)(d.em,{children:"default"})," ",(0,s.jsx)("br",{})," X = FastCrx ",(0,s.jsx)("br",{})," Y = FastDark ",(0,s.jsx)("br",{})," Z = SlowDark ",(0,s.jsx)("br",{})," F = AutoCrx  ",(0,s.jsx)("br",{})," S = AutoTrn  ",(0,s.jsx)("br",{})," M = AutoMid  ",(0,s.jsx)("br",{})," A = SpdrAuto ",(0,s.jsx)("br",{})," 1 = Spdr10S  ",(0,s.jsx)("br",{})," 3 = Spdr30S  ",(0,s.jsx)("br",{})," 9 = Spdr90S  ",(0,s.jsx)("br",{})," 5 = Spdr5M   ",(0,s.jsx)("br",{})," H = Spdr30M  ",(0,s.jsx)("br",{})," D = SpdrDay ",(0,s.jsx)("br",{})," 12 = SmartFast ",(0,s.jsx)("br",{})," 13 = SmartNorm ",(0,s.jsx)("br",{})," V1 = AlphaVwap1pct=V1 ",(0,s.jsx)("br",{})," V2 = AlphaVwap2pct ",(0,s.jsx)("br",{})," V5 = AlphaVwap5pct ",(0,s.jsx)("br",{})," V25 = AlphaVwap25pct ",(0,s.jsx)("br",{})," T = Static"]})]})})]}),"\n",(0,s.jsx)(d.h2,{id:"ordercancelreplace-client-to-spiderrock",children:"OrderCancelReplace (Client to SpiderRock)"}),"\n",(0,s.jsx)(d.p,{children:"The OrderCancelReplace<G> request is used to change the parameters of an existing New Order Single."}),"\n",(0,s.jsx)(d.p,{children:"An ExecutionReport<8> with ExecType<150>=Pending Replace will be sent unless the OrderCancelReplace<G> can immediately be accepted (ExecutionReport<8> with ExecType<150>=Replaced) or rejected (OrderCancelReject<9> message)."}),"\n",(0,s.jsx)(d.p,{children:"An OrderCancelReplace<G> request will only be accepted if any  associated child orders can successfully be cancelled. Requests that cannot be processed will be rejected with a CancelReject<3> message."}),"\n",(0,s.jsx)(d.p,{children:"An order\u2019s algorithmic parameters remain unaffected unless a new value is manually updated for a specific parameter. If a new value is not supplied, the previous order's algo parameters are carried forward onto the new order."}),"\n",(0,s.jsx)(d.p,{children:"An OrderCancelReplace<G> request may be sent to increase the quantity on a filled order, but not a cancelled nor rejected order."}),"\n",(0,s.jsxs)(d.table,{children:[(0,s.jsx)(d.thead,{children:(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.th,{children:"Tag"}),(0,s.jsx)(d.th,{children:"Field Name"}),(0,s.jsx)(d.th,{children:"Req'd"}),(0,s.jsx)(d.th,{children:"Type"}),(0,s.jsxs)(d.th,{children:["Associated Record Value",(0,s.jsx)("br",{}),"(SpdrParentOrder)"]}),(0,s.jsx)(d.th,{children:"Comments"})]})}),(0,s.jsxs)(d.tbody,{children:[(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Standard Header"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Y"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"MsgType = G"})})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"11"}),(0,s.jsx)(d.td,{children:"ClOrdId"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"altOrderId"}),(0,s.jsx)(d.td,{children:"Client order ID of the cancel request (24 character max)"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"41"}),(0,s.jsx)(d.td,{children:"OrigClOrdID"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"altPrevOrderId"}),(0,s.jsx)(d.td,{children:"ClOrdID<11> of the previous order (NOT the initial order  of the day) when canceling an order. (24 character max)"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"Modifiable New Order Single Fields (See list above)"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Standard  Trailer"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Y"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{})]})]})]}),"\n",(0,s.jsx)(d.h2,{id:"newordermultileg-client-to-spiderrock",children:"NewOrderMultileg (Client to SpiderRock)"}),"\n",(0,s.jsx)(d.p,{children:"A NewOrderMultileg<AB> message is used to submit an order for up to 6 option legs and one equity leg as a package. Both standard multi-leg order types and the more complex ones offered by SpiderRock are communicated using this message."}),"\n",(0,s.jsx)(d.p,{children:"The NewOrderMultileg<AB> fields listed in the following table are used in common by all SpiderRock multileg orders. Additional fields are used by different order types to communicate their unique features. These fields are described in subsequent sections."}),"\n",(0,s.jsx)(d.p,{children:"In addition to standard FIX fields, SpiderRock uses custom FIX fields (5,000+) for SpiderRock specific parameters."}),"\n",(0,s.jsxs)(d.table,{children:[(0,s.jsx)(d.thead,{children:(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.th,{children:"Tag"}),(0,s.jsx)(d.th,{children:"Field Name"}),(0,s.jsx)(d.th,{children:"Req'd"}),(0,s.jsx)(d.th,{children:"Type"}),(0,s.jsxs)(d.th,{children:["Associated Record Value",(0,s.jsx)("br",{}),"(SpdrParentOrder)"]}),(0,s.jsx)(d.th,{children:"Comments"})]})}),(0,s.jsxs)(d.tbody,{children:[(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Standard Header"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Y"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"MsgType = AB"})})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"11"}),(0,s.jsx)(d.td,{children:"ClOrdId"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"altOrderId"}),(0,s.jsx)(d.td,{children:"Client order ID (24 character  max)"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"1"}),(0,s.jsx)(d.td,{children:"Account"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"accnt"}),(0,s.jsxs)(d.td,{children:["SR account acronym  ",(0,s.jsx)(d.em,{children:"Must be configured prior to testing or trading"}),"  ",(0,s.jsx)("br",{}),"Account superceded by: SRAccnt"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"38"}),(0,s.jsx)(d.td,{children:"OrderQty"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"orderSize"}),(0,s.jsxs)(d.td,{children:["Executable quantity ",(0,s.jsx)("br",{}),"Superceded by: SROrderSize"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"54"}),(0,s.jsx)(d.td,{children:"Side"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"char"}),(0,s.jsx)(d.td,{children:"orderSide"}),(0,s.jsx)(d.td,{children:"1 = Buy"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"100"}),(0,s.jsx)(d.td,{children:"ExDestination"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"exchMask"}),(0,s.jsxs)(d.td,{children:["SR Destination Code (see  appendix) - Required for DMA style orders  ",(0,s.jsx)("br",{}),"Superceded by: SRExDestination"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"40"}),(0,s.jsx)(d.td,{children:"OrdType"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"char"}),(0,s.jsx)(d.td,{children:"orderLimitType"}),(0,s.jsxs)(d.td,{children:["1 = Market  ",(0,s.jsx)("br",{})," 2 = Limit - Required for DMA and Smart/Sweep style orders  ",(0,s.jsx)("br",{}),"Superceded by: SROrderLimitType"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"44"}),(0,s.jsx)(d.td,{children:"Price"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"orderPrcLimit"}),(0,s.jsxs)(d.td,{children:["Required for limit order types ",(0,s.jsx)("br",{})," Superceded by: SROrderPrcLimit"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"59"}),(0,s.jsx)(d.td,{children:"TimeInForce"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsxs)(d.td,{children:["orderDuration",(0,s.jsx)("br",{}),"parentOrderHandling"]}),(0,s.jsxs)(d.td,{children:["0 = Day  ",(0,s.jsx)("br",{})," 3 = Immediate or Cancel (IOC) ",(0,s.jsx)("br",{})," OrderDuration superceded by: SROrderDuration SRTimeInForce ",(0,s.jsx)("br",{}),"ParentOrderHandling superceded by SROrderHandling"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"60"}),(0,s.jsx)(d.td,{children:"TransactTime"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"utcDttm"}),(0,s.jsx)(d.td,{}),(0,s.jsxs)(d.td,{children:["Time this order request was initiated/released. Formatted as: ",(0,s.jsxs)(d.em,{children:["YYYYMMDD-HH:MM",":SS",".fff"]})," ",(0,s.jsx)("br",{}),(0,s.jsx)(d.em,{children:"Note: this order must arrive at SpiderRock within 15 seconds of the TransactTime to be considered a valid order."})]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Algorithmic Multileg Fields"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsxs)(d.td,{children:["Associated Record Value ",(0,s.jsx)("br",{}),"(SpdrParentOrder.OrderLegsList)"]}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:'See "Multileg Algorithm" below'})})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"555"}),(0,s.jsx)(d.td,{children:"NoLegs"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"numLegs"}),(0,s.jsx)(d.td,{children:"Number of legs"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"\u2192\xa0654"}),(0,s.jsx)(d.td,{children:"LegRefId"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsxs)(d.td,{children:["altStkLegId",(0,s.jsx)("br",{}),"altLegId",(0,s.jsx)(d.em,{children:"N"})]}),(0,s.jsx)(d.td,{children:"Used to identify a specific  leg"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"\u2192\xa0608"}),(0,s.jsx)(d.td,{children:"LegCFICode"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Ignored"})}),(0,s.jsxs)(d.td,{children:["ES= Equity Common Shares ",(0,s.jsx)("br",{}),"  OC = Option - Call [OPT]",(0,s.jsx)("br",{})," OP  = Option - Put [OPT]  ",(0,s.jsx)("br",{}),"F = Future [FUT] ",(0,s.jsx)("br",{})," OCXF = Future Option - Call [OPT]",(0,s.jsx)("br",{})," OPXF  = Future Option - Put [OPT]  ",(0,s.jsx)("br",{})," Superceded by: SRLegSecType",(0,s.jsx)("br",{}),"Supercedes: LegSecurityType"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"\u2192\xa0609"}),(0,s.jsx)(d.td,{children:"LegSecurityType"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsxs)(d.td,{children:["ticker",(0,s.jsx)("br",{}),"secKey",(0,s.jsx)(d.em,{children:"N"})," (for options)",(0,s.jsx)("br",{}),"secType",(0,s.jsx)(d.em,{children:"N"})," (for options)"]}),(0,s.jsxs)(d.td,{children:["Alternative to  LegCFICode<608> ",(0,s.jsx)("br",{})," CS = Equity ",(0,s.jsx)(d.em,{children:"default"}),(0,s.jsx)("br",{})," FUT = Future/Future Options  ",(0,s.jsx)("br",{}),"OPT = Equity Option"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"\u2192\xa0600"}),(0,s.jsx)(d.td,{children:"LegSymbol"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsxs)(d.td,{children:["ticker",(0,s.jsx)("br",{}),"secKey",(0,s.jsx)(d.em,{children:"N"})," (for options)"]}),(0,s.jsxs)(d.td,{children:["Leg Exchange symbol ",(0,s.jsx)("br",{})," May incorporate symbol suffix, e.g. VIA.A ",(0,s.jsx)("br",{})," For OPRA options, SpiderRock accepts an OSI code in this field. ",(0,s.jsx)("br",{})," For standardized futures products, maturity information can be included in this field, e.g. GCZ22."]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"\u2192\xa0601"}),(0,s.jsx)(d.td,{children:"LegSymbolSfx"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"ticker"}),(0,s.jsx)(d.td,{children:"Leg Symbol Suffix"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"\u2192\xa0611"}),(0,s.jsx)(d.td,{children:"LegMaturityDate"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsxs)(d.td,{children:["secKey",(0,s.jsx)(d.em,{children:"N"})," (for options)"]}),(0,s.jsxs)(d.td,{children:["For Futures and Options. Formatted as: ",(0,s.jsx)(d.em,{children:"YYYYMMDD"})]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"\u2192\xa0612"}),(0,s.jsx)(d.td,{children:"LegStrikePrice"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsxs)(d.td,{children:["secKey",(0,s.jsx)(d.em,{children:"N"})," (for options)"]}),(0,s.jsx)(d.td,{children:"Option strike price"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"\u2192\xa0624"}),(0,s.jsx)(d.td,{children:"LegSide"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"char"}),(0,s.jsxs)(d.td,{children:["ssaleFlag",(0,s.jsx)("br",{}),"side",(0,s.jsx)(d.em,{children:"N"})]}),(0,s.jsxs)(d.td,{children:["1 = Buy  ",(0,s.jsx)("br",{})," 2 = Sell  ",(0,s.jsx)("br",{})," 5 = Sell short  ",(0,s.jsx)("br",{})," 6 = Sell short exempt ",(0,s.jsx)("br",{}),"  Y = Sell auto (SR determines  whether child orders should  be selling long or short by  looking up account/aggregate  group position when child  orders are created). ",(0,s.jsx)("br",{}),"Superceded by: SRLegSide,SRLegShortSaleFlag"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"\u2192\xa0623"}),(0,s.jsx)(d.td,{children:"LegRatioQty"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsxs)(d.td,{children:["mult",(0,s.jsx)(d.em,{children:"N"})]}),(0,s.jsx)(d.td,{children:"The ratio of quantity for  this individual leg relative  to the entire multileg  security"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"\u2192\xa0564"}),(0,s.jsx)(d.td,{children:"LegPositionEffect"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"char"}),(0,s.jsxs)(d.td,{children:["posType",(0,s.jsx)(d.em,{children:"N"})]}),(0,s.jsxs)(d.td,{children:["For Options:",(0,s.jsx)("br",{})," O = Open",(0,s.jsx)("br",{})," C =  Close ",(0,s.jsx)("br",{}),"A = Auto (SR determines  whether child orders should  be marked open or closed by  looking up account/aggregate  group position when child  orders are created). ",(0,s.jsx)("br",{}),"Superceded by: SRLegPosEffect"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Standard  Trailer"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Y"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{})]})]})]}),"\n",(0,s.jsx)(d.h3,{id:"example---dma",children:"Example - DMA"}),"\n",(0,s.jsx)(d.p,{children:"DMA orders are used to send a multi-leg order to a specified exchange or destination. This order type is appropriate when the client wishes to control where the order is traded. Note that DMA orders may interact with dark liquidity in the SpiderRock platform if configured to do so."}),"\n",(0,s.jsxs)(d.table,{children:[(0,s.jsx)(d.thead,{children:(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.th,{children:"Tag"}),(0,s.jsx)(d.th,{children:"Field Name"}),(0,s.jsx)(d.th,{children:"Req'd"}),(0,s.jsx)(d.th,{children:"Type"}),(0,s.jsxs)(d.th,{children:["Associated Record Value",(0,s.jsx)("br",{}),"(SpdrParentOrder)"]}),(0,s.jsx)(d.th,{children:"Comments"})]})}),(0,s.jsxs)(d.tbody,{children:[(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Standard Header"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Y"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"MsgType = AB"})})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Basic NewOrderMultileg Fields"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:'See "NewOrderMultileg" above'})})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"100"}),(0,s.jsx)(d.td,{children:"ExDestination"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"exchMask"}),(0,s.jsxs)(d.td,{children:["SR Destination Code (see  appendix) - Required for DMA style orders",(0,s.jsx)("br",{}),"Superceded by: SRExDestination"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Standard  Trailer"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Y"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{})]})]})]}),"\n",(0,s.jsx)(d.h3,{id:"example---smartsweep-1",children:"Example - Smart/Sweep"}),"\n",(0,s.jsx)(d.p,{children:"Smart/Sweep orders are used to send an order without specifying a destination. SpiderRock will determine the optimal destination(s) for the order and will automatically sweep multiple destinations to maximize liquidity capture. This order type can optionally post any unfilled balance on an exchange."}),"\n",(0,s.jsxs)(d.table,{children:[(0,s.jsx)(d.thead,{children:(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.th,{children:"Tag"}),(0,s.jsx)(d.th,{children:"Field Name"}),(0,s.jsx)(d.th,{children:"Req'd"}),(0,s.jsx)(d.th,{children:"Type"}),(0,s.jsxs)(d.th,{children:["Associated Record Value",(0,s.jsx)("br",{}),"(SpdrParentOrder)"]}),(0,s.jsx)(d.th,{children:"Comments"})]})}),(0,s.jsxs)(d.tbody,{children:[(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Standard Header"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Y"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"MsgType = AB"})})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Basic NewOrderMultileg Fields"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:'See "NewOrderMultileg" above'})})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Standard  Trailer"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Y"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{})]})]})]}),"\n",(0,s.jsx)(d.h3,{id:"example---stagedwaitstart-1",children:"Example - Staged/WaitStart"}),"\n",(0,s.jsx)(d.p,{children:"The SRStartType<5090> tag is used to send staged/wait orders to SpiderRock. These orders will be sent to exchange as market orders once the client commands their release. Note that orders can be released in multiple ways: via SpiderRock GUI tools, via the SpiderRock SRSE/SQL API, and via a Listexecute<L> fix message. Staged orders will be acknowledged immediately; fills will only be reported after the order has been released."}),"\n",(0,s.jsxs)(d.table,{children:[(0,s.jsx)(d.thead,{children:(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.th,{children:"Tag"}),(0,s.jsx)(d.th,{children:"Field Name"}),(0,s.jsx)(d.th,{children:"Req'd"}),(0,s.jsx)(d.th,{children:"Type"}),(0,s.jsxs)(d.th,{children:["Associated Record Value",(0,s.jsx)("br",{}),"(SpdrParentOrder)"]}),(0,s.jsx)(d.th,{children:"Comments"})]})}),(0,s.jsxs)(d.tbody,{children:[(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Standard Header"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Y"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"MsgType = AB"})})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"Any Combination of Basic or Complex NewOrderMultiLeg Fields"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5086"}),(0,s.jsx)(d.td,{children:"SRStageType"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"spdrStageType"}),(0,s.jsxs)(d.td,{children:["1 = ModifyAny ",(0,s.jsx)("br",{})," 2 = ModifyAlgo"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5090"}),(0,s.jsx)(d.td,{children:"SRStartType"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"startType"}),(0,s.jsx)(d.td,{children:"2 = WaitTrigger (wait start)"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Standard  Trailer"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Y"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{})]})]})]}),"\n",(0,s.jsx)(d.h3,{id:"example---multileg-algorithm",children:"Example - Multileg Algorithm"}),"\n",(0,s.jsx)(d.p,{children:"SpiderRock Algorithmic orders express intent to interact with the market in a variety of ways. These parent orders can, and frequently do, result in multiple child orders being generated and routed to the exchange."}),"\n",(0,s.jsxs)(d.table,{children:[(0,s.jsx)(d.thead,{children:(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.th,{children:"Tag"}),(0,s.jsx)(d.th,{children:"Field Name"}),(0,s.jsx)(d.th,{children:"Req'd"}),(0,s.jsx)(d.th,{children:"Type"}),(0,s.jsxs)(d.th,{children:["Associated Record Value",(0,s.jsx)("br",{}),"(SpdrParentOrder)"]}),(0,s.jsx)(d.th,{children:"Comments"})]})}),(0,s.jsxs)(d.tbody,{children:[(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Standard Header"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Y"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"MsgType = AB"})})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"Basic NewOrderMultileg Fields  (See NewOrderMultileg above)"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5036"}),(0,s.jsx)(d.td,{children:"SRUsername"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"altUserName"}),(0,s.jsx)(d.td,{children:"Client defined username. - Used for customer service and futures compliance - If necessary, a default may be assigned to the FIX session (24 character max)."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5055"}),(0,s.jsx)(d.td,{children:"SRProgressExposeTime"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"progressExposeTime"}),(0,s.jsx)(d.td,{children:"Default = 0"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5094"}),(0,s.jsx)(d.td,{children:"SROrderHandling"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"orderHandling"}),(0,s.jsxs)(d.td,{children:["Primary order handling  algorithm  ",(0,s.jsx)("br",{})," 8 = Legger  ",(0,s.jsx)("br",{})," 9 =  Seeker  ",(0,s.jsx)("br",{})," 10 =  SeekerLegger ",(0,s.jsx)("br",{}),"  20 = CobMaker"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5096"}),(0,s.jsx)(d.td,{children:"SRBalanceHandling"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"parentBalanceHandling"}),(0,s.jsxs)(d.td,{children:["0 = None (non-marketable  balance will not be posted)",(0,s.jsx)("br",{})," 4  = PostLimit"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5086"}),(0,s.jsx)(d.td,{children:"SRStageType"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"spdrStageType"}),(0,s.jsxs)(d.td,{children:["1 = ModifyAny ",(0,s.jsx)("br",{})," 2 = ModifyAlgo"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5090"}),(0,s.jsx)(d.td,{children:"SRStartType"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"startType"}),(0,s.jsxs)(d.td,{children:["0 = Immediate ",(0,s.jsx)("br",{})," 1 = WaitTrigger (wait for  RiskGroup/Sweep trigger)  ",(0,s.jsx)("br",{})," 2 = Staged (wait for order to  be modified/released)"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5084"}),(0,s.jsx)(d.td,{children:"SRTimeInForce"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"timeInForce"}),(0,s.jsxs)(d.td,{children:["Day = Day -- Order remains working until the end of the day's primary trading session.",(0,s.jsx)("br",{})," EXT = Extended Day - Order remains working through the day's extended trading session until the next top of day rotation. - WK = Week - Order remains working for the  remainder of the week's  normal trading sessions.",(0,s.jsx)("br",{})," EWK = Extended Week - Order remains working for the week's remaining extended trading sessions until the next Friday/EndOfWeek rotation.",(0,s.jsx)("br",{})," IOC = Immediate or Cancel - Order expires after one attempt at execution OR after one second.",(0,s.jsx)("br",{})," GTD = Good Till Duration - Order remains working through the day's extended trading session until the next top of day rotation OR when SRGoodTillDttm time is reached OR after working for SROrderDuration seconds."]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5089"}),(0,s.jsx)(d.td,{children:"SRMarketSession"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"char"}),(0,s.jsx)(d.td,{children:"marketSession"}),(0,s.jsxs)(d.td,{children:["1 = Regular Market ",(0,s.jsx)("br",{})," 2 = Pre-Market ",(0,s.jsx)("br",{})," 3 = Post-Market ",(0,s.jsx)("br",{})," 4 = Regular and Pre-Market ",(0,s.jsx)("br",{})," 5 = Regular and Post-Market ",(0,s.jsx)("br",{})," 6 = All Day"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5086"}),(0,s.jsx)(d.td,{children:"SROrderDuration"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"orderDuration"}),(0,s.jsx)(d.td,{children:"Order with SrTimeInForce =  GTD expires after working for  this number of seconds   0/missing = ignore"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5088"}),(0,s.jsx)(d.td,{children:"SRGoodTillDttm"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"utcDttm"}),(0,s.jsx)(d.td,{children:"goodTillDttm"}),(0,s.jsx)(d.td,{children:"Order with SrTimeInForce =  GTD expires at this time  working for this number of  seconds"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5034"}),(0,s.jsx)(d.td,{children:"SRStrategy"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"strategy"}),(0,s.jsx)(d.td,{children:"Client strategy label.  Displayed on SR Order Manager"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5360"}),(0,s.jsx)(d.td,{children:"SRExDestination"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"exchMask"}),(0,s.jsx)(d.td,{children:"Comma separated exchange  list; default = all available  exchanges"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5046"}),(0,s.jsx)(d.td,{children:"SRMaxExposureSize"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"maxExposureSize"}),(0,s.jsx)(d.td,{children:"Maximum simultaneous public  exposure size across all  exchanges"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5048"}),(0,s.jsx)(d.td,{children:"SRNumMakeExchanges"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"numMakeExchanges"}),(0,s.jsx)(d.td,{children:"Number of public exposure  exchanges"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5050"}),(0,s.jsx)(d.td,{children:"SRPublicSize"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"char"}),(0,s.jsx)(d.td,{children:"publicSize"}),(0,s.jsxs)(d.td,{children:["0 = None  ",(0,s.jsx)("br",{})," 1 = Randomize  ",(0,s.jsx)("br",{})," 2 = MktSize  ",(0,s.jsx)("br",{})," 3 = FullSize  ",(0,s.jsx)("br",{})," 4 = MktSizeA  ",(0,s.jsx)("br",{})," 5 = MktSizeB  ",(0,s.jsx)("br",{})," 6 = MktSizeC  ",(0,s.jsx)("br",{})," 7 = FullSizeR"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5080"}),(0,s.jsx)(d.td,{children:"SRMaxChildOrders"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"maxChildOrders"}),(0,s.jsx)(d.td,{children:"Upper bound for the number of  child orders generated for  this parent order"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5054"}),(0,s.jsx)(d.td,{children:"SRProgressRule"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"progressRule"}),(0,s.jsxs)(d.td,{children:["0 = Immediate (default)  ",(0,s.jsx)("br",{})," 1 = Twap  ",(0,s.jsx)("br",{})," 3 = TwapReset  ",(0,s.jsx)("br",{})," 5 = FastReset  ",(0,s.jsx)("br",{})," 6 = SlowReset  ",(0,s.jsx)("br",{})," 7 = TwapAlpha  ",(0,s.jsx)("br",{}),"progressRule  11 =  SpdrPulse"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5056"}),(0,s.jsx)(d.td,{children:"progressSliceCnt"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"progressSliceCnt"}),(0,s.jsx)(d.td,{children:"Number of slices to use (default = 4 or 8) [max 20]"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5104"}),(0,s.jsx)(d.td,{children:"SRTakeReachRule"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"takeReachRule"}),(0,s.jsxs)(d.td,{children:["0 = Immediate ",(0,s.jsx)("br",{}),"  1 = Delayed  ",(0,s.jsx)("br",{})," 2 = Passive"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5098"}),(0,s.jsx)(d.td,{children:"SROrderLimitType"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"orderLimitType"}),(0,s.jsxs)(d.td,{children:["0 = Market ",(0,s.jsx)("br",{}),"  1 = MarketArrival  ",(0,s.jsx)("br",{})," 2 = Prc  ",(0,s.jsx)("br",{})," 3 = PrcDe  ",(0,s.jsx)("br",{})," 4 = PrcDeX  ",(0,s.jsx)("br",{})," 6 = PrcDeP  ",(0,s.jsx)("br",{})," 8 = PrcDeXP  ",(0,s.jsx)("br",{})," 14 =  RelMid  ",(0,s.jsx)("br",{})," 15 =  RelJoin ",(0,s.jsx)("br",{}),"  16 = RelCross"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5100"}),(0,s.jsx)(d.td,{children:"SRTakeLimitClass"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"char"}),(0,s.jsx)(d.td,{children:"takeLimitClass"}),(0,s.jsxs)(d.td,{children:["0 = Simple ",(0,s.jsx)("br",{})," 1=Surface ",(0,s.jsx)("br",{})," Probability=2 ",(0,s.jsx)("br",{})," SurfProb=3"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5102"}),(0,s.jsx)(d.td,{children:"SRMakeLimitClass"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"char"}),(0,s.jsx)(d.td,{children:"makeLimitClass"}),(0,s.jsxs)(d.td,{children:["0 = Simple ",(0,s.jsx)("br",{})," 1=Surface ",(0,s.jsx)("br",{}),"  Probability=2 ",(0,s.jsx)("br",{})," SurfProb=3"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5106"}),(0,s.jsx)(d.td,{children:"SROrderPrcLimit"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"orderPrcLimit"}),(0,s.jsx)(d.td,{children:"Applies if SROrderLimitType<5098> = Prc"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5108"}),(0,s.jsx)(d.td,{children:"SROrderRefUPrc"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"price"}),(0,s.jsx)(d.td,{children:"orderRefUPrc"}),(0,s.jsx)(d.td,{children:"default=underlier.mid"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5110"}),(0,s.jsx)(d.td,{children:"SROrderRefDelta"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"orderRefDelta"}),(0,s.jsx)(d.td,{children:"Default=option.delta"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5112"}),(0,s.jsx)(d.td,{children:"SROrderRefGamma"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"orderRefGamma"}),(0,s.jsx)(d.td,{children:"Default=option.gamma"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5116"}),(0,s.jsx)(d.td,{children:"SROrderVolLimit"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"orderVolLimit"}),(0,s.jsxs)(d.td,{children:["Order volatility limit - Valid range: [0.005, 9.000]. ",(0,s.jsx)("br",{})," Required if SROrderLimitType<5098> is Vol, VolX, or VolPrc ",(0,s.jsx)("br",{}),"Ignored if SROrderLimitType is Market"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5126"}),(0,s.jsx)(d.td,{children:"SROrderPrcOffset"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"orderPrcOffset"}),(0,s.jsx)(d.td,{children:"Default=0"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5128"}),(0,s.jsx)(d.td,{children:"SRTakeAlphaType"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"char"}),(0,s.jsx)(d.td,{children:"takeAlphaType"}),(0,s.jsxs)(d.td,{children:["1 = Static  ",(0,s.jsx)("br",{})," 2 = Hawk  ",(0,s.jsx)("br",{})," 3 = Eagle  ",(0,s.jsx)("br",{})," 4 = Falcon  ",(0,s.jsx)("br",{})," 5 = Relative"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5130"}),(0,s.jsx)(d.td,{children:"SRMakeAlphaType"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"char"}),(0,s.jsx)(d.td,{children:"makeAlphaType"}),(0,s.jsxs)(d.td,{children:["1 = Static  ",(0,s.jsx)("br",{})," 2 = Hawk  ",(0,s.jsx)("br",{})," 3 = Eagle  ",(0,s.jsx)("br",{})," 4 = Falcon  ",(0,s.jsx)("br",{})," 5 = Relative"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5132"}),(0,s.jsx)(d.td,{children:"SRTakeAlphaFactor"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"takeAlphaFactor"}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5134"}),(0,s.jsx)(d.td,{children:"SRMakeAlphaFactor"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"makeAlphaFactor"}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5136"}),(0,s.jsx)(d.td,{children:"SRTakeProbability"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"takeProbability"}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5138"}),(0,s.jsx)(d.td,{children:"SRMakeProbability"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"makeProbability"}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5202"}),(0,s.jsx)(d.td,{children:"SRLeadSide"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"char"}),(0,s.jsx)(d.td,{children:"leadSide"}),(0,s.jsxs)(d.td,{children:["SROrderHandling=Legger Only ",(0,s.jsx)("br",{}),"  1 = Buy  ",(0,s.jsx)("br",{})," 2 = Sell"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5204"}),(0,s.jsx)(d.td,{children:"SRMaxCompletionSlippage"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"maxCompletionSlippage"}),(0,s.jsx)(d.td,{children:"SROrderHandling=Legger Only"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5206"}),(0,s.jsx)(d.td,{children:"SROrderRefPremium"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"orderRefPremium"}),(0,s.jsx)(d.td,{children:"Reference premium (multileg  orders only)"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5290"}),(0,s.jsx)(d.td,{children:"SRUserData1"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"userData1"}),(0,s.jsxs)(d.td,{children:["User defined field (max 255  chars) ",(0,s.jsx)("br",{})," Can be returned on exec reports; forward to drop lines or forwarded to child orders ",(0,s.jsx)("br",{})," Please advise SpiderRock support staff of intended behavior."]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5291"}),(0,s.jsx)(d.td,{children:"SRUserData2"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"userData2"}),(0,s.jsxs)(d.td,{children:["User defined field (max 255  chars) ",(0,s.jsx)("br",{})," Can be returned on exec reports; forward to drop lines or forwarded to child orders ",(0,s.jsx)("br",{})," Please advise SpiderRock support staff of intended behavior."]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Standard  Trailer"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Y"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{})]})]})]}),"\n",(0,s.jsx)(d.h3,{id:"example---legger",children:"Example - Legger"}),"\n",(0,s.jsx)(d.p,{children:"Legger orders allow SpiderRock to determine optimal destination(s) for the order. SpiderRock will automatically sweep multiple destinations to maximize the order's liquidity capturer. Any unfilled balance can optionally be posted to exchange."}),"\n",(0,s.jsxs)(d.table,{children:[(0,s.jsx)(d.thead,{children:(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.th,{children:"Tag"}),(0,s.jsx)(d.th,{children:"Field Name"}),(0,s.jsx)(d.th,{children:"Req'd"}),(0,s.jsx)(d.th,{children:"Type"}),(0,s.jsxs)(d.th,{children:["Associated Record Value",(0,s.jsx)("br",{}),"(SpdrParentOrder)"]}),(0,s.jsx)(d.th,{children:"Comments"})]})}),(0,s.jsxs)(d.tbody,{children:[(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"Basic NewOrderMultileg Fields  (See NewOrderMultileg above)"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5094"}),(0,s.jsx)(d.td,{children:"SROrderHandling"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"orderHandling"}),(0,s.jsxs)(d.td,{children:["Primary order handling  algorithm",(0,s.jsx)("br",{})," 8 = Legger"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5096"}),(0,s.jsx)(d.td,{children:"SRBalanceHandling"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"parentBalanceHandling"}),(0,s.jsxs)(d.td,{children:["0 = None (non-marketable  balance will not be posted) ",(0,s.jsx)("br",{})," 4  = PostLimit"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5202"}),(0,s.jsx)(d.td,{children:"SRLeadSide"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"char"}),(0,s.jsx)(d.td,{children:"leadSide"}),(0,s.jsxs)(d.td,{children:["Legger Only  ",(0,s.jsx)("br",{})," 1 = Buy  ",(0,s.jsx)("br",{})," 2 = Sell"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5204"}),(0,s.jsx)(d.td,{children:"SRMaxCompletionSlippage"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"maxCompletionSlippage"}),(0,s.jsx)(d.td,{children:"Legger Only"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Standard  Trailer"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Y"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{})]})]})]}),"\n",(0,s.jsx)(d.h2,{id:"multilegcancelreplace-client-to-spiderrock",children:"MultilegCancelReplace (Client to SpiderRock)"}),"\n",(0,s.jsx)(d.p,{children:"The MultilegCancelReplace<AD> request is used to change the parameters of an existing New Order Single."}),"\n",(0,s.jsx)(d.p,{children:"An ExecutionReport<8> with ExecType<150>=Pending Replace will be sent unless the MultilegCancelReplace<AD> can immediately be accepted (ExecutionReport<8> with ExecType<150>=Replaced) or rejected (OrderCancelReject<9> message)."}),"\n",(0,s.jsx)(d.p,{children:"An MultilegCancelReplace<AD> request will only be accepted if any associated child orders can successfully be cancelled. Requests that cannot be processed will be rejected with a CancelReject<3> message."}),"\n",(0,s.jsxs)(d.table,{children:[(0,s.jsx)(d.thead,{children:(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.th,{children:"Tag"}),(0,s.jsx)(d.th,{children:"Field Name"}),(0,s.jsx)(d.th,{children:"Req'd"}),(0,s.jsx)(d.th,{children:"Type"}),(0,s.jsxs)(d.th,{children:["Associated Record Value",(0,s.jsx)("br",{}),"(SpdrParentOrder)"]}),(0,s.jsx)(d.th,{children:"Comments"})]})}),(0,s.jsxs)(d.tbody,{children:[(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Standard Header"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Y"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"MsgType = AC"})})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"11"}),(0,s.jsx)(d.td,{children:"ClOrdId"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"altOrderId"}),(0,s.jsx)(d.td,{children:"Client order ID of the cancel  request (24 character max)"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"41"}),(0,s.jsx)(d.td,{children:"OrigClOrdID"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"altPrevOrderId"}),(0,s.jsx)(d.td,{children:"ClOrdID<11> of the previous  order (NOT the initial order  of the day) when canceling an  order. (24 character max)"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"Modifiable NewOrderMultileg Fields (See list above)"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Standard  Trailer"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Y"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{})]})]})]}),"\n",(0,s.jsx)(d.h2,{id:"executionreport-spiderrock-to-client",children:"ExecutionReport (SpiderRock to Client)"}),"\n",(0,s.jsx)(d.p,{children:"SpiderRock natively follows FIX 4.4 rules for ExecutionReport handling but can switch to FIX 4.2 on request."}),"\n",(0,s.jsxs)(d.table,{children:[(0,s.jsx)(d.thead,{children:(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.th,{children:"Tag"}),(0,s.jsx)(d.th,{children:"Field Name"}),(0,s.jsx)(d.th,{children:"Req'd"}),(0,s.jsx)(d.th,{children:"Type"}),(0,s.jsxs)(d.th,{children:["Associated Record Value",(0,s.jsx)("br",{}),"SpdrParentReport (r) ",(0,s.jsx)("br",{}),"SpdrParentExecution (x)"]}),(0,s.jsx)(d.th,{children:"Comments"})]})}),(0,s.jsxs)(d.tbody,{children:[(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"115"}),(0,s.jsx)(d.td,{children:"OnBehalfOfCompID"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"execBrkrClFirm (x)"}),(0,s.jsx)(d.td,{children:"client/firm at executing broker"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"116"}),(0,s.jsx)(d.td,{children:"OnBehalfOfSubID"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"execBrkrUserName (x)"}),(0,s.jsx)(d.td,{children:"userName at execution broker"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"11"}),(0,s.jsx)(d.td,{children:"ClOrdID"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"parentNumber (x)"}),(0,s.jsx)(d.td,{children:"See Also: SRBaseParentNumber"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"1"}),(0,s.jsx)(d.td,{children:"Account"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsxs)(d.td,{children:["accnt (r)",(0,s.jsx)("br",{}),"execBrkrAccnt (x)"]}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"20"}),(0,s.jsx)(d.td,{children:"ExecTransType"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"execStatus (x)"}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"150"}),(0,s.jsx)(d.td,{children:"ExecType"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"char"}),(0,s.jsx)(d.td,{children:"execStatus (x)"}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"39"}),(0,s.jsx)(d.td,{children:"OrdStatus"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"char"}),(0,s.jsxs)(d.td,{children:["spdrOrderStatus (r)",(0,s.jsx)("br",{}),"fillQuantity (r)",(0,s.jsx)("br",{}),"r.execType (r)"]}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"41"}),(0,s.jsx)(d.td,{children:"OrigClOrdID"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"prevParentNumber (r)"}),(0,s.jsx)(d.td,{children:"Conditionally required for  response to a Cancel or  Cancel/Replace request - (ExecType=PendingCancel, Replaced, or Canceled)"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"37"}),(0,s.jsx)(d.td,{children:"OrderID"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"hexlong"}),(0,s.jsx)(d.td,{children:"baseParentNumber (r)"}),(0,s.jsx)(d.td,{children:"Unique ID for order chain assigned by SpiderRock"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"54"}),(0,s.jsx)(d.td,{children:"Side"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"char"}),(0,s.jsxs)(d.td,{children:["orderSide (x)",(0,s.jsx)("br",{}),"ssaleFlag (x)"]}),(0,s.jsx)(d.td,{children:"Value from executing venue - Value may differ from client's order if execution  order is sold short."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"38"}),(0,s.jsx)(d.td,{children:"OrderQty"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"orderSize (x)"}),(0,s.jsx)(d.td,{children:"parent order size"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"40"}),(0,s.jsx)(d.td,{children:"OrdType"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"char"}),(0,s.jsxs)(d.td,{children:["parentOrderHandling (r)",(0,s.jsx)("br",{}),"limitPrice (r)",(0,s.jsx)("br",{}),"orderLimitType (r)"]}),(0,s.jsx)(d.td,{children:"Order type of this execution"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"528"}),(0,s.jsx)(d.td,{children:"OrderCapacity"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"char"}),(0,s.jsx)(d.td,{children:"orderCapacity (r)"}),(0,s.jsxs)(d.td,{children:["Value from order to venue",(0,s.jsx)("br",{}),"A = Agency",(0,s.jsx)("br",{}),"W = Agent Other Member",(0,s.jsx)("br",{}),"I = Individual",(0,s.jsx)("br",{}),"P = Principal",(0,s.jsx)("br",{}),"G = Proprietary"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"44"}),(0,s.jsx)(d.td,{children:"Price"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"limitPrice (r)"}),(0,s.jsx)(d.td,{children:"Value from client's order"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"47"}),(0,s.jsx)(d.td,{children:"Rule80A"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"char"}),(0,s.jsx)(d.td,{children:"orderCapacity (r)"}),(0,s.jsxs)(d.td,{children:["A = Agency Singl eOrder ",(0,s.jsx)("br",{}),"W = Agent Other Member",(0,s.jsx)("br",{}),"I = Individual ",(0,s.jsx)("br",{}),"P = Principal"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"59"}),(0,s.jsx)(d.td,{children:"TimeInForce"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsxs)(d.td,{children:["orderDuration (r)",(0,s.jsx)("br",{}),"parentOrderHandling (r)"]}),(0,s.jsxs)(d.td,{children:["0 = Day ",(0,s.jsx)("br",{})," 2 = Opening ",(0,s.jsx)("br",{})," 7 = Closing"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Symbology"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"55"}),(0,s.jsx)(d.td,{children:"Symbol"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"secKey (x)"}),(0,s.jsx)(d.td,{children:"Value from client's order"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"65"}),(0,s.jsx)(d.td,{children:"SymbolSfx"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"secKey (x)"}),(0,s.jsx)(d.td,{children:"Value from client's order"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"167"}),(0,s.jsx)(d.td,{children:"SecurityType"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"secKey (x)"}),(0,s.jsxs)(d.td,{children:["MLEG = Multileg",(0,s.jsx)("br",{}),"CS = Common Stock ",(0,s.jsx)("br",{}),"FUT = Future",(0,s.jsx)("br",{}),"OPT = Option"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"541"}),(0,s.jsx)(d.td,{children:"MaturityDate"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"secKey (x)"}),(0,s.jsx)(d.td,{children:"Value from client's order   YYYYMMDD"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"200"}),(0,s.jsx)(d.td,{children:"MaturityMonthYear"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"secKey (x)"}),(0,s.jsx)(d.td,{children:"Value from client's order   YYYYMM"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"205"}),(0,s.jsx)(d.td,{children:"MaturityDay"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"secKey (x)"}),(0,s.jsx)(d.td,{children:"Value from client's order   1-31"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"202"}),(0,s.jsx)(d.td,{children:"StrikePrice"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"price"}),(0,s.jsx)(d.td,{children:"secKey (x)"}),(0,s.jsx)(d.td,{children:"Value from client's order"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"201"}),(0,s.jsx)(d.td,{children:"PutOrCall"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"secKey (x)"}),(0,s.jsx)(d.td,{children:"Value from client's order"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"100"}),(0,s.jsx)(d.td,{children:"ExDestination"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"childExDest (r)"}),(0,s.jsx)(d.td,{children:"Child order exchange destination"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"204"}),(0,s.jsx)(d.td,{children:"CustomerOrFirm"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"char"}),(0,s.jsx)(d.td,{children:"firmType (r)"}),(0,s.jsxs)(d.td,{children:["Child order firm type ",(0,s.jsx)("br",{}),"0 = Customer ",(0,s.jsx)("br",{})," 1 = Firm ",(0,s.jsx)("br",{})," 2 = Broker / Dealer ",(0,s.jsx)("br",{}),"3 = Broker Dealer Customer",(0,s.jsx)("br",{})," 4 = Market Maker ",(0,s.jsx)("br",{})," 5 = Non-Member Market Maker ",(0,s.jsx)("br",{})," 8 = Customer Professional",(0,s.jsx)("br",{}),"J =Fim JBO"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"77"}),(0,s.jsx)(d.td,{children:"PositionEffect"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"positionType (x)"}),(0,s.jsxs)(d.td,{children:["parent order position type",(0,s.jsx)("br",{}),"O = Opening ",(0,s.jsx)("br",{})," C = Closing"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"439"}),(0,s.jsx)(d.td,{children:"ClearingFirm"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"clearingFirm (x)"}),(0,s.jsx)(d.td,{children:"clearing firm"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"440"}),(0,s.jsx)(d.td,{children:"ClearingAccount"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"clearingAccnt (x)"}),(0,s.jsx)(d.td,{children:"clearing firm account"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"17"}),(0,s.jsx)(d.td,{children:"ExecID"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"Unique ID assigned by  SpiderRock"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"19"}),(0,s.jsx)(d.td,{children:"ExecRefID"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"654"}),(0,s.jsx)(d.td,{children:"LegRefID"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"legRefId (x)"}),(0,s.jsx)(d.td,{children:"Used to identify a specific  leg for multileg order  execution reports"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"6"}),(0,s.jsx)(d.td,{children:"AvgPx"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsxs)(d.td,{children:["sumFillMoney (x)",(0,s.jsx)("br",{}),"sumFillQty (x)"]}),(0,s.jsx)(d.td,{children:"Execution price"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"14"}),(0,s.jsx)(d.td,{children:"CumQty"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"sumFillQty (x)"}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"151"}),(0,s.jsx)(d.td,{children:"LeavesQty"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsxs)(d.td,{children:["orderSize(x) ",(0,s.jsx)("br",{})," sumFillQty (x)"]}),(0,s.jsx)(d.td,{children:"0 if order is not active"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"31"}),(0,s.jsx)(d.td,{children:"LastPx"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"fillPrice (x)"}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"32"}),(0,s.jsx)(d.td,{children:"LastShares"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"fillQuantity (x)"}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"30"}),(0,s.jsx)(d.td,{children:"LastMkt"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsxs)(d.td,{children:["fillMarket (x)",(0,s.jsx)("br",{})," childExDest (x)"]}),(0,s.jsx)(d.td,{children:"Value from executing venue"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"29"}),(0,s.jsx)(d.td,{children:"LastCapacity"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"lastCapacity (x)"}),(0,s.jsx)(d.td,{children:"child order capacity"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"58"}),(0,s.jsx)(d.td,{children:"Text"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"spdrCloseReason (r), orderClosedText (r)"}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"60"}),(0,s.jsx)(d.td,{children:"TransactTime"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"utcDttm"}),(0,s.jsxs)(d.td,{children:["fillTransactDttm (x) ",(0,s.jsx)("br",{})," timestamp (r)"]}),(0,s.jsx)(d.td,{children:"Time the transaction  represented by this"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"75"}),(0,s.jsx)(d.td,{children:"TradeDate"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"utcDttm"}),(0,s.jsxs)(d.td,{children:["secKey (x)",(0,s.jsx)("br",{})," fill.fillDttm (x)"]}),(0,s.jsx)(d.td,{children:"Trading Date"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"76"}),(0,s.jsx)(d.td,{children:"ExecBroker"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"extExecBroker (r)"}),(0,s.jsx)(d.td,{children:"Child executing venue"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5607"}),(0,s.jsx)(d.td,{children:"SRStreetExecID"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"fillExecId (x)"}),(0,s.jsx)(d.td,{children:"street side execution Id"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5608"}),(0,s.jsx)(d.td,{children:"SRStreetExecRefID"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"fillExecRefId (x)"}),(0,s.jsx)(d.td,{children:"street side execution ref Id"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"442"}),(0,s.jsx)(d.td,{children:"MultiLegReportingType"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"char"}),(0,s.jsx)(d.td,{children:"parentShape (r)"}),(0,s.jsxs)(d.td,{children:["Used to indicate what an  Execution Report represents  (e.g. used with multi-leg  securities, such as option  strategies, spreads, etc.). ",(0,s.jsx)("br",{}),"  1 = SINGLE_SECURITY  ",(0,s.jsx)("br",{})," 2 = INDIVIDUAL_LEG  ",(0,s.jsx)("br",{})," 3 = MULTI_LEG_SECURITY"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5602"}),(0,s.jsx)(d.td,{children:"SRFillNumber"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"hexlong"}),(0,s.jsx)(d.td,{children:"fillNumber (x)"}),(0,s.jsx)(d.td,{children:"SpiderRock execution number"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5611"}),(0,s.jsx)(d.td,{children:"SRExchLiqTag"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"exchLiquidityTag (x)"}),(0,s.jsx)(d.td,{children:"Exchange supplied liquidity  code"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5610"}),(0,s.jsx)(d.td,{children:"SRLiquidityTag"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"spdrLiquidityTag (x)"}),(0,s.jsx)(d.td,{children:"SpiderRock normalized venue liquidity tag"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5619"}),(0,s.jsx)(d.td,{children:"SRExchFeeEst"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"fillExchFee (x)"}),(0,s.jsx)(d.td,{children:"SpiderRock estimate of the exchange fee based on liquidity tags (best effort)"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5618"}),(0,s.jsx)(d.td,{children:"SRBillingRate"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsxs)(d.td,{children:["fillBrkrRate (x)",(0,s.jsx)("br",{})," fillRoutingRate (x)"]}),(0,s.jsx)(d.td,{children:"billing brokerage +  routing rate"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5360"}),(0,s.jsx)(d.td,{children:"SRExDestination"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"childExDest (x)"}),(0,s.jsx)(d.td,{children:"child order exchange destination"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5627"}),(0,s.jsx)(d.td,{children:"SRChildShortSaleFlag"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"childSSaleFlag (x)"}),(0,s.jsxs)(d.td,{children:["4 = Auto",(0,s.jsx)("br",{}),"6 = Close",(0,s.jsx)("br",{}),"8 = Cover",(0,s.jsx)("br",{}),"3 = Exempt ",(0,s.jsx)("br",{}),"1 = Long ",(0,s.jsx)("br",{}),"7 = N/A ",(0,s.jsx)("br",{}),"5 = Open >",(0,s.jsx)("br",{}),"2 = Short"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5625"}),(0,s.jsx)(d.td,{children:"SRChildPositionType"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"childPosType (x)"}),(0,s.jsxs)(d.td,{children:["Child order position type ",(0,s.jsx)("br",{}),"7 = Auto ",(0,s.jsx)("br",{}),"5 = Open ",(0,s.jsx)("br",{})," 7 = Close"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5631"}),(0,s.jsx)(d.td,{children:"SRStreetRoute"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"routingCode (x)"}),(0,s.jsx)(d.td,{children:"SpiderRock market routing code"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5038"}),(0,s.jsx)(d.td,{children:"SROrderDttm"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"utcDttm"}),(0,s.jsx)(d.td,{children:"orderDttm (r)"}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5012"}),(0,s.jsx)(d.td,{children:"SRAltAccnt"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"altAccnt (r)"}),(0,s.jsx)(d.td,{children:"client assigned account"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5014"}),(0,s.jsx)(d.td,{children:"SRAltUserName"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"altUserName (r)"}),(0,s.jsx)(d.td,{children:"client assigned user name"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5034"}),(0,s.jsx)(d.td,{children:"SRStrategy"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"parentStrategy (r)"}),(0,s.jsx)(d.td,{children:"client assigned strategy name"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5009"}),(0,s.jsx)(d.td,{children:"SRSpdrSource"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"spdrSource (r)"}),(0,s.jsx)(d.td,{children:"Source of this order (FIX, SRSE, HedgeTool, etc)"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5000"}),(0,s.jsx)(d.td,{children:"SRParentNumber"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"hexlong"}),(0,s.jsx)(d.td,{children:"parentNumber (r)"}),(0,s.jsx)(d.td,{children:"SpiderRock order id.  See Also SRBaseParentNumber"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5004"}),(0,s.jsx)(d.td,{children:"SRBaseParentNumber"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"hexlong"}),(0,s.jsx)(d.td,{children:"baseParentNumber (r)"}),(0,s.jsxs)(d.td,{children:["Unique ID for order chain assigned by SpiderRock",(0,s.jsx)("br",{}),"  See Also SRParentNumber"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5290"}),(0,s.jsx)(d.td,{children:"SRUserData1"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"userData1 (r)"}),(0,s.jsx)(d.td,{children:"client supplied data field"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5291"}),(0,s.jsx)(d.td,{children:"SRUserData2"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"userData2 (r)"}),(0,s.jsx)(d.td,{children:"client supplied data field"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"5088"}),(0,s.jsx)(d.td,{children:"SRGoodTillDttm"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"datetime"}),(0,s.jsx)(d.td,{children:"goodTillDttm (r)"}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Standard  Trailer"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Y"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{})]})]})]}),"\n",(0,s.jsx)(d.h2,{id:"ordercancelrequest-client-to-spiderrock",children:"OrderCancelRequest (Client to SpiderRock)"}),"\n",(0,s.jsx)(d.p,{children:"An OrderCancelRequest<F> message requests the cancelation of all the remaining quantity of an order. The request will only be accepted if the order can be successfully pulled back from a downstream exchange, broker, or equivalent destination."}),"\n",(0,s.jsxs)(d.table,{children:[(0,s.jsx)(d.thead,{children:(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.th,{children:"Tag"}),(0,s.jsx)(d.th,{children:"Field Name"}),(0,s.jsx)(d.th,{children:"Req'd"}),(0,s.jsx)(d.th,{children:"Type"}),(0,s.jsxs)(d.th,{children:["Associated Record Value",(0,s.jsx)("br",{}),"(SpdrParentReport)"]}),(0,s.jsx)(d.th,{children:"Comments"})]})}),(0,s.jsxs)(d.tbody,{children:[(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Standard Header"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Y"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"MsgType = F"})}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"11"}),(0,s.jsx)(d.td,{children:"ClOrdId"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"altOrderId"}),(0,s.jsx)(d.td,{children:"Client order ID of the cancel  request (24 character max)"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"41"}),(0,s.jsx)(d.td,{children:"OrigClOrdID"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"altPrevOrderId"}),(0,s.jsx)(d.td,{children:"ClOrdID<11> of the previous  order (NOT the initial order  of the day) when canceling an  order. (24 character max)"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"37"}),(0,s.jsx)(d.td,{children:"OrderID"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"SR assigned OrderID (from an  ExecutionReport message) - Note: one of OrigClOrdID or OrderID must be supplied."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Symbology"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"55"}),(0,s.jsx)(d.td,{children:"Symbol"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"secKey"}),(0,s.jsxs)(d.td,{children:["Exchange symbol ",(0,s.jsx)("br",{})," May incorporate symbol suffix (e.g. VIA.A) ",(0,s.jsx)("br",{})," For OPRA options, SpiderRock accepts an OSI code in this field ",(0,s.jsx)("br",{})," For standardized futures products, maturity information can be included in this field, e.g. GCZ22 ",(0,s.jsx)("br",{})," Superceded by: SRSecKey"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"65"}),(0,s.jsx)(d.td,{children:"SymbolSfx"}),(0,s.jsx)(d.td,{children:"B"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"secKey"}),(0,s.jsxs)(d.td,{children:["Symbol suffix ",(0,s.jsx)("br",{})," Superceded by: SRSecKey"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"167"}),(0,s.jsx)(d.td,{children:"SecurityType"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"secKey"}),(0,s.jsxs)(d.td,{children:["MLEG = Multileg",(0,s.jsx)("br",{}),"CS = Common Stock ",(0,s.jsx)("br",{}),"FUT = Future",(0,s.jsx)("br",{}),"OPT = Option"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"541"}),(0,s.jsx)(d.td,{children:"MaturityDate"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"secKey"}),(0,s.jsxs)(d.td,{children:["For Futures and Options YYYYMMDD ",(0,s.jsx)("br",{})," Superceded by: SRSecKey"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"200"}),(0,s.jsx)(d.td,{children:"MaturityMonthYear"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"secKey"}),(0,s.jsxs)(d.td,{children:["Alternative to MaturityDate<541> YYYYMM ",(0,s.jsx)("br",{})," Superceded by: SRSecKey"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"205"}),(0,s.jsx)(d.td,{children:"MaturityDay"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"secKey"}),(0,s.jsxs)(d.td,{children:["Alternative to MaturityDate<541> 1-31 ",(0,s.jsx)("br",{})," Superceded by: SRSecKey"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"202"}),(0,s.jsx)(d.td,{children:"StrikePrice"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"float"}),(0,s.jsx)(d.td,{children:"secKey"}),(0,s.jsxs)(d.td,{children:["Option strike price ",(0,s.jsx)("br",{})," Superceded by: SRSecKey"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"201"}),(0,s.jsx)(d.td,{children:"PutOrCall"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"secKey"}),(0,s.jsx)(d.td,{children:"Value from client's order"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"54"}),(0,s.jsx)(d.td,{children:"Side"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"char"}),(0,s.jsxs)(d.td,{children:["orderSide ",(0,s.jsx)("br",{}),"ssaleFlag"]}),(0,s.jsx)(d.td,{children:"Value from executing venue - Value may differ from client's order if execution  order is sold short."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"60"}),(0,s.jsx)(d.td,{children:"TransactTime"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"utcDttm"}),(0,s.jsx)(d.td,{}),(0,s.jsxs)(d.td,{children:["Time this order request was initiated/released. Formatted as: ",(0,s.jsxs)(d.em,{children:["YYYYMMDD-HH:MM",":SS",".fff"]})," ",(0,s.jsx)("br",{}),(0,s.jsx)(d.em,{children:"Note: this order must arrive at SpiderRpcl within 15 seconds of the TransactTime to be considered a valid order."})]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"38"}),(0,s.jsx)(d.td,{children:"OrderQty"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{children:"orderSize"}),(0,s.jsxs)(d.td,{children:["Executable quantity ",(0,s.jsx)("br",{}),"Superceded by: SROrderSize"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"58"}),(0,s.jsx)(d.td,{children:"Text"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"User supplied text such as a  cancel reason"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Standard  Trailer"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Y"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{})]})]})]}),"\n",(0,s.jsx)(d.h2,{id:"ordercancelreject-spiderrock-to-client",children:"OrderCancelReject (SpiderRock to Client)"}),"\n",(0,s.jsx)(d.p,{children:"SpiderRock FIX Gateways follow FIX 4.4 style rules for CancelReject handling but can switch to FIX 4.2 on request."}),"\n",(0,s.jsxs)(d.table,{children:[(0,s.jsx)(d.thead,{children:(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.th,{children:"Tag"}),(0,s.jsx)(d.th,{children:"Field Name"}),(0,s.jsx)(d.th,{children:"Req'd"}),(0,s.jsx)(d.th,{children:"Type"}),(0,s.jsxs)(d.th,{children:["Associated Record Value",(0,s.jsx)("br",{}),"(SpdrParentReport)"]}),(0,s.jsx)(d.th,{children:"Comments"})]})}),(0,s.jsxs)(d.tbody,{children:[(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Standard Header"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Y"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"MsgType = 8"})})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"37"}),(0,s.jsx)(d.td,{children:"OrderID"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"hexlong"}),(0,s.jsx)(d.td,{children:"baseParentNumber"}),(0,s.jsx)(d.td,{children:"Unique ID for order chain assigned by SpiderRock"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"11"}),(0,s.jsx)(d.td,{children:"ClOrdID"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"parentNumber"}),(0,s.jsx)(d.td,{children:"See Also: SRBaseParentNumber"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"41"}),(0,s.jsx)(d.td,{children:"OrigClOrdID"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{children:"altPrevOrderId"}),(0,s.jsx)(d.td,{children:"Conditionally required for response  to a Cancel or Cancel/Replace  request (ExecType=PendingCancel,  Replaced, or Canceled)"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"434"}),(0,s.jsx)(d.td,{children:"CxlRejResponseTo"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"char"}),(0,s.jsx)(d.td,{}),(0,s.jsxs)(d.td,{children:["Valid values: ",(0,s.jsx)("br",{}),"  1 = OrderCancelRequest <F>  ",(0,s.jsx)("br",{})," 2 = OrderCancel/Replace Request  <G>"]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"102"}),(0,s.jsx)(d.td,{children:"CxlRejReason"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"int"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"39"}),(0,s.jsx)(d.td,{children:"OrdStatus"}),(0,s.jsx)(d.td,{children:"Y"}),(0,s.jsx)(d.td,{children:"char"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:"OrdStatus value after this cancel  reject is applied"})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:"58"}),(0,s.jsx)(d.td,{children:"Text"}),(0,s.jsx)(d.td,{children:"N"}),(0,s.jsx)(d.td,{children:"string"}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Standard  Trailer"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.em,{children:"Y"})}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{}),(0,s.jsx)(d.td,{})]})]})]})]})}function j(e={}){const{wrapper:d}={...(0,t.R)(),...e.components};return d?(0,s.jsx)(d,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,d,r)=>{r.d(d,{R:()=>n,x:()=>l});var s=r(96540);const t={},i=s.createContext(t);function n(e){const d=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(d):{...d,...e}}),[d,e])}function l(e){let d;return d=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:n(e.components),s.createElement(i.Provider,{value:d},e.children)}}}]);