"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([["8865"],{3444:function(e,s,t){t.r(s),t.d(s,{default:()=>m,frontMatter:()=>l,metadata:()=>n,assets:()=>o,toc:()=>h,contentTitle:()=>c});var n=JSON.parse('{"id":"MessageSchemas/Schema/Topics/market-statistics/HistoricalVolatilities","title":"HistoricalVolatilities","description":"Values in this table are computed daily and are calculated from end-of-day marks from the previous period.  Official exchange closing values are used where possible.HistoricalVolatility records are published to the SpiderRock elastic cluster nightly.","source":"@site/versioned_docs/version-8.5.3.3/MessageSchemas/Schema/Topics/3225-market-statistics/HistoricalVolatilities.md","sourceDirName":"MessageSchemas/Schema/Topics/3225-market-statistics","slug":"/MessageSchemas/Schema/Topics/market-statistics/HistoricalVolatilities","permalink":"/docs/8.5.3.3/MessageSchemas/Schema/Topics/market-statistics/HistoricalVolatilities","draft":false,"unlisted":false,"tags":[],"version":"8.5.3.3","frontMatter":{"title":"HistoricalVolatilities"},"sidebar":"messageSchemasSidebar","previous":{"title":"3225-market-statistics","permalink":"/docs/8.5.3.3/MessageSchemas/Schema/Topics/market-statistics/"},"next":{"title":"OptionOpenInterest","permalink":"/docs/8.5.3.3/MessageSchemas/Schema/Topics/market-statistics/OptionOpenInterest"}}'),d=t("52676"),r=t("91503"),a=t("71386"),i=t("9641");let l={title:"HistoricalVolatilities"},c="Schema: HistoricalVolatilities (ID: 3225)",o={},h=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3}];function u(e){let s={blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(s.header,{children:(0,d.jsxs)(s.h1,{id:"schema-historicalvolatilities-id-3225",children:["Schema: HistoricalVolatilities ",(0,d.jsx)("span",{className:"small-text",children:"(ID: 3225)"})]})}),"\n",(0,d.jsxs)(s.p,{children:["Values in this table are computed daily and are calculated from end-of-day marks from the previous period.  Official exchange closing values are used where possible.",(0,d.jsx)("br",{}),(0,d.jsx)("br",{}),"HistoricalVolatility records are published to the SpiderRock elastic cluster nightly."]}),"\n",(0,d.jsx)(s.h3,{id:"metadata",children:"METADATA"}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Attribute"}),(0,d.jsx)(s.th,{children:"Value"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"Topic"}),(0,d.jsx)(s.td,{children:"3225-market-statistics"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"MLink Token"}),(0,d.jsx)(s.td,{children:"OptSurface"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"SRSE Product"}),(0,d.jsx)(s.td,{children:"SRAnalytics"})]})]})]}),"\n",(0,d.jsx)("br",{}),"\n",(0,d.jsxs)(s.blockquote,{children:["\n",(0,d.jsxs)(s.p,{children:[(0,d.jsx)(s.strong,{children:"Note:"})," The symbol ",(0,d.jsx)(s.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,d.jsx)(s.h3,{id:"body",children:"BODY"}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"#"}),(0,d.jsx)(s.th,{children:"Field"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Comment"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"10="}),(0,d.jsx)(s.td,{children:"ticker"}),(0,d.jsx)(s.td,{children:"TickerKey"}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"11="}),(0,d.jsx)(s.td,{children:"windowType"}),(0,d.jsx)(s.td,{children:"string(12)"}),(0,d.jsx)(s.td,{children:"eg. cc, ccCen, ccClCen, hl, hlCen, iv63, iv126, etc"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"100"}),(0,d.jsx)(s.td,{children:"date"}),(0,d.jsx)(s.td,{children:"string(10)"}),(0,d.jsx)(s.td,{children:"most recent closing date"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"103"}),(0,d.jsx)(s.td,{children:"securityID"}),(0,d.jsx)(s.td,{children:"int"}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"106"}),(0,d.jsx)(s.td,{children:"value"}),(0,d.jsx)(s.td,{children:"float"}),(0,d.jsx)(s.td,{children:"most recent historical value"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"109"}),(0,d.jsx)(s.td,{children:"mv_5d"}),(0,d.jsx)(s.td,{children:"float"}),(0,d.jsx)(s.td,{children:"historical mean value (5 day window)"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"112"}),(0,d.jsx)(s.td,{children:"sd_5d"}),(0,d.jsx)(s.td,{children:"float"}),(0,d.jsx)(s.td,{children:"historical std dev (5 day window)"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"115"}),(0,d.jsx)(s.td,{children:"mv_10d"}),(0,d.jsx)(s.td,{children:"float"}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"118"}),(0,d.jsx)(s.td,{children:"sd_10d"}),(0,d.jsx)(s.td,{children:"float"}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"121"}),(0,d.jsx)(s.td,{children:"mv_21d"}),(0,d.jsx)(s.td,{children:"float"}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"124"}),(0,d.jsx)(s.td,{children:"sd_21d"}),(0,d.jsx)(s.td,{children:"float"}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"127"}),(0,d.jsx)(s.td,{children:"mv_42d"}),(0,d.jsx)(s.td,{children:"float"}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"130"}),(0,d.jsx)(s.td,{children:"sd_42d"}),(0,d.jsx)(s.td,{children:"float"}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"133"}),(0,d.jsx)(s.td,{children:"mv_63d"}),(0,d.jsx)(s.td,{children:"float"}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"136"}),(0,d.jsx)(s.td,{children:"sd_63d"}),(0,d.jsx)(s.td,{children:"float"}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"139"}),(0,d.jsx)(s.td,{children:"mv_84d"}),(0,d.jsx)(s.td,{children:"float"}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"142"}),(0,d.jsx)(s.td,{children:"sd_84d"}),(0,d.jsx)(s.td,{children:"float"}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"145"}),(0,d.jsx)(s.td,{children:"mv_105d"}),(0,d.jsx)(s.td,{children:"float"}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"148"}),(0,d.jsx)(s.td,{children:"sd_105d"}),(0,d.jsx)(s.td,{children:"float"}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"151"}),(0,d.jsx)(s.td,{children:"mv_126d"}),(0,d.jsx)(s.td,{children:"float"}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"154"}),(0,d.jsx)(s.td,{children:"sd_126d"}),(0,d.jsx)(s.td,{children:"float"}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"157"}),(0,d.jsx)(s.td,{children:"mv_189d"}),(0,d.jsx)(s.td,{children:"float"}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"160"}),(0,d.jsx)(s.td,{children:"sd_189d"}),(0,d.jsx)(s.td,{children:"float"}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"163"}),(0,d.jsx)(s.td,{children:"mv_252d"}),(0,d.jsx)(s.td,{children:"float"}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"166"}),(0,d.jsx)(s.td,{children:"sd_252d"}),(0,d.jsx)(s.td,{children:"float"}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"169"}),(0,d.jsx)(s.td,{children:"mv_378d"}),(0,d.jsx)(s.td,{children:"float"}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"172"}),(0,d.jsx)(s.td,{children:"sd_378d"}),(0,d.jsx)(s.td,{children:"float"}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"175"}),(0,d.jsx)(s.td,{children:"mv_504d"}),(0,d.jsx)(s.td,{children:"float"}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"178"}),(0,d.jsx)(s.td,{children:"sd_504d"}),(0,d.jsx)(s.td,{children:"float"}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"181"}),(0,d.jsx)(s.td,{children:"timestamp"}),(0,d.jsx)(s.td,{children:"DateTime"}),(0,d.jsx)(s.td,{children:"record update timestamp"})]})]})]}),"\n",(0,d.jsx)(s.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,d.jsxs)(a.Z,{children:[(0,d.jsx)(i.Z,{value:"Python",label:"Python",children:(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'HistoricalVolatilities'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n    # Required Parameters\n    \"apiKey\": API_KEY,\n    \"cmd\": 'getschema',\n    \"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,d.jsx)(i.Z,{value:"cUrl",label:"cUrl",children:(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=HistoricalVolatilities'\n\n"})})})]}),"\n",(0,d.jsx)(s.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,d.jsxs)(a.Z,{children:[(0,d.jsx)(i.Z,{value:"Python",label:"Python",children:(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'HistoricalVolatilities\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'date|securityID|value|mv_5d|sd_5d|mv_10d|sd_10d|mv_21d|sd_21d|mv_42d|sd_42d|mv_63d|sd_63d|mv_84d|sd_84d|mv_105d|sd_105d|mv_126d|sd_126d|mv_189d|sd_189d|mv_252d|sd_252d|mv_378d|sd_378d|mv_504d|sd_504d|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'windowType:eq:ExampleString\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,d.jsx)(i.Z,{value:"cUrl",label:"cUrl",children:(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=HistoricalVolatilities' \\\n--data-urlencode 'view=date|securityID|value|mv_5d|sd_5d|mv_10d|sd_10d|mv_21d|sd_21d|mv_42d|sd_42d|mv_63d|sd_63d|mv_84d|sd_84d|mv_105d|sd_105d|mv_126d|sd_126d|mv_189d|sd_189d|mv_252d|sd_252d|mv_378d|sd_378d|mv_504d|sd_504d|timestamp' \\\n--data-urlencode 'where=windowType:eq:ExampleString'\n"})})})]}),"\n",(0,d.jsx)(s.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,d.jsxs)(a.Z,{children:[(0,d.jsx)(i.Z,{value:"Python",label:"Python",children:(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'HistoricalVolatilities\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'date|securityID|value|mv_5d|sd_5d|mv_10d|sd_10d|mv_21d|sd_21d|mv_42d|sd_42d|mv_63d|sd_63d|mv_84d|sd_84d|mv_105d|sd_105d|mv_126d|sd_126d|mv_189d|sd_189d|mv_252d|sd_252d|mv_378d|sd_378d|mv_504d|sd_504d|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'windowType:eq:ExampleString\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'date:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,d.jsx)(i.Z,{value:"cUrl",label:"cUrl",children:(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=HistoricalVolatilities' \\\n--data-urlencode 'view=date|securityID|value|mv_5d|sd_5d|mv_10d|sd_10d|mv_21d|sd_21d|mv_42d|sd_42d|mv_63d|sd_63d|mv_84d|sd_84d|mv_105d|sd_105d|mv_126d|sd_126d|mv_189d|sd_189d|mv_252d|sd_252d|mv_378d|sd_378d|mv_504d|sd_504d|timestamp' \\\n--data-urlencode 'where=windowType:eq:ExampleString' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=date:ASC'\n"})})})]}),"\n",(0,d.jsx)(s.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,d.jsxs)(a.Z,{children:[(0,d.jsx)(i.Z,{value:"Python",label:"Python",children:(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'HistoricalVolatilities\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'date|securityID|value|mv_5d|sd_5d|mv_10d|sd_10d|mv_21d|sd_21d|mv_42d|sd_42d|mv_63d|sd_63d|mv_84d|sd_84d|mv_105d|sd_105d|mv_126d|sd_126d|mv_189d|sd_189d|mv_252d|sd_252d|mv_378d|sd_378d|mv_504d|sd_504d|timestamp\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'windowType:eq:ExampleString\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getaggregate\',\n    "msgType": MSG_TYPE,\n    "measure": MEASURE,\n    "group": GROUP,\n    # Optional Parameters\n    "where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,d.jsx)(i.Z,{value:"cUrl",label:"cUrl",children:(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=HistoricalVolatilities' \\\n--data-urlencode 'measure=date|securityID|value|mv_5d|sd_5d|mv_10d|sd_10d|mv_21d|sd_21d|mv_42d|sd_42d|mv_63d|sd_63d|mv_84d|sd_84d|mv_105d|sd_105d|mv_126d|sd_126d|mv_189d|sd_189d|mv_252d|sd_252d|mv_378d|sd_378d|mv_504d|sd_504d|timestamp' \\\n--data-urlencode 'group=' \\\n--data-urlencode 'where=windowType:eq:ExampleString'\n"})})})]}),"\n",(0,d.jsx)(s.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,d.jsxs)(a.Z,{children:[(0,d.jsx)(i.Z,{value:"Python",label:"Python",children:(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'HistoricalVolatilities\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'windowType:eq:ExampleString\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,d.jsx)(i.Z,{value:"cUrl",label:"cUrl",children:(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=HistoricalVolatilities' \\\n--data-urlencode 'where=windowType:eq:ExampleString'\n"})})})]})]})}function m(e={}){let{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,d.jsx)(s,{...e,children:(0,d.jsx)(u,{...e})}):u(e)}},9641:function(e,s,t){t.d(s,{Z:()=>r});var n=t("52676");t("75271");var d=t("54461");function r(e){let{children:s,hidden:t,className:r}=e;return(0,n.jsx)("div",{role:"tabpanel",className:(0,d.Z)("tabItem_SSzl",r),hidden:t,children:s})}},71386:function(e,s,t){t.d(s,{Z:()=>_});var n=t("52676"),d=t("75271"),r=t("54461"),a=t("52289"),i=t("3225"),l=t("42834"),c=t("40578"),o=t("35834"),h=t("79616");function u(e){return d.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||d.isValidElement(e)&&function(e){let{props:s}=e;return!!s&&"object"==typeof s&&"value"in s}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function m(e){let{value:s,tabValues:t}=e;return t.some(e=>e.value===s)}var p=t("44537");function x(e){let{className:s,block:t,selectedValue:d,selectValue:i,tabValues:l}=e,c=[],{blockElementScrollPositionUntilNextRender:o}=(0,a.o5)(),h=e=>{let s=e.currentTarget,t=l[c.indexOf(s)].value;t!==d&&(o(s),i(t))},u=e=>{let s=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{let t=c.indexOf(e.currentTarget)+1;s=c[t]??c[0];break}case"ArrowLeft":{let t=c.indexOf(e.currentTarget)-1;s=c[t]??c[c.length-1]}}s?.focus()};return(0,n.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":t},s),children:l.map(e=>{let{value:s,label:t,attributes:a}=e;return(0,n.jsx)("li",{role:"tab",tabIndex:d===s?0:-1,"aria-selected":d===s,ref:e=>c.push(e),onKeyDown:u,onClick:h,...a,className:(0,r.Z)("tabs__item","tabItem_aitt",a?.className,{"tabs__item--active":d===s}),children:t??s},s)})})}function j(e){let{lazy:s,children:t,selectedValue:a}=e,i=(Array.isArray(t)?t:[t]).filter(Boolean);if(s){let e=i.find(e=>e.props.value===a);return e?(0,d.cloneElement)(e,{className:(0,r.Z)("margin-top--md",e.props.className)}):null}return(0,n.jsx)("div",{className:"margin-top--md",children:i.map((e,s)=>(0,d.cloneElement)(e,{key:s,hidden:e.props.value!==a}))})}function v(e){let s=function(e){let{defaultValue:s,queryString:t=!1,groupId:n}=e,r=function(e){let{values:s,children:t}=e;return(0,d.useMemo)(()=>{let e=s??u(t).map(e=>{let{props:{value:s,label:t,attributes:n,default:d}}=e;return{value:s,label:t,attributes:n,default:d}});return!function(e){let s=(0,o.lx)(e,(e,s)=>e.value===s.value);if(s.length>0)throw Error(`Docusaurus error: Duplicate values "${s.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[s,t])}(e),[a,p]=(0,d.useState)(()=>(function(e){let{defaultValue:s,tabValues:t}=e;if(0===t.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(s){if(!m({value:s,tabValues:t}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${s}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return s}let n=t.find(e=>e.default)??t[0];if(!n)throw Error("Unexpected error: 0 tabValues");return n.value})({defaultValue:s,tabValues:r})),[x,j]=function(e){let{queryString:s=!1,groupId:t}=e,n=(0,i.k6)(),r=function(e){let{queryString:s=!1,groupId:t}=e;if("string"==typeof s)return s;if(!1===s)return null;if(!0===s&&!t)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:s,groupId:t});return[(0,c._X)(r),(0,d.useCallback)(e=>{if(!r)return;let s=new URLSearchParams(n.location.search);s.set(r,e),n.replace({...n.location,search:s.toString()})},[r,n])]}({queryString:t,groupId:n}),[v,_]=function(e){let{groupId:s}=e,t=s?`docusaurus.tab.${s}`:null,[n,r]=(0,h.Nk)(t);return[n,(0,d.useCallback)(e=>{t&&r.set(e)},[t,r])]}({groupId:n}),g=(()=>{let e=x??v;return m({value:e,tabValues:r})?e:null})();return(0,l.Z)(()=>{g&&p(g)},[g]),{selectedValue:a,selectValue:(0,d.useCallback)(e=>{if(!m({value:e,tabValues:r}))throw Error(`Can't select invalid tab value=${e}`);p(e),j(e),_(e)},[j,_,r]),tabValues:r}}(e);return(0,n.jsxs)("div",{className:(0,r.Z)("tabs-container","tabList_ArS0"),children:[(0,n.jsx)(x,{...s,...e}),(0,n.jsx)(j,{...s,...e})]})}function _(e){let s=(0,p.Z)();return(0,n.jsx)(v,{...e,children:u(e.children)},String(s))}},91503:function(e,s,t){t.d(s,{Z:function(){return i},a:function(){return a}});var n=t(75271);let d={},r=n.createContext(d);function a(e){let s=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:a(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);