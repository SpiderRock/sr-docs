"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[23463],{99789:(e,l,n)=>{n.r(l),n.d(l,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>h});var t=n(74848),s=n(28453),r=n(11470),d=n(19365);const i={title:"RiskGroupCounter"},a="Schema: RiskGroupCounter (ID: 4655)",o={id:"MessageSchemas/Schema/Topics/risk-counter/RiskGroupCounter",title:"RiskGroupCounter",description:"METADATA",source:"@site/docs/MessageSchemas/Schema/Topics/4625-risk-counter/RiskGroupCounter.md",sourceDirName:"MessageSchemas/Schema/Topics/4625-risk-counter",slug:"/MessageSchemas/Schema/Topics/risk-counter/RiskGroupCounter",permalink:"/docs/next/MessageSchemas/Schema/Topics/risk-counter/RiskGroupCounter",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"RiskGroupCounter"},sidebar:"messageSchemasSidebar",previous:{title:"MarRiskCounter",permalink:"/docs/next/MessageSchemas/Schema/Topics/risk-counter/MarRiskCounter"},next:{title:"SpdrRiskCounter",permalink:"/docs/next/MessageSchemas/Schema/Topics/risk-counter/SpdrRiskCounter"}},c={},h=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3}];function u(e){const l={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(l.h1,{id:"schema-riskgroupcounter-id-4655",children:["Schema: RiskGroupCounter ",(0,t.jsx)("span",{className:"small-text",children:"(ID: 4655)"})]}),"\n",(0,t.jsx)(l.h3,{id:"metadata",children:"METADATA"}),"\n",(0,t.jsxs)(l.table,{children:[(0,t.jsx)(l.thead,{children:(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.th,{children:"Attribute"}),(0,t.jsx)(l.th,{children:"Value"})]})}),(0,t.jsxs)(l.tbody,{children:[(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"Topic"}),(0,t.jsx)(l.td,{children:"4625-risk-counter"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"MLink Token"}),(0,t.jsx)(l.td,{children:"ClientTrading"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"SRSE Product"}),(0,t.jsx)(l.td,{children:"SRTrade"})]})]})]}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsxs)(l.blockquote,{children:["\n",(0,t.jsxs)(l.p,{children:[(0,t.jsx)(l.strong,{children:"Note:"})," The symbol ",(0,t.jsx)(l.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,t.jsx)(l.h3,{id:"body",children:"BODY"}),"\n",(0,t.jsxs)(l.table,{children:[(0,t.jsx)(l.thead,{children:(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.th,{children:"#"}),(0,t.jsx)(l.th,{children:"Field"}),(0,t.jsx)(l.th,{children:"Type"}),(0,t.jsx)(l.th,{children:"Comment"})]})}),(0,t.jsxs)(l.tbody,{children:[(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"13="}),(0,t.jsx)(l.td,{children:"riskGroupId"}),(0,t.jsx)(l.td,{children:"long"}),(0,t.jsx)(l.td,{})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"11="}),(0,t.jsx)(l.td,{children:"accnt"}),(0,t.jsx)(l.td,{children:"string(16)"}),(0,t.jsx)(l.td,{})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"12="}),(0,t.jsx)(l.td,{children:"riskFirm"}),(0,t.jsx)(l.td,{children:"string(16)"}),(0,t.jsx)(l.td,{})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"100"}),(0,t.jsx)(l.td,{children:"sysRealm"}),(0,t.jsx)(l.td,{children:(0,t.jsx)(l.a,{href:"../../../Enums/SysRealm",children:"enum : SysRealm"})}),(0,t.jsx)(l.td,{})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"101"}),(0,t.jsx)(l.td,{children:"sysEnvironment"}),(0,t.jsx)(l.td,{children:(0,t.jsx)(l.a,{href:"../../../Enums/SysEnvironment",children:"enum : SysEnvironment"})}),(0,t.jsx)(l.td,{children:"original (source) sys environment [Stable, Current, etc]"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"102"}),(0,t.jsx)(l.td,{children:"riskEngine"}),(0,t.jsx)(l.td,{children:"string(32)"}),(0,t.jsx)(l.td,{children:"EE engine name"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"103"}),(0,t.jsx)(l.td,{children:"changeReason"}),(0,t.jsx)(l.td,{children:(0,t.jsx)(l.a,{href:"../../../Enums/ChangeReason",children:"enum : ChangeReason"})}),(0,t.jsx)(l.td,{})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"104"}),(0,t.jsx)(l.td,{children:"optQtyBotIocFilled"}),(0,t.jsx)(l.td,{children:"float"}),(0,t.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"105"}),(0,t.jsx)(l.td,{children:"optQtySldIocFilled"}),(0,t.jsx)(l.td,{children:"float"}),(0,t.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"106"}),(0,t.jsx)(l.td,{children:"ddBotIocFilled"}),(0,t.jsx)(l.td,{children:"float"}),(0,t.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"107"}),(0,t.jsx)(l.td,{children:"ddSldIocFilled"}),(0,t.jsx)(l.td,{children:"float"}),(0,t.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"108"}),(0,t.jsx)(l.td,{children:"veBotIocFilled"}),(0,t.jsx)(l.td,{children:"float"}),(0,t.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"109"}),(0,t.jsx)(l.td,{children:"veSldIocFilled"}),(0,t.jsx)(l.td,{children:"float"}),(0,t.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"110"}),(0,t.jsx)(l.td,{children:"wtVeBotIocFilled"}),(0,t.jsx)(l.td,{children:"float"}),(0,t.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"111"}),(0,t.jsx)(l.td,{children:"wtVeSldIocFilled"}),(0,t.jsx)(l.td,{children:"float"}),(0,t.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"112"}),(0,t.jsx)(l.td,{children:"nvBotIocFilled"}),(0,t.jsx)(l.td,{children:"float"}),(0,t.jsx)(l.td,{children:"fills + IOC leaves (notional value)"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"113"}),(0,t.jsx)(l.td,{children:"nvSldIocFilled"}),(0,t.jsx)(l.td,{children:"float"}),(0,t.jsx)(l.td,{children:"fills + IOC leaves (notional value)"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"114"}),(0,t.jsx)(l.td,{children:"rm1BotIocFilled"}),(0,t.jsx)(l.td,{children:"float"}),(0,t.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"115"}),(0,t.jsx)(l.td,{children:"rm1SldIocFilled"}),(0,t.jsx)(l.td,{children:"float"}),(0,t.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"116"}),(0,t.jsx)(l.td,{children:"rm2BotIocFilled"}),(0,t.jsx)(l.td,{children:"float"}),(0,t.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"117"}),(0,t.jsx)(l.td,{children:"rm2SldIocFilled"}),(0,t.jsx)(l.td,{children:"float"}),(0,t.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"118"}),(0,t.jsx)(l.td,{children:"rm3BotIocFilled"}),(0,t.jsx)(l.td,{children:"float"}),(0,t.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"119"}),(0,t.jsx)(l.td,{children:"rm3SldIocFilled"}),(0,t.jsx)(l.td,{children:"float"}),(0,t.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"120"}),(0,t.jsx)(l.td,{children:"rm4BotIocFilled"}),(0,t.jsx)(l.td,{children:"float"}),(0,t.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"121"}),(0,t.jsx)(l.td,{children:"rm4SldIocFilled"}),(0,t.jsx)(l.td,{children:"float"}),(0,t.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"122"}),(0,t.jsx)(l.td,{children:"rm5BotIocFilled"}),(0,t.jsx)(l.td,{children:"float"}),(0,t.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"123"}),(0,t.jsx)(l.td,{children:"rm5SldIocFilled"}),(0,t.jsx)(l.td,{children:"float"}),(0,t.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"124"}),(0,t.jsx)(l.td,{children:"rm6BotIocFilled"}),(0,t.jsx)(l.td,{children:"float"}),(0,t.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"125"}),(0,t.jsx)(l.td,{children:"rm6SldIocFilled"}),(0,t.jsx)(l.td,{children:"float"}),(0,t.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"126"}),(0,t.jsx)(l.td,{children:"rm7BotIocFilled"}),(0,t.jsx)(l.td,{children:"float"}),(0,t.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"127"}),(0,t.jsx)(l.td,{children:"rm7SldIocFilled"}),(0,t.jsx)(l.td,{children:"float"}),(0,t.jsx)(l.td,{children:"fills + IOC leaves"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"128"}),(0,t.jsx)(l.td,{children:"counter"}),(0,t.jsx)(l.td,{children:"int"}),(0,t.jsx)(l.td,{})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"129"}),(0,t.jsx)(l.td,{children:"timestamp"}),(0,t.jsx)(l.td,{children:"DateTime"}),(0,t.jsx)(l.td,{})]})]})]}),"\n",(0,t.jsx)(l.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,t.jsxs)(r.A,{children:[(0,t.jsx)(d.A,{value:"Python",label:"Python",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'RiskGroupCounter'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n#Required Parameters\n\"apiKey\": API_KEY,\n\"cmd\": 'getschema',\n\"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,t.jsx)(d.A,{value:"cUrl",label:"cUrl",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=RiskGroupCounter'\n\n"})})})]}),"\n",(0,t.jsx)(l.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,t.jsxs)(r.A,{children:[(0,t.jsx)(d.A,{value:"Python",label:"Python",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'RiskGroupCounter\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'sysRealm|sysEnvironment|riskEngine|changeReason|optQtyBotIocFilled|optQtySldIocFilled|ddBotIocFilled|ddSldIocFilled|veBotIocFilled|veSldIocFilled|wtVeBotIocFilled|wtVeSldIocFilled|nvBotIocFilled|nvSldIocFilled|rm1BotIocFilled|rm1SldIocFilled|rm2BotIocFilled|rm2SldIocFilled|rm3BotIocFilled|rm3SldIocFilled|rm4BotIocFilled|rm4SldIocFilled|rm5BotIocFilled|rm5SldIocFilled|rm6BotIocFilled|rm6SldIocFilled|rm7BotIocFilled|rm7SldIocFilled|counter|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,t.jsx)(d.A,{value:"cUrl",label:"cUrl",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=RiskGroupCounter' \\\n--data-urlencode 'view=sysRealm|sysEnvironment|riskEngine|changeReason|optQtyBotIocFilled|optQtySldIocFilled|ddBotIocFilled|ddSldIocFilled|veBotIocFilled|veSldIocFilled|wtVeBotIocFilled|wtVeSldIocFilled|nvBotIocFilled|nvSldIocFilled|rm1BotIocFilled|rm1SldIocFilled|rm2BotIocFilled|rm2SldIocFilled|rm3BotIocFilled|rm3SldIocFilled|rm4BotIocFilled|rm4SldIocFilled|rm5BotIocFilled|rm5SldIocFilled|rm6BotIocFilled|rm6SldIocFilled|rm7BotIocFilled|rm7SldIocFilled|counter|timestamp' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,t.jsx)(l.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,t.jsxs)(r.A,{children:[(0,t.jsx)(d.A,{value:"Python",label:"Python",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'RiskGroupCounter\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'sysRealm|sysEnvironment|riskEngine|changeReason|optQtyBotIocFilled|optQtySldIocFilled|ddBotIocFilled|ddSldIocFilled|veBotIocFilled|veSldIocFilled|wtVeBotIocFilled|wtVeSldIocFilled|nvBotIocFilled|nvSldIocFilled|rm1BotIocFilled|rm1SldIocFilled|rm2BotIocFilled|rm2SldIocFilled|rm3BotIocFilled|rm3SldIocFilled|rm4BotIocFilled|rm4SldIocFilled|rm5BotIocFilled|rm5SldIocFilled|rm6BotIocFilled|rm6SldIocFilled|rm7BotIocFilled|rm7SldIocFilled|counter|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'sysRealm:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,t.jsx)(d.A,{value:"cUrl",label:"cUrl",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=RiskGroupCounter' \\\n--data-urlencode 'view=sysRealm|sysEnvironment|riskEngine|changeReason|optQtyBotIocFilled|optQtySldIocFilled|ddBotIocFilled|ddSldIocFilled|veBotIocFilled|veSldIocFilled|wtVeBotIocFilled|wtVeSldIocFilled|nvBotIocFilled|nvSldIocFilled|rm1BotIocFilled|rm1SldIocFilled|rm2BotIocFilled|rm2SldIocFilled|rm3BotIocFilled|rm3SldIocFilled|rm4BotIocFilled|rm4SldIocFilled|rm5BotIocFilled|rm5SldIocFilled|rm6BotIocFilled|rm6SldIocFilled|rm7BotIocFilled|rm7SldIocFilled|counter|timestamp' \\\n--data-urlencode 'where=accnt:eq:ExampleString' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=sysRealm:ASC'\n"})})})]}),"\n",(0,t.jsx)(l.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,t.jsxs)(r.A,{children:[(0,t.jsx)(d.A,{value:"Python",label:"Python",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'RiskGroupCounter\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'sysRealm|sysEnvironment|riskEngine|changeReason|optQtyBotIocFilled|optQtySldIocFilled|ddBotIocFilled|ddSldIocFilled|veBotIocFilled|veSldIocFilled|wtVeBotIocFilled|wtVeSldIocFilled|nvBotIocFilled|nvSldIocFilled|rm1BotIocFilled|rm1SldIocFilled|rm2BotIocFilled|rm2SldIocFilled|rm3BotIocFilled|rm3SldIocFilled|rm4BotIocFilled|rm4SldIocFilled|rm5BotIocFilled|rm5SldIocFilled|rm6BotIocFilled|rm6SldIocFilled|rm7BotIocFilled|rm7SldIocFilled|counter|timestamp\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'sysRealm|sysEnvironment|changeReason\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getaggregate\',\n"msgType": MSG_TYPE,\n"measure": MEASURE,\n"group": GROUP,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,t.jsx)(d.A,{value:"cUrl",label:"cUrl",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=RiskGroupCounter' \\\n--data-urlencode 'measure=sysRealm|sysEnvironment|riskEngine|changeReason|optQtyBotIocFilled|optQtySldIocFilled|ddBotIocFilled|ddSldIocFilled|veBotIocFilled|veSldIocFilled|wtVeBotIocFilled|wtVeSldIocFilled|nvBotIocFilled|nvSldIocFilled|rm1BotIocFilled|rm1SldIocFilled|rm2BotIocFilled|rm2SldIocFilled|rm3BotIocFilled|rm3SldIocFilled|rm4BotIocFilled|rm4SldIocFilled|rm5BotIocFilled|rm5SldIocFilled|rm6BotIocFilled|rm6SldIocFilled|rm7BotIocFilled|rm7SldIocFilled|counter|timestamp' \\\n--data-urlencode 'group=sysRealm|sysEnvironment|changeReason' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,t.jsx)(l.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,t.jsxs)(r.A,{children:[(0,t.jsx)(d.A,{value:"Python",label:"Python",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'RiskGroupCounter\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,t.jsx)(d.A,{value:"cUrl",label:"cUrl",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=RiskGroupCounter' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]})]})}function m(e={}){const{wrapper:l}={...(0,s.R)(),...e.components};return l?(0,t.jsx)(l,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},19365:(e,l,n)=>{n.d(l,{A:()=>d});n(96540);var t=n(34164);const s={tabItem:"tabItem_Ymn6"};var r=n(74848);function d(e){let{children:l,hidden:n,className:d}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,t.A)(s.tabItem,d),hidden:n,children:l})}},11470:(e,l,n)=>{n.d(l,{A:()=>y});var t=n(96540),s=n(34164),r=n(23104),d=n(56347),i=n(205),a=n(57485),o=n(31682),c=n(70679);function h(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:l}=e;return!!l&&"object"==typeof l&&"value"in l}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:l,children:n}=e;return(0,t.useMemo)((()=>{const e=l??function(e){return h(e).map((e=>{let{props:{value:l,label:n,attributes:t,default:s}}=e;return{value:l,label:n,attributes:t,default:s}}))}(n);return function(e){const l=(0,o.X)(e,((e,l)=>e.value===l.value));if(l.length>0)throw new Error(`Docusaurus error: Duplicate values "${l.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[l,n])}function m(e){let{value:l,tabValues:n}=e;return n.some((e=>e.value===l))}function p(e){let{queryString:l=!1,groupId:n}=e;const s=(0,d.W6)(),r=function(e){let{queryString:l=!1,groupId:n}=e;if("string"==typeof l)return l;if(!1===l)return null;if(!0===l&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:l,groupId:n});return[(0,a.aZ)(r),(0,t.useCallback)((e=>{if(!r)return;const l=new URLSearchParams(s.location.search);l.set(r,e),s.replace({...s.location,search:l.toString()})}),[r,s])]}function x(e){const{defaultValue:l,queryString:n=!1,groupId:s}=e,r=u(e),[d,a]=(0,t.useState)((()=>function(e){let{defaultValue:l,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(l){if(!m({value:l,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${l}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return l}const t=n.find((e=>e.default))??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:l,tabValues:r}))),[o,h]=p({queryString:n,groupId:s}),[x,I]=function(e){let{groupId:l}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(l),[s,r]=(0,c.Dv)(n);return[s,(0,t.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:s}),j=(()=>{const e=o??x;return m({value:e,tabValues:r})?e:null})();(0,i.A)((()=>{j&&a(j)}),[j]);return{selectedValue:d,selectValue:(0,t.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);a(e),h(e),I(e)}),[h,I,r]),tabValues:r}}var I=n(92303);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=n(74848);function v(e){let{className:l,block:n,selectedValue:t,selectValue:d,tabValues:i}=e;const a=[],{blockElementScrollPositionUntilNextRender:o}=(0,r.a_)(),c=e=>{const l=e.currentTarget,n=a.indexOf(l),s=i[n].value;s!==t&&(o(l),d(s))},h=e=>{let l=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=a.indexOf(e.currentTarget)+1;l=a[n]??a[0];break}case"ArrowLeft":{const n=a.indexOf(e.currentTarget)-1;l=a[n]??a[a.length-1];break}}l?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":n},l),children:i.map((e=>{let{value:l,label:n,attributes:r}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:t===l?0:-1,"aria-selected":t===l,ref:e=>a.push(e),onKeyDown:h,onClick:c,...r,className:(0,s.A)("tabs__item",j.tabItem,r?.className,{"tabs__item--active":t===l}),children:n??l},l)}))})}function f(e){let{lazy:l,children:n,selectedValue:s}=e;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(l){const e=r.find((e=>e.props.value===s));return e?(0,t.cloneElement)(e,{className:"margin-top--md"}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:r.map(((e,l)=>(0,t.cloneElement)(e,{key:l,hidden:e.props.value!==s})))})}function F(e){const l=x(e);return(0,g.jsxs)("div",{className:(0,s.A)("tabs-container",j.tabList),children:[(0,g.jsx)(v,{...l,...e}),(0,g.jsx)(f,{...l,...e})]})}function y(e){const l=(0,I.A)();return(0,g.jsx)(F,{...e,children:h(e.children)},String(l))}},28453:(e,l,n)=>{n.d(l,{R:()=>d,x:()=>i});var t=n(96540);const s={},r=t.createContext(s);function d(e){const l=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(l):{...l,...e}}),[l,e])}function i(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),t.createElement(r.Provider,{value:l},e.children)}}}]);