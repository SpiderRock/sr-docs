"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[9831],{68792:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>E,contentTitle:()=>s,default:()=>M,frontMatter:()=>i,metadata:()=>a,toc:()=>T});var r=n(74848),N=n(28453);const i={title:"FuturePrintMarkup"},s=void 0,a={id:"MessageSchemas/Schema/SRSE Products/SRAnalytics/FuturePrintMarkup/FuturePrintMarkup",title:"FuturePrintMarkup",description:"V8 Message Definition",source:"@site/docs/MessageSchemas/Schema/SRSE Products/SRAnalytics/FuturePrintMarkup/FuturePrintMarkup.md",sourceDirName:"MessageSchemas/Schema/SRSE Products/SRAnalytics/FuturePrintMarkup",slug:"/MessageSchemas/Schema/SRSE Products/SRAnalytics/FuturePrintMarkup/",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRAnalytics/FuturePrintMarkup/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"FuturePrintMarkup"},sidebar:"messageSchemasSidebar",previous:{title:"FutureOpenMark",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRAnalytics/FutureOpenMark/"},next:{title:"FuturePrintProbability",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRAnalytics/FuturePrintProbability/"}},E={},T=[];function c(e){const t={a:"a",code:"code",p:"p",pre:"pre",...(0,N.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"../../../Topics/market-data-futures/FuturePrintMarkup",children:"V8 Message Definition"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:"CREATE TABLE `SRAnalytics`.`MsgFuturePrintMarkup` (\n    `fkey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None',\n    `fkey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None',\n    `fkey_tk` VARCHAR(12) NOT NULL DEFAULT '',\n    `fkey_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0,\n    `fkey_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0,\n    `fkey_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0,\n    `prtNumber` BIGINT NOT NULL DEFAULT 0 COMMENT 'Unique print set identifier; will increment but not guaranteed to be sequential.',\n    `ticker_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'underlying stock key',\n    `ticker_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'underlying stock key',\n    `ticker_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'underlying stock key',\n    `prtExch` ENUM('None','CFE','CME','CBOT','COMEX','NYMEX','ICE','EUREX','CEDX','NXAM','NXBR','NXLS','NXML','NXOS','NXP','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'print exchange',\n    `prtSize` INT NOT NULL DEFAULT 0 COMMENT 'print size [contracts]',\n    `prtPrice` DOUBLE NOT NULL DEFAULT 0 COMMENT 'print price',\n    `prtType` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'print type [exchange specific]',\n    `prtOrders` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'number of orders participating in this print',\n    `prtClusterNum` INT NOT NULL DEFAULT 0 COMMENT 'incremental print cluster counter (one counter per fkey; used to group prints into clusters)',\n    `prtClusterSize` INT NOT NULL DEFAULT 0 COMMENT 'cumulative size of prints in this sequence (prints @ same or more aggressive price with less than 25 ms elapsing since first print; can span exchanges)',\n    `prtVolume` INT NOT NULL DEFAULT 0 COMMENT 'cumulative day (electronic) print volume in contracts',\n    `prtSide` ENUM('None','Mid','Bid','Ask') NOT NULL DEFAULT 'None' COMMENT 'Print side: None; Mid; Bid; Ask',\n    `bidPrice` DOUBLE NOT NULL DEFAULT 0 COMMENT 'exch best bid @ print arrival time',\n    `askPrice` DOUBLE NOT NULL DEFAULT 0 COMMENT 'exch best ask @ print arrival time',\n    `bidSize` INT NOT NULL DEFAULT 0 COMMENT 'bid size @ print arrival time',\n    `askSize` INT NOT NULL DEFAULT 0 COMMENT 'ask size @ print arrival time',\n    `bidPrice2` DOUBLE NOT NULL DEFAULT 0 COMMENT 'exch 2nd best bid @ print arrival time',\n    `askPrice2` DOUBLE NOT NULL DEFAULT 0 COMMENT 'exch 2nd best ask @ print arrival time',\n    `bidSize2` INT NOT NULL DEFAULT 0 COMMENT '2nd best bid @ print arrival time',\n    `askSize2` INT NOT NULL DEFAULT 0 COMMENT '2nd best ask @ print arrival time',\n    `srcTimestamp` BIGINT NOT NULL DEFAULT 0 COMMENT 'exchange high precision timestamp (if available)',\n    `netTimestamp` BIGINT NOT NULL DEFAULT 0 COMMENT 'inbound print packet PTP timestamp from SR gateway switch',\n    `timestamp` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000',\n    PRIMARY KEY USING HASH (`fkey_tk`,`fkey_yr`,`fkey_mn`,`fkey_dy`,`fkey_at`,`fkey_ts`)\n) ENGINE=SRSE DEFAULT CHARSET=LATIN1 COMMENT='FuturePrintMarkup records are created for all future prints';\n\n"})})]})}function M(e={}){const{wrapper:t}={...(0,N.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var r=n(96540);const N={},i=r.createContext(N);function s(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(N):e.components||N:s(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);