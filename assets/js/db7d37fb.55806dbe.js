"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[12654],{82240:(e,r,i)=>{i.r(r),i.d(r,{assets:()=>h,contentTitle:()=>s,default:()=>j,frontMatter:()=>c,metadata:()=>a,toc:()=>o});var t=i(74848),d=i(28453),l=i(11470),n=i(19365);const c={title:"ToolCompositeExecution"},s="Schema: ToolCompositeExecution (ID: 3480)",a={id:"MessageSchemas/Schema/Topics/mlink-custom/ToolCompositeExecution",title:"ToolCompositeExecution",description:"METADATA",source:"@site/docs/MessageSchemas/Schema/Topics/3480-mlink-custom/ToolCompositeExecution.md",sourceDirName:"MessageSchemas/Schema/Topics/3480-mlink-custom",slug:"/MessageSchemas/Schema/Topics/mlink-custom/ToolCompositeExecution",permalink:"/docs/next/MessageSchemas/Schema/Topics/mlink-custom/ToolCompositeExecution",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"ToolCompositeExecution"},sidebar:"messageSchemasSidebar",previous:{title:"OptionItemDef",permalink:"/docs/next/MessageSchemas/Schema/Topics/mlink-custom/OptionItemDef"},next:{title:"3585-option-pricing",permalink:"/docs/next/MessageSchemas/Schema/Topics/option-pricing/"}},h={},o=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3}];function x(e){const r={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(r.h1,{id:"schema-toolcompositeexecution-id-3480",children:["Schema: ToolCompositeExecution ",(0,t.jsx)("span",{className:"small-text",children:"(ID: 3480)"})]}),"\n",(0,t.jsx)(r.h3,{id:"metadata",children:"METADATA"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Attribute"}),(0,t.jsx)(r.th,{children:"Value"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Topic"}),(0,t.jsx)(r.td,{children:"3480-mlink-custom"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"MLink Token"}),(0,t.jsx)(r.td,{children:"ClientTrading"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"SRSE Product"}),(0,t.jsx)(r.td,{children:"SRTrade"})]})]})]}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Note:"})," The symbol ",(0,t.jsx)(r.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"body",children:"BODY"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"#"}),(0,t.jsx)(r.th,{children:"Field"}),(0,t.jsx)(r.th,{children:"Type"}),(0,t.jsx)(r.th,{children:"Comment"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"10="}),(0,t.jsx)(r.td,{children:"fillNumber"}),(0,t.jsx)(r.td,{children:"long"}),(0,t.jsx)(r.td,{children:"SpiderRock execution number (globally unique over trailing 10 days)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"100"}),(0,t.jsx)(r.td,{children:"tradeDate"}),(0,t.jsx)(r.td,{children:"DateKey"}),(0,t.jsx)(r.td,{children:"trade date"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"103"}),(0,t.jsx)(r.td,{children:"accnt"}),(0,t.jsx)(r.td,{children:"string(16)"}),(0,t.jsx)(r.td,{children:"SpiderRock Accnt Code"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"106"}),(0,t.jsx)(r.td,{children:"clientFirm"}),(0,t.jsx)(r.td,{children:"string(16)"}),(0,t.jsx)(r.td,{children:"SpiderRock ClientFirm Code"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"109"}),(0,t.jsx)(r.td,{children:"secKey"}),(0,t.jsx)(r.td,{children:"OptionKey"}),(0,t.jsx)(r.td,{children:"Security Key [can be partially filled in (look at secType)]"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"112"}),(0,t.jsx)(r.td,{children:"secType"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/SpdrKeyType",children:"enum : SpdrKeyType"})}),(0,t.jsx)(r.td,{children:"Security Type [Stock, Future, Option]"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"115"}),(0,t.jsx)(r.td,{children:"side"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,t.jsx)(r.td,{children:"order / execution side"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"118"}),(0,t.jsx)(r.td,{children:"version"}),(0,t.jsx)(r.td,{children:"byte"}),(0,t.jsx)(r.td,{children:"record version number; starts at zero and goes up every time an execution record is re-published (eg, bust, +1m marks, +10m marks, etc)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"121"}),(0,t.jsx)(r.td,{children:"parentNumber"}),(0,t.jsx)(r.td,{children:"long"}),(0,t.jsx)(r.td,{children:"SpiderRock parent number"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"124"}),(0,t.jsx)(r.td,{children:"baseParentNumber"}),(0,t.jsx)(r.td,{children:"long"}),(0,t.jsx)(r.td,{children:"SpiderRock base parent number"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"127"}),(0,t.jsx)(r.td,{children:"spdrSource"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/SpdrSource",children:"enum : SpdrSource"})}),(0,t.jsx)(r.td,{children:"SpiderRock parent order source code [broker pkey]"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"130"}),(0,t.jsx)(r.td,{children:"groupingCode"}),(0,t.jsx)(r.td,{children:"long"}),(0,t.jsx)(r.td,{children:"SpiderRock parent broker number [broker pkey]"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"133"}),(0,t.jsx)(r.td,{children:"riskGroupId"}),(0,t.jsx)(r.td,{children:"long"}),(0,t.jsx)(r.td,{children:"riskGroupId (parent order group ID) for this execution report"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"136"}),(0,t.jsx)(r.td,{children:"altOrderId"}),(0,t.jsx)(r.td,{children:"string(24)"}),(0,t.jsx)(r.td,{children:"alternate order ID (usually clOrdId from client)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"139"}),(0,t.jsx)(r.td,{children:"srcRoutingCode"}),(0,t.jsx)(r.td,{children:"text1"}),(0,t.jsx)(r.td,{children:"inbound FIX routing code, if any"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"142"}),(0,t.jsx)(r.td,{children:"userName"}),(0,t.jsx)(r.td,{children:"string(24)"}),(0,t.jsx)(r.td,{children:"SpiderRock user name associated with the parent order"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"145"}),(0,t.jsx)(r.td,{children:"server"}),(0,t.jsx)(r.td,{children:"string(20)"}),(0,t.jsx)(r.td,{children:"SpiderRock execution engine that handled the parent order"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"148"}),(0,t.jsx)(r.td,{children:"ticker"}),(0,t.jsx)(r.td,{children:"TickerKey"}),(0,t.jsx)(r.td,{children:"SpiderRock underlier ticker key [synthetic for futures]"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"151"}),(0,t.jsx)(r.td,{children:"sector"}),(0,t.jsx)(r.td,{children:"string(16)"}),(0,t.jsx)(r.td,{children:"user supplied sector code (from SymbolControl record)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"154"}),(0,t.jsx)(r.td,{children:"clientTags"}),(0,t.jsx)(r.td,{children:"text1"}),(0,t.jsx)(r.td,{})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"157"}),(0,t.jsx)(r.td,{children:"indNum"}),(0,t.jsx)(r.td,{children:"int"}),(0,t.jsx)(r.td,{children:"ind code (00)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"160"}),(0,t.jsx)(r.td,{children:"subNum"}),(0,t.jsx)(r.td,{children:"int"}),(0,t.jsx)(r.td,{children:"sub code (0000)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"163"}),(0,t.jsx)(r.td,{children:"grpNum"}),(0,t.jsx)(r.td,{children:"int"}),(0,t.jsx)(r.td,{children:"grp code (000000)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"166"}),(0,t.jsx)(r.td,{children:"nbrNum"}),(0,t.jsx)(r.td,{children:"int"}),(0,t.jsx)(r.td,{children:"nbr code (00000000)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"169"}),(0,t.jsx)(r.td,{children:"expCode"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/ExpCode",children:"enum : ExpCode"})}),(0,t.jsx)(r.td,{children:"expiration tenor code"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"172"}),(0,t.jsx)(r.td,{children:"skewCode"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/SkewCode",children:"enum : SkewCode"})}),(0,t.jsx)(r.td,{children:"strike skew code (@ parent order arrival)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"175"}),(0,t.jsx)(r.td,{children:"widthCode"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/WidthCode",children:"enum : WidthCode"})}),(0,t.jsx)(r.td,{children:"market width code"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"178"}),(0,t.jsx)(r.td,{children:"priceFormat"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/PriceFormat",children:"enum : PriceFormat"})}),(0,t.jsx)(r.td,{children:"SpiderRock price display format code"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"181"}),(0,t.jsx)(r.td,{children:"uPriceFormat"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/PriceFormat",children:"enum : PriceFormat"})}),(0,t.jsx)(r.td,{children:"SpiderRock underlier price display code"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"184"}),(0,t.jsx)(r.td,{children:"years"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"years to expiration (@ parent order arrival)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"187"}),(0,t.jsx)(r.td,{children:"underlierType"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/UnderlierType",children:"enum : UnderlierType"})}),(0,t.jsx)(r.td,{children:"underlier type (affects $greek calcs)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"190"}),(0,t.jsx)(r.td,{children:"minTickSize"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"$NLV value of a single tick change in display premium\t(pointValue = tickValue / tickSize)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"193"}),(0,t.jsx)(r.td,{children:"pointValue"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"$NLV value of a point"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"196"}),(0,t.jsx)(r.td,{children:"pointCurrency"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/Currency",children:"enum : Currency"})}),(0,t.jsx)(r.td,{})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"199"}),(0,t.jsx)(r.td,{children:"underliersPerCn"}),(0,t.jsx)(r.td,{children:"int"}),(0,t.jsx)(r.td,{children:"underliers per contract (futures and options)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"202"}),(0,t.jsx)(r.td,{children:"parentShape"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/SpdrOrderShape",children:"enum : SpdrOrderShape"})}),(0,t.jsx)(r.td,{children:"parent order shape [Single, MLeg, etc]"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"205"}),(0,t.jsx)(r.td,{children:"parentLimitType"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/SpdrLimitType",children:"enum : SpdrLimitType"})}),(0,t.jsx)(r.td,{children:"parent order limit type [Vol, VolX, PrcDe, PrcDeX, etc]"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"208"}),(0,t.jsx)(r.td,{children:"parentLimitClass"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/SpdrLimitClass",children:"enum : SpdrLimitClass"})}),(0,t.jsx)(r.td,{children:"parent order limit class (makeLimitClass if fill was from making; takeLimitClass if fill was from taking)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"211"}),(0,t.jsx)(r.td,{children:"parentOrderHandling"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/ParentOrderHandling",children:"enum : ParentOrderHandling"})}),(0,t.jsx)(r.td,{children:"base parent order algo [take style algo]"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"214"}),(0,t.jsx)(r.td,{children:"parentBalanceHandling"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/ParentBalanceHandling",children:"enum : ParentBalanceHandling"})}),(0,t.jsx)(r.td,{children:"base parent order balance handling [make style algo]"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"217"}),(0,t.jsx)(r.td,{children:"parentOrderSize"}),(0,t.jsx)(r.td,{children:"int"}),(0,t.jsx)(r.td,{children:"parent order size"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"220"}),(0,t.jsx)(r.td,{children:"parentDttm"}),(0,t.jsx)(r.td,{children:"DateTime"}),(0,t.jsx)(r.td,{children:"Date/time of parent order arrival"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"223"}),(0,t.jsx)(r.td,{children:"parentUMark"}),(0,t.jsx)(r.td,{children:"double"}),(0,t.jsx)(r.td,{children:"underlier mid mark @ parent order arrival (options only)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"226"}),(0,t.jsx)(r.td,{children:"parentBid"}),(0,t.jsx)(r.td,{children:"double"}),(0,t.jsx)(r.td,{children:"market bid @ parent order arrival"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"229"}),(0,t.jsx)(r.td,{children:"parentAsk"}),(0,t.jsx)(r.td,{children:"double"}),(0,t.jsx)(r.td,{children:"market ask @ parent order arrival"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"232"}),(0,t.jsx)(r.td,{children:"parentFairPrc"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"SpiderRock fair price @ parent order arrival"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"235"}),(0,t.jsx)(r.td,{children:"parentFairWidth"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"SpiderRock fair width @ parent order arrival"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"238"}),(0,t.jsx)(r.td,{children:"parentLimitPrc"}),(0,t.jsx)(r.td,{children:"double"}),(0,t.jsx)(r.td,{children:"parent order limit price @ parent order arrival"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"241"}),(0,t.jsx)(r.td,{children:"parentLimitRefUPrc"}),(0,t.jsx)(r.td,{children:"double"}),(0,t.jsx)(r.td,{children:"limit reference underlier price @ parent order arrival (options only)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"244"}),(0,t.jsx)(r.td,{children:"parentSSaleFlag"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum : ShortSaleFlag"})}),(0,t.jsx)(r.td,{children:"parent order short sale flag (can be Auto)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"247"}),(0,t.jsx)(r.td,{children:"parentPositionType"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/PositionType",children:"enum : PositionType"})}),(0,t.jsx)(r.td,{children:"parent order position type (can be Auto)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"250"}),(0,t.jsx)(r.td,{children:"parentStrategy"}),(0,t.jsx)(r.td,{children:"string(36)"}),(0,t.jsx)(r.td,{children:"parent strategy [usually client supplied]"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"253"}),(0,t.jsx)(r.td,{children:"parentAutoHedge"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/AutoHedge",children:"enum : AutoHedge"})}),(0,t.jsx)(r.td,{children:"SpiderRock auto-hedge algorithm (if any)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"256"}),(0,t.jsx)(r.td,{children:"childDttm"}),(0,t.jsx)(r.td,{children:"DateTime"}),(0,t.jsx)(r.td,{children:"child order send date/time (if any)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"259"}),(0,t.jsx)(r.td,{children:"childClOrdId"}),(0,t.jsx)(r.td,{children:"string(24)"}),(0,t.jsx)(r.td,{children:"child order clOrdId resulting in fill (if any)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"262"}),(0,t.jsx)(r.td,{children:"childRoutingCode"}),(0,t.jsx)(r.td,{children:"text1"}),(0,t.jsx)(r.td,{children:"SpiderRock child order routing code (if any)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"265"}),(0,t.jsx)(r.td,{children:"childSize"}),(0,t.jsx)(r.td,{children:"int"}),(0,t.jsx)(r.td,{children:"child order size"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"268"}),(0,t.jsx)(r.td,{children:"childPrice"}),(0,t.jsx)(r.td,{children:"double"}),(0,t.jsx)(r.td,{children:"child order price"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"271"}),(0,t.jsx)(r.td,{children:"childExch"}),(0,t.jsx)(r.td,{children:"string(6)"}),(0,t.jsx)(r.td,{children:"child order exchange code (SpiderRock)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"600"}),(0,t.jsx)(r.td,{children:"childExDest"}),(0,t.jsx)(r.td,{children:"string(16)"}),(0,t.jsx)(r.td,{children:"child order exchange code (downstream)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"277"}),(0,t.jsx)(r.td,{children:"childUPrc"}),(0,t.jsx)(r.td,{children:"double"}),(0,t.jsx)(r.td,{children:"underlier market price @ child order send time"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"280"}),(0,t.jsx)(r.td,{children:"childBid"}),(0,t.jsx)(r.td,{children:"double"}),(0,t.jsx)(r.td,{children:"market bid @ child order send time"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"283"}),(0,t.jsx)(r.td,{children:"childAsk"}),(0,t.jsx)(r.td,{children:"double"}),(0,t.jsx)(r.td,{children:"market ask @ child order send time"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"286"}),(0,t.jsx)(r.td,{children:"childFairPrc"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"SpiderRock fair price @ child order send time"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"289"}),(0,t.jsx)(r.td,{children:"childFairWidth"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"SpiderRock fair width @ child order send time"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"292"}),(0,t.jsx)(r.td,{children:"childVol"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"child order volatilty (options only)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"295"}),(0,t.jsx)(r.td,{children:"childProb"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"child order probability (T+x)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"298"}),(0,t.jsx)(r.td,{children:"childLimitPrc"}),(0,t.jsx)(r.td,{children:"double"}),(0,t.jsx)(r.td,{children:"parent order limit price @ child order send time"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"301"}),(0,t.jsx)(r.td,{children:"childLimitRefUPrc"}),(0,t.jsx)(r.td,{children:"double"}),(0,t.jsx)(r.td,{children:"limit reference underlier price @ child order send time (options only)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"304"}),(0,t.jsx)(r.td,{children:"childAlgoHandler"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/ChildHandler",children:"enum : ChildHandler"})}),(0,t.jsx)(r.td,{children:"algo that generated the child order responsible for this fill"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"307"}),(0,t.jsx)(r.td,{children:"childOrderHandling"}),(0,t.jsx)(r.td,{children:"string(24)"}),(0,t.jsx)(r.td,{children:"algo handler detail string"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"310"}),(0,t.jsx)(r.td,{children:"childCreateReason"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/ChildCreateReason",children:"enum : ChildCreateReason"})}),(0,t.jsx)(r.td,{children:"child order create code"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"313"}),(0,t.jsx)(r.td,{children:"childCancelReason"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/ChildCancelReason",children:"enum : ChildCancelReason"})}),(0,t.jsx)(r.td,{children:"child order cancel code (if any)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"316"}),(0,t.jsx)(r.td,{children:"childMktStance"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/MktStance",children:"enum : MktStance"})}),(0,t.jsx)(r.td,{children:"child order was expected to be marketable @ child send time"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"319"}),(0,t.jsx)(r.td,{children:"childCxlAttempted"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,t.jsx)(r.td,{children:"cancel attempt was made on the child order prior to receiving this fill"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"322"}),(0,t.jsx)(r.td,{children:"childSSaleFlag"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum : ShortSaleFlag"})}),(0,t.jsx)(r.td,{children:"child order short sale flag"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"325"}),(0,t.jsx)(r.td,{children:"childPositionType"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/PositionType",children:"enum : PositionType"})}),(0,t.jsx)(r.td,{children:"child order position type"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"328"}),(0,t.jsx)(r.td,{children:"childFirmType"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/FirmType",children:"enum : FirmType"})}),(0,t.jsx)(r.td,{children:"chld order firm type [Customer, ProCust, Firm, MM, etc]"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"331"}),(0,t.jsx)(r.td,{children:"childCapacity"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/OrderCapacity",children:"enum : OrderCapacity"})}),(0,t.jsx)(r.td,{children:"child order capacity"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"334"}),(0,t.jsx)(r.td,{children:"fillExch"}),(0,t.jsx)(r.td,{children:"string(12)"}),(0,t.jsx)(r.td,{children:"ExDest code from child order execution report (lastMkt)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"337"}),(0,t.jsx)(r.td,{children:"fillPrice"}),(0,t.jsx)(r.td,{children:"double"}),(0,t.jsx)(r.td,{children:"fill price"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"340"}),(0,t.jsx)(r.td,{children:"fillDttm"}),(0,t.jsx)(r.td,{children:"DateTime"}),(0,t.jsx)(r.td,{children:"Date/time of fill arrival"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"343"}),(0,t.jsx)(r.td,{children:"fillSize"}),(0,t.jsx)(r.td,{children:"int"}),(0,t.jsx)(r.td,{children:"fill quantity"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"346"}),(0,t.jsx)(r.td,{children:"fillPointValue"}),(0,t.jsx)(r.td,{children:"int"}),(0,t.jsx)(r.td,{children:"fill size x pointValue"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"349"}),(0,t.jsx)(r.td,{children:"fillVol"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"fill volatilty (options only)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"352"}),(0,t.jsx)(r.td,{children:"fillProb"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"fill order probability (T+x)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"355"}),(0,t.jsx)(r.td,{children:"fillLimitPrc"}),(0,t.jsx)(r.td,{children:"double"}),(0,t.jsx)(r.td,{children:"parent order limit price @ fill arrival time"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"358"}),(0,t.jsx)(r.td,{children:"fillLimitRefUPrc"}),(0,t.jsx)(r.td,{children:"double"}),(0,t.jsx)(r.td,{children:"limit reference underlier price @ fill arrival time (options only)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"361"}),(0,t.jsx)(r.td,{children:"fillUPrc"}),(0,t.jsx)(r.td,{children:"double"}),(0,t.jsx)(r.td,{children:"fill underlier mid-market"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"364"}),(0,t.jsx)(r.td,{children:"fillBeta"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"SpiderRock estimate of beta to SPX"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"367"}),(0,t.jsx)(r.td,{children:"fillTv"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"theo vol (user supplied)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"370"}),(0,t.jsx)(r.td,{children:"fillTp"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"theo price"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"373"}),(0,t.jsx)(r.td,{children:"fillBid"}),(0,t.jsx)(r.td,{children:"double"}),(0,t.jsx)(r.td,{children:"option market bid @ fill arrival"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"376"}),(0,t.jsx)(r.td,{children:"fillAsk"}),(0,t.jsx)(r.td,{children:"double"}),(0,t.jsx)(r.td,{children:"option market ask @ fill arrival"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"379"}),(0,t.jsx)(r.td,{children:"fillFairPrc"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"SpiderRock fair price @ fill arrival"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"382"}),(0,t.jsx)(r.td,{children:"fillFairWidth"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"SpiderRock fair width @ fill arrival"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"385"}),(0,t.jsx)(r.td,{children:"fillBrkrRate"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"billing brokerage rate (tier 1)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"388"}),(0,t.jsx)(r.td,{children:"fillRoutingRate"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"billing routing rate (tier 1)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"391"}),(0,t.jsx)(r.td,{children:"fillOrigExecID"}),(0,t.jsx)(r.td,{children:"string(20)"}),(0,t.jsx)(r.td,{children:"original execution ID string (child order)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"394"}),(0,t.jsx)(r.td,{children:"fillLastExecID"}),(0,t.jsx)(r.td,{children:"string(20)"}),(0,t.jsx)(r.td,{children:"most recent execution ID (same as origExecID unless CANCEL/CORRECTION has been processed)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"397"}),(0,t.jsx)(r.td,{children:"fillExecStatus"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/ExecStatus",children:"enum : ExecStatus"})}),(0,t.jsx)(r.td,{children:"SpiderRock execution status (Fill,Bust,Correct,Reject,SysRej)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"400"}),(0,t.jsx)(r.td,{children:"fillRemoteText"}),(0,t.jsx)(r.td,{children:"string(64)"}),(0,t.jsx)(r.td,{children:"text comment from endpoint (if any)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"403"}),(0,t.jsx)(r.td,{children:"fillTransactDttm"}),(0,t.jsx)(r.td,{children:"DateTime"}),(0,t.jsx)(r.td,{children:"transaction date/time as reported by exchange or down stream broker"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"406"}),(0,t.jsx)(r.td,{children:"fillLiquidityTag"}),(0,t.jsx)(r.td,{children:"string(2)"}),(0,t.jsx)(r.td,{children:"SpiderRock normalized exch liquidity tag"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"409"}),(0,t.jsx)(r.td,{children:"fillExchFee"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"SpiderRock exchange fee estimate"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"412"}),(0,t.jsx)(r.td,{children:"fillDe"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"415"}),(0,t.jsx)(r.td,{children:"fillGa"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"418"}),(0,t.jsx)(r.td,{children:"fillVe"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"421"}),(0,t.jsx)(r.td,{children:"execRole"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/ExecRole",children:"enum : ExecRole"})}),(0,t.jsx)(r.td,{children:"SpiderRock relationship to this execution record (Direct, Drop, etc)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"599"}),(0,t.jsx)(r.td,{children:"execBrkrCode"}),(0,t.jsx)(r.td,{children:"string(16)"}),(0,t.jsx)(r.td,{children:"exec broker acronym (usually an MPID)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"427"}),(0,t.jsx)(r.td,{children:"execBrkrAccnt"}),(0,t.jsx)(r.td,{children:"string(16)"}),(0,t.jsx)(r.td,{children:"account at executing broker (if any)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"430"}),(0,t.jsx)(r.td,{children:"execBrkrClFirm"}),(0,t.jsx)(r.td,{children:"string(16)"}),(0,t.jsx)(r.td,{children:"client/firm at executing broker (if any)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"433"}),(0,t.jsx)(r.td,{children:"execBrkrUserName"}),(0,t.jsx)(r.td,{children:"string(16)"}),(0,t.jsx)(r.td,{children:"user executing broker (if any)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"436"}),(0,t.jsx)(r.td,{children:"clearingFlipType"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/FlipType",children:"enum : FlipType"})}),(0,t.jsx)(r.td,{children:"type of clearing corp delivery"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"439"}),(0,t.jsx)(r.td,{children:"clearingFlipFirm"}),(0,t.jsx)(r.td,{children:"string(6)"}),(0,t.jsx)(r.td,{children:"deliverTo clearing member (eg. OCC#, NSCC#, MPID, or InstitutionID)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"442"}),(0,t.jsx)(r.td,{children:"clearingFlipAccnt"}),(0,t.jsx)(r.td,{children:"string(10)"}),(0,t.jsx)(r.td,{children:"deliverTo client account (eg. OCC AID# or a DVP FBO code)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"593"}),(0,t.jsx)(r.td,{children:"clearingAgent"}),(0,t.jsx)(r.td,{children:"string(10)"}),(0,t.jsx)(r.td,{children:"deliverTo agent (eg. DVP Agent Bank ID)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"594"}),(0,t.jsx)(r.td,{children:"clearingTaxID"}),(0,t.jsx)(r.td,{children:"string(10)"}),(0,t.jsx)(r.td,{children:"deliverTo taxID (eg. DVP TaxID)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"445"}),(0,t.jsx)(r.td,{children:"billingSecType"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/BillingSecType",children:"enum : BillingSecType"})}),(0,t.jsx)(r.td,{children:"SpiderRock billing security type"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"448"}),(0,t.jsx)(r.td,{children:"billingCategory"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/BillingCategory",children:"enum : BillingCategory"})}),(0,t.jsx)(r.td,{children:"SpiderRock billing category"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"451"}),(0,t.jsx)(r.td,{children:"priAggGroup"}),(0,t.jsx)(r.td,{children:"string(16)"}),(0,t.jsx)(r.td,{children:"primary aggregation group"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"454"}),(0,t.jsx)(r.td,{children:"secAggGroup"}),(0,t.jsx)(r.td,{children:"string(16)"}),(0,t.jsx)(r.td,{children:"secondary aggregation group"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"457"}),(0,t.jsx)(r.td,{children:"trdDelta"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"trade delta"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"460"}),(0,t.jsx)(r.td,{children:"trdDDelta"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"trade $delta"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"463"}),(0,t.jsx)(r.td,{children:"trdGamma"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"trade gamma"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"466"}),(0,t.jsx)(r.td,{children:"trdDGamma"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"trade dollar gamma"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"469"}),(0,t.jsx)(r.td,{children:"trdVega"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"trade vega"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"472"}),(0,t.jsx)(r.td,{children:"trdWtVega"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"trade wtVega: (vega * vol / sqrt(max(0.1, years * 4))"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"478"}),(0,t.jsx)(r.td,{children:"trdTheta"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"trade theta"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"481"}),(0,t.jsx)(r.td,{children:"trdBeta"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"trade beta"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"484"}),(0,t.jsx)(r.td,{children:"trdDBeta"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"trade $beta"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"487"}),(0,t.jsx)(r.td,{children:"trdNotionalValue"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"cn * pointValue * uPrc"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"490"}),(0,t.jsx)(r.td,{children:"trdMarketValue"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"cn * pointValue * fillPrice"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"595"}),(0,t.jsx)(r.td,{children:"marginUDnVDn"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"Aggregate RiskSlide: uPrc dn, vol dn"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"596"}),(0,t.jsx)(r.td,{children:"marginUDnVUp"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"Aggregate RiskSlide: uPrc dn, vol up"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"597"}),(0,t.jsx)(r.td,{children:"marginUUpVDn"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"Aggregate RiskSlide: uPrc up, vol dn"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"598"}),(0,t.jsx)(r.td,{children:"marginUUpVUp"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"Aggregate RiskSlide: uPrc up, vol up"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"517"}),(0,t.jsx)(r.td,{children:"trdFairEdge"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"SR trade edge (fill price to SR fair price)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"520"}),(0,t.jsx)(r.td,{children:"trdFairEdgeUnit"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"SR trade edge normalized to $100 underlier"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"523"}),(0,t.jsx)(r.td,{children:"trdTheoEdge"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"theo edge (user supplied theo vol/prc to SpiderRock surface price) (if any)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"526"}),(0,t.jsx)(r.td,{children:"trdTheoEdgeUnit"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"theo edge normalized to $100 underlier"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"529"}),(0,t.jsx)(r.td,{children:"clArrivePnL"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"arrival PnL (client arrival mark to fill mark) [from clArriveMark on parent order if any]"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"532"}),(0,t.jsx)(r.td,{children:"arrivePnL"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"arrival PnL (parent arrival mark to fill mark)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"535"}),(0,t.jsx)(r.td,{children:"arriveDnPnL"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"arrival Dn PnL (arrivalPnL - uDriftArrivalPnL)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"538"}),(0,t.jsx)(r.td,{children:"uDriftArrivePnL"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"underlier delta drift PnL (arrival uMark to fill uMark)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"541"}),(0,t.jsx)(r.td,{children:"childLimitSlip"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"Fill Slippage (ChildLimitPrice to FillPrice)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"544"}),(0,t.jsx)(r.td,{children:"halfWidthPnL"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"estimated half-width PnL"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"547"}),(0,t.jsx)(r.td,{children:"dayDnPnL"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"delta neutral PnL (to EOD)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"550"}),(0,t.jsx)(r.td,{children:"dayM1PnL"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"delta neutral PnL (Fill + 1M)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"553"}),(0,t.jsx)(r.td,{children:"dayM10PnL"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"delta neutral PnL (Fill + 10M)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"556"}),(0,t.jsx)(r.td,{children:"uDriftDayPnL"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"underlier delta drift PnL (to EOD)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"559"}),(0,t.jsx)(r.td,{children:"uDriftM1PnL"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"underlier delta drift PnL (Fill + 1M)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"562"}),(0,t.jsx)(r.td,{children:"uDriftM10PnL"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"underlier delta drift PnL (Fill + 10M)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"565"}),(0,t.jsx)(r.td,{children:"dayPnL"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"actual PnL to EOD (fillMark to liveMark)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"568"}),(0,t.jsx)(r.td,{children:"m1Mark"}),(0,t.jsx)(r.td,{children:"double"}),(0,t.jsx)(r.td,{children:"T+1min"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"571"}),(0,t.jsx)(r.td,{children:"m1UPrc"}),(0,t.jsx)(r.td,{children:"double"}),(0,t.jsx)(r.td,{children:"T+1min"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"574"}),(0,t.jsx)(r.td,{children:"m10Mark"}),(0,t.jsx)(r.td,{children:"double"}),(0,t.jsx)(r.td,{children:"T+10min"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"577"}),(0,t.jsx)(r.td,{children:"m10UPrc"}),(0,t.jsx)(r.td,{children:"double"}),(0,t.jsx)(r.td,{children:"T+10min"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"580"}),(0,t.jsx)(r.td,{children:"liveMark"}),(0,t.jsx)(r.td,{children:"double"}),(0,t.jsx)(r.td,{children:"Live @ Record Query"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"583"}),(0,t.jsx)(r.td,{children:"liveUPrc"}),(0,t.jsx)(r.td,{children:"double"}),(0,t.jsx)(r.td,{children:"Live @ Record Query"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"586"}),(0,t.jsx)(r.td,{children:"trdMarkError"}),(0,t.jsx)(r.td,{children:"string(8)"}),(0,t.jsx)(r.td,{children:"trade mark error code"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"589"}),(0,t.jsx)(r.td,{children:"dayMarkError"}),(0,t.jsx)(r.td,{children:"string(8)"}),(0,t.jsx)(r.td,{children:"day mark error code"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"592"}),(0,t.jsx)(r.td,{children:"timestamp"}),(0,t.jsx)(r.td,{children:"DateTime"}),(0,t.jsx)(r.td,{children:"SR system timestamp"})]})]})]}),"\n",(0,t.jsx)(r.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,t.jsxs)(l.A,{children:[(0,t.jsx)(n.A,{value:"Python",label:"Python",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'ToolCompositeExecution'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n    # Required Parameters\n    \"apiKey\": API_KEY,\n    \"cmd\": 'getschema',\n    \"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,t.jsx)(n.A,{value:"cUrl",label:"cUrl",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=ToolCompositeExecution'\n\n"})})})]}),"\n",(0,t.jsx)(r.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,t.jsxs)(l.A,{children:[(0,t.jsx)(n.A,{value:"Python",label:"Python",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'ToolCompositeExecution\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'tradeDate|accnt|clientFirm|secKey|secType|side|version|parentNumber|baseParentNumber|spdrSource|groupingCode|riskGroupId|altOrderId|srcRoutingCode|userName|server|ticker|sector|clientTags|indNum|subNum|grpNum|nbrNum|expCode|skewCode|widthCode|priceFormat|uPriceFormat|years|underlierType|minTickSize|pointValue|pointCurrency|underliersPerCn|parentShape|parentLimitType|parentLimitClass|parentOrderHandling|parentBalanceHandling|parentOrderSize|parentDttm|parentUMark|parentBid|parentAsk|parentFairPrc|parentFairWidth|parentLimitPrc|parentLimitRefUPrc|parentSSaleFlag|parentPositionType|parentStrategy|parentAutoHedge|childDttm|childClOrdId|childRoutingCode|childSize|childPrice|childExch|childExDest|childUPrc|childBid|childAsk|childFairPrc|childFairWidth|childVol|childProb|childLimitPrc|childLimitRefUPrc|childAlgoHandler|childOrderHandling|childCreateReason|childCancelReason|childMktStance|childCxlAttempted|childSSaleFlag|childPositionType|childFirmType|childCapacity|fillExch|fillPrice|fillDttm|fillSize|fillPointValue|fillVol|fillProb|fillLimitPrc|fillLimitRefUPrc|fillUPrc|fillBeta|fillTv|fillTp|fillBid|fillAsk|fillFairPrc|fillFairWidth|fillBrkrRate|fillRoutingRate|fillOrigExecID|fillLastExecID|fillExecStatus|fillRemoteText|fillTransactDttm|fillLiquidityTag|fillExchFee|fillDe|fillGa|fillVe|execRole|execBrkrCode|execBrkrAccnt|execBrkrClFirm|execBrkrUserName|clearingFlipType|clearingFlipFirm|clearingFlipAccnt|clearingAgent|clearingTaxID|billingSecType|billingCategory|priAggGroup|secAggGroup|trdDelta|trdDDelta|trdGamma|trdDGamma|trdVega|trdWtVega|trdTheta|trdBeta|trdDBeta|trdNotionalValue|trdMarketValue|marginUDnVDn|marginUDnVUp|marginUUpVDn|marginUUpVUp|trdFairEdge|trdFairEdgeUnit|trdTheoEdge|trdTheoEdgeUnit|clArrivePnL|arrivePnL|arriveDnPnL|uDriftArrivePnL|childLimitSlip|halfWidthPnL|dayDnPnL|dayM1PnL|dayM10PnL|uDriftDayPnL|uDriftM1PnL|uDriftM10PnL|dayPnL|m1Mark|m1UPrc|m10Mark|m10UPrc|liveMark|liveUPrc|trdMarkError|dayMarkError|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,t.jsx)(n.A,{value:"cUrl",label:"cUrl",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=ToolCompositeExecution' \\\n--data-urlencode 'view=tradeDate|accnt|clientFirm|secKey|secType|side|version|parentNumber|baseParentNumber|spdrSource|groupingCode|riskGroupId|altOrderId|srcRoutingCode|userName|server|ticker|sector|clientTags|indNum|subNum|grpNum|nbrNum|expCode|skewCode|widthCode|priceFormat|uPriceFormat|years|underlierType|minTickSize|pointValue|pointCurrency|underliersPerCn|parentShape|parentLimitType|parentLimitClass|parentOrderHandling|parentBalanceHandling|parentOrderSize|parentDttm|parentUMark|parentBid|parentAsk|parentFairPrc|parentFairWidth|parentLimitPrc|parentLimitRefUPrc|parentSSaleFlag|parentPositionType|parentStrategy|parentAutoHedge|childDttm|childClOrdId|childRoutingCode|childSize|childPrice|childExch|childExDest|childUPrc|childBid|childAsk|childFairPrc|childFairWidth|childVol|childProb|childLimitPrc|childLimitRefUPrc|childAlgoHandler|childOrderHandling|childCreateReason|childCancelReason|childMktStance|childCxlAttempted|childSSaleFlag|childPositionType|childFirmType|childCapacity|fillExch|fillPrice|fillDttm|fillSize|fillPointValue|fillVol|fillProb|fillLimitPrc|fillLimitRefUPrc|fillUPrc|fillBeta|fillTv|fillTp|fillBid|fillAsk|fillFairPrc|fillFairWidth|fillBrkrRate|fillRoutingRate|fillOrigExecID|fillLastExecID|fillExecStatus|fillRemoteText|fillTransactDttm|fillLiquidityTag|fillExchFee|fillDe|fillGa|fillVe|execRole|execBrkrCode|execBrkrAccnt|execBrkrClFirm|execBrkrUserName|clearingFlipType|clearingFlipFirm|clearingFlipAccnt|clearingAgent|clearingTaxID|billingSecType|billingCategory|priAggGroup|secAggGroup|trdDelta|trdDDelta|trdGamma|trdDGamma|trdVega|trdWtVega|trdTheta|trdBeta|trdDBeta|trdNotionalValue|trdMarketValue|marginUDnVDn|marginUDnVUp|marginUUpVDn|marginUUpVUp|trdFairEdge|trdFairEdgeUnit|trdTheoEdge|trdTheoEdgeUnit|clArrivePnL|arrivePnL|arriveDnPnL|uDriftArrivePnL|childLimitSlip|halfWidthPnL|dayDnPnL|dayM1PnL|dayM10PnL|uDriftDayPnL|uDriftM1PnL|uDriftM10PnL|dayPnL|m1Mark|m1UPrc|m10Mark|m10UPrc|liveMark|liveUPrc|trdMarkError|dayMarkError|timestamp' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,t.jsx)(r.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,t.jsxs)(l.A,{children:[(0,t.jsx)(n.A,{value:"Python",label:"Python",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'ToolCompositeExecution\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'tradeDate|accnt|clientFirm|secKey|secType|side|version|parentNumber|baseParentNumber|spdrSource|groupingCode|riskGroupId|altOrderId|srcRoutingCode|userName|server|ticker|sector|clientTags|indNum|subNum|grpNum|nbrNum|expCode|skewCode|widthCode|priceFormat|uPriceFormat|years|underlierType|minTickSize|pointValue|pointCurrency|underliersPerCn|parentShape|parentLimitType|parentLimitClass|parentOrderHandling|parentBalanceHandling|parentOrderSize|parentDttm|parentUMark|parentBid|parentAsk|parentFairPrc|parentFairWidth|parentLimitPrc|parentLimitRefUPrc|parentSSaleFlag|parentPositionType|parentStrategy|parentAutoHedge|childDttm|childClOrdId|childRoutingCode|childSize|childPrice|childExch|childExDest|childUPrc|childBid|childAsk|childFairPrc|childFairWidth|childVol|childProb|childLimitPrc|childLimitRefUPrc|childAlgoHandler|childOrderHandling|childCreateReason|childCancelReason|childMktStance|childCxlAttempted|childSSaleFlag|childPositionType|childFirmType|childCapacity|fillExch|fillPrice|fillDttm|fillSize|fillPointValue|fillVol|fillProb|fillLimitPrc|fillLimitRefUPrc|fillUPrc|fillBeta|fillTv|fillTp|fillBid|fillAsk|fillFairPrc|fillFairWidth|fillBrkrRate|fillRoutingRate|fillOrigExecID|fillLastExecID|fillExecStatus|fillRemoteText|fillTransactDttm|fillLiquidityTag|fillExchFee|fillDe|fillGa|fillVe|execRole|execBrkrCode|execBrkrAccnt|execBrkrClFirm|execBrkrUserName|clearingFlipType|clearingFlipFirm|clearingFlipAccnt|clearingAgent|clearingTaxID|billingSecType|billingCategory|priAggGroup|secAggGroup|trdDelta|trdDDelta|trdGamma|trdDGamma|trdVega|trdWtVega|trdTheta|trdBeta|trdDBeta|trdNotionalValue|trdMarketValue|marginUDnVDn|marginUDnVUp|marginUUpVDn|marginUUpVUp|trdFairEdge|trdFairEdgeUnit|trdTheoEdge|trdTheoEdgeUnit|clArrivePnL|arrivePnL|arriveDnPnL|uDriftArrivePnL|childLimitSlip|halfWidthPnL|dayDnPnL|dayM1PnL|dayM10PnL|uDriftDayPnL|uDriftM1PnL|uDriftM10PnL|dayPnL|m1Mark|m1UPrc|m10Mark|m10UPrc|liveMark|liveUPrc|trdMarkError|dayMarkError|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'tradeDate:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,t.jsx)(n.A,{value:"cUrl",label:"cUrl",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=ToolCompositeExecution' \\\n--data-urlencode 'view=tradeDate|accnt|clientFirm|secKey|secType|side|version|parentNumber|baseParentNumber|spdrSource|groupingCode|riskGroupId|altOrderId|srcRoutingCode|userName|server|ticker|sector|clientTags|indNum|subNum|grpNum|nbrNum|expCode|skewCode|widthCode|priceFormat|uPriceFormat|years|underlierType|minTickSize|pointValue|pointCurrency|underliersPerCn|parentShape|parentLimitType|parentLimitClass|parentOrderHandling|parentBalanceHandling|parentOrderSize|parentDttm|parentUMark|parentBid|parentAsk|parentFairPrc|parentFairWidth|parentLimitPrc|parentLimitRefUPrc|parentSSaleFlag|parentPositionType|parentStrategy|parentAutoHedge|childDttm|childClOrdId|childRoutingCode|childSize|childPrice|childExch|childExDest|childUPrc|childBid|childAsk|childFairPrc|childFairWidth|childVol|childProb|childLimitPrc|childLimitRefUPrc|childAlgoHandler|childOrderHandling|childCreateReason|childCancelReason|childMktStance|childCxlAttempted|childSSaleFlag|childPositionType|childFirmType|childCapacity|fillExch|fillPrice|fillDttm|fillSize|fillPointValue|fillVol|fillProb|fillLimitPrc|fillLimitRefUPrc|fillUPrc|fillBeta|fillTv|fillTp|fillBid|fillAsk|fillFairPrc|fillFairWidth|fillBrkrRate|fillRoutingRate|fillOrigExecID|fillLastExecID|fillExecStatus|fillRemoteText|fillTransactDttm|fillLiquidityTag|fillExchFee|fillDe|fillGa|fillVe|execRole|execBrkrCode|execBrkrAccnt|execBrkrClFirm|execBrkrUserName|clearingFlipType|clearingFlipFirm|clearingFlipAccnt|clearingAgent|clearingTaxID|billingSecType|billingCategory|priAggGroup|secAggGroup|trdDelta|trdDDelta|trdGamma|trdDGamma|trdVega|trdWtVega|trdTheta|trdBeta|trdDBeta|trdNotionalValue|trdMarketValue|marginUDnVDn|marginUDnVUp|marginUUpVDn|marginUUpVUp|trdFairEdge|trdFairEdgeUnit|trdTheoEdge|trdTheoEdgeUnit|clArrivePnL|arrivePnL|arriveDnPnL|uDriftArrivePnL|childLimitSlip|halfWidthPnL|dayDnPnL|dayM1PnL|dayM10PnL|uDriftDayPnL|uDriftM1PnL|uDriftM10PnL|dayPnL|m1Mark|m1UPrc|m10Mark|m10UPrc|liveMark|liveUPrc|trdMarkError|dayMarkError|timestamp' \\\n--data-urlencode 'where=accnt:eq:ExampleString' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=tradeDate:ASC'\n"})})})]}),"\n",(0,t.jsx)(r.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,t.jsxs)(l.A,{children:[(0,t.jsx)(n.A,{value:"Python",label:"Python",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'ToolCompositeExecution\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'tradeDate|accnt|clientFirm|secKey|secType|side|version|parentNumber|baseParentNumber|spdrSource|groupingCode|riskGroupId|altOrderId|srcRoutingCode|userName|server|ticker|sector|clientTags|indNum|subNum|grpNum|nbrNum|expCode|skewCode|widthCode|priceFormat|uPriceFormat|years|underlierType|minTickSize|pointValue|pointCurrency|underliersPerCn|parentShape|parentLimitType|parentLimitClass|parentOrderHandling|parentBalanceHandling|parentOrderSize|parentDttm|parentUMark|parentBid|parentAsk|parentFairPrc|parentFairWidth|parentLimitPrc|parentLimitRefUPrc|parentSSaleFlag|parentPositionType|parentStrategy|parentAutoHedge|childDttm|childClOrdId|childRoutingCode|childSize|childPrice|childExch|childExDest|childUPrc|childBid|childAsk|childFairPrc|childFairWidth|childVol|childProb|childLimitPrc|childLimitRefUPrc|childAlgoHandler|childOrderHandling|childCreateReason|childCancelReason|childMktStance|childCxlAttempted|childSSaleFlag|childPositionType|childFirmType|childCapacity|fillExch|fillPrice|fillDttm|fillSize|fillPointValue|fillVol|fillProb|fillLimitPrc|fillLimitRefUPrc|fillUPrc|fillBeta|fillTv|fillTp|fillBid|fillAsk|fillFairPrc|fillFairWidth|fillBrkrRate|fillRoutingRate|fillOrigExecID|fillLastExecID|fillExecStatus|fillRemoteText|fillTransactDttm|fillLiquidityTag|fillExchFee|fillDe|fillGa|fillVe|execRole|execBrkrCode|execBrkrAccnt|execBrkrClFirm|execBrkrUserName|clearingFlipType|clearingFlipFirm|clearingFlipAccnt|clearingAgent|clearingTaxID|billingSecType|billingCategory|priAggGroup|secAggGroup|trdDelta|trdDDelta|trdGamma|trdDGamma|trdVega|trdWtVega|trdTheta|trdBeta|trdDBeta|trdNotionalValue|trdMarketValue|marginUDnVDn|marginUDnVUp|marginUUpVDn|marginUUpVUp|trdFairEdge|trdFairEdgeUnit|trdTheoEdge|trdTheoEdgeUnit|clArrivePnL|arrivePnL|arriveDnPnL|uDriftArrivePnL|childLimitSlip|halfWidthPnL|dayDnPnL|dayM1PnL|dayM10PnL|uDriftDayPnL|uDriftM1PnL|uDriftM10PnL|dayPnL|m1Mark|m1UPrc|m10Mark|m10UPrc|liveMark|liveUPrc|trdMarkError|dayMarkError|timestamp\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'secType|side|spdrSource|expCode|skewCode|widthCode|priceFormat|uPriceFormat|underlierType|pointCurrency|parentShape|parentLimitType|parentLimitClass|parentOrderHandling|parentBalanceHandling|parentSSaleFlag|parentPositionType|parentAutoHedge|childAlgoHandler|childCreateReason|childCancelReason|childMktStance|childCxlAttempted|childSSaleFlag|childPositionType|childFirmType|childCapacity|fillExecStatus|execRole|clearingFlipType|billingSecType|billingCategory\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getaggregate\',\n    "msgType": MSG_TYPE,\n    "measure": MEASURE,\n    "group": GROUP,\n    # Optional Parameters\n    "where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,t.jsx)(n.A,{value:"cUrl",label:"cUrl",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=ToolCompositeExecution' \\\n--data-urlencode 'measure=tradeDate|accnt|clientFirm|secKey|secType|side|version|parentNumber|baseParentNumber|spdrSource|groupingCode|riskGroupId|altOrderId|srcRoutingCode|userName|server|ticker|sector|clientTags|indNum|subNum|grpNum|nbrNum|expCode|skewCode|widthCode|priceFormat|uPriceFormat|years|underlierType|minTickSize|pointValue|pointCurrency|underliersPerCn|parentShape|parentLimitType|parentLimitClass|parentOrderHandling|parentBalanceHandling|parentOrderSize|parentDttm|parentUMark|parentBid|parentAsk|parentFairPrc|parentFairWidth|parentLimitPrc|parentLimitRefUPrc|parentSSaleFlag|parentPositionType|parentStrategy|parentAutoHedge|childDttm|childClOrdId|childRoutingCode|childSize|childPrice|childExch|childExDest|childUPrc|childBid|childAsk|childFairPrc|childFairWidth|childVol|childProb|childLimitPrc|childLimitRefUPrc|childAlgoHandler|childOrderHandling|childCreateReason|childCancelReason|childMktStance|childCxlAttempted|childSSaleFlag|childPositionType|childFirmType|childCapacity|fillExch|fillPrice|fillDttm|fillSize|fillPointValue|fillVol|fillProb|fillLimitPrc|fillLimitRefUPrc|fillUPrc|fillBeta|fillTv|fillTp|fillBid|fillAsk|fillFairPrc|fillFairWidth|fillBrkrRate|fillRoutingRate|fillOrigExecID|fillLastExecID|fillExecStatus|fillRemoteText|fillTransactDttm|fillLiquidityTag|fillExchFee|fillDe|fillGa|fillVe|execRole|execBrkrCode|execBrkrAccnt|execBrkrClFirm|execBrkrUserName|clearingFlipType|clearingFlipFirm|clearingFlipAccnt|clearingAgent|clearingTaxID|billingSecType|billingCategory|priAggGroup|secAggGroup|trdDelta|trdDDelta|trdGamma|trdDGamma|trdVega|trdWtVega|trdTheta|trdBeta|trdDBeta|trdNotionalValue|trdMarketValue|marginUDnVDn|marginUDnVUp|marginUUpVDn|marginUUpVUp|trdFairEdge|trdFairEdgeUnit|trdTheoEdge|trdTheoEdgeUnit|clArrivePnL|arrivePnL|arriveDnPnL|uDriftArrivePnL|childLimitSlip|halfWidthPnL|dayDnPnL|dayM1PnL|dayM10PnL|uDriftDayPnL|uDriftM1PnL|uDriftM10PnL|dayPnL|m1Mark|m1UPrc|m10Mark|m10UPrc|liveMark|liveUPrc|trdMarkError|dayMarkError|timestamp' \\\n--data-urlencode 'group=secType|side|spdrSource|expCode|skewCode|widthCode|priceFormat|uPriceFormat|underlierType|pointCurrency|parentShape|parentLimitType|parentLimitClass|parentOrderHandling|parentBalanceHandling|parentSSaleFlag|parentPositionType|parentAutoHedge|childAlgoHandler|childCreateReason|childCancelReason|childMktStance|childCxlAttempted|childSSaleFlag|childPositionType|childFirmType|childCapacity|fillExecStatus|execRole|clearingFlipType|billingSecType|billingCategory' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,t.jsx)(r.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,t.jsxs)(l.A,{children:[(0,t.jsx)(n.A,{value:"Python",label:"Python",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'ToolCompositeExecution\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,t.jsx)(n.A,{value:"cUrl",label:"cUrl",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=ToolCompositeExecution' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]})]})}function j(e={}){const{wrapper:r}={...(0,d.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(x,{...e})}):x(e)}},19365:(e,r,i)=>{i.d(r,{A:()=>n});i(96540);var t=i(34164);const d={tabItem:"tabItem_Ymn6"};var l=i(74848);function n(e){let{children:r,hidden:i,className:n}=e;return(0,l.jsx)("div",{role:"tabpanel",className:(0,t.A)(d.tabItem,n),hidden:i,children:r})}},11470:(e,r,i)=>{i.d(r,{A:()=>T});var t=i(96540),d=i(34164),l=i(23104),n=i(56347),c=i(205),s=i(57485),a=i(31682),h=i(70679);function o(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function x(e){const{values:r,children:i}=e;return(0,t.useMemo)((()=>{const e=r??function(e){return o(e).map((e=>{let{props:{value:r,label:i,attributes:t,default:d}}=e;return{value:r,label:i,attributes:t,default:d}}))}(i);return function(e){const r=(0,a.X)(e,((e,r)=>e.value===r.value));if(r.length>0)throw new Error(`Docusaurus error: Duplicate values "${r.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[r,i])}function j(e){let{value:r,tabValues:i}=e;return i.some((e=>e.value===r))}function p(e){let{queryString:r=!1,groupId:i}=e;const d=(0,n.W6)(),l=function(e){let{queryString:r=!1,groupId:i}=e;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!i)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return i??null}({queryString:r,groupId:i});return[(0,s.aZ)(l),(0,t.useCallback)((e=>{if(!l)return;const r=new URLSearchParams(d.location.search);r.set(l,e),d.replace({...d.location,search:r.toString()})}),[l,d])]}function u(e){const{defaultValue:r,queryString:i=!1,groupId:d}=e,l=x(e),[n,s]=(0,t.useState)((()=>function(e){let{defaultValue:r,tabValues:i}=e;if(0===i.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!j({value:r,tabValues:i}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${r}" but none of its children has the corresponding value. Available values are: ${i.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return r}const t=i.find((e=>e.default))??i[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:r,tabValues:l}))),[a,o]=p({queryString:i,groupId:d}),[u,m]=function(e){let{groupId:r}=e;const i=function(e){return e?`docusaurus.tab.${e}`:null}(r),[d,l]=(0,h.Dv)(i);return[d,(0,t.useCallback)((e=>{i&&l.set(e)}),[i,l])]}({groupId:d}),g=(()=>{const e=a??u;return j({value:e,tabValues:l})?e:null})();(0,c.A)((()=>{g&&s(g)}),[g]);return{selectedValue:n,selectValue:(0,t.useCallback)((e=>{if(!j({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);s(e),o(e),m(e)}),[o,m,l]),tabValues:l}}var m=i(92303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=i(74848);function y(e){let{className:r,block:i,selectedValue:t,selectValue:n,tabValues:c}=e;const s=[],{blockElementScrollPositionUntilNextRender:a}=(0,l.a_)(),h=e=>{const r=e.currentTarget,i=s.indexOf(r),d=c[i].value;d!==t&&(a(r),n(d))},o=e=>{let r=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{const i=s.indexOf(e.currentTarget)+1;r=s[i]??s[0];break}case"ArrowLeft":{const i=s.indexOf(e.currentTarget)-1;r=s[i]??s[s.length-1];break}}r?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,d.A)("tabs",{"tabs--block":i},r),children:c.map((e=>{let{value:r,label:i,attributes:l}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:t===r?0:-1,"aria-selected":t===r,ref:e=>s.push(e),onKeyDown:o,onClick:h,...l,className:(0,d.A)("tabs__item",g.tabItem,l?.className,{"tabs__item--active":t===r}),children:i??r},r)}))})}function P(e){let{lazy:r,children:i,selectedValue:d}=e;const l=(Array.isArray(i)?i:[i]).filter(Boolean);if(r){const e=l.find((e=>e.props.value===d));return e?(0,t.cloneElement)(e,{className:"margin-top--md"}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:l.map(((e,r)=>(0,t.cloneElement)(e,{key:r,hidden:e.props.value!==d})))})}function k(e){const r=u(e);return(0,f.jsxs)("div",{className:(0,d.A)("tabs-container",g.tabList),children:[(0,f.jsx)(y,{...r,...e}),(0,f.jsx)(P,{...r,...e})]})}function T(e){const r=(0,m.A)();return(0,f.jsx)(k,{...e,children:o(e.children)},String(r))}},28453:(e,r,i)=>{i.d(r,{R:()=>n,x:()=>c});var t=i(96540);const d={},l=t.createContext(d);function n(e){const r=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:n(e.components),t.createElement(l.Provider,{value:r},e.children)}}}]);