"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[69535],{20229:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>E,frontMatter:()=>i,metadata:()=>N,toc:()=>a});var n=r(74848),o=r(28453);const i={title:"NoticeExecReport"},s=void 0,N={id:"MessageSchemas/Schema/SRSE Products/SRTrade/NoticeExecReport/NoticeExecReport",title:"NoticeExecReport",description:"V8 Message Definition",source:"@site/docs/MessageSchemas/Schema/SRSE Products/SRTrade/NoticeExecReport/NoticeExecReport.md",sourceDirName:"MessageSchemas/Schema/SRSE Products/SRTrade/NoticeExecReport",slug:"/MessageSchemas/Schema/SRSE Products/SRTrade/NoticeExecReport/",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRTrade/NoticeExecReport/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"NoticeExecReport"},sidebar:"messageSchemasSidebar",previous:{title:"NoticeCancel",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRTrade/NoticeCancel/"},next:{title:"NoticeResponse",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRTrade/NoticeResponse/"}},c={},a=[];function T(e){const t={a:"a",code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"../../../Topics/liquidity-notice/NoticeExecReport",children:"V8 Message Definition"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sql",children:"CREATE TABLE `SRTrade`.`MsgNoticeExecReport` (\n    `noticeNumber` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'AuctionNotice.noticeNumber',\n    `baseParentNumber` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000',\n    `ticker_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'underlier ticker',\n    `ticker_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'underlier ticker',\n    `ticker_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'underlier ticker',\n    `tradeDate` DATE NOT NULL DEFAULT '1900-01-01' COMMENT '',\n    `accnt` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'SR Accnt',\n    `clientFirm` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'SR ClientFirm',\n    `noticeDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'either notice create datetime or notice arrival@SR datetime (high precision)',\n    `responseId` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'from NoticeResponse.responseId (most recently processed response to noticeNumber for this accnt/clientFirm pair)',\n    `respOrigin` ENUM('None','SpdrTicket','SpdrSingle','SRSE','FIX','HedgeTool','TradeHedge','OpenHedge','AutoHedge','Orphan','RiskManager','OrderManager','ManagedOrder','RFQRespSrvr','Legger','SRSEDrop','FixDrop','TicketDrop','SysTest','RFRResponse','AllocOmni','AllocClient','CertGateway','MLegResponse','LeggerX','DropManager','AutoHedgeSrvr','AuctionStrategySrvr','AllocBlockFace','AllocBlockCust','IceChatGateway','EXS2SRC','MLinkResponse','AutoResponderVD','AutoResponderRC','AutoResponderSN','AutoResponderBX') NOT NULL DEFAULT 'None',\n    `stageType` ENUM('None','ModifyAny','ModifyAlgo') NOT NULL DEFAULT 'None',\n    `auctionType` ENUM('None','Exposure','Improvement','Facilitation','Solicitation','Opening','Closing','RFQ','Block','Flash') NOT NULL DEFAULT 'None',\n    `auctionSource` ENUM('None','SRC','AMEX','BOX','CBOE','ISE','NYSE','PHLX','NSDQ','BATS','C2','NQBX','MIAX','GMNI','EDGO','MCRY','MPRL','EMLD','MEMX','CME','CBOT','NYMEX','COMEX','ICE','EUREX') NOT NULL DEFAULT 'None' COMMENT 'source of the auction notice (eg. SRC, MIAX, etc.)',\n    `respDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'response arrival dttm (high precision)',\n    `respSide` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'None',\n    `respSize` INT NOT NULL DEFAULT 0,\n    `respActiveSize` INT NOT NULL DEFAULT 0 COMMENT 'active response order size (zero for ActiveHold)',\n    `respPrice` DOUBLE NOT NULL DEFAULT 0 COMMENT 'effRespPrice = respPrice + de * (uMid - refUPrc) + 0.5 * ga * (uMid - refUPrc)^2',\n    `refUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'reference price for tied to underlier orders (mid-market tie) (block auctions only)',\n    `refDe` FLOAT NOT NULL DEFAULT 0 COMMENT 'reference delta for tied to underlier orders (zero if tie is not desired) (block auctions only)',\n    `refGa` FLOAT NOT NULL DEFAULT 0 COMMENT 'reference gamma for tied to underlier orders (zero if tie is not desired) (block auctions only)',\n    `roundRule` ENUM('None','Exact','Fuzzy') NOT NULL DEFAULT 'None' COMMENT 'Exact (100%) or Fuzzy (90%) [default is Exact] (block auctions only)',\n    `stepUpIncr` DOUBLE NOT NULL DEFAULT 0 COMMENT 'additional price increment (best price) (typically only used if auction is competitive)',\n    `riskGroupId` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'any auction response is associated with this riskGroupID (and SpdrRiskGroupControl)',\n    `strategy` VARCHAR(32) NOT NULL DEFAULT '' COMMENT 'user strategy field (visible on SR tools)',\n    `userData1` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'user data field (free text) (from NoticeResponse)',\n    `respStatus` ENUM('PendNew','New','PendClose','Closed','Rejected','SendReject') NOT NULL DEFAULT 'PendNew',\n    `respDetail` VARCHAR(255) NOT NULL DEFAULT '',\n    `lastUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'effective uPrc (mid-market) from last trial pass',\n    `lastTrialPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'effective response price from last trial pass',\n    `leavesQty` INT NOT NULL DEFAULT 0 COMMENT 'open order quantity',\n    `cumFillQty` INT NOT NULL DEFAULT 0 COMMENT 'pkg cumFillQty if MLeg',\n    `avgFillPrice` DOUBLE NOT NULL DEFAULT 0 COMMENT 'pkg avgFillPrice if MLeg',\n    `addLatency` DOUBLE NOT NULL DEFAULT 0 COMMENT 'latency from notice arrival@SR to external response send (in seconds) OR latency from notice create to response accepted (in seconds) (SRC Auctions)',\n    `ackLatency` DOUBLE NOT NULL DEFAULT 0 COMMENT 'latency from external response send to external response ack (FRT) (in seconds) (external auctions only)',\n    `responseResult` ENUM('None','FullSize','AllocSize','PriceMiss','TooLate','OtherMiss','DidNotTrade','Pending') NOT NULL DEFAULT 'None',\n    `responseTime` SMALLINT NOT NULL DEFAULT 0 COMMENT 'notice response arrival time (milliseconds since auction start)',\n    `prtPrice` DOUBLE NOT NULL DEFAULT 0 COMMENT 'reported print price (pkgPrice if MLeg)',\n    `prtSize` INT NOT NULL DEFAULT 0 COMMENT 'reported print size (pgkSize if MLeg)',\n    `prtTime` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'reported print time (1st print if MLeg)',\n    `prtUBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'best estimate of uBid @ auction print time',\n    `prtUAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'best estimate of uAsk @ auction print time',\n    `timestamp` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000',\n    `OrderLegsList` JSON NOT NULL DEFAULT JSON_OBJECT() CHECK(JSON_VALID(OrderLegsList)),\n    CONSTRAINT nonnegative_noticeNumber CHECK(ASCII(noticeNumber) < 56),\n    CONSTRAINT nonnegative_baseParentNumber CHECK(ASCII(baseParentNumber) < 56),\n    CONSTRAINT nonnegative_riskGroupId CHECK(ASCII(riskGroupId) < 56),\n    PRIMARY KEY USING HASH (`noticeNumber`,`baseParentNumber`)\n) ENGINE=SRSE DEFAULT CHARSET=LATIN1 COMMENT='';\n\n"})})]})}function E(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(T,{...e})}):T(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>s,x:()=>N});var n=r(96540);const o={},i=n.createContext(o);function s(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function N(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);