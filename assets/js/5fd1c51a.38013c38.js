"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[30313],{11660:(e,r,d)=>{d.r(r),d.d(r,{assets:()=>c,contentTitle:()=>n,default:()=>j,frontMatter:()=>t,metadata:()=>l,toc:()=>h});var i=d(74848),s=d(28453);const t={title:"SpdrRiskExecution"},n="Message: SpdrRiskExecution (ID: 2325)",l={id:"Schema/Topics/execution-engine/SpdrRiskExecution",title:"SpdrRiskExecution",description:"SpdrRiskExecution records are published every time a SpdrParentExecution record is published",source:"@site/docs/Schema/Topics/2270-execution-engine/SpdrRiskExecution.md",sourceDirName:"Schema/Topics/2270-execution-engine",slug:"/Schema/Topics/execution-engine/SpdrRiskExecution",permalink:"/sr-docs/docs/Schema/Topics/execution-engine/SpdrRiskExecution",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"SpdrRiskExecution"},sidebar:"schemaSidebar",previous:{title:"ExternAggGroupReport",permalink:"/sr-docs/docs/Schema/Topics/execution-engine/ExternAggGroupReport"},next:{title:"SpdrSweepDetail",permalink:"/sr-docs/docs/Schema/Topics/execution-engine/SpdrSweepDetail"}},c={},h=[{value:"META DATA  (Topic: execution-engine )",id:"meta-data--topic-execution-engine-",level:3},{value:"PRIMARY KEY",id:"primary-key",level:3},{value:"BODY",id:"body",level:3}];function x(e){const r={a:"a",h1:"h1",h3:"h3",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(r.h1,{id:"message-spdrriskexecution-id-2325",children:["Message: SpdrRiskExecution ",(0,i.jsx)("span",{className:"small-text",children:"(ID: 2325)"})]}),"\n",(0,i.jsx)(r.p,{children:"SpdrRiskExecution records are published every time a SpdrParentExecution record is published"}),"\n",(0,i.jsxs)("div",{className:"single-message-meta",children:[(0,i.jsx)(r.h3,{id:"meta-data--topic-execution-engine-",children:"META DATA  (Topic: execution-engine )"}),(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Attribute"}),(0,i.jsx)(r.th,{children:"Value"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"MLink Token"}),(0,i.jsx)(r.td,{children:"SystemData"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"SRSE Product"}),(0,i.jsx)(r.td,{children:"SRTrade"})]})]})]})]}),"\n",(0,i.jsxs)("div",{className:"single-message-primarykey",children:[(0,i.jsx)(r.h3,{id:"primary-key",children:"PRIMARY KEY"}),(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Field"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Comment"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillNumber"}),(0,i.jsx)(r.td,{children:"long"}),(0,i.jsx)(r.td,{children:"SpiderRock execution number (globally unique over trailing 10 days)"})]})})]})]}),"\n",(0,i.jsxs)("div",{className:"single-message-body",children:[(0,i.jsx)(r.h3,{id:"body",children:"BODY"}),(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Field"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Comment"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"accnt"}),(0,i.jsx)(r.td,{children:"string(16)"}),(0,i.jsx)(r.td,{children:"SpiderRock trading accnt [broker pkey]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"avgFillPrice"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"avgLegFillPrice"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"baseParentNumber"}),(0,i.jsx)(r.td,{children:"long"}),(0,i.jsx)(r.td,{children:"SPDR order number (initial number in cancel/replace sequence) (also, source parent for dynamically generated orders;eg auto-hedges)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"childAlgoHandler"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../Enums/ChildHandler",children:"enum : ChildHandler"})}),(0,i.jsx)(r.td,{children:"algo handler for this child order"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"childOrderHandling"}),(0,i.jsx)(r.td,{children:"string(24)"}),(0,i.jsx)(r.td,{children:"child order handling string from the algo that generated the child order responsible for this fill"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"childSSaleFlag"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../Enums/ShortSaleFlag",children:"enum : ShortSaleFlag"})}),(0,i.jsx)(r.td,{children:"short sale flag"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"clOrdId"}),(0,i.jsx)(r.td,{children:"long"}),(0,i.jsx)(r.td,{children:"SR child order clOrdID resulting in fill"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"clientFirm"}),(0,i.jsx)(r.td,{children:"string(16)"}),(0,i.jsx)(r.td,{children:"SR client firm"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"cumFillQuantity"}),(0,i.jsx)(r.td,{children:"int"}),(0,i.jsx)(r.td,{children:"cumulative fills (this parent number only)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"cumLegFillQuantity"}),(0,i.jsx)(r.td,{children:"int"}),(0,i.jsx)(r.td,{children:"cumulative fills (spread only)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"engineName"}),(0,i.jsx)(r.td,{children:"string(32)"}),(0,i.jsx)(r.td,{children:"SpiderRock execution engine that handled the parent order"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"execRole"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../Enums/ExecRole",children:"enum : ExecRole"})}),(0,i.jsx)(r.td,{children:"SpiderRock relationship to this execution record"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"execShape"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../Enums/ExecShape",children:"enum : ExecShape"})}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"execStatus"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../Enums/ExecStatus",children:"enum : ExecStatus"})}),(0,i.jsx)(r.td,{children:"SpiderRock execution status (Fill,Bust,Correct,Reject,SysRej)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillAsk"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"market ask @ fill arrival"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillBeta"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"SpiderRock estimate of beta to SPX"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillBid"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"market bid @ fill arrival"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillDe"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"fill delta"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillDttm"}),(0,i.jsx)(r.td,{children:"DateTime"}),(0,i.jsx)(r.td,{children:"Date/time of fill arrival (SRDateTime)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillExch"}),(0,i.jsx)(r.td,{children:"string(12)"}),(0,i.jsx)(r.td,{children:"ExDest code from child order execution report"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillExchFee"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"SpiderRock estimate of the exchange fee based on liquidity tags (best effort)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillExecId"}),(0,i.jsx)(r.td,{children:"text1"}),(0,i.jsx)(r.td,{children:"street side execution Id"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillExecRefId"}),(0,i.jsx)(r.td,{children:"text1"}),(0,i.jsx)(r.td,{children:"street side execution ref Id (only used when busting an execution)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillGa"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"fill gamma"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillLegRatio"}),(0,i.jsx)(r.td,{children:"int"}),(0,i.jsx)(r.td,{children:"legRatio (if spread order)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillLegRefId"}),(0,i.jsx)(r.td,{children:"long"}),(0,i.jsx)(r.td,{children:"legRefId for multileg fills"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillMark"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"mid-market (or SR surface price if option) @ fill arrival"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillMarket"}),(0,i.jsx)(r.td,{children:"string(8)"}),(0,i.jsx)(r.td,{children:"usually from execReport.lastMkt as reported by child order venue"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillPrice"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"fill price"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillQuantity"}),(0,i.jsx)(r.td,{children:"int"}),(0,i.jsx)(r.td,{children:"fill quantity"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillTh"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"fill theta"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillTransactDttm"}),(0,i.jsx)(r.td,{children:"DateTime"}),(0,i.jsx)(r.td,{children:"transaction date/time as reported by exchange or down stream broker"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillUAsk"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"underlier market bid @ fill arrival"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillUBid"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"underlier market bid @ fill arrival"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillVe"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"fill vega"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fillVol"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"fill volatility @ fillLimitRefUPrc"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"firmType"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../Enums/FirmType",children:"enum : FirmType"})}),(0,i.jsx)(r.td,{children:"child order firm type [Customer, ProCust, Firm, MM, etc]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"groupingCode"}),(0,i.jsx)(r.td,{children:"long"}),(0,i.jsx)(r.td,{children:"SpiderRock parent broker number [broker pkey]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"leavesQty"}),(0,i.jsx)(r.td,{children:"int"}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"marginUDnVDn"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"underlier down, vol down"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"marginUDnVUp"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"underlier down, vol up"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"marginUUpVDn"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"underlier up, vol down"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"marginUUpVUp"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"underlier up, vol up"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"minTickSize"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"minimum market price variation (dnTickSize if on a boundary)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"orderSide"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../Enums/BuySell",children:"enum : BuySell"})}),(0,i.jsx)(r.td,{children:"order side"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"packageId"}),(0,i.jsx)(r.td,{children:"long"}),(0,i.jsx)(r.td,{children:"SR package Id"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"parentNumber"}),(0,i.jsx)(r.td,{children:"long"}),(0,i.jsx)(r.td,{children:"SR parent number"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"parentShape"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../Enums/SpdrOrderShape",children:"enum : SpdrOrderShape"})}),(0,i.jsx)(r.td,{children:"shape of originating parent order"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"parentVersion"}),(0,i.jsx)(r.td,{children:"short"}),(0,i.jsx)(r.td,{children:"SPDR order instance number (1 = original order; 2 = 1st cancel/replace, etc)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"pointCurrency"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../Enums/Currency",children:"enum : Currency"})}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"pointValue"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"$NLV value of a single point change in display premium (pointValue = tickValue / tickSize)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"priAggGroup"}),(0,i.jsx)(r.td,{children:"string(16)"}),(0,i.jsx)(r.td,{children:"primary aggregation group"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"priceFormat"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../Enums/PriceFormat",children:"enum : PriceFormat"})}),(0,i.jsx)(r.td,{children:"SpiderRock price display format code"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"priceType"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../Enums/PriceType",children:"enum : PriceType"})}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"riskDDelta"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"risk ddelta"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"riskDelta"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"risk delta"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"riskGroupId"}),(0,i.jsx)(r.td,{children:"long"}),(0,i.jsx)(r.td,{children:"riskGroupId (parent order group ID) for this execution report"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"riskNValue"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"risk delta"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"riskRm1"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"user defined (from parent order) [used to manage order groups"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"riskRm2"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"user defined (from parent order) [used to manage order groups]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"riskRm3"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"user defined (from parent order) [used to manage order groups]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"riskRm4"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"user defined (from parent order) [used to manage order groups]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"riskRm5"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"user defined (from parent order) [used to manage order groups]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"riskRm6"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"user defined (from parent order) [used to manage order groups]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"riskRm7"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"user defined (from parent order) [used to manage order groups]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"riskU50Dn"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"underlier dn 50% shock slide"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"riskU50Up"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"underlier up 50% shock slide"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"riskVega"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"risk vega"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"riskWtVega"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"risk gamma"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"runStatus"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../Enums/RunStatus",children:"enum : RunStatus"})}),(0,i.jsx)(r.td,{children:"original (source) run status [Prod,Beta]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"secAggGroup"}),(0,i.jsx)(r.td,{children:"string(16)"}),(0,i.jsx)(r.td,{children:"secondary aggregation group"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"secKey"}),(0,i.jsx)(r.td,{children:"OptionKey"}),(0,i.jsx)(r.td,{children:"execution security key"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"secType"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../Enums/SpdrKeyType",children:"enum : SpdrKeyType"})}),(0,i.jsx)(r.td,{children:"execution security type [Stock, Future, Option]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"spdrCloseReason"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../Enums/SpdrCloseReason",children:"enum : SpdrCloseReason"})}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"spdrOrderStatus"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../Enums/SpdrOrderStatus",children:"enum : SpdrOrderStatus"})}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"spdrSource"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../Enums/SpdrSource",children:"enum : SpdrSource"})}),(0,i.jsx)(r.td,{children:"SpiderRock parent order source code [broker pkey]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"sysEnvironment"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../Enums/SysEnvironment",children:"enum : SysEnvironment"})}),(0,i.jsx)(r.td,{children:"original (source) sys environment [Stable, Current, etc]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"sysRealm"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../Enums/SysRealm",children:"enum : SysRealm"})}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"tickValue"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"$NLV value of a single tick change in display premium\t(pointValue = tickValue / tickSize)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"ticker"}),(0,i.jsx)(r.td,{children:"TickerKey"}),(0,i.jsx)(r.td,{children:"base stock key (used for symbol risk aggregation)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"timestamp"}),(0,i.jsx)(r.td,{children:"DateTime"}),(0,i.jsx)(r.td,{children:"timestamp of this record [not necessarily the timestamp of the fill itself]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"uPrcRatio"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"UPrcRatio (SymbolRatio) from product definition"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"uPriceFormat"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../Enums/PriceFormat",children:"enum : PriceFormat"})}),(0,i.jsx)(r.td,{children:"SpiderRock underlier price display format code"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"underlierType"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"../../Enums/UnderlierType",children:"enum : UnderlierType"})}),(0,i.jsx)(r.td,{children:"type of underlier (affects $greek calculations)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"underliersPerCn"}),(0,i.jsx)(r.td,{children:"int"}),(0,i.jsx)(r.td,{children:"option delivery underliers per contract"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"userName"}),(0,i.jsx)(r.td,{children:"string(24)"}),(0,i.jsx)(r.td,{children:"user name associated with the parent order"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"version"}),(0,i.jsx)(r.td,{children:"byte"}),(0,i.jsx)(r.td,{children:"record version number;starts at zero and goes up every time an execution record is re-published (eg, bust, +1m marks, +10m marks, etc)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"years"}),(0,i.jsx)(r.td,{children:"float"}),(0,i.jsx)(r.td,{children:"years to expiration"})]})]})]})]})]})}function j(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(x,{...e})}):x(e)}},28453:(e,r,d)=>{d.d(r,{R:()=>n,x:()=>l});var i=d(96540);const s={},t=i.createContext(s);function n(e){const r=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:n(e.components),i.createElement(t.Provider,{value:r},e.children)}}}]);