"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([["10763"],{31216:function(e,r,n){n.r(r),n.d(r,{default:()=>p,frontMatter:()=>l,metadata:()=>t,assets:()=>o,toc:()=>u,contentTitle:()=>c});var t=JSON.parse('{"id":"MessageSchemas/Schema/Topics/risk-v5/FuturePositionRecordV5","title":"FuturePositionRecordV5","description":"FuturePositionRecords are live risk records that contain start-of-day positions and all subsequent executions, including executions reported as done away.These records are published by a CoreRiskServer and represent the position and risk markup detail for a single futures contract.New records are published immediately when a position changes and about once per minute if no position has changed.Note that all stock, future and option records for a chain are published simultaneously and records for the same chain should have consistent marks.","source":"@site/versioned_docs/version-8.5.4.2/MessageSchemas/Schema/Topics/4740-risk-v5/FuturePositionRecordV5.md","sourceDirName":"MessageSchemas/Schema/Topics/4740-risk-v5","slug":"/MessageSchemas/Schema/Topics/risk-v5/FuturePositionRecordV5","permalink":"/docs/8.5.4.2/MessageSchemas/Schema/Topics/risk-v5/FuturePositionRecordV5","draft":false,"unlisted":false,"tags":[],"version":"8.5.4.2","frontMatter":{"title":"FuturePositionRecordV5"},"sidebar":"messageSchemasSidebar","previous":{"title":"ExpirationRiskRecordV5","permalink":"/docs/8.5.4.2/MessageSchemas/Schema/Topics/risk-v5/ExpirationRiskRecordV5"},"next":{"title":"FutureRiskDetailV5","permalink":"/docs/8.5.4.2/MessageSchemas/Schema/Topics/risk-v5/FutureRiskDetailV5"}}'),s=n("52676"),d=n("91503"),i=n("71386"),a=n("9641");let l={title:"FuturePositionRecordV5"},c="Schema: FuturePositionRecordV5 (ID: 4775)",o={},u=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3}];function h(e){let r={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsxs)(r.h1,{id:"schema-futurepositionrecordv5-id-4775",children:["Schema: FuturePositionRecordV5 ",(0,s.jsx)("span",{className:"small-text",children:"(ID: 4775)"})]})}),"\n",(0,s.jsxs)(r.p,{children:["FuturePositionRecords are live risk records that contain start-of-day positions and all subsequent executions, including executions reported as done away.",(0,s.jsx)("br",{}),(0,s.jsx)("br",{}),"These records are published by a CoreRiskServer and represent the position and risk markup detail for a single futures contract.",(0,s.jsx)("br",{}),(0,s.jsx)("br",{}),"New records are published immediately when a position changes and about once per minute if no position has changed.",(0,s.jsx)("br",{}),(0,s.jsx)("br",{}),"Note that all stock, future and option records for a chain are published simultaneously and records for the same chain should have consistent marks."]}),"\n",(0,s.jsx)(r.h3,{id:"metadata",children:"METADATA"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Attribute"}),(0,s.jsx)(r.th,{children:"Value"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Topic"}),(0,s.jsx)(r.td,{children:"4740-risk-v5"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"MLink Token"}),(0,s.jsx)(r.td,{children:"ClientRisk"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SRSE Product"}),(0,s.jsx)(r.td,{children:"SRRisk"})]})]})]}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Note:"})," The symbol ",(0,s.jsx)(r.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"body",children:"BODY"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"#"}),(0,s.jsx)(r.th,{children:"Field"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Comment"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"10="}),(0,s.jsx)(r.td,{children:"fkey"}),(0,s.jsx)(r.td,{children:"ExpiryKey"}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"11="}),(0,s.jsx)(r.td,{children:"accnt"}),(0,s.jsx)(r.td,{children:"string(16)"}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"12="}),(0,s.jsx)(r.td,{children:"tradeDate"}),(0,s.jsx)(r.td,{children:"DateKey"}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"13="}),(0,s.jsx)(r.td,{children:"riskSession"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/RiskSession",children:"enum : RiskSession"})}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"14="}),(0,s.jsx)(r.td,{children:"clientFirm"}),(0,s.jsx)(r.td,{children:"string(16)"}),(0,s.jsx)(r.td,{children:"SR assigned client firm"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"103"}),(0,s.jsx)(r.td,{children:"riskServerCode"}),(0,s.jsx)(r.td,{children:"string(6)"}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"106"}),(0,s.jsx)(r.td,{children:"aggGroup"}),(0,s.jsx)(r.td,{children:"string(16)"}),(0,s.jsx)(r.td,{children:"SR assigned aggregation group"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"109"}),(0,s.jsx)(r.td,{children:"ticker"}),(0,s.jsx)(r.td,{children:"TickerKey"}),(0,s.jsx)(r.td,{children:"underlying ticker"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"112"}),(0,s.jsx)(r.td,{children:"underliersPerCn"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"number of underlying units per futures contract"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"115"}),(0,s.jsx)(r.td,{children:"underlierType"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/UnderlierType",children:"enum : UnderlierType"})}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"118"}),(0,s.jsx)(r.td,{children:"tickValue"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"$NLV value of a single tick change in display premium	(pointValue = tickValue / tickSize)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"121"}),(0,s.jsx)(r.td,{children:"pointValue"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"$NLV value of a single point change in display premium (pointValue = tickValue / tickSize)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"124"}),(0,s.jsx)(r.td,{children:"pointCurrency"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/Currency",children:"enum : Currency"})}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"127"}),(0,s.jsx)(r.td,{children:"priceFormat"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/PriceFormat",children:"enum : PriceFormat"})}),(0,s.jsx)(r.td,{children:"price display format code"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"130"}),(0,s.jsx)(r.td,{children:"futPrc"}),(0,s.jsx)(r.td,{children:"double"}),(0,s.jsx)(r.td,{children:"current future price (any market session) (persists if market closed/halted)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"133"}),(0,s.jsx)(r.td,{children:"futBid"}),(0,s.jsx)(r.td,{children:"double"}),(0,s.jsx)(r.td,{children:"current future bid (any market session) (zero if market closed/halted)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"136"}),(0,s.jsx)(r.td,{children:"futAsk"}),(0,s.jsx)(r.td,{children:"double"}),(0,s.jsx)(r.td,{children:"current future ask (any market session) (zero if market closed/halted)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"139"}),(0,s.jsx)(r.td,{children:"futMark"}),(0,s.jsx)(r.td,{children:"double"}),(0,s.jsx)(r.td,{children:"current mark (usually mid market) (freezes at SR CloseMarkTime)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"142"}),(0,s.jsx)(r.td,{children:"futMarkErrCodes"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/MarkErrorCode",children:"flag : MarkErrorCode"})}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"145"}),(0,s.jsx)(r.td,{children:"futMarkSource"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/UMarkSource",children:"enum : UMarkSource"})}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"148"}),(0,s.jsx)(r.td,{children:"futOpnMidMark"}),(0,s.jsx)(r.td,{children:"double"}),(0,s.jsx)(r.td,{children:"start of day SR mark"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"151"}),(0,s.jsx)(r.td,{children:"futOpnClrMark"}),(0,s.jsx)(r.td,{children:"double"}),(0,s.jsx)(r.td,{children:"start of day clearing mark (usually exchange settlement mark)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"154"}),(0,s.jsx)(r.td,{children:"futOpnPosPrv"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"start-of-day SR contract position (rotated from prior day record)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"157"}),(0,s.jsx)(r.td,{children:"futOpnPosClr"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"start-of-day CKR contract position (supplied by client/clearing firm via clearing position load)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"160"}),(0,s.jsx)(r.td,{children:"futOpnPos"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"start of period contract position (effective; can be from either CLR or SR)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"163"}),(0,s.jsx)(r.td,{children:"futOpnPosSrc"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/PositionSource",children:"enum : PositionSource"})}),(0,s.jsx)(r.td,{children:"start of period position source"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"166"}),(0,s.jsx)(r.td,{children:"cnBot"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"number of contracts bot today"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"169"}),(0,s.jsx)(r.td,{children:"cnSld"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"number of contracts sld today"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"172"}),(0,s.jsx)(r.td,{children:"cnBotTrd"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"number of contracts bot today"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"175"}),(0,s.jsx)(r.td,{children:"cnSldTrd"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"number of contracts sld today"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"178"}),(0,s.jsx)(r.td,{children:"cnBotHdg"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"number of contracts bot today from open pos hedging (spdrSource=HedgeTool)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"181"}),(0,s.jsx)(r.td,{children:"cnSldHdg"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"number of contracts sld today from open pos hedging (spdrSource=HedgeTool)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"184"}),(0,s.jsx)(r.td,{children:"cnBotTrh"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"number of contracts bot today from open pos hedging (spdrSource=TradeHedge)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"187"}),(0,s.jsx)(r.td,{children:"cnSldTrh"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"number of contracts sld today from open pos hedging (spdrSource=TradeHedge)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"190"}),(0,s.jsx)(r.td,{children:"cnBotOpn"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"number of contracts bot today from open pos hedging (spdrSource=OpenHedge)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"193"}),(0,s.jsx)(r.td,{children:"cnSldOpn"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"number of contracts sld today from open pos hedging (spdrSource=OpenHedge)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"196"}),(0,s.jsx)(r.td,{children:"cnOpened"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"number of contracts opened today"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"199"}),(0,s.jsx)(r.td,{children:"cnClosed"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"number of contracts closed today"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"202"}),(0,s.jsx)(r.td,{children:"futMnyBot"}),(0,s.jsx)(r.td,{children:"double"}),(0,s.jsx)(r.td,{children:"sum of settle cash for all buy executions"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"205"}),(0,s.jsx)(r.td,{children:"futMnySld"}),(0,s.jsx)(r.td,{children:"double"}),(0,s.jsx)(r.td,{children:"sum of settle cash for all sell executions"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"208"}),(0,s.jsx)(r.td,{children:"dayPnl"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"211"}),(0,s.jsx)(r.td,{children:"opnPnlMidMark"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"214"}),(0,s.jsx)(r.td,{children:"opnPnlClrMark"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"217"}),(0,s.jsx)(r.td,{children:"beta"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"beta (usually beta to SPX; see AccountConfig.betaSource) (if applicable)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"220"}),(0,s.jsx)(r.td,{children:"betaSource"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/BetaSource",children:"enum : BetaSource"})}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"223"}),(0,s.jsx)(r.td,{children:"days"}),(0,s.jsx)(r.td,{children:"short"}),(0,s.jsx)(r.td,{children:"days to expiration"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"226"}),(0,s.jsx)(r.td,{children:"rate"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"global rate to expiration"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"229"}),(0,s.jsx)(r.td,{children:"years"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"years to expiration"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"232"}),(0,s.jsx)(r.td,{children:"rh"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"rho; (dPrc / dRate) - only for STIR futures"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"235"}),(0,s.jsx)(r.td,{children:"ve"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"vega; (dPrc / dVol) - only for VIX futures"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"238"}),(0,s.jsx)(r.td,{children:"ratePr"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"start of period global rate"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"241"}),(0,s.jsx)(r.td,{children:"yearsPr"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"start of period years to expiration"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"251"}),(0,s.jsx)(r.td,{children:"marginUDn"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"Aggregate RiskSlide: uPrc dn"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"252"}),(0,s.jsx)(r.td,{children:"marginUUp"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"Aggregate RiskSlide: uPrc up"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"244"}),(0,s.jsx)(r.td,{children:"numExecutions"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"number of included SpdrParentExecution records"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"247"}),(0,s.jsx)(r.td,{children:"maxExecDttm"}),(0,s.jsx)(r.td,{children:"DateTime"}),(0,s.jsx)(r.td,{children:"maximum activity dttm of execution records included in this future risk record"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"250"}),(0,s.jsx)(r.td,{children:"timestamp"}),(0,s.jsx)(r.td,{children:"DateTime"}),(0,s.jsx)(r.td,{})]})]})]}),"\n",(0,s.jsx)(r.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,s.jsxs)(i.Z,{children:[(0,s.jsx)(a.Z,{value:"Python",label:"Python",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'FuturePositionRecordV5'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n    # Required Parameters\n    \"apiKey\": API_KEY,\n    \"cmd\": 'getschema',\n    \"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,s.jsx)(a.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=FuturePositionRecordV5'\n\n"})})})]}),"\n",(0,s.jsx)(r.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,s.jsxs)(i.Z,{children:[(0,s.jsx)(a.Z,{value:"Python",label:"Python",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'FuturePositionRecordV5\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'riskServerCode|aggGroup|ticker|underliersPerCn|underlierType|tickValue|pointValue|pointCurrency|priceFormat|futPrc|futBid|futAsk|futMark|futMarkErrCodes|futMarkSource|futOpnMidMark|futOpnClrMark|futOpnPosPrv|futOpnPosClr|futOpnPos|futOpnPosSrc|cnBot|cnSld|cnBotTrd|cnSldTrd|cnBotHdg|cnSldHdg|cnBotTrh|cnSldTrh|cnBotOpn|cnSldOpn|cnOpened|cnClosed|futMnyBot|futMnySld|dayPnl|opnPnlMidMark|opnPnlClrMark|beta|betaSource|days|rate|years|rh|ve|ratePr|yearsPr|marginUDn|marginUUp|numExecutions|maxExecDttm|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(a.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=FuturePositionRecordV5' \\\n--data-urlencode 'view=riskServerCode|aggGroup|ticker|underliersPerCn|underlierType|tickValue|pointValue|pointCurrency|priceFormat|futPrc|futBid|futAsk|futMark|futMarkErrCodes|futMarkSource|futOpnMidMark|futOpnClrMark|futOpnPosPrv|futOpnPosClr|futOpnPos|futOpnPosSrc|cnBot|cnSld|cnBotTrd|cnSldTrd|cnBotHdg|cnSldHdg|cnBotTrh|cnSldTrh|cnBotOpn|cnSldOpn|cnOpened|cnClosed|futMnyBot|futMnySld|dayPnl|opnPnlMidMark|opnPnlClrMark|beta|betaSource|days|rate|years|rh|ve|ratePr|yearsPr|marginUDn|marginUUp|numExecutions|maxExecDttm|timestamp' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,s.jsx)(r.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,s.jsxs)(i.Z,{children:[(0,s.jsx)(a.Z,{value:"Python",label:"Python",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'FuturePositionRecordV5\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'riskServerCode|aggGroup|ticker|underliersPerCn|underlierType|tickValue|pointValue|pointCurrency|priceFormat|futPrc|futBid|futAsk|futMark|futMarkErrCodes|futMarkSource|futOpnMidMark|futOpnClrMark|futOpnPosPrv|futOpnPosClr|futOpnPos|futOpnPosSrc|cnBot|cnSld|cnBotTrd|cnSldTrd|cnBotHdg|cnSldHdg|cnBotTrh|cnSldTrh|cnBotOpn|cnSldOpn|cnOpened|cnClosed|futMnyBot|futMnySld|dayPnl|opnPnlMidMark|opnPnlClrMark|beta|betaSource|days|rate|years|rh|ve|ratePr|yearsPr|marginUDn|marginUUp|numExecutions|maxExecDttm|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'riskServerCode:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(a.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=FuturePositionRecordV5' \\\n--data-urlencode 'view=riskServerCode|aggGroup|ticker|underliersPerCn|underlierType|tickValue|pointValue|pointCurrency|priceFormat|futPrc|futBid|futAsk|futMark|futMarkErrCodes|futMarkSource|futOpnMidMark|futOpnClrMark|futOpnPosPrv|futOpnPosClr|futOpnPos|futOpnPosSrc|cnBot|cnSld|cnBotTrd|cnSldTrd|cnBotHdg|cnSldHdg|cnBotTrh|cnSldTrh|cnBotOpn|cnSldOpn|cnOpened|cnClosed|futMnyBot|futMnySld|dayPnl|opnPnlMidMark|opnPnlClrMark|beta|betaSource|days|rate|years|rh|ve|ratePr|yearsPr|marginUDn|marginUUp|numExecutions|maxExecDttm|timestamp' \\\n--data-urlencode 'where=accnt:eq:ExampleString' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=riskServerCode:ASC'\n"})})})]}),"\n",(0,s.jsx)(r.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,s.jsxs)(i.Z,{children:[(0,s.jsx)(a.Z,{value:"Python",label:"Python",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'FuturePositionRecordV5\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'riskServerCode|aggGroup|ticker|underliersPerCn|underlierType|tickValue|pointValue|pointCurrency|priceFormat|futPrc|futBid|futAsk|futMark|futMarkErrCodes|futMarkSource|futOpnMidMark|futOpnClrMark|futOpnPosPrv|futOpnPosClr|futOpnPos|futOpnPosSrc|cnBot|cnSld|cnBotTrd|cnSldTrd|cnBotHdg|cnSldHdg|cnBotTrh|cnSldTrh|cnBotOpn|cnSldOpn|cnOpened|cnClosed|futMnyBot|futMnySld|dayPnl|opnPnlMidMark|opnPnlClrMark|beta|betaSource|days|rate|years|rh|ve|ratePr|yearsPr|marginUDn|marginUUp|numExecutions|maxExecDttm|timestamp\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'underlierType|pointCurrency|priceFormat|futMarkSource|futOpnPosSrc|betaSource\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getaggregate\',\n    "msgType": MSG_TYPE,\n    "measure": MEASURE,\n    "group": GROUP,\n    # Optional Parameters\n    "where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(a.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=FuturePositionRecordV5' \\\n--data-urlencode 'measure=riskServerCode|aggGroup|ticker|underliersPerCn|underlierType|tickValue|pointValue|pointCurrency|priceFormat|futPrc|futBid|futAsk|futMark|futMarkErrCodes|futMarkSource|futOpnMidMark|futOpnClrMark|futOpnPosPrv|futOpnPosClr|futOpnPos|futOpnPosSrc|cnBot|cnSld|cnBotTrd|cnSldTrd|cnBotHdg|cnSldHdg|cnBotTrh|cnSldTrh|cnBotOpn|cnSldOpn|cnOpened|cnClosed|futMnyBot|futMnySld|dayPnl|opnPnlMidMark|opnPnlClrMark|beta|betaSource|days|rate|years|rh|ve|ratePr|yearsPr|marginUDn|marginUUp|numExecutions|maxExecDttm|timestamp' \\\n--data-urlencode 'group=underlierType|pointCurrency|priceFormat|futMarkSource|futOpnPosSrc|betaSource' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,s.jsx)(r.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,s.jsxs)(i.Z,{children:[(0,s.jsx)(a.Z,{value:"Python",label:"Python",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'FuturePositionRecordV5\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(a.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=FuturePositionRecordV5' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]})]})}function p(e={}){let{wrapper:r}={...(0,d.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},9641:function(e,r,n){n.d(r,{Z:()=>d});var t=n("52676");n("75271");var s=n("54461");function d(e){let{children:r,hidden:n,className:d}=e;return(0,t.jsx)("div",{role:"tabpanel",className:(0,s.Z)("tabItem_SSzl",d),hidden:n,children:r})}},71386:function(e,r,n){n.d(r,{Z:()=>g});var t=n("52676"),s=n("75271"),d=n("54461"),i=n("52289"),a=n("3225"),l=n("42834"),c=n("40578"),o=n("35834"),u=n("79616");function h(e){return s.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||s.isValidElement(e)&&function(e){let{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p(e){let{value:r,tabValues:n}=e;return n.some(e=>e.value===r)}var x=n("44537");function j(e){let{className:r,block:n,selectedValue:s,selectValue:a,tabValues:l}=e,c=[],{blockElementScrollPositionUntilNextRender:o}=(0,i.o5)(),u=e=>{let r=e.currentTarget,n=l[c.indexOf(r)].value;n!==s&&(o(r),a(n))},h=e=>{let r=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{let n=c.indexOf(e.currentTarget)+1;r=c[n]??c[0];break}case"ArrowLeft":{let n=c.indexOf(e.currentTarget)-1;r=c[n]??c[c.length-1]}}r?.focus()};return(0,t.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,d.Z)("tabs",{"tabs--block":n},r),children:l.map(e=>{let{value:r,label:n,attributes:i}=e;return(0,t.jsx)("li",{role:"tab",tabIndex:s===r?0:-1,"aria-selected":s===r,ref:e=>c.push(e),onKeyDown:h,onClick:u,...i,className:(0,d.Z)("tabs__item","tabItem_aitt",i?.className,{"tabs__item--active":s===r}),children:n??r},r)})})}function m(e){let{lazy:r,children:n,selectedValue:i}=e,a=(Array.isArray(n)?n:[n]).filter(Boolean);if(r){let e=a.find(e=>e.props.value===i);return e?(0,s.cloneElement)(e,{className:(0,d.Z)("margin-top--md",e.props.className)}):null}return(0,t.jsx)("div",{className:"margin-top--md",children:a.map((e,r)=>(0,s.cloneElement)(e,{key:r,hidden:e.props.value!==i}))})}function f(e){let r=function(e){let{defaultValue:r,queryString:n=!1,groupId:t}=e,d=function(e){let{values:r,children:n}=e;return(0,s.useMemo)(()=>{let e=r??h(n).map(e=>{let{props:{value:r,label:n,attributes:t,default:s}}=e;return{value:r,label:n,attributes:t,default:s}});return!function(e){let r=(0,o.lx)(e,(e,r)=>e.value===r.value);if(r.length>0)throw Error(`Docusaurus error: Duplicate values "${r.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[r,n])}(e),[i,x]=(0,s.useState)(()=>(function(e){let{defaultValue:r,tabValues:n}=e;if(0===n.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!p({value:r,tabValues:n}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${r}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return r}let t=n.find(e=>e.default)??n[0];if(!t)throw Error("Unexpected error: 0 tabValues");return t.value})({defaultValue:r,tabValues:d})),[j,m]=function(e){let{queryString:r=!1,groupId:n}=e,t=(0,a.k6)(),d=function(e){let{queryString:r=!1,groupId:n}=e;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!n)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:r,groupId:n});return[(0,c._X)(d),(0,s.useCallback)(e=>{if(!d)return;let r=new URLSearchParams(t.location.search);r.set(d,e),t.replace({...t.location,search:r.toString()})},[d,t])]}({queryString:n,groupId:t}),[f,g]=function(e){let{groupId:r}=e,n=r?`docusaurus.tab.${r}`:null,[t,d]=(0,u.Nk)(n);return[t,(0,s.useCallback)(e=>{n&&d.set(e)},[n,d])]}({groupId:t}),y=(()=>{let e=j??f;return p({value:e,tabValues:d})?e:null})();return(0,l.Z)(()=>{y&&x(y)},[y]),{selectedValue:i,selectValue:(0,s.useCallback)(e=>{if(!p({value:e,tabValues:d}))throw Error(`Can't select invalid tab value=${e}`);x(e),m(e),g(e)},[m,g,d]),tabValues:d}}(e);return(0,t.jsxs)("div",{className:(0,d.Z)("tabs-container","tabList_ArS0"),children:[(0,t.jsx)(j,{...r,...e}),(0,t.jsx)(m,{...r,...e})]})}function g(e){let r=(0,x.Z)();return(0,t.jsx)(f,{...e,children:h(e.children)},String(r))}},91503:function(e,r,n){n.d(r,{Z:function(){return a},a:function(){return i}});var t=n(75271);let s={},d=t.createContext(s);function i(e){let r=t.useContext(d);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(d.Provider,{value:r},e.children)}}}]);