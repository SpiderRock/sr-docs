"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[88715],{8381:(e,N,s)=>{s.r(N),s.d(N,{assets:()=>t,contentTitle:()=>r,default:()=>T,frontMatter:()=>n,metadata:()=>E,toc:()=>i});var a=s(74848),o=s(28453);const n={title:"SpreadBookQuote"},r=void 0,E={id:"MessageSchemas/Schema/SRSE Products/SRSpread/SpreadBookQuote/SpreadBookQuote",title:"SpreadBookQuote",description:"V8 Message Definition",source:"@site/docs/MessageSchemas/Schema/SRSE Products/SRSpread/SpreadBookQuote/SpreadBookQuote.md",sourceDirName:"MessageSchemas/Schema/SRSE Products/SRSpread/SpreadBookQuote",slug:"/MessageSchemas/Schema/SRSE Products/SRSpread/SpreadBookQuote/",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRSpread/SpreadBookQuote/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"SpreadBookQuote"},sidebar:"messageSchemasSidebar",previous:{title:"SpreadBookMarkup",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRSpread/SpreadBookMarkup/"},next:{title:"SpreadCloseMark",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRSpread/SpreadCloseMark/"}},t={},i=[];function c(e){const N={a:"a",code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(N.p,{children:(0,a.jsx)(N.a,{href:"../../../Topics/market-data-spreads/SpreadBookQuote",children:"V8 Message Definition"})}),"\n",(0,a.jsx)(N.pre,{children:(0,a.jsx)(N.code,{className:"language-sql",children:"CREATE TABLE `SRSpread`.`MsgSpreadBookQuote` (\n    `skey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'SR Spread Key (should have corresponding ProductDefinition record)',\n    `skey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'SR Spread Key (should have corresponding ProductDefinition record)',\n    `skey_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'SR Spread Key (should have corresponding ProductDefinition record)',\n    `isTest` ENUM('None','Yes','No') NOT NULL DEFAULT 'None' COMMENT 'Yes indicates that response is made of entirely of isTest=Yes SpreadExchOrders',\n    `ticker_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'common spread underlier',\n    `ticker_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'common spread underlier',\n    `ticker_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'common spread underlier',\n    `SRspreadID` BIGINT NOT NULL DEFAULT 0,\n    `bidPrice1` DOUBLE NOT NULL DEFAULT 0 COMMENT 'bid price',\n    `isBidPrice1Valid` ENUM('None','Yes','No') NOT NULL DEFAULT 'None',\n    `askPrice1` DOUBLE NOT NULL DEFAULT 0 COMMENT 'ask price',\n    `isAskPrice1Valid` ENUM('None','Yes','No') NOT NULL DEFAULT 'None',\n    `bidSize1` INT NOT NULL DEFAULT 0 COMMENT 'cumulative size at bidPrice',\n    `askSize1` INT NOT NULL DEFAULT 0 COMMENT 'cumulative size at askPrice',\n    `bidPrice2` DOUBLE NOT NULL DEFAULT 0 COMMENT '2nd best bid price',\n    `isBidPrice2Valid` ENUM('None','Yes','No') NOT NULL DEFAULT 'None',\n    `askPrice2` DOUBLE NOT NULL DEFAULT 0 COMMENT '2nd best ask price',\n    `isAskPrice2Valid` ENUM('None','Yes','No') NOT NULL DEFAULT 'None',\n    `bidSize2` INT NOT NULL DEFAULT 0 COMMENT 'cumulative size at 2nd price',\n    `askSize2` INT NOT NULL DEFAULT 0 COMMENT 'cumulative size at 2nd price',\n    `bidExch1` ENUM('None','AMEX','BOX','CBOE','ISE','NYSE','PHLX','NSDQ','BATS','C2','NQBX','MIAX','GMNI','CME','CBOT','NYMEX','COMEX','ICE','EDGO','MCRY','MPRL','SDRK','DQTE','EMLD','CFE','MEMX','EUREX','CEDX','NXAM','NXBR','NXLS','NXML','NXOS','NXP','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'exchange at bid price with the largest size (if any)',\n    `askExch1` ENUM('None','AMEX','BOX','CBOE','ISE','NYSE','PHLX','NSDQ','BATS','C2','NQBX','MIAX','GMNI','CME','CBOT','NYMEX','COMEX','ICE','EDGO','MCRY','MPRL','SDRK','DQTE','EMLD','CFE','MEMX','EUREX','CEDX','NXAM','NXBR','NXLS','NXML','NXOS','NXP','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'exchange at ask price with the largest size (if any)',\n    `bidMask1` INT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'exchange bid bit mask (OptExch mask for NMS spreads; zero for single exchange spreads)',\n    `askMask1` INT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'exchange ask bit mask (OptExch mask for NMS spreads; zero for single exchange spreads)',\n    `bidTime` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'last bid price or size change',\n    `askTime` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'last ask price or size change',\n    `printVolume` INT NOT NULL DEFAULT 0,\n    `updateType` ENUM('None','PrcChange','SizeOnly','PrevPeriod') NOT NULL DEFAULT 'None',\n    `srcTimestamp` BIGINT NOT NULL DEFAULT 0 COMMENT 'source high precision timestamp (if available)',\n    `netTimestamp` BIGINT NOT NULL DEFAULT 0 COMMENT 'inbound packet PTP timestamp from SR gateway switch;usually syncronized with facility grandfather clock',\n    `timestamp` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000',\n    PRIMARY KEY USING HASH (`skey_tk`,`skey_at`,`skey_ts`,`isTest`)\n) ENGINE=SRSE DEFAULT CHARSET=LATIN1 COMMENT='This table contains live spread quote records from the individual equity option exchanges.  Each record contains up to two price levels and represents a live snapshot of the book for a specific spread.';\n\n"})})]})}function T(e={}){const{wrapper:N}={...(0,o.R)(),...e.components};return N?(0,a.jsx)(N,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},28453:(e,N,s)=>{s.d(N,{R:()=>r,x:()=>E});var a=s(96540);const o={},n=a.createContext(o);function r(e){const N=a.useContext(n);return a.useMemo((function(){return"function"==typeof e?e(N):{...N,...e}}),[N,e])}function E(e){let N;return N=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),a.createElement(n.Provider,{value:N},e.children)}}}]);