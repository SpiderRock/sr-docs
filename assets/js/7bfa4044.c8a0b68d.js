"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([["61983"],{52332:function(e,n,t){t.r(n),t.d(n,{default:()=>h,frontMatter:()=>o,metadata:()=>i,assets:()=>a,toc:()=>u,contentTitle:()=>c});var i=JSON.parse('{"id":"MessageSchemas/Schema/Topics/liquidity-notice/ResponderMarkupRC","title":"ResponderMarkupRC","description":"METADATA","source":"@site/versioned_docs/version-8.5.5.1/MessageSchemas/Schema/Topics/2450-liquidity-notice/ResponderMarkupRC.md","sourceDirName":"MessageSchemas/Schema/Topics/2450-liquidity-notice","slug":"/MessageSchemas/Schema/Topics/liquidity-notice/ResponderMarkupRC","permalink":"/docs/8.5.5.1/MessageSchemas/Schema/Topics/liquidity-notice/ResponderMarkupRC","draft":false,"unlisted":false,"tags":[],"version":"8.5.5.1","frontMatter":{"title":"ResponderMarkupRC"},"sidebar":"messageSchemasSidebar","previous":{"title":"ResponderMarkupBX","permalink":"/docs/8.5.5.1/MessageSchemas/Schema/Topics/liquidity-notice/ResponderMarkupBX"},"next":{"title":"ResponderMarkupSN","permalink":"/docs/8.5.5.1/MessageSchemas/Schema/Topics/liquidity-notice/ResponderMarkupSN"}}'),s=t("52676"),r=t("91503"),d=t("71386"),l=t("9641");let o={title:"ResponderMarkupRC"},c="Schema: ResponderMarkupRC (ID: 2501)",a={},u=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3},{value:"Post Msgs API Call",id:"post-msgs-api-call",level:3}];function m(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsxs)(n.h1,{id:"schema-respondermarkuprc-id-2501",children:["Schema: ResponderMarkupRC ",(0,s.jsx)("span",{className:"small-text",children:"(ID: 2501)"})]})}),"\n",(0,s.jsx)(n.h3,{id:"metadata",children:"METADATA"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Attribute"}),(0,s.jsx)(n.th,{children:"Value"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Topic"}),(0,s.jsx)(n.td,{children:"2450-liquidity-notice"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"MLink Token"}),(0,s.jsx)(n.td,{children:"SRATS"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"SRSE Product"}),(0,s.jsx)(n.td,{children:"SRTrade"})]})]})]}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note:"})," The symbol ",(0,s.jsx)(n.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"body",children:"BODY"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"#"}),(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default Value"}),(0,s.jsx)(n.th,{children:"Comment"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"10="}),(0,s.jsx)(n.td,{children:"accnt"}),(0,s.jsx)(n.td,{children:"string(16)"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"11="}),(0,s.jsx)(n.td,{children:"clientFirm"}),(0,s.jsx)(n.td,{children:"string(16)"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"15="}),(0,s.jsx)(n.td,{children:"ekey"}),(0,s.jsx)(n.td,{children:"ExpiryKey"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"14="}),(0,s.jsx)(n.td,{children:"respSide"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"auction responder side (your side); Buy = Buy Synthetic (Sell Shares)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"100"}),(0,s.jsx)(n.td,{children:"ticker"}),(0,s.jsx)(n.td,{children:"TickerKey"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"101"}),(0,s.jsx)(n.td,{children:"isDisabled"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"if Yes, this auto-responder record is disabled"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"134"}),(0,s.jsx)(n.td,{children:"enabledUntil"}),(0,s.jsx)(n.td,{children:"DateTime"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"will be enabled up until this time"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"102"}),(0,s.jsx)(n.td,{children:"expiryQtyAvail"}),(0,s.jsx)(n.td,{children:"int"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"revcons (contracts) available for responding (day total; this ticker/expiry; all strikes) [note: 1 contract = undPerCn underlier units]"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"103"}),(0,s.jsx)(n.td,{children:"tickerQtyAvail"}),(0,s.jsx)(n.td,{children:"int"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"revcons (contracts) available for responding (day total; this ticker; all strikes) [note: 1 contract = undPerCn underlier units]"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"104"}),(0,s.jsx)(n.td,{children:"transactFee"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"(+ = you pay) / (- = you receive)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"105"}),(0,s.jsx)(n.td,{children:"stockRate"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"0.00 = no effective lend/borrow value  (360 day convention)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"106"}),(0,s.jsx)(n.td,{children:"moneyRate"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"effective rate to borrow/lend money to expiry (360 day convention) [compares to globalRate * 360 / 365]"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"107"}),(0,s.jsx)(n.td,{children:"ddivPv"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"present value of any expected dividends to expiry"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"108"}),(0,s.jsx)(n.td,{children:"divControl"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/DivControl",children:"enum : DivControl"})}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"disable this auto-responder record if SR Dividends exist or are estimates"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"109"}),(0,s.jsx)(n.td,{children:"respondFlex"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"if not None, much match auction notice containsFlex field"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"110"}),(0,s.jsx)(n.td,{children:"incFeesInResp"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"include all estimated responder fees in final response price"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"111"}),(0,s.jsx)(n.td,{children:"roundRule"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/RoundRule",children:"enum : RoundRule"})}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"112"}),(0,s.jsx)(n.td,{children:"openExpiryQty"}),(0,s.jsx)(n.td,{children:"int"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"remaining revcons (100 share units) available for responding (day total; this ticker/expiry; all strikes)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"113"}),(0,s.jsx)(n.td,{children:"openTickerQty"}),(0,s.jsx)(n.td,{children:"int"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"remaining revcons (100 share units) available for responding (day total; ticker; all strikes)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"114"}),(0,s.jsx)(n.td,{children:"cumFillQty"}),(0,s.jsx)(n.td,{children:"int"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"revcons (100 share units) traded (day total; this expiry; all strikes)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"115"}),(0,s.jsx)(n.td,{children:"cumFillMoney"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"cumulative fill money (credit/debit) (this expiry)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"116"}),(0,s.jsx)(n.td,{children:"avgFillRate"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"avg fill effective stock rate (this expiry)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"117"}),(0,s.jsx)(n.td,{children:"isDivControlDisabled"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"yes if dividend control above is triggered"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"118"}),(0,s.jsx)(n.td,{children:"uBid"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"live stock nbbo bid price [SR Supplied]"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"119"}),(0,s.jsx)(n.td,{children:"uAsk"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"live stock nbbo ask price [SR Supplied]"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"120"}),(0,s.jsx)(n.td,{children:"iDays"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"iDays = effective interest days [SR supplied]"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"121"}),(0,s.jsx)(n.td,{children:"iYears"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"iYears = iDays / 360.0"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"122"}),(0,s.jsx)(n.td,{children:"strike"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"SR selected strike (standard day strike)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"123"}),(0,s.jsx)(n.td,{children:"rcEExPrem"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"rcEExPrem = (pRv.price - pRvE.price) - (cRv.price - cRvE.price) [american price - european price] (same model parameters; SR supplied parameters including DDivs; is zero for flex revcons)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"124"}),(0,s.jsx)(n.td,{children:"strikePv"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"strikePv = strike * (1.0 - moneyRate * iYears) [moneyRate supplied above]"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"125"}),(0,s.jsx)(n.td,{children:"stockLendPv"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"stockLendPv = uPrc * stockRate * iYears [stockRate supplied above]"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"126"}),(0,s.jsx)(n.td,{children:"revConPrem"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"revConPrem = stockLendPv + strikePv + ddivPv + rcEExPrem (if any) [uPrc + pRv.price - cRv.price] [ddivPv supplied above]"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"127"}),(0,s.jsx)(n.td,{children:"effRevConLimit"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"effRevConLimit = refConPrem +/- transactFee [lend/borrow]"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"128"}),(0,s.jsx)(n.td,{children:"limitPrice"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"limitPrice = ROUND(effRevConLimit) [this is your response limit]"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"129"}),(0,s.jsx)(n.td,{children:"effStockLendPv"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"effStockLendPv = limitPrice - strikePv - ddivPv - rcEExPrem"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"130"}),(0,s.jsx)(n.td,{children:"effStockRate"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"effStockRate = effStockLendPv / (uPrc * iYears)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"135"}),(0,s.jsx)(n.td,{children:"numNotices"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"number of notices that match response bucket"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"136"}),(0,s.jsx)(n.td,{children:"numNoticeSR"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"number of SR auction numNotices"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"137"}),(0,s.jsx)(n.td,{children:"numNoticeAMEX"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"138"}),(0,s.jsx)(n.td,{children:"numNoticeBATS"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"139"}),(0,s.jsx)(n.td,{children:"numNoticeBOX"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"140"}),(0,s.jsx)(n.td,{children:"numNoticeCBOE"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"141"}),(0,s.jsx)(n.td,{children:"numNoticeC2"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"142"}),(0,s.jsx)(n.td,{children:"numNoticeEDGO"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"143"}),(0,s.jsx)(n.td,{children:"numNoticeEMLD"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"144"}),(0,s.jsx)(n.td,{children:"numNoticeGMNI"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"145"}),(0,s.jsx)(n.td,{children:"numNoticeISE"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"146"}),(0,s.jsx)(n.td,{children:"numNoticeMCRY"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"147"}),(0,s.jsx)(n.td,{children:"numNoticeMEMX"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"148"}),(0,s.jsx)(n.td,{children:"numNoticeMIAX"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"149"}),(0,s.jsx)(n.td,{children:"numNoticeMPRL"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"150"}),(0,s.jsx)(n.td,{children:"numNoticeNYSE"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"151"}),(0,s.jsx)(n.td,{children:"numNoticeNQBX"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"152"}),(0,s.jsx)(n.td,{children:"numNoticeNSDQ"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"153"}),(0,s.jsx)(n.td,{children:"numNoticePHLX"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"154"}),(0,s.jsx)(n.td,{children:"numNoticeSPHR"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"155"}),(0,s.jsx)(n.td,{children:"respDisabledSkips"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"number skipped from isDisabled"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"156"}),(0,s.jsx)(n.td,{children:"listedFlexSkips"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"number skipped from flex/listed filter"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"157"}),(0,s.jsx)(n.td,{children:"noticePriceSkips"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"number skipped from limit price filter (exchange only)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"158"}),(0,s.jsx)(n.td,{children:"sizeLimitSkips"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"number skipped from aggregate contract/vega size limit"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"159"}),(0,s.jsx)(n.td,{children:"riskGroupLimitSkips"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"number skipped from riskGroup limits"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"160"}),(0,s.jsx)(n.td,{children:"numResponses"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"number of response attempts (number of parentOrders/NoticeExecReports)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"161"}),(0,s.jsx)(n.td,{children:"numFullSize"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"162"}),(0,s.jsx)(n.td,{children:"numAllocSize"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"163"}),(0,s.jsx)(n.td,{children:"numPriceMiss"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"164"}),(0,s.jsx)(n.td,{children:"numTooLate"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"165"}),(0,s.jsx)(n.td,{children:"numOtherMiss"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"166"}),(0,s.jsx)(n.td,{children:"numDidNotTrade"}),(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"131"}),(0,s.jsx)(n.td,{children:"modifiedBy"}),(0,s.jsx)(n.td,{children:"string(24)"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"user who last modified this record"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"132"}),(0,s.jsx)(n.td,{children:"modifiedIn"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/SysEnvironment",children:"enum : SysEnvironment"})}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"133"}),(0,s.jsx)(n.td,{children:"timestamp"}),(0,s.jsx)(n.td,{children:"DateTime"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"timestamp of last modification"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,s.jsxs)(d.Z,{children:[(0,s.jsx)(l.Z,{value:"Python",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'ResponderMarkupRC'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n    # Required Parameters\n    \"apiKey\": API_KEY,\n    \"cmd\": 'getschema',\n    \"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,s.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=ResponderMarkupRC'\n\n"})})})]}),"\n",(0,s.jsx)(n.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,s.jsxs)(d.Z,{children:[(0,s.jsx)(l.Z,{value:"Python",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'ResponderMarkupRC\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'ticker|isDisabled|enabledUntil|expiryQtyAvail|tickerQtyAvail|transactFee|stockRate|moneyRate|ddivPv|divControl|respondFlex|incFeesInResp|roundRule|openExpiryQty|openTickerQty|cumFillQty|cumFillMoney|avgFillRate|isDivControlDisabled|uBid|uAsk|iDays|iYears|strike|rcEExPrem|strikePv|stockLendPv|revConPrem|effRevConLimit|limitPrice|effStockLendPv|effStockRate|numNotices|numNoticeSR|numNoticeAMEX|numNoticeBATS|numNoticeBOX|numNoticeCBOE|numNoticeC2|numNoticeEDGO|numNoticeEMLD|numNoticeGMNI|numNoticeISE|numNoticeMCRY|numNoticeMEMX|numNoticeMIAX|numNoticeMPRL|numNoticeNYSE|numNoticeNQBX|numNoticeNSDQ|numNoticePHLX|numNoticeSPHR|respDisabledSkips|listedFlexSkips|noticePriceSkips|sizeLimitSkips|riskGroupLimitSkips|numResponses|numFullSize|numAllocSize|numPriceMiss|numTooLate|numOtherMiss|numDidNotTrade|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=ResponderMarkupRC' \\\n--data-urlencode 'view=ticker|isDisabled|enabledUntil|expiryQtyAvail|tickerQtyAvail|transactFee|stockRate|moneyRate|ddivPv|divControl|respondFlex|incFeesInResp|roundRule|openExpiryQty|openTickerQty|cumFillQty|cumFillMoney|avgFillRate|isDivControlDisabled|uBid|uAsk|iDays|iYears|strike|rcEExPrem|strikePv|stockLendPv|revConPrem|effRevConLimit|limitPrice|effStockLendPv|effStockRate|numNotices|numNoticeSR|numNoticeAMEX|numNoticeBATS|numNoticeBOX|numNoticeCBOE|numNoticeC2|numNoticeEDGO|numNoticeEMLD|numNoticeGMNI|numNoticeISE|numNoticeMCRY|numNoticeMEMX|numNoticeMIAX|numNoticeMPRL|numNoticeNYSE|numNoticeNQBX|numNoticeNSDQ|numNoticePHLX|numNoticeSPHR|respDisabledSkips|listedFlexSkips|noticePriceSkips|sizeLimitSkips|riskGroupLimitSkips|numResponses|numFullSize|numAllocSize|numPriceMiss|numTooLate|numOtherMiss|numDidNotTrade|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,s.jsx)(n.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,s.jsxs)(d.Z,{children:[(0,s.jsx)(l.Z,{value:"Python",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'ResponderMarkupRC\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'ticker|isDisabled|enabledUntil|expiryQtyAvail|tickerQtyAvail|transactFee|stockRate|moneyRate|ddivPv|divControl|respondFlex|incFeesInResp|roundRule|openExpiryQty|openTickerQty|cumFillQty|cumFillMoney|avgFillRate|isDivControlDisabled|uBid|uAsk|iDays|iYears|strike|rcEExPrem|strikePv|stockLendPv|revConPrem|effRevConLimit|limitPrice|effStockLendPv|effStockRate|numNotices|numNoticeSR|numNoticeAMEX|numNoticeBATS|numNoticeBOX|numNoticeCBOE|numNoticeC2|numNoticeEDGO|numNoticeEMLD|numNoticeGMNI|numNoticeISE|numNoticeMCRY|numNoticeMEMX|numNoticeMIAX|numNoticeMPRL|numNoticeNYSE|numNoticeNQBX|numNoticeNSDQ|numNoticePHLX|numNoticeSPHR|respDisabledSkips|listedFlexSkips|noticePriceSkips|sizeLimitSkips|riskGroupLimitSkips|numResponses|numFullSize|numAllocSize|numPriceMiss|numTooLate|numOtherMiss|numDidNotTrade|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'ticker:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=ResponderMarkupRC' \\\n--data-urlencode 'view=ticker|isDisabled|enabledUntil|expiryQtyAvail|tickerQtyAvail|transactFee|stockRate|moneyRate|ddivPv|divControl|respondFlex|incFeesInResp|roundRule|openExpiryQty|openTickerQty|cumFillQty|cumFillMoney|avgFillRate|isDivControlDisabled|uBid|uAsk|iDays|iYears|strike|rcEExPrem|strikePv|stockLendPv|revConPrem|effRevConLimit|limitPrice|effStockLendPv|effStockRate|numNotices|numNoticeSR|numNoticeAMEX|numNoticeBATS|numNoticeBOX|numNoticeCBOE|numNoticeC2|numNoticeEDGO|numNoticeEMLD|numNoticeGMNI|numNoticeISE|numNoticeMCRY|numNoticeMEMX|numNoticeMIAX|numNoticeMPRL|numNoticeNYSE|numNoticeNQBX|numNoticeNSDQ|numNoticePHLX|numNoticeSPHR|respDisabledSkips|listedFlexSkips|noticePriceSkips|sizeLimitSkips|riskGroupLimitSkips|numResponses|numFullSize|numAllocSize|numPriceMiss|numTooLate|numOtherMiss|numDidNotTrade|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'where=accnt:eq:ExampleString' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=ticker:ASC'\n"})})})]}),"\n",(0,s.jsx)(n.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,s.jsxs)(d.Z,{children:[(0,s.jsx)(l.Z,{value:"Python",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'ResponderMarkupRC\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'ticker|isDisabled|enabledUntil|expiryQtyAvail|tickerQtyAvail|transactFee|stockRate|moneyRate|ddivPv|divControl|respondFlex|incFeesInResp|roundRule|openExpiryQty|openTickerQty|cumFillQty|cumFillMoney|avgFillRate|isDivControlDisabled|uBid|uAsk|iDays|iYears|strike|rcEExPrem|strikePv|stockLendPv|revConPrem|effRevConLimit|limitPrice|effStockLendPv|effStockRate|numNotices|numNoticeSR|numNoticeAMEX|numNoticeBATS|numNoticeBOX|numNoticeCBOE|numNoticeC2|numNoticeEDGO|numNoticeEMLD|numNoticeGMNI|numNoticeISE|numNoticeMCRY|numNoticeMEMX|numNoticeMIAX|numNoticeMPRL|numNoticeNYSE|numNoticeNQBX|numNoticeNSDQ|numNoticePHLX|numNoticeSPHR|respDisabledSkips|listedFlexSkips|noticePriceSkips|sizeLimitSkips|riskGroupLimitSkips|numResponses|numFullSize|numAllocSize|numPriceMiss|numTooLate|numOtherMiss|numDidNotTrade|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'isDisabled|divControl|respondFlex|incFeesInResp|roundRule|isDivControlDisabled|modifiedIn\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getaggregate\',\n    "msgType": MSG_TYPE,\n    "measure": MEASURE,\n    "group": GROUP,\n    # Optional Parameters\n    "where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=ResponderMarkupRC' \\\n--data-urlencode 'measure=ticker|isDisabled|enabledUntil|expiryQtyAvail|tickerQtyAvail|transactFee|stockRate|moneyRate|ddivPv|divControl|respondFlex|incFeesInResp|roundRule|openExpiryQty|openTickerQty|cumFillQty|cumFillMoney|avgFillRate|isDivControlDisabled|uBid|uAsk|iDays|iYears|strike|rcEExPrem|strikePv|stockLendPv|revConPrem|effRevConLimit|limitPrice|effStockLendPv|effStockRate|numNotices|numNoticeSR|numNoticeAMEX|numNoticeBATS|numNoticeBOX|numNoticeCBOE|numNoticeC2|numNoticeEDGO|numNoticeEMLD|numNoticeGMNI|numNoticeISE|numNoticeMCRY|numNoticeMEMX|numNoticeMIAX|numNoticeMPRL|numNoticeNYSE|numNoticeNQBX|numNoticeNSDQ|numNoticePHLX|numNoticeSPHR|respDisabledSkips|listedFlexSkips|noticePriceSkips|sizeLimitSkips|riskGroupLimitSkips|numResponses|numFullSize|numAllocSize|numPriceMiss|numTooLate|numOtherMiss|numDidNotTrade|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'group=isDisabled|divControl|respondFlex|incFeesInResp|roundRule|isDivControlDisabled|modifiedIn' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,s.jsx)(n.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,s.jsxs)(d.Z,{children:[(0,s.jsx)(l.Z,{value:"Python",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'ResponderMarkupRC\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=ResponderMarkupRC' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,s.jsx)(n.h3,{id:"post-msgs-api-call",children:"Post Msgs API Call"}),"\n",(0,s.jsxs)(d.Z,{children:[(0,s.jsx)(l.Z,{value:"Python",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import requests\n\n# Replace with your desired MLINK URL\nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Request Parameters\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'postmsgs\',\n    "postaction": "U", # (U)pdate, (I)nsert, or (R)eplace\n    "postmerge": "Y", # (Y)es or (N)o\n}\n\npayload = {\n    "header": {\n        "mTyp": "ResponderMarkupRC"\n    },\n    "message": {\n        "pkey": {\n            "accnt": "exampleString", // string\n            "clientFirm": "exampleString", // string\n            "ekey": {\n                "at": "EQT",\n                "ts": "NMS",\n                "tk": "AAPL",\n                "dt": "2025-01-01"\n            },\n            "respSide": "enumValue" // enum(BuySell) - None Buy Sell\n        },\n        "ticker": {\n            "at": "EQT",\n            "ts": "NMS",\n            "tk": "AAPL"\n        },\n        "isDisabled": "enumValue", // enum(YesNo) - None, Yes, No\n        "enabledUntil": "2025-01-01 12:00:00.000000", // yyyy-MM-dd HH:mm:ss.SSSSSS\n        "expiryQtyAvail": 1, // int\n        "tickerQtyAvail": 1, // int\n        "transactFee": 1.0, // double\n        "stockRate": 1.0, // double\n        "moneyRate": 1.0, // double\n        "ddivPv": 1.0, // double\n        "divControl": "enumValue", // enum(DivControl) - None, DisableAny, DisableEstimates\n        "respondFlex": "enumValue", // enum(YesNo) - None, Yes, No\n        "incFeesInResp": "enumValue", // enum(YesNo) - None, Yes, No\n        "roundRule": "enumValue", // enum(RoundRule) - None, Exact, Fuzzy\n        "openExpiryQty": 1, // int\n        "openTickerQty": 1, // int\n        "cumFillQty": 1, // int\n        "cumFillMoney": 1.0, // double\n        "avgFillRate": 1.0, // double\n        "isDivControlDisabled": "enumValue", // enum(YesNo) - None, Yes, No\n        "uBid": 1.0, // double\n        "uAsk": 1.0, // double\n        "iDays": 1.0, // double\n        "iYears": 1.0, // double\n        "strike": 1.0, // double\n        "rcEExPrem": 1.0, // double\n        "strikePv": 1.0, // double\n        "stockLendPv": 1.0, // double\n        "revConPrem": 1.0, // double\n        "effRevConLimit": 1.0, // double\n        "limitPrice": 1.0, // double\n        "effStockLendPv": 1.0, // double\n        "effStockRate": 1.0, // double\n        "numNotices": 1, // long\n        "numNoticeSR": 1, // long\n        "numNoticeAMEX": 1, // long\n        "numNoticeBATS": 1, // long\n        "numNoticeBOX": 1, // long\n        "numNoticeCBOE": 1, // long\n        "numNoticeC2": 1, // long\n        "numNoticeEDGO": 1, // long\n        "numNoticeEMLD": 1, // long\n        "numNoticeGMNI": 1, // long\n        "numNoticeISE": 1, // long\n        "numNoticeMCRY": 1, // long\n        "numNoticeMEMX": 1, // long\n        "numNoticeMIAX": 1, // long\n        "numNoticeMPRL": 1, // long\n        "numNoticeNYSE": 1, // long\n        "numNoticeNQBX": 1, // long\n        "numNoticeNSDQ": 1, // long\n        "numNoticePHLX": 1, // long\n        "numNoticeSPHR": 1, // long\n        "respDisabledSkips": 1, // long\n        "listedFlexSkips": 1, // long\n        "noticePriceSkips": 1, // long\n        "sizeLimitSkips": 1, // long\n        "riskGroupLimitSkips": 1, // long\n        "numResponses": 1, // long\n        "numFullSize": 1, // long\n        "numAllocSize": 1, // long\n        "numPriceMiss": 1, // long\n        "numTooLate": 1, // long\n        "numOtherMiss": 1, // long\n        "numDidNotTrade": 1, // long\n        "modifiedBy": "exampleString", // string\n        "modifiedIn": "enumValue", // enum(SysEnvironment) - None, Neptune, Pluto, V7_Stable, V7_Latest, Saturn, Venus, Mars, SysTest, V7_Current\n        "timestamp": "2025-01-01 12:00:00.000000" // yyyy-MM-dd HH:mm:ss.SSSSSS\n    }\n}\n\nresponse = requests.post(MLINK_PROD_URL, params=params, json=payload)\n'})})}),(0,s.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'curl -X POST \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\' \\\n--data-urlencode \'apiKey=XXXX-XXXX-XXXX-XXXX\' \\\n--data-urlencode \'cmd=postmsgs\' \\\n--data-urlencode \'postaction=U\' \\ # (U)pdate, (I)nsert, or (R)eplace\n--data-urlencode \'postmerge=Y\' \\ # (Y)es or (N)o\n--header \'Content-Type: application/json\' \\\n--data \'{\n    "header": {\n        "mTyp": "ResponderMarkupRC"\n    },\n    "message": {\n        "pkey": {\n            "accnt": "exampleString", // string\n            "clientFirm": "exampleString", // string\n            "ekey": {\n                "at": "EQT",\n                "ts": "NMS",\n                "tk": "AAPL",\n                "dt": "2025-01-01"\n            },\n            "respSide": "enumValue" // enum(BuySell) - None Buy Sell\n        },\n        "ticker": {\n            "at": "EQT",\n            "ts": "NMS",\n            "tk": "AAPL"\n        },\n        "isDisabled": "enumValue", // enum(YesNo) - None, Yes, No\n        "enabledUntil": "2025-01-01 12:00:00.000000", // yyyy-MM-dd HH:mm:ss.SSSSSS\n        "expiryQtyAvail": 1, // int\n        "tickerQtyAvail": 1, // int\n        "transactFee": 1.0, // double\n        "stockRate": 1.0, // double\n        "moneyRate": 1.0, // double\n        "ddivPv": 1.0, // double\n        "divControl": "enumValue", // enum(DivControl) - None, DisableAny, DisableEstimates\n        "respondFlex": "enumValue", // enum(YesNo) - None, Yes, No\n        "incFeesInResp": "enumValue", // enum(YesNo) - None, Yes, No\n        "roundRule": "enumValue", // enum(RoundRule) - None, Exact, Fuzzy\n        "openExpiryQty": 1, // int\n        "openTickerQty": 1, // int\n        "cumFillQty": 1, // int\n        "cumFillMoney": 1.0, // double\n        "avgFillRate": 1.0, // double\n        "isDivControlDisabled": "enumValue", // enum(YesNo) - None, Yes, No\n        "uBid": 1.0, // double\n        "uAsk": 1.0, // double\n        "iDays": 1.0, // double\n        "iYears": 1.0, // double\n        "strike": 1.0, // double\n        "rcEExPrem": 1.0, // double\n        "strikePv": 1.0, // double\n        "stockLendPv": 1.0, // double\n        "revConPrem": 1.0, // double\n        "effRevConLimit": 1.0, // double\n        "limitPrice": 1.0, // double\n        "effStockLendPv": 1.0, // double\n        "effStockRate": 1.0, // double\n        "numNotices": 1, // long\n        "numNoticeSR": 1, // long\n        "numNoticeAMEX": 1, // long\n        "numNoticeBATS": 1, // long\n        "numNoticeBOX": 1, // long\n        "numNoticeCBOE": 1, // long\n        "numNoticeC2": 1, // long\n        "numNoticeEDGO": 1, // long\n        "numNoticeEMLD": 1, // long\n        "numNoticeGMNI": 1, // long\n        "numNoticeISE": 1, // long\n        "numNoticeMCRY": 1, // long\n        "numNoticeMEMX": 1, // long\n        "numNoticeMIAX": 1, // long\n        "numNoticeMPRL": 1, // long\n        "numNoticeNYSE": 1, // long\n        "numNoticeNQBX": 1, // long\n        "numNoticeNSDQ": 1, // long\n        "numNoticePHLX": 1, // long\n        "numNoticeSPHR": 1, // long\n        "respDisabledSkips": 1, // long\n        "listedFlexSkips": 1, // long\n        "noticePriceSkips": 1, // long\n        "sizeLimitSkips": 1, // long\n        "riskGroupLimitSkips": 1, // long\n        "numResponses": 1, // long\n        "numFullSize": 1, // long\n        "numAllocSize": 1, // long\n        "numPriceMiss": 1, // long\n        "numTooLate": 1, // long\n        "numOtherMiss": 1, // long\n        "numDidNotTrade": 1, // long\n        "modifiedBy": "exampleString", // string\n        "modifiedIn": "enumValue", // enum(SysEnvironment) - None, Neptune, Pluto, V7_Stable, V7_Latest, Saturn, Venus, Mars, SysTest, V7_Current\n        "timestamp": "2025-01-01 12:00:00.000000" // yyyy-MM-dd HH:mm:ss.SSSSSS\n    }\n}\'\n'})})})]})]})}function h(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},9641:function(e,n,t){t.d(n,{Z:()=>r});var i=t("52676");t("75271");var s=t("54461");function r(e){let{children:n,hidden:t,className:r}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,s.Z)("tabItem_SSzl",r),hidden:t,children:n})}},71386:function(e,n,t){t.d(n,{Z:()=>g});var i=t("52676"),s=t("75271"),r=t("54461"),d=t("52289"),l=t("3225"),o=t("42834"),c=t("40578"),a=t("35834"),u=t("79616");function m(e){return s.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||s.isValidElement(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h(e){let{value:n,tabValues:t}=e;return t.some(e=>e.value===n)}var x=t("44537");function p(e){let{className:n,block:t,selectedValue:s,selectValue:l,tabValues:o}=e,c=[],{blockElementScrollPositionUntilNextRender:a}=(0,d.o5)(),u=e=>{let n=e.currentTarget,t=o[c.indexOf(n)].value;t!==s&&(a(n),l(t))},m=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{let t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{let t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1]}}n?.focus()};return(0,i.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":t},n),children:o.map(e=>{let{value:n,label:t,attributes:d}=e;return(0,i.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>c.push(e),onKeyDown:m,onClick:u,...d,className:(0,r.Z)("tabs__item","tabItem_aitt",d?.className,{"tabs__item--active":s===n}),children:t??n},n)})})}function j(e){let{lazy:n,children:t,selectedValue:d}=e,l=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){let e=l.find(e=>e.props.value===d);return e?(0,s.cloneElement)(e,{className:(0,r.Z)("margin-top--md",e.props.className)}):null}return(0,i.jsx)("div",{className:"margin-top--md",children:l.map((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==d}))})}function N(e){let n=function(e){let{defaultValue:n,queryString:t=!1,groupId:i}=e,r=function(e){let{values:n,children:t}=e;return(0,s.useMemo)(()=>{let e=n??m(t).map(e=>{let{props:{value:n,label:t,attributes:i,default:s}}=e;return{value:n,label:t,attributes:i,default:s}});return!function(e){let n=(0,a.lx)(e,(e,n)=>e.value===n.value);if(n.length>0)throw Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,t])}(e),[d,x]=(0,s.useState)(()=>(function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:t}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}let i=t.find(e=>e.default)??t[0];if(!i)throw Error("Unexpected error: 0 tabValues");return i.value})({defaultValue:n,tabValues:r})),[p,j]=function(e){let{queryString:n=!1,groupId:t}=e,i=(0,l.k6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,c._X)(r),(0,s.useCallback)(e=>{if(!r)return;let n=new URLSearchParams(i.location.search);n.set(r,e),i.replace({...i.location,search:n.toString()})},[r,i])]}({queryString:t,groupId:i}),[N,g]=function(e){let{groupId:n}=e,t=n?`docusaurus.tab.${n}`:null,[i,r]=(0,u.Nk)(t);return[i,(0,s.useCallback)(e=>{t&&r.set(e)},[t,r])]}({groupId:i}),y=(()=>{let e=p??N;return h({value:e,tabValues:r})?e:null})();return(0,o.Z)(()=>{y&&x(y)},[y]),{selectedValue:d,selectValue:(0,s.useCallback)(e=>{if(!h({value:e,tabValues:r}))throw Error(`Can't select invalid tab value=${e}`);x(e),j(e),g(e)},[j,g,r]),tabValues:r}}(e);return(0,i.jsxs)("div",{className:(0,r.Z)("tabs-container","tabList_ArS0"),children:[(0,i.jsx)(p,{...n,...e}),(0,i.jsx)(j,{...n,...e})]})}function g(e){let n=(0,x.Z)();return(0,i.jsx)(N,{...e,children:m(e.children)},String(n))}},91503:function(e,n,t){t.d(n,{Z:function(){return l},a:function(){return d}});var i=t(75271);let s={},r=i.createContext(s);function d(e){let n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);