"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[37379],{61446:(e,N,t)=>{t.r(N),t.d(N,{assets:()=>s,contentTitle:()=>L,default:()=>E,frontMatter:()=>o,metadata:()=>r,toc:()=>i});var T=t(74848),n=t(28453);const o={title:"SpdrTheoExpSurface"},L=void 0,r={id:"MessageSchemas/Schema/SRSE Products/SRTheo/SpdrTheoExpSurface/SpdrTheoExpSurface",title:"SpdrTheoExpSurface",description:"V8 Message Definition",source:"@site/docs/MessageSchemas/Schema/SRSE Products/SRTheo/SpdrTheoExpSurface/SpdrTheoExpSurface.md",sourceDirName:"MessageSchemas/Schema/SRSE Products/SRTheo/SpdrTheoExpSurface",slug:"/MessageSchemas/Schema/SRSE Products/SRTheo/SpdrTheoExpSurface/",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRTheo/SpdrTheoExpSurface/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"SpdrTheoExpSurface"},sidebar:"messageSchemasSidebar",previous:{title:"SpdrTheoExp2PtCurve",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRTheo/SpdrTheoExp2PtCurve/"},next:{title:"TheoSurfacePerf",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRTheo/TheoSurfacePerf/"}},s={},i=[];function a(e){const N={a:"a",code:"code",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,T.jsxs)(T.Fragment,{children:[(0,T.jsx)(N.p,{children:(0,T.jsx)(N.a,{href:"../../../Topics/client-theos/SpdrTheoExpSurface",children:"V8 Message Definition"})}),"\n",(0,T.jsx)(N.pre,{children:(0,T.jsx)(N.code,{className:"language-sql",children:"CREATE TABLE `SRTheo`.`MsgSRTheoExpSurface` (\n    `ekey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None',\n    `ekey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None',\n    `ekey_tk` VARCHAR(12) NOT NULL DEFAULT '',\n    `ekey_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0,\n    `ekey_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0,\n    `ekey_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0,\n    `theoModel` VARCHAR(16) NOT NULL DEFAULT '',\n    `clientFirm` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'client firm this theo model is associated with (controls visibility)',\n    `ticker_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None',\n    `ticker_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None',\n    `ticker_tk` VARCHAR(12) NOT NULL DEFAULT '',\n    `skewFunc` ENUM('None','ICurve','SRDynCurve','TheoSpline','SVI') NOT NULL DEFAULT 'None',\n    `volTimeUnits` ENUM('Default','V6') NOT NULL DEFAULT 'Default' COMMENT 'default uses the SR native time metric (trading minutes); V6 is a prior SR metric (trading days)',\n    `uPrcRefRule` ENUM('NbboMid','NbboCross') NOT NULL DEFAULT 'NbboMid',\n    `refUPrc` FLOAT NOT NULL DEFAULT -1 COMMENT '-1 = use SR uPrc @ record insert',\n    `refUPrcWeight` FLOAT NOT NULL DEFAULT 0 COMMENT 'w: [0,1];adjRefUPrc = w * refUPrc + (1 - w) * uPrc;note: w=1 implies sticky strike behavior;w=0 implies sticky delta behavior',\n    `refSRAtm` FLOAT NOT NULL DEFAULT -1 COMMENT '-1 = use SR surface atm @ record insert',\n    `refSRAtmWeight` FLOAT NOT NULL DEFAULT 0 COMMENT 'w: [0,1];theoVolAdj = theoVol + tvSlope * (uPrc - refUPrc) + w * (liveSRAtm - refSRAtm)',\n    `paramA` FLOAT NOT NULL DEFAULT 0 COMMENT 'param A - J are inputs to the skewFunc model selected above',\n    `paramB` FLOAT NOT NULL DEFAULT 0,\n    `paramC` FLOAT NOT NULL DEFAULT 0,\n    `paramD` FLOAT NOT NULL DEFAULT 0,\n    `paramE` FLOAT NOT NULL DEFAULT 0,\n    `paramF` FLOAT NOT NULL DEFAULT 0,\n    `paramG` FLOAT NOT NULL DEFAULT 0,\n    `paramH` FLOAT NOT NULL DEFAULT 0,\n    `paramI` FLOAT NOT NULL DEFAULT 0,\n    `paramJ` FLOAT NOT NULL DEFAULT 0,\n    `theoVol` FLOAT NOT NULL DEFAULT 0 COMMENT 'theo volatility @ hypothetical atm strike (note: hypothetical atm strike depends on the definition of xAxis implied by the skewFunc model;usually the strike where xAxis = 0)',\n    `bOpnVol` FLOAT NOT NULL DEFAULT 0 COMMENT 'buy open vol',\n    `bClsVol` FLOAT NOT NULL DEFAULT 0 COMMENT 'buy close vol',\n    `sOpnVol` FLOAT NOT NULL DEFAULT 0 COMMENT 'sell open vol',\n    `sClsVol` FLOAT NOT NULL DEFAULT 0 COMMENT 'sell close vol',\n    `bOpnEdge` FLOAT NOT NULL DEFAULT 0 COMMENT 'edge spread to open when buying',\n    `bClsEdge` FLOAT NOT NULL DEFAULT 0 COMMENT 'edge spread to close when buying',\n    `sOpnEdge` FLOAT NOT NULL DEFAULT 0 COMMENT 'edge spread to open when selling',\n    `sClsEdge` FLOAT NOT NULL DEFAULT 0 COMMENT 'edge spread to close when selling',\n    `buySellConvention` ENUM('None','Minimum','BSSpread','BSPctSprd','BSOffsetPts','BSOffsetPct') NOT NULL DEFAULT 'None',\n    `lnDDiv` FLOAT NOT NULL DEFAULT -99 COMMENT '(depricated)',\n    `shDDiv` FLOAT NOT NULL DEFAULT -99 COMMENT '(depricated)',\n    `lnSDiv` FLOAT NOT NULL DEFAULT -99 COMMENT 'long sdiv',\n    `shSDiv` FLOAT NOT NULL DEFAULT -99 COMMENT 'short sdiv',\n    `tvSlope` FLOAT NOT NULL DEFAULT 0 COMMENT 'tvSlope = dTheoVol / dUPrc;theoVolAdj = theoVol + tvSlope * (uPrc - refUPrc).  Note: tvSlope affects the calculation of theoSurface veSlope values which in turn affect hedgeDelta calculations when account.hedgeType = ''TvS''',\n    `divRule` ENUM('UseSRImplied','SDivValue','SDivOffset','MinMaxValue') NOT NULL DEFAULT 'UseSRImplied' COMMENT 'specifies how DDiv and SDiv values will be incorporated',\n    `userRateOverride` ENUM('None','Yes','No') NOT NULL DEFAULT 'No' COMMENT 'use rate from the UserRateOverride table instead of SR Rate curve',\n    `userSDivOverride` ENUM('None','Yes','No') NOT NULL DEFAULT 'No' COMMENT 'use sdiv from the UserSDivOverride table instead of SR SDiv',\n    `userDDivOverride` ENUM('None','Yes','No') NOT NULL DEFAULT 'No' COMMENT 'use dividends from the UserDividendOverride table instead of SR Dividends',\n    `minUBid` FLOAT NOT NULL DEFAULT 0 COMMENT 'any non-hold status will revert to markup if live uMid is outside of [minUBid, maxUAsk]',\n    `maxUAsk` FLOAT NOT NULL DEFAULT 0,\n    `theoStatus` ENUM('Hold','Auto','Scanner','Markup','CloseOnly') NOT NULL DEFAULT 'Hold',\n    `comment` VARCHAR(16) NOT NULL DEFAULT '',\n    `updated` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'datetime of last record update.  will default to current datetime on record load of not supplied',\n    `modifiedBy` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'user who last modified this record',\n    `modifiedIn` ENUM('None','Neptune','Pluto','V7_Stable','V7_Latest','Saturn','Venus','Mars','SysTest','V7_Current') NOT NULL DEFAULT 'None',\n    `timestamp` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'timestamp of last modification',\n    PRIMARY KEY USING HASH (`ekey_tk`,`ekey_yr`,`ekey_mn`,`ekey_dy`,`ekey_at`,`ekey_ts`,`theoModel`,`clientFirm`)\n) ENGINE=SRSE DEFAULT CHARSET=LATIN1 COMMENT='';\n\n"})})]})}function E(e={}){const{wrapper:N}={...(0,n.R)(),...e.components};return N?(0,T.jsx)(N,{...e,children:(0,T.jsx)(a,{...e})}):a(e)}},28453:(e,N,t)=>{t.d(N,{R:()=>L,x:()=>r});var T=t(96540);const n={},o=T.createContext(n);function L(e){const N=T.useContext(o);return T.useMemo((function(){return"function"==typeof e?e(N):{...N,...e}}),[N,e])}function r(e){let N;return N=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:L(e.components),T.createElement(o.Provider,{value:N},e.children)}}}]);