"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[60081],{77508:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>N,default:()=>L,frontMatter:()=>s,metadata:()=>c,toc:()=>a});var r=n(74848),i=n(28453);const s={title:"StockPrint"},N=void 0,c={id:"MessageSchemas/Schema/SRSE Products/SRLive/StockPrint/StockPrint",title:"StockPrint",description:"V8 Message Definition",source:"@site/docs/MessageSchemas/Schema/SRSE Products/SRLive/StockPrint/StockPrint.md",sourceDirName:"MessageSchemas/Schema/SRSE Products/SRLive/StockPrint",slug:"/MessageSchemas/Schema/SRSE Products/SRLive/StockPrint/",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRLive/StockPrint/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"StockPrint"},sidebar:"messageSchemasSidebar",previous:{title:"StockOpenMark",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRLive/StockOpenMark/"},next:{title:"StockPrintProbability",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRLive/StockPrintProbability/"}},o={},a=[];function T(e){const t={a:"a",code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"../../../Topics/market-data-stock/StockPrint",children:"V8 Message Definition"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:"CREATE TABLE `SRLive`.`MsgStockPrint` (\n    `ticker_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None',\n    `ticker_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None',\n    `ticker_tk` VARCHAR(12) NOT NULL DEFAULT '',\n    `prtExch` ENUM('None','AMEX','NQBX','NSX','FNRA','ISE','EDGA','EDGX','CHX','NYSE','ARCA','NSDQ','CBSX','PSX','BTSY','BATS','CBIDX','IEX','OTC','MPRL','LTSE','MEMX','MXIDX','DJIDX','BXE','CXE','DXE','XETRA','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP') NOT NULL DEFAULT 'None' COMMENT 'print exch',\n    `prtSize` INT NOT NULL DEFAULT 0 COMMENT 'print size',\n    `prtPrice` FLOAT NOT NULL DEFAULT 0 COMMENT 'print price level',\n    `prtClusterNum` INT NOT NULL DEFAULT 0 COMMENT 'incremental print cluster counter (one counter per ticker; used to group prints into clusters)',\n    `prtClusterSize` INT NOT NULL DEFAULT 0 COMMENT 'cumulative size of prints in this sequence (prints @ same or more aggressive price with less than 25 ms elapsing since first print; can span exchanges)',\n    `prtVolume` INT NOT NULL DEFAULT 0 COMMENT 'cumulative print size today',\n    `mrkPrice` FLOAT NOT NULL DEFAULT 0 COMMENT 'last regular market print price',\n    `clsPrice` FLOAT NOT NULL DEFAULT 0 COMMENT 'official closing price (if available)',\n    `prtType` ENUM('None','RegularSequence','OutOfSequence','VolumeOnly','ExtendedHours','OddLot','OddLotExtendedHours') NOT NULL DEFAULT 'None',\n    `printCodes` VARCHAR(18) NOT NULL DEFAULT '' COMMENT 'European trade condition codes',\n    `prtCond1` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'print condition (from SIP feed)',\n    `prtCond2` TINYINT UNSIGNED NOT NULL DEFAULT 0,\n    `prtCond3` TINYINT UNSIGNED NOT NULL DEFAULT 0,\n    `prtCond4` TINYINT UNSIGNED NOT NULL DEFAULT 0,\n    `ebid` FLOAT NOT NULL DEFAULT 0 COMMENT 'exchange bid (@ print time) [SIP feed]',\n    `eask` FLOAT NOT NULL DEFAULT 0 COMMENT 'exchange ask (@ print time) [SIP feed]',\n    `ebsz` INT NOT NULL DEFAULT 0 COMMENT 'exchange bid size',\n    `easz` INT NOT NULL DEFAULT 0 COMMENT 'exchange ask size',\n    `eage` FLOAT NOT NULL DEFAULT 0 COMMENT 'age of prevailing quote at time of print',\n    `prtSide` ENUM('None','Mid','Bid','Ask') NOT NULL DEFAULT 'None',\n    `prtTimestamp` BIGINT NOT NULL DEFAULT 0 COMMENT 'exchange high precision timestamp (if available)',\n    `netTimestamp` BIGINT NOT NULL DEFAULT 0 COMMENT 'inbound packet PTP timestamp from SR gateway switch; usually syncronized with facility grandfather clock',\n    `timestamp` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000',\n    PRIMARY KEY USING HASH (`ticker_tk`,`ticker_at`,`ticker_ts`)\n) ENGINE=SRSE DEFAULT CHARSET=LATIN1 COMMENT='The most recent (last) print record for CTS/UTDF markets as well as SpiderRock synthetic markets.  Records also incorporate some summary detail and closing mark information as well.';\n\n"})})]})}function L(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(T,{...e})}):T(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>N,x:()=>c});var r=n(96540);const i={},s=r.createContext(i);function N(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:N(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);