"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[59674],{34801:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var n=r(74848),o=r(28453);const a={title:"Execution Algorithms",sidebar_position:2},s=void 0,i={id:"Documentation/PlatformFeatures/OrderManagement/ExecutionAlgorithms",title:"Execution Algorithms",description:"SpiderRock execution algorithms are the collection of behaviors that are possible with SpiderRock SpdrParentOrder messsages and their associated ParentBrokers. These ParentBrokers, in turn, can generate child orders that take liquidity, rest in exchange order books, respond to exchange and ATS auctions, and interact with other execution venues and systems in a wide variety of ways.",source:"@site/docs/Documentation/PlatformFeatures/OrderManagement/ExecutionAlgorithms.md",sourceDirName:"Documentation/PlatformFeatures/OrderManagement",slug:"/Documentation/PlatformFeatures/OrderManagement/ExecutionAlgorithms",permalink:"/docs/Documentation/PlatformFeatures/OrderManagement/ExecutionAlgorithms",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Execution Algorithms",sidebar_position:2},sidebar:"documentationSidebar",previous:{title:"Order Management",permalink:"/docs/Documentation/PlatformFeatures/OrderManagement/"},next:{title:"Execution Risk Controls",permalink:"/docs/Documentation/PlatformFeatures/OrderManagement/ExecutionRiskControl"}},c={},d=[{value:"Parent Order Structure",id:"parent-order-structure",level:2}];function u(e){const t={a:"a",em:"em",h2:"h2",p:"p",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["SpiderRock execution algorithms are the collection of behaviors that are possible with SpiderRock ",(0,n.jsx)(t.a,{href:"/docs/MessageSchemas/Schema/SRSE%20Products/SRTrade/SpdrParentOrder",children:(0,n.jsx)(t.em,{children:"SpdrParentOrder"})})," messsages and their associated ParentBrokers. These ParentBrokers, in turn, can generate child orders that take liquidity, rest in exchange order books, respond to exchange and ATS auctions, and interact with other execution venues and systems in a wide variety of ways."]}),"\n",(0,n.jsx)(t.p,{children:"These execution algorithms are integrated into our OMS/EMS trading tools and can also be accessed programatically via FIX, MLink or SRSE for clients who wish to build higher level systematic execution and trading strategies using SpiderRock systems."}),"\n",(0,n.jsx)(t.h2,{id:"parent-order-structure",children:"Parent Order Structure"}),"\n",(0,n.jsxs)(t.p,{children:["All SpdrParentOrders have a primary key (parentNumber",":long",") that is assigned by SpiderRock and is globally unique (for about 6 months)."]}),"\n",(0,n.jsx)(t.p,{children:"In addition, SpdrParentOrders contain the ParentBroker pkey fields (accnt, clientFirm, secKey, secType, orderSide, spdrSource, and groupingCode) within the body of the SpdrParentOrder message."})]})}function l(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>s,x:()=>i});var n=r(96540);const o={},a=n.createContext(o);function s(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);