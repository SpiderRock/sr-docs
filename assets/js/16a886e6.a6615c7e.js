"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[39970],{55612:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>l,metadata:()=>a,toc:()=>h});var s=r(74848),n=r(28453),i=r(11470),d=r(19365);const l={title:"OptionPrintSet"},c="Schema: OptionPrintSet (ID: 2815)",a={id:"MessageSchemas/Schema/Topics/market-data-options/OptionPrintSet",title:"OptionPrintSet",description:"OptionPrintSet records contain every option print along with quote, surface, and SR probability details at print time.  These records also contain T+1M and T+10M forward mark details.   These records are created for every print at the time of print and are published to the SpiderRock elastic cluster 10 minutes later when T + 10M forward marks are available.",source:"@site/docs/MessageSchemas/Schema/Topics/2750-market-data-options/OptionPrintSet.md",sourceDirName:"MessageSchemas/Schema/Topics/2750-market-data-options",slug:"/MessageSchemas/Schema/Topics/market-data-options/OptionPrintSet",permalink:"/docs/MessageSchemas/Schema/Topics/market-data-options/OptionPrintSet",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"OptionPrintSet"},sidebar:"messageSchemasSidebar",previous:{title:"OptionPrintMarkup",permalink:"/docs/MessageSchemas/Schema/Topics/market-data-options/OptionPrintMarkup"},next:{title:"OptionPrintSetSummary",permalink:"/docs/MessageSchemas/Schema/Topics/market-data-options/OptionPrintSetSummary"}},o={},h=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3}];function x(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.h1,{id:"schema-optionprintset-id-2815",children:["Schema: OptionPrintSet ",(0,s.jsx)("span",{className:"small-text",children:"(ID: 2815)"})]}),"\n",(0,s.jsx)(t.p,{children:"OptionPrintSet records contain every option print along with quote, surface, and SR probability details at print time.  These records also contain T+1M and T+10M forward mark details.   These records are created for every print at the time of print and are published to the SpiderRock elastic cluster 10 minutes later when T + 10M forward marks are available."}),"\n",(0,s.jsx)(t.h3,{id:"metadata",children:"METADATA"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Attribute"}),(0,s.jsx)(t.th,{children:"Value"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Topic"}),(0,s.jsx)(t.td,{children:"2750-market-data-options"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"MLink Token"}),(0,s.jsx)(t.td,{children:"OptAnalytics"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"SRSE Product"}),(0,s.jsx)(t.td,{children:"SRAnalytics"})]})]})]}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Note:"})," The symbol ",(0,s.jsx)(t.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"body",children:"BODY"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"#"}),(0,s.jsx)(t.th,{children:"Field"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Comment"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"10="}),(0,s.jsx)(t.td,{children:"okey"}),(0,s.jsx)(t.td,{children:"OptionKey"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"11="}),(0,s.jsx)(t.td,{children:"prtNumber"}),(0,s.jsx)(t.td,{children:"long"}),(0,s.jsx)(t.td,{children:"Unique print set identifier, will increment but not guaranteed to be sequential"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"368"}),(0,s.jsx)(t.td,{children:"updateType"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"../../../Enums/PrtUpdateType",children:"enum : PrtUpdateType"})}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"100"}),(0,s.jsx)(t.td,{children:"fkey"}),(0,s.jsx)(t.td,{children:"ExpiryKey"}),(0,s.jsx)(t.td,{children:"underlying fkey (if any)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"103"}),(0,s.jsx)(t.td,{children:"ticker"}),(0,s.jsx)(t.td,{children:"TickerKey"}),(0,s.jsx)(t.td,{children:"underlying ticker"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"106"}),(0,s.jsx)(t.td,{children:"prtExch"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"../../../Enums/OptExch",children:"enum : OptExch"})}),(0,s.jsx)(t.td,{children:"exchange on which print took place"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"109"}),(0,s.jsx)(t.td,{children:"prtSize"}),(0,s.jsx)(t.td,{children:"int"}),(0,s.jsx)(t.td,{children:"print size [contracts]"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"112"}),(0,s.jsx)(t.td,{children:"prtPrice"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"print price"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"115"}),(0,s.jsx)(t.td,{children:"prtType"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"../../../Enums/PrtType",children:"enum : PrtType"})}),(0,s.jsx)(t.td,{children:"print type"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"118"}),(0,s.jsx)(t.td,{children:"prtOrders"}),(0,s.jsx)(t.td,{children:"ushort"}),(0,s.jsx)(t.td,{children:"number of participating orders (future exchanges only)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"121"}),(0,s.jsx)(t.td,{children:"prtClusterNum"}),(0,s.jsx)(t.td,{children:"int"}),(0,s.jsx)(t.td,{children:"incremental print cluster counter (one counter per okey; used to group prints into clusters)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"124"}),(0,s.jsx)(t.td,{children:"prtClusterSize"}),(0,s.jsx)(t.td,{children:"int"}),(0,s.jsx)(t.td,{children:"cumulative size of prints in this sequence (prints @ same or more aggressive price with less than 25 ms elapsing since first print; can span exchanges)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"127"}),(0,s.jsx)(t.td,{children:"prtVolume"}),(0,s.jsx)(t.td,{children:"int"}),(0,s.jsx)(t.td,{children:"day print volume in contracts"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"130"}),(0,s.jsx)(t.td,{children:"cxlVolume"}),(0,s.jsx)(t.td,{children:"int"}),(0,s.jsx)(t.td,{children:"day print/cancel volume (num of contracts printed and then cancelled)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"133"}),(0,s.jsx)(t.td,{children:"bidCount"}),(0,s.jsx)(t.td,{children:"ushort"}),(0,s.jsx)(t.td,{children:"number of bid prints"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"136"}),(0,s.jsx)(t.td,{children:"askCount"}),(0,s.jsx)(t.td,{children:"ushort"}),(0,s.jsx)(t.td,{children:"number of ask prints"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"139"}),(0,s.jsx)(t.td,{children:"bidVolume"}),(0,s.jsx)(t.td,{children:"int"}),(0,s.jsx)(t.td,{children:"bid print volume in contracts"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"142"}),(0,s.jsx)(t.td,{children:"askVolume"}),(0,s.jsx)(t.td,{children:"int"}),(0,s.jsx)(t.td,{children:"ask print volume in contracts"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"145"}),(0,s.jsx)(t.td,{children:"ebid"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"exchange bid (@ print time)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"148"}),(0,s.jsx)(t.td,{children:"eask"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"exchange ask (@ print time)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"151"}),(0,s.jsx)(t.td,{children:"ebsz"}),(0,s.jsx)(t.td,{children:"int"}),(0,s.jsx)(t.td,{children:"exchange bid size"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"154"}),(0,s.jsx)(t.td,{children:"easz"}),(0,s.jsx)(t.td,{children:"int"}),(0,s.jsx)(t.td,{children:"exchange ask size"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"157"}),(0,s.jsx)(t.td,{children:"eage"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"age of prevailing quote at time of print"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"160"}),(0,s.jsx)(t.td,{children:"prtSide"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"../../../Enums/PrtSide",children:"enum : PrtSide"})}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"163"}),(0,s.jsx)(t.td,{children:"prtTimestamp"}),(0,s.jsx)(t.td,{children:"long"}),(0,s.jsx)(t.td,{children:"exchange high precision timestamp (if available)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"166"}),(0,s.jsx)(t.td,{children:"netTimestamp"}),(0,s.jsx)(t.td,{children:"long"}),(0,s.jsx)(t.td,{children:"inbound packet PTP timestamp from SR gateway switch; usually syncronized with facility grandfather clock"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"169"}),(0,s.jsx)(t.td,{children:"timestamp"}),(0,s.jsx)(t.td,{children:"DateTime"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"172"}),(0,s.jsx)(t.td,{children:"oBid"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"Option NBBO bid a the time the print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"175"}),(0,s.jsx)(t.td,{children:"oAsk"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"Option NBBO ask a the time the print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"178"}),(0,s.jsx)(t.td,{children:"oBidSz"}),(0,s.jsx)(t.td,{children:"int"}),(0,s.jsx)(t.td,{children:"Option NBBO cumulative bid size at the time the print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"181"}),(0,s.jsx)(t.td,{children:"oAskSz"}),(0,s.jsx)(t.td,{children:"int"}),(0,s.jsx)(t.td,{children:"Option NBBO cumulative ask size at the time the print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"184"}),(0,s.jsx)(t.td,{children:"oBidEx"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"../../../Enums/OptExch",children:"enum : OptExch"})}),(0,s.jsx)(t.td,{children:"First (or largest) option exchange on the bid"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"187"}),(0,s.jsx)(t.td,{children:"oAskEx"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"../../../Enums/OptExch",children:"enum : OptExch"})}),(0,s.jsx)(t.td,{children:"First (or largest) option exchange on the ask"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"190"}),(0,s.jsx)(t.td,{children:"oBidExSz"}),(0,s.jsx)(t.td,{children:"int"}),(0,s.jsx)(t.td,{children:"Option bid size of the largest exchange on the bid at the time the print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"193"}),(0,s.jsx)(t.td,{children:"oAskExSz"}),(0,s.jsx)(t.td,{children:"int"}),(0,s.jsx)(t.td,{children:"Option ask size of the largest exchange on the ask at the time the print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"196"}),(0,s.jsx)(t.td,{children:"oBidCnt"}),(0,s.jsx)(t.td,{children:"byte"}),(0,s.jsx)(t.td,{children:"Number of exchanges on the NBBO bid"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"199"}),(0,s.jsx)(t.td,{children:"oAskCnt"}),(0,s.jsx)(t.td,{children:"byte"}),(0,s.jsx)(t.td,{children:"Number of exchanges on the NBBO ask"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"202"}),(0,s.jsx)(t.td,{children:"oBid2"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"Second level bid price"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"205"}),(0,s.jsx)(t.td,{children:"oAsk2"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"Second level ask price"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"208"}),(0,s.jsx)(t.td,{children:"oBidSz2"}),(0,s.jsx)(t.td,{children:"int"}),(0,s.jsx)(t.td,{children:"Cumulative size on the second level bid price"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"211"}),(0,s.jsx)(t.td,{children:"oAskSz2"}),(0,s.jsx)(t.td,{children:"int"}),(0,s.jsx)(t.td,{children:"Cumulative size on the second level ask price"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"353"}),(0,s.jsx)(t.td,{children:"oBidIv"}),(0,s.jsx)(t.td,{children:"double"}),(0,s.jsx)(t.td,{children:"option bid IV"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"354"}),(0,s.jsx)(t.td,{children:"oAskIv"}),(0,s.jsx)(t.td,{children:"double"}),(0,s.jsx)(t.td,{children:"option ask IV"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"214"}),(0,s.jsx)(t.td,{children:"uBid"}),(0,s.jsx)(t.td,{children:"double"}),(0,s.jsx)(t.td,{children:"underlier bid"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"217"}),(0,s.jsx)(t.td,{children:"uAsk"}),(0,s.jsx)(t.td,{children:"double"}),(0,s.jsx)(t.td,{children:"underlier ask"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"220"}),(0,s.jsx)(t.td,{children:"uPrc"}),(0,s.jsx)(t.td,{children:"double"}),(0,s.jsx)(t.td,{children:"underlier price"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"223"}),(0,s.jsx)(t.td,{children:"yrs"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"years to expiry"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"226"}),(0,s.jsx)(t.td,{children:"rate"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"interest rate"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"229"}),(0,s.jsx)(t.td,{children:"sdiv"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"continuous stock dividend"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"232"}),(0,s.jsx)(t.td,{children:"ddiv"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"discrete stock dividend value (sum of dividends <= expiration)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"235"}),(0,s.jsx)(t.td,{children:"xDe"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"xDelta"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"238"}),(0,s.jsx)(t.td,{children:"xAxis"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"SR surface xAxis value"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"241"}),(0,s.jsx)(t.td,{children:"multihedge"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"../../../Enums/Multihedge",children:"enum : Multihedge"})}),(0,s.jsx)(t.td,{children:"Distinguishes options that have a single underlying security from those that are more complex:  multiple securities,cash components, binary options,etc:  'None','Simple','Complex','AllCash','Binary'"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"244"}),(0,s.jsx)(t.td,{children:"flexType"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"../../../Enums/FlexType",children:"enum : FlexType"})}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"247"}),(0,s.jsx)(t.td,{children:"flexRoot"}),(0,s.jsx)(t.td,{children:"string(12)"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"250"}),(0,s.jsx)(t.td,{children:"prtIv"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"print implied vol"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"253"}),(0,s.jsx)(t.td,{children:"prtDe"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"print delta"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"256"}),(0,s.jsx)(t.td,{children:"prtGa"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"print gamma"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"259"}),(0,s.jsx)(t.td,{children:"prtTh"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"print theta"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"262"}),(0,s.jsx)(t.td,{children:"prtVe"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"print vega"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"265"}),(0,s.jsx)(t.td,{children:"prtRo"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"print rho"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"268"}),(0,s.jsx)(t.td,{children:"calcErr"}),(0,s.jsx)(t.td,{children:"string(24)"}),(0,s.jsx)(t.td,{children:"calc error flag"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"271"}),(0,s.jsx)(t.td,{children:"surfVol"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"SR surface volatility"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"274"}),(0,s.jsx)(t.td,{children:"surfOpx"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"SR surface price"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"277"}),(0,s.jsx)(t.td,{children:"surfAtm"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"SR surface ATM vol"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"280"}),(0,s.jsx)(t.td,{children:"prtProbability"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"[M1] probability that buying prtSize contracts @ prtPrice will have positive m10 pnl (prtPriceM10 >= prtPrice) [recorded at time of print]"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"283"}),(0,s.jsx)(t.td,{children:"prtProbabilityM2"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"alternate probability model"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"286"}),(0,s.jsx)(t.td,{children:"prtProbabilityM3"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"alternate probability model"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"289"}),(0,s.jsx)(t.td,{children:"oBidM1"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"NBBO option bid 1 minute after print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"292"}),(0,s.jsx)(t.td,{children:"oAskM1"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"NBBO option ask 1 minute after print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"295"}),(0,s.jsx)(t.td,{children:"uBidM1"}),(0,s.jsx)(t.td,{children:"double"}),(0,s.jsx)(t.td,{children:"NBBO underlying bid 1 minute after print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"298"}),(0,s.jsx)(t.td,{children:"uAskM1"}),(0,s.jsx)(t.td,{children:"double"}),(0,s.jsx)(t.td,{children:"NBBO underlying ask 1 minute after print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"301"}),(0,s.jsx)(t.td,{children:"uPrcM1"}),(0,s.jsx)(t.td,{children:"double"}),(0,s.jsx)(t.td,{children:"Underlying price 1 minute after print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"304"}),(0,s.jsx)(t.td,{children:"sVolM1"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"Suface volatility 1 minute after print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"307"}),(0,s.jsx)(t.td,{children:"sOpxM1"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"Surface option price 1 minute after print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"310"}),(0,s.jsx)(t.td,{children:"sDivM1"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"sDiv 1 minute after print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"313"}),(0,s.jsx)(t.td,{children:"sErrM1"}),(0,s.jsx)(t.td,{children:"string(12)"}),(0,s.jsx)(t.td,{children:"Surface error condition (if any) 1 minute after print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"316"}),(0,s.jsx)(t.td,{children:"pnlM1"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"pnl after 1 minute"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"319"}),(0,s.jsx)(t.td,{children:"pnlM1Err"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(t.td,{children:"Error condition for PnL calculated over the first 1 minute after the print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"322"}),(0,s.jsx)(t.td,{children:"oBidM10"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"NBBO option bid 10 minutes after print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"325"}),(0,s.jsx)(t.td,{children:"oAskM10"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"NBBO option ask 10 minutes after print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"328"}),(0,s.jsx)(t.td,{children:"uBidM10"}),(0,s.jsx)(t.td,{children:"double"}),(0,s.jsx)(t.td,{children:"NBBO underlying bid 10 minutes after print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"331"}),(0,s.jsx)(t.td,{children:"uAskM10"}),(0,s.jsx)(t.td,{children:"double"}),(0,s.jsx)(t.td,{children:"NBBO underlying ask 10 minutes after print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"334"}),(0,s.jsx)(t.td,{children:"uPrcM10"}),(0,s.jsx)(t.td,{children:"double"}),(0,s.jsx)(t.td,{children:"Underlying price 10 minutes after print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"337"}),(0,s.jsx)(t.td,{children:"sVolM10"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"Suface volatility 10 minutes after print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"340"}),(0,s.jsx)(t.td,{children:"sOpxM10"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"Surface option price 10 minutes after print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"343"}),(0,s.jsx)(t.td,{children:"sDivM10"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"sDiv 10 minutes after print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"346"}),(0,s.jsx)(t.td,{children:"sErrM10"}),(0,s.jsx)(t.td,{children:"string(12)"}),(0,s.jsx)(t.td,{children:"Surface error condition (if any) 10 minutes after print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"349"}),(0,s.jsx)(t.td,{children:"pnlM10"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"pnl after 10 minutes"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"352"}),(0,s.jsx)(t.td,{children:"pnlM10Err"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(t.td,{children:"Error condition for PnL calculated 10 minutes after the print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"355"}),(0,s.jsx)(t.td,{children:"oBidS1"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"NBBO option bid 1 second after print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"356"}),(0,s.jsx)(t.td,{children:"oAskS1"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"NBBO option ask 1 second after print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"357"}),(0,s.jsx)(t.td,{children:"uBidS1"}),(0,s.jsx)(t.td,{children:"double"}),(0,s.jsx)(t.td,{children:"NBBO underlying bid 1 second after print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"358"}),(0,s.jsx)(t.td,{children:"uAskS1"}),(0,s.jsx)(t.td,{children:"double"}),(0,s.jsx)(t.td,{children:"NBBO underlying ask 1 second after print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"359"}),(0,s.jsx)(t.td,{children:"uPrcS1"}),(0,s.jsx)(t.td,{children:"double"}),(0,s.jsx)(t.td,{children:"Underlying price 1 second after print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"360"}),(0,s.jsx)(t.td,{children:"sVolS1"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"Suface volatility 1 second after print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"361"}),(0,s.jsx)(t.td,{children:"sOpxS1"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"Surface option price 1 second after print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"362"}),(0,s.jsx)(t.td,{children:"sDivS1"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"sDiv 1 second after print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"363"}),(0,s.jsx)(t.td,{children:"sErrS1"}),(0,s.jsx)(t.td,{children:"string(12)"}),(0,s.jsx)(t.td,{children:"Surface error condition (if any) 1 second after print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"364"}),(0,s.jsx)(t.td,{children:"pnlS1"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"pnl after 1 second"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"365"}),(0,s.jsx)(t.td,{children:"pnlS1Err"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(t.td,{children:"Error condition for PnL calculated over the first 1 second after the print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"366"}),(0,s.jsx)(t.td,{children:"oBidNext"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"next NBBO option bid after print was received"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"367"}),(0,s.jsx)(t.td,{children:"oAskNext"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{children:"next NBBO option ask after print was received"})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,s.jsxs)(i.A,{children:[(0,s.jsx)(d.A,{value:"Python",label:"Python",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'OptionPrintSet'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n#Required Parameters\n\"apiKey\": API_KEY,\n\"cmd\": 'getschema',\n\"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,s.jsx)(d.A,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=OptionPrintSet'\n\n"})})})]}),"\n",(0,s.jsx)(t.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,s.jsxs)(i.A,{children:[(0,s.jsx)(d.A,{value:"Python",label:"Python",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'OptionPrintSet\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'updateType|fkey|ticker|prtExch|prtSize|prtPrice|prtType|prtOrders|prtClusterNum|prtClusterSize|prtVolume|cxlVolume|bidCount|askCount|bidVolume|askVolume|ebid|eask|ebsz|easz|eage|prtSide|prtTimestamp|netTimestamp|timestamp|oBid|oAsk|oBidSz|oAskSz|oBidEx|oAskEx|oBidExSz|oAskExSz|oBidCnt|oAskCnt|oBid2|oAsk2|oBidSz2|oAskSz2|oBidIv|oAskIv|uBid|uAsk|uPrc|yrs|rate|sdiv|ddiv|xDe|xAxis|multihedge|flexType|flexRoot|prtIv|prtDe|prtGa|prtTh|prtVe|prtRo|calcErr|surfVol|surfOpx|surfAtm|prtProbability|prtProbabilityM2|prtProbabilityM3|oBidM1|oAskM1|uBidM1|uAskM1|uPrcM1|sVolM1|sOpxM1|sDivM1|sErrM1|pnlM1|pnlM1Err|oBidM10|oAskM10|uBidM10|uAskM10|uPrcM10|sVolM10|sOpxM10|sDivM10|sErrM10|pnlM10|pnlM10Err|oBidS1|oAskS1|uBidS1|uAskS1|uPrcS1|sVolS1|sOpxS1|sDivS1|sErrS1|pnlS1|pnlS1Err|oBidNext|oAskNext\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'flexRoot:eq:ExampleString\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(d.A,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=OptionPrintSet' \\\n--data-urlencode 'view=updateType|fkey|ticker|prtExch|prtSize|prtPrice|prtType|prtOrders|prtClusterNum|prtClusterSize|prtVolume|cxlVolume|bidCount|askCount|bidVolume|askVolume|ebid|eask|ebsz|easz|eage|prtSide|prtTimestamp|netTimestamp|timestamp|oBid|oAsk|oBidSz|oAskSz|oBidEx|oAskEx|oBidExSz|oAskExSz|oBidCnt|oAskCnt|oBid2|oAsk2|oBidSz2|oAskSz2|oBidIv|oAskIv|uBid|uAsk|uPrc|yrs|rate|sdiv|ddiv|xDe|xAxis|multihedge|flexType|flexRoot|prtIv|prtDe|prtGa|prtTh|prtVe|prtRo|calcErr|surfVol|surfOpx|surfAtm|prtProbability|prtProbabilityM2|prtProbabilityM3|oBidM1|oAskM1|uBidM1|uAskM1|uPrcM1|sVolM1|sOpxM1|sDivM1|sErrM1|pnlM1|pnlM1Err|oBidM10|oAskM10|uBidM10|uAskM10|uPrcM10|sVolM10|sOpxM10|sDivM10|sErrM10|pnlM10|pnlM10Err|oBidS1|oAskS1|uBidS1|uAskS1|uPrcS1|sVolS1|sOpxS1|sDivS1|sErrS1|pnlS1|pnlS1Err|oBidNext|oAskNext' \\\n--data-urlencode 'where=flexRoot:eq:ExampleString'\n"})})})]}),"\n",(0,s.jsx)(t.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,s.jsxs)(i.A,{children:[(0,s.jsx)(d.A,{value:"Python",label:"Python",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'OptionPrintSet\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'updateType|fkey|ticker|prtExch|prtSize|prtPrice|prtType|prtOrders|prtClusterNum|prtClusterSize|prtVolume|cxlVolume|bidCount|askCount|bidVolume|askVolume|ebid|eask|ebsz|easz|eage|prtSide|prtTimestamp|netTimestamp|timestamp|oBid|oAsk|oBidSz|oAskSz|oBidEx|oAskEx|oBidExSz|oAskExSz|oBidCnt|oAskCnt|oBid2|oAsk2|oBidSz2|oAskSz2|oBidIv|oAskIv|uBid|uAsk|uPrc|yrs|rate|sdiv|ddiv|xDe|xAxis|multihedge|flexType|flexRoot|prtIv|prtDe|prtGa|prtTh|prtVe|prtRo|calcErr|surfVol|surfOpx|surfAtm|prtProbability|prtProbabilityM2|prtProbabilityM3|oBidM1|oAskM1|uBidM1|uAskM1|uPrcM1|sVolM1|sOpxM1|sDivM1|sErrM1|pnlM1|pnlM1Err|oBidM10|oAskM10|uBidM10|uAskM10|uPrcM10|sVolM10|sOpxM10|sDivM10|sErrM10|pnlM10|pnlM10Err|oBidS1|oAskS1|uBidS1|uAskS1|uPrcS1|sVolS1|sOpxS1|sDivS1|sErrS1|pnlS1|pnlS1Err|oBidNext|oAskNext\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'flexRoot:eq:ExampleString\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'updateType:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(d.A,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=OptionPrintSet' \\\n--data-urlencode 'view=updateType|fkey|ticker|prtExch|prtSize|prtPrice|prtType|prtOrders|prtClusterNum|prtClusterSize|prtVolume|cxlVolume|bidCount|askCount|bidVolume|askVolume|ebid|eask|ebsz|easz|eage|prtSide|prtTimestamp|netTimestamp|timestamp|oBid|oAsk|oBidSz|oAskSz|oBidEx|oAskEx|oBidExSz|oAskExSz|oBidCnt|oAskCnt|oBid2|oAsk2|oBidSz2|oAskSz2|oBidIv|oAskIv|uBid|uAsk|uPrc|yrs|rate|sdiv|ddiv|xDe|xAxis|multihedge|flexType|flexRoot|prtIv|prtDe|prtGa|prtTh|prtVe|prtRo|calcErr|surfVol|surfOpx|surfAtm|prtProbability|prtProbabilityM2|prtProbabilityM3|oBidM1|oAskM1|uBidM1|uAskM1|uPrcM1|sVolM1|sOpxM1|sDivM1|sErrM1|pnlM1|pnlM1Err|oBidM10|oAskM10|uBidM10|uAskM10|uPrcM10|sVolM10|sOpxM10|sDivM10|sErrM10|pnlM10|pnlM10Err|oBidS1|oAskS1|uBidS1|uAskS1|uPrcS1|sVolS1|sOpxS1|sDivS1|sErrS1|pnlS1|pnlS1Err|oBidNext|oAskNext' \\\n--data-urlencode 'where=flexRoot:eq:ExampleString' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=updateType:ASC'\n"})})})]}),"\n",(0,s.jsx)(t.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,s.jsxs)(i.A,{children:[(0,s.jsx)(d.A,{value:"Python",label:"Python",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'OptionPrintSet\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'updateType|fkey|ticker|prtExch|prtSize|prtPrice|prtType|prtOrders|prtClusterNum|prtClusterSize|prtVolume|cxlVolume|bidCount|askCount|bidVolume|askVolume|ebid|eask|ebsz|easz|eage|prtSide|prtTimestamp|netTimestamp|timestamp|oBid|oAsk|oBidSz|oAskSz|oBidEx|oAskEx|oBidExSz|oAskExSz|oBidCnt|oAskCnt|oBid2|oAsk2|oBidSz2|oAskSz2|oBidIv|oAskIv|uBid|uAsk|uPrc|yrs|rate|sdiv|ddiv|xDe|xAxis|multihedge|flexType|flexRoot|prtIv|prtDe|prtGa|prtTh|prtVe|prtRo|calcErr|surfVol|surfOpx|surfAtm|prtProbability|prtProbabilityM2|prtProbabilityM3|oBidM1|oAskM1|uBidM1|uAskM1|uPrcM1|sVolM1|sOpxM1|sDivM1|sErrM1|pnlM1|pnlM1Err|oBidM10|oAskM10|uBidM10|uAskM10|uPrcM10|sVolM10|sOpxM10|sDivM10|sErrM10|pnlM10|pnlM10Err|oBidS1|oAskS1|uBidS1|uAskS1|uPrcS1|sVolS1|sOpxS1|sDivS1|sErrS1|pnlS1|pnlS1Err|oBidNext|oAskNext\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'updateType|prtExch|prtType|prtSide|oBidEx|oAskEx|multihedge|flexType|pnlM1Err|pnlM10Err|pnlS1Err\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'flexRoot:eq:ExampleString\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getaggregate\',\n"msgType": MSG_TYPE,\n"measure": MEASURE,\n"group": GROUP,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(d.A,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=OptionPrintSet' \\\n--data-urlencode 'measure=updateType|fkey|ticker|prtExch|prtSize|prtPrice|prtType|prtOrders|prtClusterNum|prtClusterSize|prtVolume|cxlVolume|bidCount|askCount|bidVolume|askVolume|ebid|eask|ebsz|easz|eage|prtSide|prtTimestamp|netTimestamp|timestamp|oBid|oAsk|oBidSz|oAskSz|oBidEx|oAskEx|oBidExSz|oAskExSz|oBidCnt|oAskCnt|oBid2|oAsk2|oBidSz2|oAskSz2|oBidIv|oAskIv|uBid|uAsk|uPrc|yrs|rate|sdiv|ddiv|xDe|xAxis|multihedge|flexType|flexRoot|prtIv|prtDe|prtGa|prtTh|prtVe|prtRo|calcErr|surfVol|surfOpx|surfAtm|prtProbability|prtProbabilityM2|prtProbabilityM3|oBidM1|oAskM1|uBidM1|uAskM1|uPrcM1|sVolM1|sOpxM1|sDivM1|sErrM1|pnlM1|pnlM1Err|oBidM10|oAskM10|uBidM10|uAskM10|uPrcM10|sVolM10|sOpxM10|sDivM10|sErrM10|pnlM10|pnlM10Err|oBidS1|oAskS1|uBidS1|uAskS1|uPrcS1|sVolS1|sOpxS1|sDivS1|sErrS1|pnlS1|pnlS1Err|oBidNext|oAskNext' \\\n--data-urlencode 'group=updateType|prtExch|prtType|prtSide|oBidEx|oAskEx|multihedge|flexType|pnlM1Err|pnlM10Err|pnlS1Err' \\\n--data-urlencode 'where=flexRoot:eq:ExampleString'\n"})})})]}),"\n",(0,s.jsx)(t.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,s.jsxs)(i.A,{children:[(0,s.jsx)(d.A,{value:"Python",label:"Python",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'OptionPrintSet\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'flexRoot:eq:ExampleString\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(d.A,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=OptionPrintSet' \\\n--data-urlencode 'where=flexRoot:eq:ExampleString'\n"})})})]})]})}function u(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}},19365:(e,t,r)=>{r.d(t,{A:()=>d});r(96540);var s=r(34164);const n={tabItem:"tabItem_Ymn6"};var i=r(74848);function d(e){let{children:t,hidden:r,className:d}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,s.A)(n.tabItem,d),hidden:r,children:t})}},11470:(e,t,r)=>{r.d(t,{A:()=>y});var s=r(96540),n=r(34164),i=r(23104),d=r(56347),l=r(205),c=r(57485),a=r(31682),o=r(70679);function h(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function x(e){const{values:t,children:r}=e;return(0,s.useMemo)((()=>{const e=t??function(e){return h(e).map((e=>{let{props:{value:t,label:r,attributes:s,default:n}}=e;return{value:t,label:r,attributes:s,default:n}}))}(r);return function(e){const t=(0,a.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function u(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function p(e){let{queryString:t=!1,groupId:r}=e;const n=(0,d.W6)(),i=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,c.aZ)(i),(0,s.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(n.location.search);t.set(i,e),n.replace({...n.location,search:t.toString()})}),[i,n])]}function j(e){const{defaultValue:t,queryString:r=!1,groupId:n}=e,i=x(e),[d,c]=(0,s.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!u({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const s=r.find((e=>e.default))??r[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:t,tabValues:i}))),[a,h]=p({queryString:r,groupId:n}),[j,m]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,i]=(0,o.Dv)(r);return[n,(0,s.useCallback)((e=>{r&&i.set(e)}),[r,i])]}({groupId:n}),f=(()=>{const e=a??j;return u({value:e,tabValues:i})?e:null})();(0,l.A)((()=>{f&&c(f)}),[f]);return{selectedValue:d,selectValue:(0,s.useCallback)((e=>{if(!u({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);c(e),h(e),m(e)}),[h,m,i]),tabValues:i}}var m=r(92303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=r(74848);function v(e){let{className:t,block:r,selectedValue:s,selectValue:d,tabValues:l}=e;const c=[],{blockElementScrollPositionUntilNextRender:a}=(0,i.a_)(),o=e=>{const t=e.currentTarget,r=c.indexOf(t),n=l[r].value;n!==s&&(a(t),d(n))},h=e=>{let t=null;switch(e.key){case"Enter":o(e);break;case"ArrowRight":{const r=c.indexOf(e.currentTarget)+1;t=c[r]??c[0];break}case"ArrowLeft":{const r=c.indexOf(e.currentTarget)-1;t=c[r]??c[c.length-1];break}}t?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.A)("tabs",{"tabs--block":r},t),children:l.map((e=>{let{value:t,label:r,attributes:i}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,ref:e=>c.push(e),onKeyDown:h,onClick:o,...i,className:(0,n.A)("tabs__item",f.tabItem,i?.className,{"tabs__item--active":s===t}),children:r??t},t)}))})}function S(e){let{lazy:t,children:r,selectedValue:n}=e;const i=(Array.isArray(r)?r:[r]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===n));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:i.map(((e,t)=>(0,s.cloneElement)(e,{key:t,hidden:e.props.value!==n})))})}function b(e){const t=j(e);return(0,g.jsxs)("div",{className:(0,n.A)("tabs-container",f.tabList),children:[(0,g.jsx)(v,{...t,...e}),(0,g.jsx)(S,{...t,...e})]})}function y(e){const t=(0,m.A)();return(0,g.jsx)(b,{...e,children:h(e.children)},String(t))}},28453:(e,t,r)=>{r.d(t,{R:()=>d,x:()=>l});var s=r(96540);const n={},i=s.createContext(n);function d(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);