"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([["9560"],{36358:function(e,a,t){t.r(a),t.d(a,{default:()=>h,frontMatter:()=>c,metadata:()=>n,assets:()=>m,toc:()=>o,contentTitle:()=>d});var n=JSON.parse('{"id":"MessageSchemas/Schema/Topics/risk-control/SpdrRiskGroupControl","title":"SpdrRiskGroupControl","description":"METADATA","source":"@site/versioned_docs/version-8.5.8.3/MessageSchemas/Schema/Topics/4535-risk-control/SpdrRiskGroupControl.md","sourceDirName":"MessageSchemas/Schema/Topics/4535-risk-control","slug":"/MessageSchemas/Schema/Topics/risk-control/SpdrRiskGroupControl","permalink":"/docs/8.5.8.3/MessageSchemas/Schema/Topics/risk-control/SpdrRiskGroupControl","draft":false,"unlisted":false,"tags":[],"version":"8.5.8.3","frontMatter":{"title":"SpdrRiskGroupControl"},"sidebar":"messageSchemasSidebar","previous":{"title":"SpdrRiskControl","permalink":"/docs/8.5.8.3/MessageSchemas/Schema/Topics/risk-control/SpdrRiskControl"},"next":{"title":"4625-risk-counter","permalink":"/docs/8.5.8.3/MessageSchemas/Schema/Topics/risk-counter/"}}'),r=t("52676"),s=t("91503"),i=t("71386"),l=t("9641");let c={title:"SpdrRiskGroupControl"},d="Schema: SpdrRiskGroupControl (ID: 4570)",m={},o=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3},{value:"Post Msgs API Call",id:"post-msgs-api-call",level:3}];function x(e){let a={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.header,{children:(0,r.jsxs)(a.h1,{id:"schema-spdrriskgroupcontrol-id-4570",children:["Schema: SpdrRiskGroupControl ",(0,r.jsx)("span",{className:"small-text",children:"(ID: 4570)"})]})}),"\n",(0,r.jsx)(a.h3,{id:"metadata",children:"METADATA"}),"\n",(0,r.jsxs)(a.table,{children:[(0,r.jsx)(a.thead,{children:(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.th,{children:"Attribute"}),(0,r.jsx)(a.th,{children:"Value"})]})}),(0,r.jsxs)(a.tbody,{children:[(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"Topic"}),(0,r.jsx)(a.td,{children:"4535-risk-control"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"MLink Token"}),(0,r.jsx)(a.td,{children:"ClientTrading"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"SRSE Product"}),(0,r.jsx)(a.td,{children:"SRTrade"})]})]})]}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(a.blockquote,{children:["\n",(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.strong,{children:"Note:"})," The symbol ",(0,r.jsx)(a.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,r.jsx)(a.h3,{id:"body",children:"BODY"}),"\n",(0,r.jsxs)(a.table,{children:[(0,r.jsx)(a.thead,{children:(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.th,{children:"#"}),(0,r.jsx)(a.th,{children:"Field"}),(0,r.jsx)(a.th,{children:"Type"}),(0,r.jsx)(a.th,{children:"Default Value"}),(0,r.jsx)(a.th,{children:"Comment"})]})}),(0,r.jsxs)(a.tbody,{children:[(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"10="}),(0,r.jsx)(a.td,{children:"riskGroupId"}),(0,r.jsx)(a.td,{children:"long"}),(0,r.jsx)(a.td,{}),(0,r.jsx)(a.td,{})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"11="}),(0,r.jsx)(a.td,{children:"accnt"}),(0,r.jsx)(a.td,{children:"string(16)"}),(0,r.jsx)(a.td,{}),(0,r.jsx)(a.td,{})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"12="}),(0,r.jsx)(a.td,{children:"riskFirm"}),(0,r.jsx)(a.td,{children:"string(16)"}),(0,r.jsx)(a.td,{}),(0,r.jsx)(a.td,{children:"SR client firm"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"100"}),(0,r.jsx)(a.td,{children:"sysEnvironment"}),(0,r.jsx)(a.td,{children:(0,r.jsx)(a.a,{href:"../../../Enums/SysEnvironment",children:"enum : SysEnvironment"})}),(0,r.jsx)(a.td,{}),(0,r.jsx)(a.td,{children:"original (source) sys environment [Stable, Current, etc]"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"101"}),(0,r.jsx)(a.td,{children:"runStatus"}),(0,r.jsx)(a.td,{children:(0,r.jsx)(a.a,{href:"../../../Enums/RunStatus",children:"enum : RunStatus"})}),(0,r.jsx)(a.td,{}),(0,r.jsx)(a.td,{children:"original (source) run status [Prod,Beta]"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"102"}),(0,r.jsx)(a.td,{children:"isDisabled"}),(0,r.jsx)(a.td,{children:(0,r.jsx)(a.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,r.jsx)(a.td,{}),(0,r.jsx)(a.td,{children:"will disable all trading in this risk group (parent orders will cancel existing child orders and suspend new child orders)"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"103"}),(0,r.jsx)(a.td,{children:"expDayWtVegaOffset"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+symbol day wtVega offset (target)"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"104"}),(0,r.jsx)(a.td,{children:"maxExpDayWtVegaLn"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max accnt+expiration day (time weighted) vega long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"105"}),(0,r.jsx)(a.td,{children:"maxExpDayWtVegaSh"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max accnt+expiration day (time weighted) vega short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"106"}),(0,r.jsx)(a.td,{children:"maxExpDayRMetric6Ln"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+expiration day rMetric6 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"107"}),(0,r.jsx)(a.td,{children:"maxExpDayRMetric6Sh"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+expiration day rMetric6 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"108"}),(0,r.jsx)(a.td,{children:"symDayDDeltaOffset"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+symbol day $delta offset (target)"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"109"}),(0,r.jsx)(a.td,{children:"maxSymDayDDeltaLn"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+symbol day $delta long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"110"}),(0,r.jsx)(a.td,{children:"maxSymDayDDeltaSh"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+symbol day $delta short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"111"}),(0,r.jsx)(a.td,{children:"symDayVegaOffset"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+symbol day vega offset (target)"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"112"}),(0,r.jsx)(a.td,{children:"maxSymDayVegaLn"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+symbol day vega long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"113"}),(0,r.jsx)(a.td,{children:"maxSymDayVegaSh"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+symbol day vega short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"114"}),(0,r.jsx)(a.td,{children:"symDayWtVegaOffset"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+symbol day wtVega offset (target)"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"115"}),(0,r.jsx)(a.td,{children:"maxSymDayWtVegaLn"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+symbol day (time weighted) vega long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"116"}),(0,r.jsx)(a.td,{children:"maxSymDayWtVegaSh"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+symbol day (time weighted) vega short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"117"}),(0,r.jsx)(a.td,{children:"maxSymDayRMetric7Ln"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+symbol day rMetric7 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"118"}),(0,r.jsx)(a.td,{children:"maxSymDayRMetric7Sh"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+symbol day rMetric7 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"119"}),(0,r.jsx)(a.td,{children:"maxGrpDayContractsLn"}),(0,r.jsx)(a.td,{children:"int"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+riskGroup day opt contracts long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"120"}),(0,r.jsx)(a.td,{children:"maxGrpDayContractsSh"}),(0,r.jsx)(a.td,{children:"int"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+riskGroup day opt contracts short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"121"}),(0,r.jsx)(a.td,{children:"maxGrpDayContractsAbs"}),(0,r.jsx)(a.td,{children:"int"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+riskGroup day opt contracts abs (positive number;-1=no limit);risk limit = max limit - abs(current net counter)"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"122"}),(0,r.jsx)(a.td,{children:"maxGrpDayDDeltaLn"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+riskGroup day $delta long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"123"}),(0,r.jsx)(a.td,{children:"maxGrpDayDDeltaSh"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+riskGroup day $delta short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"124"}),(0,r.jsx)(a.td,{children:"maxGrpDayVegaLn"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+riskGroup day vega long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"125"}),(0,r.jsx)(a.td,{children:"maxGrpDayVegaSh"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+riskGroup day vega short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"126"}),(0,r.jsx)(a.td,{children:"maxGrpDayVegaAbs"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+riskGroup day vega abs (positive number;-1=no limit);risk limit = max limit - abs(current net counter)"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"127"}),(0,r.jsx)(a.td,{children:"grpDayVegaRatio"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"1.0"}),(0,r.jsx)(a.td,{children:"target bot / sld ratio (eg ratio=2.0 means that neutral is bot vega = 2x sld vega)"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"128"}),(0,r.jsx)(a.td,{children:"maxGrpDayRMetric1Ln"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+riskGroup day rMetric1 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"129"}),(0,r.jsx)(a.td,{children:"maxGrpDayRMetric1Sh"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+riskGroup day rMetric1 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"130"}),(0,r.jsx)(a.td,{children:"maxGrpDayRMetric1Abs"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+riskGroup day rMetric1 abs (positive number;-1=no limit);risk limit = max limit - abs(current net counter)"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"131"}),(0,r.jsx)(a.td,{children:"grpDayRMetric1Ratio"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"1.0"}),(0,r.jsx)(a.td,{children:"target bot / sld ratio (eg ratio=0.5 means that neutral is bot rMetric1 = 0.5x sld rMetric1)"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"132"}),(0,r.jsx)(a.td,{children:"maxGrpDayRMetric2Ln"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+riskGroup day rMetric2 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"133"}),(0,r.jsx)(a.td,{children:"maxGrpDayRMetric2Sh"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+riskGroup day rMetric2 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"134"}),(0,r.jsx)(a.td,{children:"maxGrpDayRMetric3Ln"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+riskGroup day rMetric3 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"135"}),(0,r.jsx)(a.td,{children:"maxGrpDayRMetric3Sh"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+riskGroup day rMetric3 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"136"}),(0,r.jsx)(a.td,{children:"maxGrpDayRMetric4Ln"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+riskGroup day rMetric4 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"137"}),(0,r.jsx)(a.td,{children:"maxGrpDayRMetric4Sh"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+riskGroup day rMetric4 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"138"}),(0,r.jsx)(a.td,{children:"maxGrpDayRMetric5Ln"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+riskGroup day rMetric5 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"139"}),(0,r.jsx)(a.td,{children:"maxGrpDayRMetric5Sh"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+riskGroup day rMetric5 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"140"}),(0,r.jsx)(a.td,{children:"accEmaCxlDDeltaLn"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct 60s EMA $delta long (positive number; <= 0 is no limit) [will immediately cxl all option orders in a symbol if any order in the symbol breaches]"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"141"}),(0,r.jsx)(a.td,{children:"accEmaCxlDDeltaSh"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct 60s EMA $delta short (positive number; <= 0 is no limit)"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"142"}),(0,r.jsx)(a.td,{children:"accEmaCxlWtVegaLn"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct 60s EMA wtVega long (positive number; <= 0 is no limit) [will immediately cxl all option orders in a symbol if any order in the symbol breaches]"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"143"}),(0,r.jsx)(a.td,{children:"accEmaCxlWtVegaSh"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct 60s EMA wtVega short (positive number; <= 0 is no limit)"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"144"}),(0,r.jsx)(a.td,{children:"symEmaCxlDDeltaLn"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+symbol 60s EMA $delta long (positive number; <= 0 is no limit) [will immediately cxl all option orders in a symbol if any order in the symbol breaches]"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"145"}),(0,r.jsx)(a.td,{children:"symEmaCxlDDeltaSh"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+symbol 60s EMA $delta short (positive number; <= 0 is no limit)"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"146"}),(0,r.jsx)(a.td,{children:"symEmaCxlWtVegaLn"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+symbol 60s EMA wtVega long (positive number; <= 0 is no limit) [will immediately cxl all option orders in a symbol if any order in the symbol breaches]"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"147"}),(0,r.jsx)(a.td,{children:"symEmaCxlWtVegaSh"}),(0,r.jsx)(a.td,{children:"float"}),(0,r.jsx)(a.td,{children:"-1"}),(0,r.jsx)(a.td,{children:"max acct+symbol 60s EMA wtVega short (positive number; <= 0 is no limit)"})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"148"}),(0,r.jsx)(a.td,{children:"modifiedBy"}),(0,r.jsx)(a.td,{children:"string(24)"}),(0,r.jsx)(a.td,{}),(0,r.jsx)(a.td,{})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"149"}),(0,r.jsx)(a.td,{children:"modifiedIn"}),(0,r.jsx)(a.td,{children:(0,r.jsx)(a.a,{href:"../../../Enums/SysEnvironment",children:"enum : SysEnvironment"})}),(0,r.jsx)(a.td,{}),(0,r.jsx)(a.td,{})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"150"}),(0,r.jsx)(a.td,{children:"timestamp"}),(0,r.jsx)(a.td,{children:"DateTime"}),(0,r.jsx)(a.td,{}),(0,r.jsx)(a.td,{})]})]})]}),"\n",(0,r.jsx)(a.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,r.jsxs)(i.Z,{children:[(0,r.jsx)(l.Z,{value:"Python",label:"Python",children:(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'SpdrRiskGroupControl'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n    # Required Parameters\n    \"apiKey\": API_KEY,\n    \"cmd\": 'getschema',\n    \"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,r.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=SpdrRiskGroupControl'\n\n"})})})]}),"\n",(0,r.jsx)(a.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,r.jsxs)(i.Z,{children:[(0,r.jsx)(l.Z,{value:"Python",label:"Python",children:(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'SpdrRiskGroupControl\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'sysEnvironment|runStatus|isDisabled|expDayWtVegaOffset|maxExpDayWtVegaLn|maxExpDayWtVegaSh|maxExpDayRMetric6Ln|maxExpDayRMetric6Sh|symDayDDeltaOffset|maxSymDayDDeltaLn|maxSymDayDDeltaSh|symDayVegaOffset|maxSymDayVegaLn|maxSymDayVegaSh|symDayWtVegaOffset|maxSymDayWtVegaLn|maxSymDayWtVegaSh|maxSymDayRMetric7Ln|maxSymDayRMetric7Sh|maxGrpDayContractsLn|maxGrpDayContractsSh|maxGrpDayContractsAbs|maxGrpDayDDeltaLn|maxGrpDayDDeltaSh|maxGrpDayVegaLn|maxGrpDayVegaSh|maxGrpDayVegaAbs|grpDayVegaRatio|maxGrpDayRMetric1Ln|maxGrpDayRMetric1Sh|maxGrpDayRMetric1Abs|grpDayRMetric1Ratio|maxGrpDayRMetric2Ln|maxGrpDayRMetric2Sh|maxGrpDayRMetric3Ln|maxGrpDayRMetric3Sh|maxGrpDayRMetric4Ln|maxGrpDayRMetric4Sh|maxGrpDayRMetric5Ln|maxGrpDayRMetric5Sh|accEmaCxlDDeltaLn|accEmaCxlDDeltaSh|accEmaCxlWtVegaLn|accEmaCxlWtVegaSh|symEmaCxlDDeltaLn|symEmaCxlDDeltaSh|symEmaCxlWtVegaLn|symEmaCxlWtVegaSh|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,r.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=SpdrRiskGroupControl' \\\n--data-urlencode 'view=sysEnvironment|runStatus|isDisabled|expDayWtVegaOffset|maxExpDayWtVegaLn|maxExpDayWtVegaSh|maxExpDayRMetric6Ln|maxExpDayRMetric6Sh|symDayDDeltaOffset|maxSymDayDDeltaLn|maxSymDayDDeltaSh|symDayVegaOffset|maxSymDayVegaLn|maxSymDayVegaSh|symDayWtVegaOffset|maxSymDayWtVegaLn|maxSymDayWtVegaSh|maxSymDayRMetric7Ln|maxSymDayRMetric7Sh|maxGrpDayContractsLn|maxGrpDayContractsSh|maxGrpDayContractsAbs|maxGrpDayDDeltaLn|maxGrpDayDDeltaSh|maxGrpDayVegaLn|maxGrpDayVegaSh|maxGrpDayVegaAbs|grpDayVegaRatio|maxGrpDayRMetric1Ln|maxGrpDayRMetric1Sh|maxGrpDayRMetric1Abs|grpDayRMetric1Ratio|maxGrpDayRMetric2Ln|maxGrpDayRMetric2Sh|maxGrpDayRMetric3Ln|maxGrpDayRMetric3Sh|maxGrpDayRMetric4Ln|maxGrpDayRMetric4Sh|maxGrpDayRMetric5Ln|maxGrpDayRMetric5Sh|accEmaCxlDDeltaLn|accEmaCxlDDeltaSh|accEmaCxlWtVegaLn|accEmaCxlWtVegaSh|symEmaCxlDDeltaLn|symEmaCxlDDeltaSh|symEmaCxlWtVegaLn|symEmaCxlWtVegaSh|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,r.jsx)(a.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,r.jsxs)(i.Z,{children:[(0,r.jsx)(l.Z,{value:"Python",label:"Python",children:(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'SpdrRiskGroupControl\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'sysEnvironment|runStatus|isDisabled|expDayWtVegaOffset|maxExpDayWtVegaLn|maxExpDayWtVegaSh|maxExpDayRMetric6Ln|maxExpDayRMetric6Sh|symDayDDeltaOffset|maxSymDayDDeltaLn|maxSymDayDDeltaSh|symDayVegaOffset|maxSymDayVegaLn|maxSymDayVegaSh|symDayWtVegaOffset|maxSymDayWtVegaLn|maxSymDayWtVegaSh|maxSymDayRMetric7Ln|maxSymDayRMetric7Sh|maxGrpDayContractsLn|maxGrpDayContractsSh|maxGrpDayContractsAbs|maxGrpDayDDeltaLn|maxGrpDayDDeltaSh|maxGrpDayVegaLn|maxGrpDayVegaSh|maxGrpDayVegaAbs|grpDayVegaRatio|maxGrpDayRMetric1Ln|maxGrpDayRMetric1Sh|maxGrpDayRMetric1Abs|grpDayRMetric1Ratio|maxGrpDayRMetric2Ln|maxGrpDayRMetric2Sh|maxGrpDayRMetric3Ln|maxGrpDayRMetric3Sh|maxGrpDayRMetric4Ln|maxGrpDayRMetric4Sh|maxGrpDayRMetric5Ln|maxGrpDayRMetric5Sh|accEmaCxlDDeltaLn|accEmaCxlDDeltaSh|accEmaCxlWtVegaLn|accEmaCxlWtVegaSh|symEmaCxlDDeltaLn|symEmaCxlDDeltaSh|symEmaCxlWtVegaLn|symEmaCxlWtVegaSh|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'sysEnvironment:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,r.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=SpdrRiskGroupControl' \\\n--data-urlencode 'view=sysEnvironment|runStatus|isDisabled|expDayWtVegaOffset|maxExpDayWtVegaLn|maxExpDayWtVegaSh|maxExpDayRMetric6Ln|maxExpDayRMetric6Sh|symDayDDeltaOffset|maxSymDayDDeltaLn|maxSymDayDDeltaSh|symDayVegaOffset|maxSymDayVegaLn|maxSymDayVegaSh|symDayWtVegaOffset|maxSymDayWtVegaLn|maxSymDayWtVegaSh|maxSymDayRMetric7Ln|maxSymDayRMetric7Sh|maxGrpDayContractsLn|maxGrpDayContractsSh|maxGrpDayContractsAbs|maxGrpDayDDeltaLn|maxGrpDayDDeltaSh|maxGrpDayVegaLn|maxGrpDayVegaSh|maxGrpDayVegaAbs|grpDayVegaRatio|maxGrpDayRMetric1Ln|maxGrpDayRMetric1Sh|maxGrpDayRMetric1Abs|grpDayRMetric1Ratio|maxGrpDayRMetric2Ln|maxGrpDayRMetric2Sh|maxGrpDayRMetric3Ln|maxGrpDayRMetric3Sh|maxGrpDayRMetric4Ln|maxGrpDayRMetric4Sh|maxGrpDayRMetric5Ln|maxGrpDayRMetric5Sh|accEmaCxlDDeltaLn|accEmaCxlDDeltaSh|accEmaCxlWtVegaLn|accEmaCxlWtVegaSh|symEmaCxlDDeltaLn|symEmaCxlDDeltaSh|symEmaCxlWtVegaLn|symEmaCxlWtVegaSh|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'where=accnt:eq:ExampleString' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=sysEnvironment:ASC'\n"})})})]}),"\n",(0,r.jsx)(a.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,r.jsxs)(i.Z,{children:[(0,r.jsx)(l.Z,{value:"Python",label:"Python",children:(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'SpdrRiskGroupControl\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'sysEnvironment|runStatus|isDisabled|expDayWtVegaOffset|maxExpDayWtVegaLn|maxExpDayWtVegaSh|maxExpDayRMetric6Ln|maxExpDayRMetric6Sh|symDayDDeltaOffset|maxSymDayDDeltaLn|maxSymDayDDeltaSh|symDayVegaOffset|maxSymDayVegaLn|maxSymDayVegaSh|symDayWtVegaOffset|maxSymDayWtVegaLn|maxSymDayWtVegaSh|maxSymDayRMetric7Ln|maxSymDayRMetric7Sh|maxGrpDayContractsLn|maxGrpDayContractsSh|maxGrpDayContractsAbs|maxGrpDayDDeltaLn|maxGrpDayDDeltaSh|maxGrpDayVegaLn|maxGrpDayVegaSh|maxGrpDayVegaAbs|grpDayVegaRatio|maxGrpDayRMetric1Ln|maxGrpDayRMetric1Sh|maxGrpDayRMetric1Abs|grpDayRMetric1Ratio|maxGrpDayRMetric2Ln|maxGrpDayRMetric2Sh|maxGrpDayRMetric3Ln|maxGrpDayRMetric3Sh|maxGrpDayRMetric4Ln|maxGrpDayRMetric4Sh|maxGrpDayRMetric5Ln|maxGrpDayRMetric5Sh|accEmaCxlDDeltaLn|accEmaCxlDDeltaSh|accEmaCxlWtVegaLn|accEmaCxlWtVegaSh|symEmaCxlDDeltaLn|symEmaCxlDDeltaSh|symEmaCxlWtVegaLn|symEmaCxlWtVegaSh|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'sysEnvironment|runStatus|isDisabled|modifiedIn\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getaggregate\',\n    "msgType": MSG_TYPE,\n    "measure": MEASURE,\n    "group": GROUP,\n    # Optional Parameters\n    "where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,r.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=SpdrRiskGroupControl' \\\n--data-urlencode 'measure=sysEnvironment|runStatus|isDisabled|expDayWtVegaOffset|maxExpDayWtVegaLn|maxExpDayWtVegaSh|maxExpDayRMetric6Ln|maxExpDayRMetric6Sh|symDayDDeltaOffset|maxSymDayDDeltaLn|maxSymDayDDeltaSh|symDayVegaOffset|maxSymDayVegaLn|maxSymDayVegaSh|symDayWtVegaOffset|maxSymDayWtVegaLn|maxSymDayWtVegaSh|maxSymDayRMetric7Ln|maxSymDayRMetric7Sh|maxGrpDayContractsLn|maxGrpDayContractsSh|maxGrpDayContractsAbs|maxGrpDayDDeltaLn|maxGrpDayDDeltaSh|maxGrpDayVegaLn|maxGrpDayVegaSh|maxGrpDayVegaAbs|grpDayVegaRatio|maxGrpDayRMetric1Ln|maxGrpDayRMetric1Sh|maxGrpDayRMetric1Abs|grpDayRMetric1Ratio|maxGrpDayRMetric2Ln|maxGrpDayRMetric2Sh|maxGrpDayRMetric3Ln|maxGrpDayRMetric3Sh|maxGrpDayRMetric4Ln|maxGrpDayRMetric4Sh|maxGrpDayRMetric5Ln|maxGrpDayRMetric5Sh|accEmaCxlDDeltaLn|accEmaCxlDDeltaSh|accEmaCxlWtVegaLn|accEmaCxlWtVegaSh|symEmaCxlDDeltaLn|symEmaCxlDDeltaSh|symEmaCxlWtVegaLn|symEmaCxlWtVegaSh|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'group=sysEnvironment|runStatus|isDisabled|modifiedIn' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,r.jsx)(a.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,r.jsxs)(i.Z,{children:[(0,r.jsx)(l.Z,{value:"Python",label:"Python",children:(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'SpdrRiskGroupControl\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,r.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=SpdrRiskGroupControl' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,r.jsx)(a.h3,{id:"post-msgs-api-call",children:"Post Msgs API Call"}),"\n",(0,r.jsxs)(i.Z,{children:[(0,r.jsx)(l.Z,{value:"Python",label:"Python",children:(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-python",children:'import requests\n\n# Replace with your desired MLINK URL\nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Request Parameters\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'postmsgs\',\n    "postaction": "I", # (I)nsert, (U)pdate, (R)eplace, or (D)elete\n    "postmerge": "Y", # (Y)es or (N)o\n}\n\npayload = {\n    "header": {\n        "mTyp": "SpdrRiskGroupControl"\n    },\n    "message": {\n        "pkey": {\n            "riskGroupId": 1, // long\n            "accnt": "exampleString", // string\n            "riskFirm": "exampleString" // string\n        },\n        "sysEnvironment": "enumValue", // enum(SysEnvironment) - None, Neptune, Pluto, V7_Stable, V7_Latest, Saturn, Venus, Mars, SysTest, V7_Current\n        "runStatus": "enumValue", // enum(RunStatus) - None, Prod, Beta, UAT, SysTest\n        "isDisabled": "enumValue", // enum(YesNo) - None, Yes, No\n        "expDayWtVegaOffset": -1, // float. Default=-1\n        "maxExpDayWtVegaLn": -1, // float. Default=-1\n        "maxExpDayWtVegaSh": -1, // float. Default=-1\n        "maxExpDayRMetric6Ln": -1, // float. Default=-1\n        "maxExpDayRMetric6Sh": -1, // float. Default=-1\n        "symDayDDeltaOffset": -1, // float. Default=-1\n        "maxSymDayDDeltaLn": -1, // float. Default=-1\n        "maxSymDayDDeltaSh": -1, // float. Default=-1\n        "symDayVegaOffset": -1, // float. Default=-1\n        "maxSymDayVegaLn": -1, // float. Default=-1\n        "maxSymDayVegaSh": -1, // float. Default=-1\n        "symDayWtVegaOffset": -1, // float. Default=-1\n        "maxSymDayWtVegaLn": -1, // float. Default=-1\n        "maxSymDayWtVegaSh": -1, // float. Default=-1\n        "maxSymDayRMetric7Ln": -1, // float. Default=-1\n        "maxSymDayRMetric7Sh": -1, // float. Default=-1\n        "maxGrpDayContractsLn": -1, // int. Default=-1\n        "maxGrpDayContractsSh": -1, // int. Default=-1\n        "maxGrpDayContractsAbs": -1, // int. Default=-1\n        "maxGrpDayDDeltaLn": -1, // float. Default=-1\n        "maxGrpDayDDeltaSh": -1, // float. Default=-1\n        "maxGrpDayVegaLn": -1, // float. Default=-1\n        "maxGrpDayVegaSh": -1, // float. Default=-1\n        "maxGrpDayVegaAbs": -1, // float. Default=-1\n        "grpDayVegaRatio": 1.0, // float. Default=1.0\n        "maxGrpDayRMetric1Ln": -1, // float. Default=-1\n        "maxGrpDayRMetric1Sh": -1, // float. Default=-1\n        "maxGrpDayRMetric1Abs": -1, // float. Default=-1\n        "grpDayRMetric1Ratio": 1.0, // float. Default=1.0\n        "maxGrpDayRMetric2Ln": -1, // float. Default=-1\n        "maxGrpDayRMetric2Sh": -1, // float. Default=-1\n        "maxGrpDayRMetric3Ln": -1, // float. Default=-1\n        "maxGrpDayRMetric3Sh": -1, // float. Default=-1\n        "maxGrpDayRMetric4Ln": -1, // float. Default=-1\n        "maxGrpDayRMetric4Sh": -1, // float. Default=-1\n        "maxGrpDayRMetric5Ln": -1, // float. Default=-1\n        "maxGrpDayRMetric5Sh": -1, // float. Default=-1\n        "accEmaCxlDDeltaLn": -1, // float. Default=-1\n        "accEmaCxlDDeltaSh": -1, // float. Default=-1\n        "accEmaCxlWtVegaLn": -1, // float. Default=-1\n        "accEmaCxlWtVegaSh": -1, // float. Default=-1\n        "symEmaCxlDDeltaLn": -1, // float. Default=-1\n        "symEmaCxlDDeltaSh": -1, // float. Default=-1\n        "symEmaCxlWtVegaLn": -1, // float. Default=-1\n        "symEmaCxlWtVegaSh": -1, // float. Default=-1\n        "modifiedBy": "exampleString", // string\n        "modifiedIn": "enumValue", // enum(SysEnvironment) - None, Neptune, Pluto, V7_Stable, V7_Latest, Saturn, Venus, Mars, SysTest, V7_Current\n        "timestamp": "2025-01-01 12:00:00.000000" // yyyy-MM-dd HH:mm:ss.SSSSSS\n    }\n}\n\nresponse = requests.post(MLINK_PROD_URL, params=params, json=payload)\n'})})}),(0,r.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-bash",children:'curl -X POST \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\' \\\n--data-urlencode \'apiKey=XXXX-XXXX-XXXX-XXXX\' \\\n--data-urlencode \'cmd=postmsgs\' \\\n--data-urlencode \'postaction=I\' \\ # (I)nsert, (U)pdate, (R)eplace, or (D)elete\n--data-urlencode \'postmerge=Y\' \\ # (Y)es or (N)o\n--header \'Content-Type: application/json\' \\\n--data \'{\n    "header": {\n        "mTyp": "SpdrRiskGroupControl"\n    },\n    "message": {\n        "pkey": {\n            "riskGroupId": 1, // long\n            "accnt": "exampleString", // string\n            "riskFirm": "exampleString" // string\n        },\n        "sysEnvironment": "enumValue", // enum(SysEnvironment) - None, Neptune, Pluto, V7_Stable, V7_Latest, Saturn, Venus, Mars, SysTest, V7_Current\n        "runStatus": "enumValue", // enum(RunStatus) - None, Prod, Beta, UAT, SysTest\n        "isDisabled": "enumValue", // enum(YesNo) - None, Yes, No\n        "expDayWtVegaOffset": -1, // float. Default=-1\n        "maxExpDayWtVegaLn": -1, // float. Default=-1\n        "maxExpDayWtVegaSh": -1, // float. Default=-1\n        "maxExpDayRMetric6Ln": -1, // float. Default=-1\n        "maxExpDayRMetric6Sh": -1, // float. Default=-1\n        "symDayDDeltaOffset": -1, // float. Default=-1\n        "maxSymDayDDeltaLn": -1, // float. Default=-1\n        "maxSymDayDDeltaSh": -1, // float. Default=-1\n        "symDayVegaOffset": -1, // float. Default=-1\n        "maxSymDayVegaLn": -1, // float. Default=-1\n        "maxSymDayVegaSh": -1, // float. Default=-1\n        "symDayWtVegaOffset": -1, // float. Default=-1\n        "maxSymDayWtVegaLn": -1, // float. Default=-1\n        "maxSymDayWtVegaSh": -1, // float. Default=-1\n        "maxSymDayRMetric7Ln": -1, // float. Default=-1\n        "maxSymDayRMetric7Sh": -1, // float. Default=-1\n        "maxGrpDayContractsLn": -1, // int. Default=-1\n        "maxGrpDayContractsSh": -1, // int. Default=-1\n        "maxGrpDayContractsAbs": -1, // int. Default=-1\n        "maxGrpDayDDeltaLn": -1, // float. Default=-1\n        "maxGrpDayDDeltaSh": -1, // float. Default=-1\n        "maxGrpDayVegaLn": -1, // float. Default=-1\n        "maxGrpDayVegaSh": -1, // float. Default=-1\n        "maxGrpDayVegaAbs": -1, // float. Default=-1\n        "grpDayVegaRatio": 1.0, // float. Default=1.0\n        "maxGrpDayRMetric1Ln": -1, // float. Default=-1\n        "maxGrpDayRMetric1Sh": -1, // float. Default=-1\n        "maxGrpDayRMetric1Abs": -1, // float. Default=-1\n        "grpDayRMetric1Ratio": 1.0, // float. Default=1.0\n        "maxGrpDayRMetric2Ln": -1, // float. Default=-1\n        "maxGrpDayRMetric2Sh": -1, // float. Default=-1\n        "maxGrpDayRMetric3Ln": -1, // float. Default=-1\n        "maxGrpDayRMetric3Sh": -1, // float. Default=-1\n        "maxGrpDayRMetric4Ln": -1, // float. Default=-1\n        "maxGrpDayRMetric4Sh": -1, // float. Default=-1\n        "maxGrpDayRMetric5Ln": -1, // float. Default=-1\n        "maxGrpDayRMetric5Sh": -1, // float. Default=-1\n        "accEmaCxlDDeltaLn": -1, // float. Default=-1\n        "accEmaCxlDDeltaSh": -1, // float. Default=-1\n        "accEmaCxlWtVegaLn": -1, // float. Default=-1\n        "accEmaCxlWtVegaSh": -1, // float. Default=-1\n        "symEmaCxlDDeltaLn": -1, // float. Default=-1\n        "symEmaCxlDDeltaSh": -1, // float. Default=-1\n        "symEmaCxlWtVegaLn": -1, // float. Default=-1\n        "symEmaCxlWtVegaSh": -1, // float. Default=-1\n        "modifiedBy": "exampleString", // string\n        "modifiedIn": "enumValue", // enum(SysEnvironment) - None, Neptune, Pluto, V7_Stable, V7_Latest, Saturn, Venus, Mars, SysTest, V7_Current\n        "timestamp": "2025-01-01 12:00:00.000000" // yyyy-MM-dd HH:mm:ss.SSSSSS\n    }\n}\'\n'})})})]})]})}function h(e={}){let{wrapper:a}={...(0,s.a)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(x,{...e})}):x(e)}},9641:function(e,a,t){t.d(a,{Z:()=>s});var n=t("52676");t("75271");var r=t("54461");function s(e){let{children:a,hidden:t,className:s}=e;return(0,n.jsx)("div",{role:"tabpanel",className:(0,r.Z)("tabItem_SSzl",s),hidden:t,children:a})}},71386:function(e,a,t){t.d(a,{Z:()=>f});var n=t("52676"),r=t("75271"),s=t("54461"),i=t("52289"),l=t("3225"),c=t("42834"),d=t("40578"),m=t("35834"),o=t("79616");function x(e){return r.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||r.isValidElement(e)&&function(e){let{props:a}=e;return!!a&&"object"==typeof a&&"value"in a}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h(e){let{value:a,tabValues:t}=e;return t.some(e=>e.value===a)}var y=t("44537");function u(e){let{className:a,block:t,selectedValue:r,selectValue:l,tabValues:c}=e,d=[],{blockElementScrollPositionUntilNextRender:m}=(0,i.o5)(),o=e=>{let a=e.currentTarget,t=c[d.indexOf(a)].value;t!==r&&(m(a),l(t))},x=e=>{let a=null;switch(e.key){case"Enter":o(e);break;case"ArrowRight":{let t=d.indexOf(e.currentTarget)+1;a=d[t]??d[0];break}case"ArrowLeft":{let t=d.indexOf(e.currentTarget)-1;a=d[t]??d[d.length-1]}}a?.focus()};return(0,n.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":t},a),children:c.map(e=>{let{value:a,label:t,attributes:i}=e;return(0,n.jsx)("li",{role:"tab",tabIndex:r===a?0:-1,"aria-selected":r===a,ref:e=>d.push(e),onKeyDown:x,onClick:o,...i,className:(0,s.Z)("tabs__item","tabItem_aitt",i?.className,{"tabs__item--active":r===a}),children:t??a},a)})})}function p(e){let{lazy:a,children:t,selectedValue:i}=e,l=(Array.isArray(t)?t:[t]).filter(Boolean);if(a){let e=l.find(e=>e.props.value===i);return e?(0,r.cloneElement)(e,{className:(0,s.Z)("margin-top--md",e.props.className)}):null}return(0,n.jsx)("div",{className:"margin-top--md",children:l.map((e,a)=>(0,r.cloneElement)(e,{key:a,hidden:e.props.value!==i}))})}function D(e){let a=function(e){let{defaultValue:a,queryString:t=!1,groupId:n}=e,s=function(e){let{values:a,children:t}=e;return(0,r.useMemo)(()=>{let e=a??x(t).map(e=>{let{props:{value:a,label:t,attributes:n,default:r}}=e;return{value:a,label:t,attributes:n,default:r}});return!function(e){let a=(0,m.lx)(e,(e,a)=>e.value===a.value);if(a.length>0)throw Error(`Docusaurus error: Duplicate values "${a.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[a,t])}(e),[i,y]=(0,r.useState)(()=>(function(e){let{defaultValue:a,tabValues:t}=e;if(0===t.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!h({value:a,tabValues:t}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${a}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return a}let n=t.find(e=>e.default)??t[0];if(!n)throw Error("Unexpected error: 0 tabValues");return n.value})({defaultValue:a,tabValues:s})),[u,p]=function(e){let{queryString:a=!1,groupId:t}=e,n=(0,l.k6)(),s=function(e){let{queryString:a=!1,groupId:t}=e;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!t)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:a,groupId:t});return[(0,d._X)(s),(0,r.useCallback)(e=>{if(!s)return;let a=new URLSearchParams(n.location.search);a.set(s,e),n.replace({...n.location,search:a.toString()})},[s,n])]}({queryString:t,groupId:n}),[D,f]=function(e){let{groupId:a}=e,t=a?`docusaurus.tab.${a}`:null,[n,s]=(0,o.Nk)(t);return[n,(0,r.useCallback)(e=>{t&&s.set(e)},[t,s])]}({groupId:n}),g=(()=>{let e=u??D;return h({value:e,tabValues:s})?e:null})();return(0,c.Z)(()=>{g&&y(g)},[g]),{selectedValue:i,selectValue:(0,r.useCallback)(e=>{if(!h({value:e,tabValues:s}))throw Error(`Can't select invalid tab value=${e}`);y(e),p(e),f(e)},[p,f,s]),tabValues:s}}(e);return(0,n.jsxs)("div",{className:(0,s.Z)("tabs-container","tabList_ArS0"),children:[(0,n.jsx)(u,{...a,...e}),(0,n.jsx)(p,{...a,...e})]})}function f(e){let a=(0,y.Z)();return(0,n.jsx)(D,{...e,children:x(e.children)},String(a))}},91503:function(e,a,t){t.d(a,{Z:function(){return l},a:function(){return i}});var n=t(75271);let r={},s=n.createContext(r);function i(e){let a=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function l(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(s.Provider,{value:a},e.children)}}}]);