"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[80256],{4315:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>m,frontMatter:()=>d,metadata:()=>c,toc:()=>h});var r=t(74848),i=t(28453),s=t(11470),l=t(19365);const d={title:"ClientFirmConfig"},a="Schema: ClientFirmConfig (ID: 1850)",c={id:"MessageSchemas/Schema/Topics/client-config/ClientFirmConfig",title:"ClientFirmConfig",description:"METADATA",source:"@site/versioned_docs/version-8.5.3.3/MessageSchemas/Schema/Topics/1800-client-config/ClientFirmConfig.md",sourceDirName:"MessageSchemas/Schema/Topics/1800-client-config",slug:"/MessageSchemas/Schema/Topics/client-config/ClientFirmConfig",permalink:"/docs/8.5.3.3/MessageSchemas/Schema/Topics/client-config/ClientFirmConfig",draft:!1,unlisted:!1,tags:[],version:"8.5.3.3",frontMatter:{title:"ClientFirmConfig"},sidebar:"messageSchemasSidebar",previous:{title:"ClientAccountConfig",permalink:"/docs/8.5.3.3/MessageSchemas/Schema/Topics/client-config/ClientAccountConfig"},next:{title:"ClientPrivateSRSE",permalink:"/docs/8.5.3.3/MessageSchemas/Schema/Topics/client-config/ClientPrivateSRSE"}},o={},h=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"REPEATING FIELDS",id:"repeating-fields",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3}];function u(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"schema-clientfirmconfig-id-1850",children:["Schema: ClientFirmConfig ",(0,r.jsx)("span",{className:"small-text",children:"(ID: 1850)"})]}),"\n",(0,r.jsx)(n.h3,{id:"metadata",children:"METADATA"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Attribute"}),(0,r.jsx)(n.th,{children:"Value"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Topic"}),(0,r.jsx)(n.td,{children:"1800-client-config"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"MLink Token"}),(0,r.jsx)(n.td,{children:"ClientConfig"})]})]})]}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note:"})," The symbol ",(0,r.jsx)(n.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"body",children:"BODY"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"#"}),(0,r.jsx)(n.th,{children:"Field"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Comment"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"10="}),(0,r.jsx)(n.td,{children:"clientFirm"}),(0,r.jsx)(n.td,{children:"string(16)"}),(0,r.jsx)(n.td,{children:"SR assigned client firm acronym"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"100"}),(0,r.jsx)(n.td,{children:"clientFirmStatus"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/ClientFirmStatus",children:"enum : ClientFirmStatus"})}),(0,r.jsx)(n.td,{children:"ClientFirm status"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"103"}),(0,r.jsx)(n.td,{children:"clientFirmStatusDttm"}),(0,r.jsx)(n.td,{children:"DateTime"}),(0,r.jsx)(n.td,{children:"The date/time this status was last changed"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"285"}),(0,r.jsx)(n.td,{children:"enabledIn"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/SysVersion",children:"enum : SysVersion"})}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"106"}),(0,r.jsx)(n.td,{children:"clientFirmType"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/ClientFirmType",children:"enum : ClientFirmType"})}),(0,r.jsx)(n.td,{children:"SponsorClientFirm [Accnts/Users] -> CoreClientFirm [Accnts/Users] -> SubClientFirm [Accnts/Users]"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"109"}),(0,r.jsx)(n.td,{children:"clientFirmName"}),(0,r.jsx)(n.td,{children:"text1"}),(0,r.jsx)(n.td,{children:"SR assigned client firm Name"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"112"}),(0,r.jsx)(n.td,{children:"clientFirmShortCode"}),(0,r.jsx)(n.td,{children:"string(4)"}),(0,r.jsx)(n.td,{children:"SR assigned client firm short code (usually an MPID or equivalent)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"115"}),(0,r.jsx)(n.td,{children:"clientFirmRelationship"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/ClientFirmRelationship",children:"flag : ClientFirmRelationship"})}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"118"}),(0,r.jsx)(n.td,{children:"repCodeSR"}),(0,r.jsx)(n.td,{children:"text1"}),(0,r.jsx)(n.td,{children:"SR client rep code"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"121"}),(0,r.jsx)(n.td,{children:"clientTagPool"}),(0,r.jsx)(n.td,{children:"text2"}),(0,r.jsx)(n.td,{children:"(optional) complete (unique) pool of user defined account tag(s) (tag bag JSON definition block) [max of 10,000 total chars (including seps)]"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"124"}),(0,r.jsx)(n.td,{children:"billingAccount"}),(0,r.jsx)(n.td,{children:"string(24)"}),(0,r.jsx)(n.td,{children:"billing account within the G/L system"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"127"}),(0,r.jsx)(n.td,{children:"billingSchedule"}),(0,r.jsx)(n.td,{children:"string(16)"}),(0,r.jsx)(n.td,{children:"billing schedule code"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"130"}),(0,r.jsx)(n.td,{children:"billingAddress1"}),(0,r.jsx)(n.td,{children:"text1"}),(0,r.jsx)(n.td,{children:"Billing Address - line 1"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"133"}),(0,r.jsx)(n.td,{children:"billingAddress2"}),(0,r.jsx)(n.td,{children:"text1"}),(0,r.jsx)(n.td,{children:"Billing Address - line 2"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"136"}),(0,r.jsx)(n.td,{children:"billingCity"}),(0,r.jsx)(n.td,{children:"text1"}),(0,r.jsx)(n.td,{children:"Billing Address - city"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"139"}),(0,r.jsx)(n.td,{children:"billingState"}),(0,r.jsx)(n.td,{children:"text1"}),(0,r.jsx)(n.td,{children:"Billing Address - state"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"142"}),(0,r.jsx)(n.td,{children:"billingZipCode"}),(0,r.jsx)(n.td,{children:"string(8)"}),(0,r.jsx)(n.td,{children:"Billing Address - zipCode"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"145"}),(0,r.jsx)(n.td,{children:"billingCountry"}),(0,r.jsx)(n.td,{children:"string(8)"}),(0,r.jsx)(n.td,{children:"Billing Address - country"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"148"}),(0,r.jsx)(n.td,{children:"billingPhoneNumber"}),(0,r.jsx)(n.td,{children:"string(15)"}),(0,r.jsx)(n.td,{children:"Billing - phone"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"151"}),(0,r.jsx)(n.td,{children:"billingEmailAddress"}),(0,r.jsx)(n.td,{children:"text1"}),(0,r.jsx)(n.td,{children:"Billing - emails (comma delimited string)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"154"}),(0,r.jsx)(n.td,{children:"reportAddress1"}),(0,r.jsx)(n.td,{children:"text1"}),(0,r.jsx)(n.td,{children:"Reporting Address - line 1"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"157"}),(0,r.jsx)(n.td,{children:"reportAddress2"}),(0,r.jsx)(n.td,{children:"text1"}),(0,r.jsx)(n.td,{children:"Reporting Address - line 2"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"160"}),(0,r.jsx)(n.td,{children:"reportCity"}),(0,r.jsx)(n.td,{children:"text1"}),(0,r.jsx)(n.td,{children:"Reporting Address - city"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"163"}),(0,r.jsx)(n.td,{children:"reportState"}),(0,r.jsx)(n.td,{children:"text1"}),(0,r.jsx)(n.td,{children:"Reporting Address - state"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"166"}),(0,r.jsx)(n.td,{children:"reportZipCode"}),(0,r.jsx)(n.td,{children:"string(8)"}),(0,r.jsx)(n.td,{children:"Reporting Address - zipCode"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"169"}),(0,r.jsx)(n.td,{children:"reportCountry"}),(0,r.jsx)(n.td,{children:"string(8)"}),(0,r.jsx)(n.td,{children:"Reporting Address - country"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"172"}),(0,r.jsx)(n.td,{children:"reportPhoneNumber"}),(0,r.jsx)(n.td,{children:"string(15)"}),(0,r.jsx)(n.td,{children:"Reporting - phone"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"175"}),(0,r.jsx)(n.td,{children:"reportEmailAddress"}),(0,r.jsx)(n.td,{children:"text1"}),(0,r.jsx)(n.td,{children:"Reporting - emails (comma delimited string)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"178"}),(0,r.jsx)(n.td,{children:"coreClientFirm"}),(0,r.jsx)(n.td,{children:"string(16)"}),(0,r.jsx)(n.td,{children:"the core client firm this (Sub) client firm rolls up to [blank if none]"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"181"}),(0,r.jsx)(n.td,{children:"sponsorClientFirm"}),(0,r.jsx)(n.td,{children:"string(16)"}),(0,r.jsx)(n.td,{children:"the sponsor client firm this (Sub or Core) client firm rolls up to [blank if none]"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"184"}),(0,r.jsx)(n.td,{children:"canHaveTradingAccnt"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,r.jsx)(n.td,{children:"disables all accnt activity"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"187"}),(0,r.jsx)(n.td,{children:"legalEntityId"}),(0,r.jsx)(n.td,{children:"string(20)"}),(0,r.jsx)(n.td,{children:"(LEI) reg oversight committee assigned entity ID assigned to a firm.  20 character string, contains numbers and dashes."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"190"}),(0,r.jsx)(n.td,{children:"secLargeTraderId"}),(0,r.jsx)(n.td,{children:"string(16)"}),(0,r.jsx)(n.td,{children:"SEC-assigned trading ID assigned to a firm.  13 character string, contains numbers and dashes."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"281"}),(0,r.jsx)(n.td,{children:"LtidEffectiveDate"}),(0,r.jsx)(n.td,{children:"DateTime"}),(0,r.jsx)(n.td,{children:"LargeTraderID Effective Date"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"282"}),(0,r.jsx)(n.td,{children:"catCaisTidType"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/CatCaisTidType",children:"enum : CatCaisTidType"})}),(0,r.jsx)(n.td,{children:"CAT CAIS TID (Transformed Identifiers) Type"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"283"}),(0,r.jsx)(n.td,{children:"catCaisTidValue"}),(0,r.jsx)(n.td,{children:"string(40)"}),(0,r.jsx)(n.td,{children:"CAT CAIS TID Value"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"284"}),(0,r.jsx)(n.td,{children:"catCaisCustType"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/CatCaisCustType",children:"enum : CatCaisCustType"})}),(0,r.jsx)(n.td,{children:"CAT CAIS CustomerType"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"193"}),(0,r.jsx)(n.td,{children:"syncAggGroups"}),(0,r.jsx)(n.td,{children:"text1"}),(0,r.jsxs)(n.td,{children:["[tgt",":src",",tgt",":src",",...] target agg group [usually priAggGroup]; will accumulate SR executions; will sync w/srcAggGroup; tgt will follow (be made equal to) src"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"196"}),(0,r.jsx)(n.td,{children:"syncThreshold"}),(0,r.jsx)(n.td,{children:"float"}),(0,r.jsx)(n.td,{children:"number of idle seconds before syncing aggGroups (default: 5 seconds)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"199"}),(0,r.jsx)(n.td,{children:"viewGICS"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,r.jsx)(n.td,{children:"client firm can see GICS codes in SRSE"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"202"}),(0,r.jsx)(n.td,{children:"viewCUSIP"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,r.jsx)(n.td,{children:"client firm can see CUSIP codes in SRSE"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"205"}),(0,r.jsx)(n.td,{children:"restrictLocateUpload"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,r.jsx)(n.td,{children:"restrict all associated users' ability to upload AwayStockLocate messages"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"208"}),(0,r.jsx)(n.td,{children:"restrictAutohedge"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,r.jsx)(n.td,{children:"restrict all associated users' ability to submit orders with autohedge enabled"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"211"}),(0,r.jsx)(n.td,{children:"cxlRiskGroupOnReviewHedgeReject"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,r.jsx)(n.td,{children:'behavior if the stage/review hedge order is rejected.  "Yes" cancels the entire risk group.'})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"214"}),(0,r.jsx)(n.td,{children:"userRateSource"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/RateSource",children:"enum : RateSource"})}),(0,r.jsx)(n.td,{children:"Default GlobalRate (Discount Rate) source (uses system default curve unless otherwise specified)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"217"}),(0,r.jsx)(n.td,{children:"enableSrseProductSnapshots"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,r.jsx)(n.td,{children:"If enabled 'Yes' daily_snapshots.py scripts will make create clientFirm-specific snapshots of SRSE products.  Grants are matched to UserConfig.SrseProductControl."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"229"}),(0,r.jsx)(n.td,{children:"authType"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/AuthType",children:"enum : AuthType"})}),(0,r.jsx)(n.td,{children:"type of user logon allowed"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"232"}),(0,r.jsx)(n.td,{children:"authExternName"}),(0,r.jsx)(n.td,{children:"text1"}),(0,r.jsx)(n.td,{children:"eg.  CorpName"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"235"}),(0,r.jsx)(n.td,{children:"authExternParams"}),(0,r.jsx)(n.td,{children:"text1"}),(0,r.jsxs)(n.td,{children:["eg. ",(0,r.jsx)(n.code,{children:"https://corp.domain.com:xxxx"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"238"}),(0,r.jsx)(n.td,{children:"pwFileTransfer"}),(0,r.jsx)(n.td,{children:"string(16)"}),(0,r.jsx)(n.td,{children:"[SR] Password for securing files in transit"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"241"}),(0,r.jsx)(n.td,{children:"dropAllParentTags"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"271"}),(0,r.jsx)(n.td,{children:"enableSrseProd"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,r.jsx)(n.td,{children:"also requires srse pool instance in schedule.txt (which advertises as SRSE-{SysRealm}-{RunStatus}-V8.services.consul...)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"274"}),(0,r.jsx)(n.td,{children:"modifiedBy"}),(0,r.jsx)(n.td,{children:"string(24)"}),(0,r.jsx)(n.td,{children:"user who last modified this record"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"277"}),(0,r.jsx)(n.td,{children:"modifiedIn"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/SysEnvironment",children:"enum : SysEnvironment"})}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"280"}),(0,r.jsx)(n.td,{children:"timestamp"}),(0,r.jsx)(n.td,{children:"DateTime"}),(0,r.jsx)(n.td,{})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"repeating-fields",children:"REPEATING FIELDS"}),"\n",(0,r.jsx)(n.p,{children:"LocatePool"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Field"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Comment"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"223"}),(0,r.jsx)(n.td,{children:"locateFirm"}),(0,r.jsx)(n.td,{children:"string(6)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"226"}),(0,r.jsx)(n.td,{children:"locatePool"}),(0,r.jsx)(n.td,{children:"string(16)"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"DirectedCounterParty"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Field"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Comment"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"247"}),(0,r.jsx)(n.td,{children:"clientFirm"}),(0,r.jsx)(n.td,{children:"string(16)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"250"}),(0,r.jsx)(n.td,{children:"isCommParty"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"ExcludeCounterParty"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Field"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Comment"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"287"}),(0,r.jsx)(n.td,{children:"clientFirm"}),(0,r.jsx)(n.td,{children:"string(16)"})]})})]}),"\n",(0,r.jsx)(n.p,{children:"RawDataBilling"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Field"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Comment"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"256"}),(0,r.jsx)(n.td,{children:"token"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/RawDataToken",children:"enum : RawDataToken"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"259"}),(0,r.jsx)(n.td,{children:"scope"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"../../../Enums/RawDataScope",children:"enum : RawDataScope"})})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"SourceIP"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Field"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Comment"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"265"}),(0,r.jsx)(n.td,{children:"ipV4Range"}),(0,r.jsx)(n.td,{children:"string(20)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"268"}),(0,r.jsx)(n.td,{children:"ipV6Range"}),(0,r.jsx)(n.td,{children:"string(50)"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,r.jsxs)(s.A,{children:[(0,r.jsx)(l.A,{value:"Python",label:"Python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'ClientFirmConfig'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n    # Required Parameters\n    \"apiKey\": API_KEY,\n    \"cmd\": 'getschema',\n    \"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,r.jsx)(l.A,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=ClientFirmConfig'\n\n"})})})]}),"\n",(0,r.jsx)(n.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,r.jsxs)(s.A,{children:[(0,r.jsx)(l.A,{value:"Python",label:"Python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'ClientFirmConfig\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'clientFirmStatus|clientFirmStatusDttm|enabledIn|clientFirmType|clientFirmName|clientFirmShortCode|clientFirmRelationship|repCodeSR|clientTagPool|billingAccount|billingSchedule|billingAddress1|billingAddress2|billingCity|billingState|billingZipCode|billingCountry|billingPhoneNumber|billingEmailAddress|reportAddress1|reportAddress2|reportCity|reportState|reportZipCode|reportCountry|reportPhoneNumber|reportEmailAddress|coreClientFirm|sponsorClientFirm|canHaveTradingAccnt|legalEntityId|secLargeTraderId|LtidEffectiveDate|catCaisTidType|catCaisTidValue|catCaisCustType|syncAggGroups|syncThreshold|viewGICS|viewCUSIP|restrictLocateUpload|restrictAutohedge|cxlRiskGroupOnReviewHedgeReject|userRateSource|enableSrseProductSnapshots|authType|authExternName|authExternParams|pwFileTransfer|dropAllParentTags|enableSrseProd|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'clientFirm:eq:ExampleString\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,r.jsx)(l.A,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=ClientFirmConfig' \\\n--data-urlencode 'view=clientFirmStatus|clientFirmStatusDttm|enabledIn|clientFirmType|clientFirmName|clientFirmShortCode|clientFirmRelationship|repCodeSR|clientTagPool|billingAccount|billingSchedule|billingAddress1|billingAddress2|billingCity|billingState|billingZipCode|billingCountry|billingPhoneNumber|billingEmailAddress|reportAddress1|reportAddress2|reportCity|reportState|reportZipCode|reportCountry|reportPhoneNumber|reportEmailAddress|coreClientFirm|sponsorClientFirm|canHaveTradingAccnt|legalEntityId|secLargeTraderId|LtidEffectiveDate|catCaisTidType|catCaisTidValue|catCaisCustType|syncAggGroups|syncThreshold|viewGICS|viewCUSIP|restrictLocateUpload|restrictAutohedge|cxlRiskGroupOnReviewHedgeReject|userRateSource|enableSrseProductSnapshots|authType|authExternName|authExternParams|pwFileTransfer|dropAllParentTags|enableSrseProd|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'where=clientFirm:eq:ExampleString'\n"})})})]}),"\n",(0,r.jsx)(n.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,r.jsxs)(s.A,{children:[(0,r.jsx)(l.A,{value:"Python",label:"Python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'ClientFirmConfig\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'clientFirmStatus|clientFirmStatusDttm|enabledIn|clientFirmType|clientFirmName|clientFirmShortCode|clientFirmRelationship|repCodeSR|clientTagPool|billingAccount|billingSchedule|billingAddress1|billingAddress2|billingCity|billingState|billingZipCode|billingCountry|billingPhoneNumber|billingEmailAddress|reportAddress1|reportAddress2|reportCity|reportState|reportZipCode|reportCountry|reportPhoneNumber|reportEmailAddress|coreClientFirm|sponsorClientFirm|canHaveTradingAccnt|legalEntityId|secLargeTraderId|LtidEffectiveDate|catCaisTidType|catCaisTidValue|catCaisCustType|syncAggGroups|syncThreshold|viewGICS|viewCUSIP|restrictLocateUpload|restrictAutohedge|cxlRiskGroupOnReviewHedgeReject|userRateSource|enableSrseProductSnapshots|authType|authExternName|authExternParams|pwFileTransfer|dropAllParentTags|enableSrseProd|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'clientFirm:eq:ExampleString\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'clientFirmStatus:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,r.jsx)(l.A,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=ClientFirmConfig' \\\n--data-urlencode 'view=clientFirmStatus|clientFirmStatusDttm|enabledIn|clientFirmType|clientFirmName|clientFirmShortCode|clientFirmRelationship|repCodeSR|clientTagPool|billingAccount|billingSchedule|billingAddress1|billingAddress2|billingCity|billingState|billingZipCode|billingCountry|billingPhoneNumber|billingEmailAddress|reportAddress1|reportAddress2|reportCity|reportState|reportZipCode|reportCountry|reportPhoneNumber|reportEmailAddress|coreClientFirm|sponsorClientFirm|canHaveTradingAccnt|legalEntityId|secLargeTraderId|LtidEffectiveDate|catCaisTidType|catCaisTidValue|catCaisCustType|syncAggGroups|syncThreshold|viewGICS|viewCUSIP|restrictLocateUpload|restrictAutohedge|cxlRiskGroupOnReviewHedgeReject|userRateSource|enableSrseProductSnapshots|authType|authExternName|authExternParams|pwFileTransfer|dropAllParentTags|enableSrseProd|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'where=clientFirm:eq:ExampleString' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=clientFirmStatus:ASC'\n"})})})]}),"\n",(0,r.jsx)(n.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,r.jsxs)(s.A,{children:[(0,r.jsx)(l.A,{value:"Python",label:"Python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'ClientFirmConfig\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'clientFirmStatus|clientFirmStatusDttm|enabledIn|clientFirmType|clientFirmName|clientFirmShortCode|clientFirmRelationship|repCodeSR|clientTagPool|billingAccount|billingSchedule|billingAddress1|billingAddress2|billingCity|billingState|billingZipCode|billingCountry|billingPhoneNumber|billingEmailAddress|reportAddress1|reportAddress2|reportCity|reportState|reportZipCode|reportCountry|reportPhoneNumber|reportEmailAddress|coreClientFirm|sponsorClientFirm|canHaveTradingAccnt|legalEntityId|secLargeTraderId|LtidEffectiveDate|catCaisTidType|catCaisTidValue|catCaisCustType|syncAggGroups|syncThreshold|viewGICS|viewCUSIP|restrictLocateUpload|restrictAutohedge|cxlRiskGroupOnReviewHedgeReject|userRateSource|enableSrseProductSnapshots|authType|authExternName|authExternParams|pwFileTransfer|dropAllParentTags|enableSrseProd|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'clientFirmStatus|enabledIn|clientFirmType|canHaveTradingAccnt|catCaisTidType|catCaisCustType|viewGICS|viewCUSIP|restrictLocateUpload|restrictAutohedge|cxlRiskGroupOnReviewHedgeReject|userRateSource|enableSrseProductSnapshots|authType|dropAllParentTags|enableSrseProd|modifiedIn\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'clientFirm:eq:ExampleString\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getaggregate\',\n    "msgType": MSG_TYPE,\n    "measure": MEASURE,\n    "group": GROUP,\n    # Optional Parameters\n    "where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,r.jsx)(l.A,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=ClientFirmConfig' \\\n--data-urlencode 'measure=clientFirmStatus|clientFirmStatusDttm|enabledIn|clientFirmType|clientFirmName|clientFirmShortCode|clientFirmRelationship|repCodeSR|clientTagPool|billingAccount|billingSchedule|billingAddress1|billingAddress2|billingCity|billingState|billingZipCode|billingCountry|billingPhoneNumber|billingEmailAddress|reportAddress1|reportAddress2|reportCity|reportState|reportZipCode|reportCountry|reportPhoneNumber|reportEmailAddress|coreClientFirm|sponsorClientFirm|canHaveTradingAccnt|legalEntityId|secLargeTraderId|LtidEffectiveDate|catCaisTidType|catCaisTidValue|catCaisCustType|syncAggGroups|syncThreshold|viewGICS|viewCUSIP|restrictLocateUpload|restrictAutohedge|cxlRiskGroupOnReviewHedgeReject|userRateSource|enableSrseProductSnapshots|authType|authExternName|authExternParams|pwFileTransfer|dropAllParentTags|enableSrseProd|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'group=clientFirmStatus|enabledIn|clientFirmType|canHaveTradingAccnt|catCaisTidType|catCaisCustType|viewGICS|viewCUSIP|restrictLocateUpload|restrictAutohedge|cxlRiskGroupOnReviewHedgeReject|userRateSource|enableSrseProductSnapshots|authType|dropAllParentTags|enableSrseProd|modifiedIn' \\\n--data-urlencode 'where=clientFirm:eq:ExampleString'\n"})})})]}),"\n",(0,r.jsx)(n.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,r.jsxs)(s.A,{children:[(0,r.jsx)(l.A,{value:"Python",label:"Python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'ClientFirmConfig\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'clientFirm:eq:ExampleString\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,r.jsx)(l.A,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=ClientFirmConfig' \\\n--data-urlencode 'where=clientFirm:eq:ExampleString'\n"})})})]})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},19365:(e,n,t)=>{t.d(n,{A:()=>l});t(96540);var r=t(34164);const i={tabItem:"tabItem_Ymn6"};var s=t(74848);function l(e){let{children:n,hidden:t,className:l}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,r.A)(i.tabItem,l),hidden:t,children:n})}},11470:(e,n,t)=>{t.d(n,{A:()=>S});var r=t(96540),i=t(34164),s=t(23104),l=t(56347),d=t(205),a=t(57485),c=t(31682),o=t(70679);function h(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:i}}=e;return{value:n,label:t,attributes:r,default:i}}))}(t);return function(e){const n=(0,c.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function m(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function x(e){let{queryString:n=!1,groupId:t}=e;const i=(0,l.W6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,a.aZ)(s),(0,r.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(i.location.search);n.set(s,e),i.replace({...i.location,search:n.toString()})}),[s,i])]}function p(e){const{defaultValue:n,queryString:t=!1,groupId:i}=e,s=u(e),[l,a]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:s}))),[c,h]=x({queryString:t,groupId:i}),[p,j]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,s]=(0,o.Dv)(t);return[i,(0,r.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:i}),g=(()=>{const e=c??p;return m({value:e,tabValues:s})?e:null})();(0,d.A)((()=>{g&&a(g)}),[g]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);a(e),h(e),j(e)}),[h,j,s]),tabValues:s}}var j=t(92303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var y=t(74848);function b(e){let{className:n,block:t,selectedValue:r,selectValue:l,tabValues:d}=e;const a=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),o=e=>{const n=e.currentTarget,t=a.indexOf(n),i=d[t].value;i!==r&&(c(n),l(i))},h=e=>{let n=null;switch(e.key){case"Enter":o(e);break;case"ArrowRight":{const t=a.indexOf(e.currentTarget)+1;n=a[t]??a[0];break}case"ArrowLeft":{const t=a.indexOf(e.currentTarget)-1;n=a[t]??a[a.length-1];break}}n?.focus()};return(0,y.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":t},n),children:d.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,y.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>a.push(e),onKeyDown:h,onClick:o,...s,className:(0,i.A)("tabs__item",g.tabItem,s?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function f(e){let{lazy:n,children:t,selectedValue:i}=e;const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===i));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,y.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function C(e){const n=p(e);return(0,y.jsxs)("div",{className:(0,i.A)("tabs-container",g.tabList),children:[(0,y.jsx)(b,{...n,...e}),(0,y.jsx)(f,{...n,...e})]})}function S(e){const n=(0,j.A)();return(0,y.jsx)(C,{...e,children:h(e.children)},String(n))}},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>d});var r=t(96540);const i={},s=r.createContext(i);function l(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);