"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[44676],{87274:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>h,contentTitle:()=>a,default:()=>x,frontMatter:()=>l,metadata:()=>c,toc:()=>o});var s=n(74848),t=n(28453),d=n(11470),i=n(19365);const l={title:"SpdrParentReviewResponse"},a="Schema: SpdrParentReviewResponse (ID: 4200)",c={id:"MessageSchemas/Schema/Topics/parent-review/SpdrParentReviewResponse",title:"SpdrParentReviewResponse",description:"SpdrParentReviewResponse records are created when a parent order review request is completed",source:"@site/docs/MessageSchemas/Schema/Topics/4195-parent-review/SpdrParentReviewResponse.md",sourceDirName:"MessageSchemas/Schema/Topics/4195-parent-review",slug:"/MessageSchemas/Schema/Topics/parent-review/SpdrParentReviewResponse",permalink:"/docs/MessageSchemas/Schema/Topics/parent-review/SpdrParentReviewResponse",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"SpdrParentReviewResponse"},sidebar:"messageSchemasSidebar",previous:{title:"SpdrParentReviewRequest",permalink:"/docs/MessageSchemas/Schema/Topics/parent-review/SpdrParentReviewRequest"},next:{title:"4255-probabilities",permalink:"/docs/MessageSchemas/Schema/Topics/probabilities/"}},h={},o=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"REPEATING FIELDS",id:"repeating-fields",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3}];function u(e){const r={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.h1,{id:"schema-spdrparentreviewresponse-id-4200",children:["Schema: SpdrParentReviewResponse ",(0,s.jsx)("span",{className:"small-text",children:"(ID: 4200)"})]}),"\n",(0,s.jsx)(r.p,{children:"SpdrParentReviewResponse records are created when a parent order review request is completed"}),"\n",(0,s.jsx)(r.h3,{id:"metadata",children:"METADATA"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Attribute"}),(0,s.jsx)(r.th,{children:"Value"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Topic"}),(0,s.jsx)(r.td,{children:"4195-parent-review"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"MLink Token"}),(0,s.jsx)(r.td,{children:"SystemData"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SRSE Product"}),(0,s.jsx)(r.td,{children:"SRTrade"})]})]})]}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Note:"})," The symbol ",(0,s.jsx)(r.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"body",children:"BODY"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"#"}),(0,s.jsx)(r.th,{children:"Field"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Comment"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"10="}),(0,s.jsx)(r.td,{children:"parentNumber"}),(0,s.jsx)(r.td,{children:"long"}),(0,s.jsx)(r.td,{children:"SPDR order number"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"100"}),(0,s.jsx)(r.td,{children:"sysEnvironment"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/SysEnvironment",children:"enum : SysEnvironment"})}),(0,s.jsx)(r.td,{children:"original (source) sys environment [Stable, Current, etc]"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"103"}),(0,s.jsx)(r.td,{children:"runStatus"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/RunStatus",children:"enum : RunStatus"})}),(0,s.jsx)(r.td,{children:"original (source) run status [Prod,Beta]"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"106"}),(0,s.jsx)(r.td,{children:"parentShape"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/SpdrOrderShape",children:"enum : SpdrOrderShape"})}),(0,s.jsx)(r.td,{children:"Parent Shape [Single, Cross, MLeg, MLegCross]"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"109"}),(0,s.jsx)(r.td,{children:"altOrderId"}),(0,s.jsx)(r.td,{children:"string(24)"}),(0,s.jsx)(r.td,{children:"alternate order ID (usually clOrdId from client)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"112"}),(0,s.jsx)(r.td,{children:"altPrevOrderId"}),(0,s.jsx)(r.td,{children:"string(24)"}),(0,s.jsx)(r.td,{children:"alternate prev order ID (usually origClOrdId from client during cxl/replace)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"115"}),(0,s.jsx)(r.td,{children:"altAccnt"}),(0,s.jsx)(r.td,{children:"string(32)"}),(0,s.jsx)(r.td,{children:'alternate (client assigned) "long" account string (optional) [used to map between client and SR account strings]'})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"118"}),(0,s.jsx)(r.td,{children:"altUserName"}),(0,s.jsx)(r.td,{children:"string(24)"}),(0,s.jsx)(r.td,{children:"alternate (client assigned) user name (optional) [used to map between client and SR account strings]"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"121"}),(0,s.jsx)(r.td,{children:"secKey"}),(0,s.jsx)(r.td,{children:"OptionKey"}),(0,s.jsx)(r.td,{children:"Composite Security Key"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"124"}),(0,s.jsx)(r.td,{children:"secType"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/SpdrKeyType",children:"enum : SpdrKeyType"})}),(0,s.jsx)(r.td,{children:"Security Type [Stock, Future, Option]"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"127"}),(0,s.jsx)(r.td,{children:"securityDesc"}),(0,s.jsx)(r.td,{children:"text1"}),(0,s.jsx)(r.td,{children:"additional security description"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"130"}),(0,s.jsx)(r.td,{children:"accnt"}),(0,s.jsx)(r.td,{children:"string(16)"}),(0,s.jsx)(r.td,{children:"SR trading account"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"133"}),(0,s.jsx)(r.td,{children:"clientFirm"}),(0,s.jsx)(r.td,{children:"string(16)"}),(0,s.jsx)(r.td,{children:"SR client firm"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"136"}),(0,s.jsx)(r.td,{children:"spdrSource"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/SpdrSource",children:"enum : SpdrSource"})}),(0,s.jsx)(r.td,{children:"from original parent order"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"139"}),(0,s.jsx)(r.td,{children:"groupingCode"}),(0,s.jsx)(r.td,{children:"long"}),(0,s.jsx)(r.td,{children:"from original parent order"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"142"}),(0,s.jsx)(r.td,{children:"clientClOrdId"}),(0,s.jsx)(r.td,{children:"string(24)"}),(0,s.jsx)(r.td,{children:"client ClOrdId (if handled by ClientGateway)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"145"}),(0,s.jsx)(r.td,{children:"srcRoutingCode"}),(0,s.jsx)(r.td,{children:"string(65)"}),(0,s.jsx)(r.td,{children:"RoutingCode (if handled by ClientGateway)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"148"}),(0,s.jsx)(r.td,{children:"strategy"}),(0,s.jsx)(r.td,{children:"string(36)"}),(0,s.jsx)(r.td,{children:"client-supplied strategy string;visible on SpiderRock GUI tools and other order reports."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"151"}),(0,s.jsx)(r.td,{children:"userName"}),(0,s.jsx)(r.td,{children:"string(24)"}),(0,s.jsx)(r.td,{children:"name of the user entering the order"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"154"}),(0,s.jsx)(r.td,{children:"orderSide"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"157"}),(0,s.jsx)(r.td,{children:"orderSize"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"maximum fill size (contracts) [can be less than requested]"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"160"}),(0,s.jsx)(r.td,{children:"orderActiveSize"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"163"}),(0,s.jsx)(r.td,{children:"reviewResult"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/ReviewResult",children:"enum : ReviewResult"})}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"166"}),(0,s.jsx)(r.td,{children:"reviewText"}),(0,s.jsx)(r.td,{children:"text1"}),(0,s.jsx)(r.td,{children:"review release / reject text (will be showed to the user submitting the parent order)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"169"}),(0,s.jsx)(r.td,{children:"responseSpdrSource"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/SpdrSource",children:"enum : SpdrSource"})}),(0,s.jsx)(r.td,{children:"source of the response (SRSE, FIX, etc)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"172"}),(0,s.jsx)(r.td,{children:"responseClOrdId"}),(0,s.jsx)(r.td,{children:"string(24)"}),(0,s.jsx)(r.td,{children:"review request / response clOrdID (if any)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"175"}),(0,s.jsx)(r.td,{children:"responseOrigClOrdId"}),(0,s.jsx)(r.td,{children:"string(24)"}),(0,s.jsx)(r.td,{children:"review request / response orig clOrdID"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"178"}),(0,s.jsx)(r.td,{children:"responseCancelClOrdId"}),(0,s.jsx)(r.td,{children:"string(24)"}),(0,s.jsx)(r.td,{children:"review request / response cancel clOrdID"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"181"}),(0,s.jsx)(r.td,{children:"firmType"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/FirmType",children:"enum : FirmType"})}),(0,s.jsx)(r.td,{children:"will override firmType on the original parent order (if != None)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"184"}),(0,s.jsx)(r.td,{children:"orderCapacity"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/OrderCapacity",children:"enum : OrderCapacity"})}),(0,s.jsx)(r.td,{children:"will override orderCapacity on the original parent order (if != None)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"187"}),(0,s.jsx)(r.td,{children:"positionType"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/PositionType",children:"enum : PositionType"})}),(0,s.jsx)(r.td,{children:"will override positionType on the original parent order (if != None)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"190"}),(0,s.jsx)(r.td,{children:"ssaleFlag"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum : ShortSaleFlag"})}),(0,s.jsx)(r.td,{children:"will override ssaleFlag on the original parent order (if != None)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"193"}),(0,s.jsx)(r.td,{children:"locateQuan"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"locate quantity"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"196"}),(0,s.jsx)(r.td,{children:"locateFirm"}),(0,s.jsx)(r.td,{children:"string(6)"}),(0,s.jsx)(r.td,{children:"locate firm"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"199"}),(0,s.jsx)(r.td,{children:"locatePool"}),(0,s.jsx)(r.td,{children:"string(16)"}),(0,s.jsx)(r.td,{children:"locate pool @ firm granting the locate"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"202"}),(0,s.jsx)(r.td,{children:"userData1"}),(0,s.jsx)(r.td,{children:"text1"}),(0,s.jsx)(r.td,{children:"will override value on original parent order (if != null)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"205"}),(0,s.jsx)(r.td,{children:"userData2"}),(0,s.jsx)(r.td,{children:"text1"}),(0,s.jsx)(r.td,{children:"will override value on the original parent order (if != null)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"208"}),(0,s.jsx)(r.td,{children:"childData"}),(0,s.jsx)(r.td,{children:"text1"}),(0,s.jsx)(r.td,{children:"will override value on the original parent order (if != null)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"211"}),(0,s.jsx)(r.td,{children:"timestamp"}),(0,s.jsx)(r.td,{children:"DateTime"}),(0,s.jsx)(r.td,{})]})]})]}),"\n",(0,s.jsx)(r.h3,{id:"repeating-fields",children:"REPEATING FIELDS"}),"\n",(0,s.jsx)(r.p,{children:"OrderLegs"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Field"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Comment"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"217"}),(0,s.jsx)(r.td,{children:"ticker"}),(0,s.jsx)(r.td,{children:"TickerKey"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"220"}),(0,s.jsx)(r.td,{children:"stockSide"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"223"}),(0,s.jsx)(r.td,{children:"stockShares"}),(0,s.jsx)(r.td,{children:"int"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"226"}),(0,s.jsx)(r.td,{children:"ssaleFlag"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum : ShortSaleFlag"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"229"}),(0,s.jsx)(r.td,{children:"reviewStkLegId"}),(0,s.jsx)(r.td,{children:"string(24)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"232"}),(0,s.jsx)(r.td,{children:"reviewStkLegAltId"}),(0,s.jsx)(r.td,{children:"string(24)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"235"}),(0,s.jsx)(r.td,{children:"numLegs"}),(0,s.jsx)(r.td,{children:"byte"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"238"}),(0,s.jsx)(r.td,{children:"secKey1"}),(0,s.jsx)(r.td,{children:"OptionKey"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"241"}),(0,s.jsx)(r.td,{children:"secType1"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/SpdrKeyType",children:"enum : SpdrKeyType"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"244"}),(0,s.jsx)(r.td,{children:"mult1"}),(0,s.jsx)(r.td,{children:"ushort"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"247"}),(0,s.jsx)(r.td,{children:"side1"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"250"}),(0,s.jsx)(r.td,{children:"posType1"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/PositionType",children:"enum : PositionType"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"253"}),(0,s.jsx)(r.td,{children:"ssaleFlag1"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum : ShortSaleFlag"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"256"}),(0,s.jsx)(r.td,{children:"reviewLegId1"}),(0,s.jsx)(r.td,{children:"string(24)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"259"}),(0,s.jsx)(r.td,{children:"reviewLegAltId1"}),(0,s.jsx)(r.td,{children:"string(24)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"262"}),(0,s.jsx)(r.td,{children:"secKey2"}),(0,s.jsx)(r.td,{children:"OptionKey"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"265"}),(0,s.jsx)(r.td,{children:"secType2"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/SpdrKeyType",children:"enum : SpdrKeyType"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"268"}),(0,s.jsx)(r.td,{children:"mult2"}),(0,s.jsx)(r.td,{children:"ushort"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"271"}),(0,s.jsx)(r.td,{children:"side2"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"274"}),(0,s.jsx)(r.td,{children:"posType2"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/PositionType",children:"enum : PositionType"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"277"}),(0,s.jsx)(r.td,{children:"ssaleFlag2"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum : ShortSaleFlag"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"280"}),(0,s.jsx)(r.td,{children:"reviewLegId2"}),(0,s.jsx)(r.td,{children:"string(24)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"283"}),(0,s.jsx)(r.td,{children:"reviewLegAltId2"}),(0,s.jsx)(r.td,{children:"string(24)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"286"}),(0,s.jsx)(r.td,{children:"secKey3"}),(0,s.jsx)(r.td,{children:"OptionKey"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"289"}),(0,s.jsx)(r.td,{children:"secType3"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/SpdrKeyType",children:"enum : SpdrKeyType"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"292"}),(0,s.jsx)(r.td,{children:"mult3"}),(0,s.jsx)(r.td,{children:"ushort"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"295"}),(0,s.jsx)(r.td,{children:"side3"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"298"}),(0,s.jsx)(r.td,{children:"posType3"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/PositionType",children:"enum : PositionType"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"301"}),(0,s.jsx)(r.td,{children:"ssaleFlag3"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum : ShortSaleFlag"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"304"}),(0,s.jsx)(r.td,{children:"reviewLegId3"}),(0,s.jsx)(r.td,{children:"string(24)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"307"}),(0,s.jsx)(r.td,{children:"reviewLegAltId3"}),(0,s.jsx)(r.td,{children:"string(24)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"310"}),(0,s.jsx)(r.td,{children:"secKey4"}),(0,s.jsx)(r.td,{children:"OptionKey"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"313"}),(0,s.jsx)(r.td,{children:"secType4"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/SpdrKeyType",children:"enum : SpdrKeyType"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"316"}),(0,s.jsx)(r.td,{children:"mult4"}),(0,s.jsx)(r.td,{children:"ushort"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"319"}),(0,s.jsx)(r.td,{children:"side4"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"322"}),(0,s.jsx)(r.td,{children:"posType4"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/PositionType",children:"enum : PositionType"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"325"}),(0,s.jsx)(r.td,{children:"ssaleFlag4"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum : ShortSaleFlag"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"328"}),(0,s.jsx)(r.td,{children:"reviewLegId4"}),(0,s.jsx)(r.td,{children:"string(24)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"331"}),(0,s.jsx)(r.td,{children:"reviewLegAltId4"}),(0,s.jsx)(r.td,{children:"string(24)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"334"}),(0,s.jsx)(r.td,{children:"secKey5"}),(0,s.jsx)(r.td,{children:"OptionKey"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"337"}),(0,s.jsx)(r.td,{children:"secType5"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/SpdrKeyType",children:"enum : SpdrKeyType"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"340"}),(0,s.jsx)(r.td,{children:"mult5"}),(0,s.jsx)(r.td,{children:"ushort"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"343"}),(0,s.jsx)(r.td,{children:"side5"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"346"}),(0,s.jsx)(r.td,{children:"posType5"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/PositionType",children:"enum : PositionType"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"349"}),(0,s.jsx)(r.td,{children:"ssaleFlag5"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum : ShortSaleFlag"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"352"}),(0,s.jsx)(r.td,{children:"reviewLegId5"}),(0,s.jsx)(r.td,{children:"string(24)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"355"}),(0,s.jsx)(r.td,{children:"reviewLegAltId5"}),(0,s.jsx)(r.td,{children:"string(24)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"358"}),(0,s.jsx)(r.td,{children:"secKey6"}),(0,s.jsx)(r.td,{children:"OptionKey"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"361"}),(0,s.jsx)(r.td,{children:"secType6"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/SpdrKeyType",children:"enum : SpdrKeyType"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"364"}),(0,s.jsx)(r.td,{children:"mult6"}),(0,s.jsx)(r.td,{children:"ushort"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"367"}),(0,s.jsx)(r.td,{children:"side6"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"370"}),(0,s.jsx)(r.td,{children:"posType6"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/PositionType",children:"enum : PositionType"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"373"}),(0,s.jsx)(r.td,{children:"ssaleFlag6"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum : ShortSaleFlag"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"376"}),(0,s.jsx)(r.td,{children:"reviewLegId6"}),(0,s.jsx)(r.td,{children:"string(24)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"379"}),(0,s.jsx)(r.td,{children:"reviewLegAltId6"}),(0,s.jsx)(r.td,{children:"string(24)"})]})]})]}),"\n",(0,s.jsx)(r.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,s.jsxs)(d.A,{children:[(0,s.jsx)(i.A,{value:"Python",label:"Python",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'SpdrParentReviewResponse'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n#Required Parameters\n\"apiKey\": API_KEY,\n\"cmd\": 'getschema',\n\"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,s.jsx)(i.A,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=SpdrParentReviewResponse'\n\n"})})})]}),"\n",(0,s.jsx)(r.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,s.jsxs)(d.A,{children:[(0,s.jsx)(i.A,{value:"Python",label:"Python",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'SpdrParentReviewResponse\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'sysEnvironment|runStatus|parentShape|altOrderId|altPrevOrderId|altAccnt|altUserName|secKey|secType|securityDesc|accnt|clientFirm|spdrSource|groupingCode|clientClOrdId|srcRoutingCode|strategy|userName|orderSide|orderSize|orderActiveSize|reviewResult|reviewText|responseSpdrSource|responseClOrdId|responseOrigClOrdId|responseCancelClOrdId|firmType|orderCapacity|positionType|ssaleFlag|locateQuan|locateFirm|locatePool|userData1|userData2|childData|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'altOrderId:eq:ExampleString\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(i.A,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=SpdrParentReviewResponse' \\\n--data-urlencode 'view=sysEnvironment|runStatus|parentShape|altOrderId|altPrevOrderId|altAccnt|altUserName|secKey|secType|securityDesc|accnt|clientFirm|spdrSource|groupingCode|clientClOrdId|srcRoutingCode|strategy|userName|orderSide|orderSize|orderActiveSize|reviewResult|reviewText|responseSpdrSource|responseClOrdId|responseOrigClOrdId|responseCancelClOrdId|firmType|orderCapacity|positionType|ssaleFlag|locateQuan|locateFirm|locatePool|userData1|userData2|childData|timestamp' \\\n--data-urlencode 'where=altOrderId:eq:ExampleString'\n"})})})]}),"\n",(0,s.jsx)(r.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,s.jsxs)(d.A,{children:[(0,s.jsx)(i.A,{value:"Python",label:"Python",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'SpdrParentReviewResponse\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'sysEnvironment|runStatus|parentShape|altOrderId|altPrevOrderId|altAccnt|altUserName|secKey|secType|securityDesc|accnt|clientFirm|spdrSource|groupingCode|clientClOrdId|srcRoutingCode|strategy|userName|orderSide|orderSize|orderActiveSize|reviewResult|reviewText|responseSpdrSource|responseClOrdId|responseOrigClOrdId|responseCancelClOrdId|firmType|orderCapacity|positionType|ssaleFlag|locateQuan|locateFirm|locatePool|userData1|userData2|childData|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'altOrderId:eq:ExampleString\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'sysEnvironment:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(i.A,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=SpdrParentReviewResponse' \\\n--data-urlencode 'view=sysEnvironment|runStatus|parentShape|altOrderId|altPrevOrderId|altAccnt|altUserName|secKey|secType|securityDesc|accnt|clientFirm|spdrSource|groupingCode|clientClOrdId|srcRoutingCode|strategy|userName|orderSide|orderSize|orderActiveSize|reviewResult|reviewText|responseSpdrSource|responseClOrdId|responseOrigClOrdId|responseCancelClOrdId|firmType|orderCapacity|positionType|ssaleFlag|locateQuan|locateFirm|locatePool|userData1|userData2|childData|timestamp' \\\n--data-urlencode 'where=altOrderId:eq:ExampleString' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=sysEnvironment:ASC'\n"})})})]}),"\n",(0,s.jsx)(r.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,s.jsxs)(d.A,{children:[(0,s.jsx)(i.A,{value:"Python",label:"Python",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'SpdrParentReviewResponse\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'sysEnvironment|runStatus|parentShape|altOrderId|altPrevOrderId|altAccnt|altUserName|secKey|secType|securityDesc|accnt|clientFirm|spdrSource|groupingCode|clientClOrdId|srcRoutingCode|strategy|userName|orderSide|orderSize|orderActiveSize|reviewResult|reviewText|responseSpdrSource|responseClOrdId|responseOrigClOrdId|responseCancelClOrdId|firmType|orderCapacity|positionType|ssaleFlag|locateQuan|locateFirm|locatePool|userData1|userData2|childData|timestamp\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'sysEnvironment|runStatus|parentShape|secType|spdrSource|orderSide|reviewResult|responseSpdrSource|firmType|orderCapacity|positionType|ssaleFlag\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'altOrderId:eq:ExampleString\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getaggregate\',\n"msgType": MSG_TYPE,\n"measure": MEASURE,\n"group": GROUP,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(i.A,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=SpdrParentReviewResponse' \\\n--data-urlencode 'measure=sysEnvironment|runStatus|parentShape|altOrderId|altPrevOrderId|altAccnt|altUserName|secKey|secType|securityDesc|accnt|clientFirm|spdrSource|groupingCode|clientClOrdId|srcRoutingCode|strategy|userName|orderSide|orderSize|orderActiveSize|reviewResult|reviewText|responseSpdrSource|responseClOrdId|responseOrigClOrdId|responseCancelClOrdId|firmType|orderCapacity|positionType|ssaleFlag|locateQuan|locateFirm|locatePool|userData1|userData2|childData|timestamp' \\\n--data-urlencode 'group=sysEnvironment|runStatus|parentShape|secType|spdrSource|orderSide|reviewResult|responseSpdrSource|firmType|orderCapacity|positionType|ssaleFlag' \\\n--data-urlencode 'where=altOrderId:eq:ExampleString'\n"})})})]}),"\n",(0,s.jsx)(r.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,s.jsxs)(d.A,{children:[(0,s.jsx)(i.A,{value:"Python",label:"Python",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'SpdrParentReviewResponse\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'altOrderId:eq:ExampleString\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(i.A,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=SpdrParentReviewResponse' \\\n--data-urlencode 'where=altOrderId:eq:ExampleString'\n"})})})]})]})}function x(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},19365:(e,r,n)=>{n.d(r,{A:()=>i});n(96540);var s=n(34164);const t={tabItem:"tabItem_Ymn6"};var d=n(74848);function i(e){let{children:r,hidden:n,className:i}=e;return(0,d.jsx)("div",{role:"tabpanel",className:(0,s.A)(t.tabItem,i),hidden:n,children:r})}},11470:(e,r,n)=>{n.d(r,{A:()=>w});var s=n(96540),t=n(34164),d=n(23104),i=n(56347),l=n(205),a=n(57485),c=n(31682),h=n(70679);function o(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:r,children:n}=e;return(0,s.useMemo)((()=>{const e=r??function(e){return o(e).map((e=>{let{props:{value:r,label:n,attributes:s,default:t}}=e;return{value:r,label:n,attributes:s,default:t}}))}(n);return function(e){const r=(0,c.X)(e,((e,r)=>e.value===r.value));if(r.length>0)throw new Error(`Docusaurus error: Duplicate values "${r.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[r,n])}function x(e){let{value:r,tabValues:n}=e;return n.some((e=>e.value===r))}function j(e){let{queryString:r=!1,groupId:n}=e;const t=(0,i.W6)(),d=function(e){let{queryString:r=!1,groupId:n}=e;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:r,groupId:n});return[(0,a.aZ)(d),(0,s.useCallback)((e=>{if(!d)return;const r=new URLSearchParams(t.location.search);r.set(d,e),t.replace({...t.location,search:r.toString()})}),[d,t])]}function p(e){const{defaultValue:r,queryString:n=!1,groupId:t}=e,d=u(e),[i,a]=(0,s.useState)((()=>function(e){let{defaultValue:r,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!x({value:r,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${r}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return r}const s=n.find((e=>e.default))??n[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:r,tabValues:d}))),[c,o]=j({queryString:n,groupId:t}),[p,m]=function(e){let{groupId:r}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(r),[t,d]=(0,h.Dv)(n);return[t,(0,s.useCallback)((e=>{n&&d.set(e)}),[n,d])]}({groupId:t}),g=(()=>{const e=c??p;return x({value:e,tabValues:d})?e:null})();(0,l.A)((()=>{g&&a(g)}),[g]);return{selectedValue:i,selectValue:(0,s.useCallback)((e=>{if(!x({value:e,tabValues:d}))throw new Error(`Can't select invalid tab value=${e}`);a(e),o(e),m(e)}),[o,m,d]),tabValues:d}}var m=n(92303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var y=n(74848);function S(e){let{className:r,block:n,selectedValue:s,selectValue:i,tabValues:l}=e;const a=[],{blockElementScrollPositionUntilNextRender:c}=(0,d.a_)(),h=e=>{const r=e.currentTarget,n=a.indexOf(r),t=l[n].value;t!==s&&(c(r),i(t))},o=e=>{let r=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{const n=a.indexOf(e.currentTarget)+1;r=a[n]??a[0];break}case"ArrowLeft":{const n=a.indexOf(e.currentTarget)-1;r=a[n]??a[a.length-1];break}}r?.focus()};return(0,y.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":n},r),children:l.map((e=>{let{value:r,label:n,attributes:d}=e;return(0,y.jsx)("li",{role:"tab",tabIndex:s===r?0:-1,"aria-selected":s===r,ref:e=>a.push(e),onKeyDown:o,onClick:h,...d,className:(0,t.A)("tabs__item",g.tabItem,d?.className,{"tabs__item--active":s===r}),children:n??r},r)}))})}function v(e){let{lazy:r,children:n,selectedValue:t}=e;const d=(Array.isArray(n)?n:[n]).filter(Boolean);if(r){const e=d.find((e=>e.props.value===t));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return(0,y.jsx)("div",{className:"margin-top--md",children:d.map(((e,r)=>(0,s.cloneElement)(e,{key:r,hidden:e.props.value!==t})))})}function f(e){const r=p(e);return(0,y.jsxs)("div",{className:(0,t.A)("tabs-container",g.tabList),children:[(0,y.jsx)(S,{...r,...e}),(0,y.jsx)(v,{...r,...e})]})}function w(e){const r=(0,m.A)();return(0,y.jsx)(f,{...e,children:o(e.children)},String(r))}},28453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>l});var s=n(96540);const t={},d=s.createContext(t);function i(e){const r=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(d.Provider,{value:r},e.children)}}}]);