"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[42514],{42610:(e,N,L)=>{L.r(N),L.d(N,{assets:()=>o,contentTitle:()=>t,default:()=>s,frontMatter:()=>r,metadata:()=>n,toc:()=>E});var T=L(74848),i=L(28453);const r={title:"LiveSurfaceCurve"},t=void 0,n={id:"MessageSchemas/Schema/SRSE Products/SRAnalytics/LiveSurfaceCurve/LiveSurfaceCurve",title:"LiveSurfaceCurve",description:"V8 Message Definition",source:"@site/docs/MessageSchemas/Schema/SRSE Products/SRAnalytics/LiveSurfaceCurve/LiveSurfaceCurve.md",sourceDirName:"MessageSchemas/Schema/SRSE Products/SRAnalytics/LiveSurfaceCurve",slug:"/MessageSchemas/Schema/SRSE Products/SRAnalytics/LiveSurfaceCurve/",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRAnalytics/LiveSurfaceCurve/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"LiveSurfaceCurve"},sidebar:"messageSchemasSidebar",previous:{title:"LiveSurfaceAtm",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRAnalytics/LiveSurfaceAtm/"},next:{title:"LiveSurfaceDetail",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRAnalytics/LiveSurfaceDetail/"}},o={},E=[];function a(e){const N={a:"a",code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,T.jsxs)(T.Fragment,{children:[(0,T.jsx)(N.p,{children:(0,T.jsx)(N.a,{href:"../../../Topics/analytics/LiveSurfaceCurve",children:"V8 Message Definition"})}),"\n",(0,T.jsx)(N.pre,{children:(0,T.jsx)(N.code,{className:"language-sql",children:"CREATE TABLE `SRAnalytics`.`MsgLiveSurfaceCurve` (\n    `ekey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None',\n    `ekey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None',\n    `ekey_tk` VARCHAR(12) NOT NULL DEFAULT '',\n    `ekey_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0,\n    `ekey_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0,\n    `ekey_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0,\n    `surfaceType` ENUM('None','Live','PrevDay','Interp','Close','Test') NOT NULL DEFAULT 'None',\n    `ticker_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'underlying stock key that this option expiration attaches to',\n    `ticker_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'underlying stock key that this option expiration attaches to',\n    `ticker_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'underlying stock key that this option expiration attaches to',\n    `fkey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'underlying future key (if any)',\n    `fkey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'underlying future key (if any)',\n    `fkey_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'underlying future key (if any)',\n    `fkey_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'underlying future key (if any)',\n    `fkey_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'underlying future key (if any)',\n    `fkey_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'underlying future key (if any)',\n    `uPrcDriverKey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'underlier driver key',\n    `uPrcDriverKey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'underlier driver key',\n    `uPrcDriverKey_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'underlier driver key',\n    `uPrcDriverKey_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'underlier driver key',\n    `uPrcDriverKey_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'underlier driver key',\n    `uPrcDriverKey_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'underlier driver key',\n    `uPrcDriverType` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None' COMMENT 'underlier driver key type (stock or future)',\n    `uPrcDriver` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier driver (mid-market)',\n    `uPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'effective uPrc used for surface fitting',\n    `uBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'effective uBid',\n    `uAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'effective uAsk',\n    `years` FLOAT NOT NULL DEFAULT 0 COMMENT 'time to expiration (in years)',\n    `rate` FLOAT NOT NULL DEFAULT 0 COMMENT 'average interest rate to expiration (SR global rate curve)',\n    `sdiv` FLOAT NOT NULL DEFAULT 0 COMMENT 'stock dividend (borrow rate)',\n    `ddiv` FLOAT NOT NULL DEFAULT 0 COMMENT '(expected) cumulative discrete dividend $ amounts prior to expiration',\n    `ddivPv` FLOAT NOT NULL DEFAULT 0 COMMENT '(expected) cumulative npv of discrete dividend $ amounts prior to expiration (SR global rate curve)',\n    `ddivSource` ENUM('None','Announced','Forecast') NOT NULL DEFAULT 'None' COMMENT 'Forecast if any of the dividends prior to expiry are forecast rather than announced',\n    `symbolRatio` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier price ratio (usually 1.0 or a multi-hedge option price ratio; if one exists)',\n    `exType` ENUM('None','American','European','Asian','Cliquet') NOT NULL DEFAULT 'None' COMMENT 'exercise type (American or European)',\n    `modelType` ENUM('None','LogNormalExact','NormalExact','LogNormalApprox','NormalApprox') NOT NULL DEFAULT 'None' COMMENT 'option pricing model used for price calcs (Normal, LogNormal, etc.)',\n    `priceType` ENUM('None','Equity','Future') NOT NULL DEFAULT 'None' COMMENT 'Equity has independent sdiv and rate, Future has sdiv = rate',\n    `earnCnt` FLOAT NOT NULL DEFAULT 0 COMMENT 'number of qualifying earnings events prior to expiration [can be fractional] (from StockEarningsCalendar)',\n    `earnCntAdj` FLOAT NOT NULL DEFAULT 0 COMMENT 'number of qualifying earnings events prior to expiration [adjusted] (from StockEarningsCalendar + LiveSurfaceTerm)',\n    `axisVolRT` FLOAT NOT NULL DEFAULT 0 COMMENT 'axis volatility x sqrt(years) (used to compute xAxis) [usually 4m atm vol]',\n    `axisFUPrc` FLOAT NOT NULL DEFAULT 0 COMMENT 'axis FwdUPrc (fwd underlying price used to compute xAxis)',\n    `synSpot` DOUBLE NOT NULL DEFAULT 0 COMMENT 'Synthetic spot price (market-derived spot when the underlying is not a traded instrument)',\n    `synCarry` DOUBLE NOT NULL DEFAULT 0 COMMENT 'Synthetic carry rate; corresponds to the relationship between uPrc and synSpot (set when the underlying is not a traded instrument)',\n    `atmStrike` FLOAT NOT NULL DEFAULT 0 COMMENT 'synthetic strike with cPrice = pPrice',\n    `moneynessType` ENUM('None','PctStd','LogStd','NormStd') NOT NULL DEFAULT 'None' COMMENT 'moneyness (xAxis) convention',\n    `underlierMode` ENUM('None','Actual','FrontMonth','UPrcAdj') NOT NULL DEFAULT 'None' COMMENT 'underlier pricing mode (None=use spot/stock market; FrontMonth=use front month future market * uPrcRatio; Actual = use actual underlier future market)',\n    `cpAdjType` ENUM('None','SDiv','UPrcRatio') NOT NULL DEFAULT 'None' COMMENT 'adjustment used to align calls/puts (if any)',\n    `priceQuoteType` ENUM('None','Price','Vol') NOT NULL DEFAULT 'None' COMMENT 'Price or Vol',\n    `atmVol` FLOAT NOT NULL DEFAULT 0 COMMENT 'atm vol (xAxis = 0)',\n    `atmCen` FLOAT NOT NULL DEFAULT 0 COMMENT 'atm vol (xAxis = 0) (eMove/earnCntAdj censored)',\n    `atmVolHist` FLOAT NOT NULL DEFAULT 0 COMMENT 'historical realized volatility (includes eMoveHist x earnCntAdj adjustment).  Note that this is the default atmVol if no implied markets existed previous day.',\n    `atmCenHist` FLOAT NOT NULL DEFAULT 0 COMMENT 'censored (earnings events removed) historical realized volatility.  Trailing periods is 2x forward time to expiration.  From HistoricalVolatility(windowType=hlCen).mv_nnn',\n    `eMove` FLOAT NOT NULL DEFAULT 0 COMMENT 'implied earnings move (from LiveSurfaceTerm)',\n    `eMoveHist` FLOAT NOT NULL DEFAULT 0 COMMENT 'historical earnings move (avg of trailing 8 moves). From StockEarningsCalendar.eMoveHist',\n    `uPrcRatio` DOUBLE NOT NULL DEFAULT 0 COMMENT 'uPrcAdj = uPrc * uPrcRatioFit',\n    `minAtmVol` FLOAT NOT NULL DEFAULT 0 COMMENT 'minimum estimated atm vol',\n    `maxAtmVol` FLOAT NOT NULL DEFAULT 0 COMMENT 'maximum estimated atm vol',\n    `minCPAdjVal` DOUBLE NOT NULL DEFAULT 0 COMMENT 'minimum cpAdjVal (sdiv or uPrcRatio)',\n    `maxCPAdjVal` DOUBLE NOT NULL DEFAULT 0 COMMENT 'minimum cpAdjVal (sdiv or uPrcRatio)',\n    `atmFixedMove` FLOAT NOT NULL DEFAULT 0 COMMENT 'fixed strike atm move from prior period',\n    `atmPhi` FLOAT NOT NULL DEFAULT 0 COMMENT 'surface phi @ xAxis = 0',\n    `atmRho` FLOAT NOT NULL DEFAULT 0 COMMENT 'surface rho @ xAxis = 0',\n    `atmVega` FLOAT NOT NULL DEFAULT 0 COMMENT 'surface vega @ xAxis = 0',\n    `slope` FLOAT NOT NULL DEFAULT 0 COMMENT 'volatility surface slope (dVol / dXAxis) @ ATM (xAxis=0)',\n    `varSwapFV` FLOAT NOT NULL DEFAULT 0 COMMENT 'variance swap fair value (estimated by numerical integration over OTM price surface)',\n    `gridType` ENUM('None','Unused','SRCubic','SRCubic2','BSpline','BSpline2') NOT NULL DEFAULT 'None' COMMENT 'gridType defines skew curve coeff points + spline type',\n    `knotShift` FLOAT NOT NULL DEFAULT 0 COMMENT 'constant that should be added to each base knot location [-3.0 - +3.0]',\n    `fitPowerC` FLOAT NOT NULL DEFAULT 0 COMMENT 'fit power of the vol fit (call wing)',\n    `fitPowerP` FLOAT NOT NULL DEFAULT 0 COMMENT 'fit power of the vol fit (put wing)',\n    `minXAxis` FLOAT NOT NULL DEFAULT 0 COMMENT 'minimum xAxis value; xAxis values to the left extrapolate horizontally',\n    `maxXAxis` FLOAT NOT NULL DEFAULT 0 COMMENT 'maximum xAxis value; xAxis values to the right extrapolate horizontally',\n    `asymptoticVolC` FLOAT NOT NULL DEFAULT 0 COMMENT 'asymptotic volatility (call wing)',\n    `asymptoticVolP` FLOAT NOT NULL DEFAULT 0 COMMENT 'asymptotic volatility (put wing)',\n    `minCurvValue` FLOAT NOT NULL DEFAULT 0 COMMENT 'minimum curvature (2nd derivative) of skew curve (can be negative if curve is not strictly convex)',\n    `minCurvXAxis` FLOAT NOT NULL DEFAULT 0 COMMENT 'xAxis of minimum curvature point',\n    `maxCurvValue` FLOAT NOT NULL DEFAULT 0 COMMENT 'maximum curvature (2nd derivative) of skew curve',\n    `maxCurvXAxis` FLOAT NOT NULL DEFAULT 0 COMMENT 'xAxis of maximum curvature point',\n    `skewMinX` FLOAT NOT NULL DEFAULT 0 COMMENT 'xAxis = (effStrike / effAxisFUPrc - 1.0) / axisVolRT; effStrike = strike * strikeRatio; effAxisFUPrc = axisFUPrc * symbolRatio',\n    `skewMinY` FLOAT NOT NULL DEFAULT 0 COMMENT 'skewMinX / skewMinY are the skew curve minimum point (usually a positive x value and a negative y value)',\n    `surfaceFit` ENUM('None','Flat','Linear','Quadratic','ConvexSpline','SplitSpline','Interp','Recent','PCA','Median','Default') NOT NULL DEFAULT 'None',\n    `skewC00` FLOAT NOT NULL DEFAULT 0 COMMENT 'curve coeff[0]',\n    `skewC01` FLOAT NOT NULL DEFAULT 0 COMMENT 'curve coeff[1]',\n    `skewC02` FLOAT NOT NULL DEFAULT 0,\n    `skewC03` FLOAT NOT NULL DEFAULT 0,\n    `skewC04` FLOAT NOT NULL DEFAULT 0,\n    `skewC05` FLOAT NOT NULL DEFAULT 0,\n    `skewC06` FLOAT NOT NULL DEFAULT 0,\n    `skewC07` FLOAT NOT NULL DEFAULT 0,\n    `skewC08` FLOAT NOT NULL DEFAULT 0,\n    `skewC09` FLOAT NOT NULL DEFAULT 0,\n    `skewC10` FLOAT NOT NULL DEFAULT 0,\n    `skewC11` FLOAT NOT NULL DEFAULT 0,\n    `skewC12` FLOAT NOT NULL DEFAULT 0,\n    `skewC13` FLOAT NOT NULL DEFAULT 0,\n    `skewC14` FLOAT NOT NULL DEFAULT 0,\n    `skewC15` FLOAT NOT NULL DEFAULT 0,\n    `skewC16` FLOAT NOT NULL DEFAULT 0,\n    `skewC17` FLOAT NOT NULL DEFAULT 0,\n    `skewC18` FLOAT NOT NULL DEFAULT 0,\n    `skewC19` FLOAT NOT NULL DEFAULT 0,\n    `skewC20` FLOAT NOT NULL DEFAULT 0,\n    `skewC21` FLOAT NOT NULL DEFAULT 0,\n    `skewC22` FLOAT NOT NULL DEFAULT 0,\n    `skewC23` FLOAT NOT NULL DEFAULT 0,\n    `skewC24` FLOAT NOT NULL DEFAULT 0,\n    `skewC25` FLOAT NOT NULL DEFAULT 0,\n    `skewC26` FLOAT NOT NULL DEFAULT 0,\n    `skewC27` FLOAT NOT NULL DEFAULT 0,\n    `skewC28` FLOAT NOT NULL DEFAULT 0,\n    `ivAdjD07` FLOAT NOT NULL DEFAULT 0 COMMENT 'xAxis = -5.0',\n    `ivAdjD06` FLOAT NOT NULL DEFAULT 0 COMMENT 'xAxis = -4.0',\n    `ivAdjD05` FLOAT NOT NULL DEFAULT 0 COMMENT 'xAxis = -3.0',\n    `ivAdjD04` FLOAT NOT NULL DEFAULT 0 COMMENT 'xAxis = -2.0',\n    `ivAdjD03` FLOAT NOT NULL DEFAULT 0 COMMENT 'xAxis = -1.5',\n    `ivAdjD02` FLOAT NOT NULL DEFAULT 0 COMMENT 'xAxis = -1.0',\n    `ivAdjD01` FLOAT NOT NULL DEFAULT 0 COMMENT 'xAxis = -0.5',\n    `ivAdjU01` FLOAT NOT NULL DEFAULT 0 COMMENT 'xAxis = +0.5',\n    `ivAdjU02` FLOAT NOT NULL DEFAULT 0 COMMENT 'xAxis = +1.0',\n    `ivAdjU03` FLOAT NOT NULL DEFAULT 0 COMMENT 'xAxis = +1.5',\n    `ivAdjU04` FLOAT NOT NULL DEFAULT 0 COMMENT 'xAxis = +2.0',\n    `ivAdjU05` FLOAT NOT NULL DEFAULT 0 COMMENT 'xAxis = +3.0',\n    `ivAdjU06` FLOAT NOT NULL DEFAULT 0 COMMENT 'xAxis = +4.0',\n    `ivAdjU07` FLOAT NOT NULL DEFAULT 0 COMMENT 'xAxis = +5.0',\n    `cpAdjD04` FLOAT NOT NULL DEFAULT 0 COMMENT 'xAxis = -4.0',\n    `cpAdjD03` FLOAT NOT NULL DEFAULT 0 COMMENT 'xAxis = -3.0',\n    `cpAdjD02` FLOAT NOT NULL DEFAULT 0 COMMENT 'xAxis = -2.0',\n    `cpAdjD01` FLOAT NOT NULL DEFAULT 0 COMMENT 'xAxis = -1.0',\n    `cpAdjU01` FLOAT NOT NULL DEFAULT 0 COMMENT 'xAxis = +1.0',\n    `cpAdjU02` FLOAT NOT NULL DEFAULT 0 COMMENT 'xAxis = +2.0',\n    `cpAdjU03` FLOAT NOT NULL DEFAULT 0 COMMENT 'xAxis = +3.0',\n    `cpAdjU04` FLOAT NOT NULL DEFAULT 0 COMMENT 'xAxis = +4.0',\n    `pwidth` FLOAT NOT NULL DEFAULT 0 COMMENT 'minimum mkt premium width',\n    `vwidth` FLOAT NOT NULL DEFAULT 0 COMMENT 'minimum mkt volatility width',\n    `cCnt` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'num call strikes in base fit',\n    `pCnt` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'num put strikes in base fit',\n    `cBidMiss` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'number of call bid violations (surface outside the market)',\n    `cAskMiss` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'number of call ask violations (surface outside the market)',\n    `pBidMiss` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'number of put bid violations',\n    `pAskMiss` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'number of put ask violations',\n    `fitAvgErr` FLOAT NOT NULL DEFAULT 0 COMMENT 'average error (sPrc - midPrc)',\n    `fitAvgAbsErr` FLOAT NOT NULL DEFAULT 0 COMMENT 'average absolute error (sPrc - midPrc)',\n    `fitMaxPrcErr` FLOAT NOT NULL DEFAULT 0 COMMENT 'worst case surface premium violation',\n    `fitErrXX` FLOAT NOT NULL DEFAULT 0 COMMENT 'okey_xx of the option with the largest fit error in this expiration',\n    `fitErrCP` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call' COMMENT 'okey_cp of the option with the largest fit error in this expiration',\n    `fitErrDe` FLOAT NOT NULL DEFAULT 0 COMMENT 'delta of fixErrXX',\n    `fitErrBid` FLOAT NOT NULL DEFAULT 0 COMMENT 'bid of the option with the largest fit error',\n    `fitErrAsk` FLOAT NOT NULL DEFAULT 0 COMMENT 'ask of the option with the largest fit error',\n    `fitErrPrc` FLOAT NOT NULL DEFAULT 0 COMMENT 'surface prc of the option with the largest fit error',\n    `fitErrVol` FLOAT NOT NULL DEFAULT 0 COMMENT 'surface vol of the option with the largest fit error',\n    `numSaddlePts` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'number of saddle points',\n    `minSaddleSpan` FLOAT NOT NULL DEFAULT 0 COMMENT 'smallest distance between saddle points',\n    `maxSaddleCurvature` FLOAT NOT NULL DEFAULT 0 COMMENT 'maximum saddle point curvature',\n    `skewCounter` INT NOT NULL DEFAULT 0 COMMENT 'skew surface fit counter',\n    `sdivCounter` INT NOT NULL DEFAULT 0 COMMENT 'sdiv surface fit counter',\n    `marketSession` ENUM('None','PreMkt','RegMkt','PostMkt','PreRegMkt','RegPostMkt','AllDay') NOT NULL DEFAULT 'None' COMMENT 'market session this surface is from',\n    `tradeableStatus` ENUM('None','OK','SurfaceErr','LowCCnt','LowPCnt','FitPrcErr','BidAskMiss','LowCounter','DefaultSkew','SessionMiss','BaseErr','SwitchDelay','WideMktV','WideMktP','WideUMkt','UWidthEma','CCntEma','PCntEma','VWidthEma','PWidthEma','Closed') NOT NULL DEFAULT 'None' COMMENT 'indicates whether the surface is currently tradeable or not (all server surface integrity checks pass)',\n    `surfaceResult` ENUM('None','OK','EOD','Init','Cache','PrevDay','NullExpIdx','NoStrikes','NoBaseCurve','BadBootAtm','NoGoodStrikes','BadAtmVol','Bootstrap','NoUPrc','NoIVols','NoModelPts','ZeroYears','NoSimpleVol','OptMktNotOpn','NoBaseSurface','UPrcOffCnt','SkewKnotCnt','Exception','AxisError','CAskFit1Err','CAskFit2Err','PAskFit1Err','PAskFit2Err','CBidFit1Err','CBidFit2Err','PBidFit1Err','PBidFit2Err','CobsSampleErr','NoPrcFit','NumStrikes','CMidFitErr','PMidFitErr','StrikeCount','VolKnotCnt','InterpError','NoAtmStrike','CobsConvexFitErr','CobsMidFitErr','ProxyError','NoOptExp','Expired','NoUnderlier','NoBaseUnderlier','InvalidUPrc','ZeroUPrc','WideUMkt','StalePrcFit','NoPrcCurves','PriceError','ConvergeFail','NoUPrcRatio','NoSDivValue') NOT NULL DEFAULT 'None',\n    `sTimestamp` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'last surface curve fit timestamp',\n    `time` TIME(6) NOT NULL DEFAULT '00:00:00.000000',\n    `timestamp` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000',\n    PRIMARY KEY USING HASH (`ekey_tk`,`ekey_yr`,`ekey_mn`,`ekey_dy`,`ekey_at`,`ekey_ts`,`surfaceType`)\n) ENGINE=SRSE DEFAULT CHARSET=LATIN1 COMMENT='LiveSurfaceCurve (surfaceType = \\'Live\\') records are computed and publish continuously during trading hours and represent a current best implied volatility market fit.\\nSurfaceType = \\'PriorDay\\' records contain the `closing surface record from the prior trading period (usually from just before the last main session close).';\n\n"})})]})}function s(e={}){const{wrapper:N}={...(0,i.R)(),...e.components};return N?(0,T.jsx)(N,{...e,children:(0,T.jsx)(a,{...e})}):a(e)}},28453:(e,N,L)=>{L.d(N,{R:()=>t,x:()=>n});var T=L(96540);const i={},r=T.createContext(i);function t(e){const N=T.useContext(r);return T.useMemo((function(){return"function"==typeof e?e(N):{...N,...e}}),[N,e])}function n(e){let N;return N=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),T.createElement(r.Provider,{value:N},e.children)}}}]);