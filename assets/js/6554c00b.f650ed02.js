"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([["94564"],{966:function(e,r,d){d.r(r),d.d(r,{default:()=>x,frontMatter:()=>l,metadata:()=>i,assets:()=>c,toc:()=>h,contentTitle:()=>s});var i=JSON.parse('{"id":"MessageSchemas/Schema/SRSE Products/SRRisk/TradeCubeDetailV5/TradeCubeDetailV5","title":"TradeCubeDetailV5","description":"V8 Message Definiton","source":"@site/docs/MessageSchemas/Schema/SRSE Products/SRRisk/TradeCubeDetailV5/TradeCubeDetailV5.md","sourceDirName":"MessageSchemas/Schema/SRSE Products/SRRisk/TradeCubeDetailV5","slug":"/MessageSchemas/Schema/SRSE Products/SRRisk/TradeCubeDetailV5/","permalink":"/docs/next/MessageSchemas/Schema/SRSE Products/SRRisk/TradeCubeDetailV5/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"messageSchemasSidebar","previous":{"title":"SymbolRiskSummaryV5","permalink":"/docs/next/MessageSchemas/Schema/SRSE Products/SRRisk/SymbolRiskSummaryV5/"},"next":{"title":"SRSpread","permalink":"/docs/next/MessageSchemas/Schema/SRSE Products/SRSpread/"}}'),t=d("52676"),n=d("91503");let l={},s=void 0,c={},h=[{value:"METADATA",id:"metadata",level:3},{value:"Table Definition",id:"table-definition",level:3},{value:"PRIMARY KEY DEFINITION (Unique)",id:"primary-key-definition-unique",level:3},{value:"CREATE TABLE EXAMPLE QUERY",id:"create-table-example-query",level:3},{value:"SELECT TABLE EXAMPLE QUERY",id:"select-table-example-query",level:3},{value:"Doc Columns Query",id:"doc-columns-query",level:3}];function a(e){let r={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"../../../Topics/risk-v5/TradeCubeDetailV5",children:"V8 Message Definiton"})}),"\n",(0,t.jsx)(r.p,{children:"TradeCubeDetail records are published by CoreRiskServers and are visible in SRSE throughout the day.  They are designed to be aggregated and analyzed over time.\nTradeCubeDetail records are published to the SpiderRock Archive Host data pipeline after all markup detail is complete."}),"\n",(0,t.jsx)(r.h3,{id:"metadata",children:"METADATA"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Attribute"}),(0,t.jsx)(r.th,{children:"Value"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Topic"}),(0,t.jsx)(r.td,{children:"4740-risk-v5"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"MLink Token"}),(0,t.jsx)(r.td,{children:"ClientRisk"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Product"}),(0,t.jsx)(r.td,{children:"SRRisk"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"accessType"}),(0,t.jsx)(r.td,{children:"SELECT"})]})]})]}),"\n",(0,t.jsx)(r.h3,{id:"table-definition",children:"Table Definition"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Field"}),(0,t.jsx)(r.th,{children:"Type"}),(0,t.jsx)(r.th,{children:"Key"}),(0,t.jsx)(r.th,{children:"Default Value"}),(0,t.jsx)(r.th,{children:"Comment"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"fillNumber"}),(0,t.jsx)(r.td,{children:"BIGINT"}),(0,t.jsx)(r.td,{children:"PRI"}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"SpiderRock execution number globally unique over trailing 10 days"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"tradeDate"}),(0,t.jsx)(r.td,{children:"DATE"}),(0,t.jsx)(r.td,{children:"PRI"}),(0,t.jsx)(r.td,{children:"'1900-01-01'"}),(0,t.jsx)(r.td,{children:"trade date"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"runStatus"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/RunStatus",children:"enum - RunStatus"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"sysEnvironment"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/SysEnvironment",children:"enum - SysEnvironment"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"version"}),(0,t.jsx)(r.td,{children:"TINYINT UNSIGNED"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"record version number starts at zero and goes up every time an execution record is republished eg bust 1m marks 10m marks etc"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"clOrdId"}),(0,t.jsx)(r.td,{children:"VARCHAR(24)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"clOrdId resulting in fill child order"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"parentNumber"}),(0,t.jsx)(r.td,{children:"CHAR(19)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'0000-0000-0000-0000'"}),(0,t.jsx)(r.td,{children:"SpiderRock parent number"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"packageId"}),(0,t.jsx)(r.td,{children:"BIGINT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"groups related orderbrokers together eg Legger wMLeg Parent"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"altOrderId"}),(0,t.jsx)(r.td,{children:"VARCHAR(24)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"alternate order ID usually clOrdId from client"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"srcRoutingCode"}),(0,t.jsx)(r.td,{children:"TINYTEXT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"inbound FIX routing code if any"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"spdrSource"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/SpdrSource",children:"enum - SpdrSource"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{children:"SpiderRock parent order source code broker pkey"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"groupingCode"}),(0,t.jsx)(r.td,{children:"CHAR(19)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'0000-0000-0000-0000'"}),(0,t.jsx)(r.td,{children:"SpiderRock parent broker number broker pkey"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"accnt"}),(0,t.jsx)(r.td,{children:"VARCHAR(16)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"SpiderRock Accnt Code"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"clientFirm"}),(0,t.jsx)(r.td,{children:"VARCHAR(16)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"SpiderRock ClientFirm Code"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"priAggGroup"}),(0,t.jsx)(r.td,{children:"VARCHAR(16)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"primary aggregation group"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"secAggGroup"}),(0,t.jsx)(r.td,{children:"VARCHAR(16)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"secondary aggregation group"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"secKey_at"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{children:"security key"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"secKey_ts"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{children:"security key"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"secKey_tk"}),(0,t.jsx)(r.td,{children:"VARCHAR(12)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"security key"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"secKey_yr"}),(0,t.jsx)(r.td,{children:"SMALLINT UNSIGNED"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"security key"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"secKey_mn"}),(0,t.jsx)(r.td,{children:"TINYINT UNSIGNED"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"security key"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"secKey_dy"}),(0,t.jsx)(r.td,{children:"TINYINT UNSIGNED"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"security key"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"secKey_xx"}),(0,t.jsx)(r.td,{children:"DOUBLE"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"security key"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"secKey_cp"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/CallPut",children:"enum - CallPut"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'Call'"}),(0,t.jsx)(r.td,{children:"security key"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"secType"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/SpdrKeyType",children:"enum - SpdrKeyType"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{children:"security type Stock Future Option"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"ticker_at"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{children:"base ticker"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"ticker_ts"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{children:"base ticker"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"ticker_tk"}),(0,t.jsx)(r.td,{children:"VARCHAR(12)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"base ticker"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"viewGroup1"}),(0,t.jsx)(r.td,{children:"VARCHAR(12)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"viewGroup1 user supplied if any"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"viewGroup2"}),(0,t.jsx)(r.td,{children:"VARCHAR(12)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"viewGroup2 user supplied if any"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"viewGroup3"}),(0,t.jsx)(r.td,{children:"VARCHAR(12)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"viewGroup3 user supplied if any"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"riskClass"}),(0,t.jsx)(r.td,{children:"VARCHAR(8)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"user supplied risk class code from SymbolControl record"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"symbolType"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/SymbolType",children:"enum - SymbolType"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{children:"symbol type"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"sector"}),(0,t.jsx)(r.td,{children:"VARCHAR(16)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"user supplied sector code from SymbolControl record"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"indNum"}),(0,t.jsx)(r.td,{children:"INT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"ind num 00"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"subNum"}),(0,t.jsx)(r.td,{children:"INT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"sub num 0000"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"grpNum"}),(0,t.jsx)(r.td,{children:"INT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"grp num 000000"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"nbrNum"}),(0,t.jsx)(r.td,{children:"INT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"nbr num 00000000"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"edays"}),(0,t.jsx)(r.td,{children:"SMALLINT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"days to next earnings 5 60"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"expCode"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/ExpCode",children:"enum - ExpCode"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{children:"expiration tenor code"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"skewCode"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/SkewCode",children:"enum - SkewCode"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{children:"strike skew code"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"widthCode"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/WidthCode",children:"enum - WidthCode"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{children:"market width code"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"priceFormat"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/PriceFormat",children:"enum - PriceFormat"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{children:"SpiderRock price display format code"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"uPriceFormat"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/PriceFormat",children:"enum - PriceFormat"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{children:"SpiderRock underlier price display code"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"years"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"years to expiration"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"underliersPerCn"}),(0,t.jsx)(r.td,{children:"INT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"underliers per contract futures and options"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"underlierType"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/UnderlierType",children:"enum - UnderlierType"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{children:"underlier type affects greek calcs"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"tickValue"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"NLV value of a single tick change in display premium	pointValue  tickValue  tickSize"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"pointValue"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"NLV value of a point"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"pointCurrency"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/Currency",children:"enum - Currency"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"uPrcRatio"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"UPrcRatio SymbolRatio from product definition"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"minTickSize"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"routingCode"}),(0,t.jsx)(r.td,{children:"TINYTEXT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"SpiderRock market routing code"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"origExecID"}),(0,t.jsx)(r.td,{children:"VARCHAR(20)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"original execution ID string child order"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"lastExecID"}),(0,t.jsx)(r.td,{children:"VARCHAR(20)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"most recent execution ID same as origExecID unless CANCELCORRECTION has been processed"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"transactDttm"}),(0,t.jsx)(r.td,{children:"DATETIME(6)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'1900-01-01 00:00:00.000000'"}),(0,t.jsx)(r.td,{children:"transaction datetime as reported by exchange or down stream broker"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"execStatus"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/ExecStatus",children:"enum - ExecStatus"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{children:"SpiderRock execution status FillBustCorrectRejectSysRej"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"remoteText"}),(0,t.jsx)(r.td,{children:"VARCHAR(64)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"text comment from endpoint if any"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"orderLimitType"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/SpdrLimitType",children:"enum - SpdrLimitType"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{children:"parent order limit type Vol VolX PrcDe PrcDeX etc"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"orderLimitClass"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/SpdrLimitClass",children:"enum - SpdrLimitClass"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'Simple'"}),(0,t.jsx)(r.td,{children:"parent order limit class makeLimitClass if fill was from making takeLimitClass if fill was from taking"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"parentShape"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/SpdrOrderShape",children:"enum - SpdrOrderShape"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"parentOrderHandling"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/ParentOrderHandling",children:"enum - ParentOrderHandling"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{children:"base parent order algo take style algo"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"parentBalanceHandling"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/ParentBalanceHandling",children:"enum - ParentBalanceHandling"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{children:"base parent order balance handling make style algo"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"parentOrderSize"}),(0,t.jsx)(r.td,{children:"INT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"parent order size"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"method"}),(0,t.jsx)(r.td,{children:"VARCHAR(16)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"execution method string"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"strategy"}),(0,t.jsx)(r.td,{children:"VARCHAR(36)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"client strategy usually client supplied"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"userName"}),(0,t.jsx)(r.td,{children:"VARCHAR(24)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"SpiderRock user name associated with the parent order"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"origin"}),(0,t.jsx)(r.td,{children:"VARCHAR(16)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"parent order origin string"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"source"}),(0,t.jsx)(r.td,{children:"VARCHAR(16)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"execution source string"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"server"}),(0,t.jsx)(r.td,{children:"VARCHAR(20)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"SpiderRock execution engine that handled the parent order"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"clearingFirm"}),(0,t.jsx)(r.td,{children:"VARCHAR(8)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"clearing firm delivery"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"clearingAccnt"}),(0,t.jsx)(r.td,{children:"VARCHAR(16)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"clearing firm account if any"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"lastCapacity"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/OrderCapacity",children:"enum - OrderCapacity"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{children:"child order capacity"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"execRole"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/ExecRole",children:"enum - ExecRole"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{children:"SpiderRock relationship to this execution record Direct Drop etc"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"execBrkrCode"}),(0,t.jsx)(r.td,{children:"VARCHAR(16)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"SR exec broker acronym"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"execBrkrAccnt"}),(0,t.jsx)(r.td,{children:"VARCHAR(16)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"account at executing brokerprime if any"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"execBrkrClFirm"}),(0,t.jsx)(r.td,{children:"VARCHAR(16)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"clientfirm at executing brokerprime if any"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"execBrkrUserName"}),(0,t.jsx)(r.td,{children:"VARCHAR(16)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"clearingFlipType"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/FlipType",children:"enum - FlipType"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{children:"clearingFlip Type CMTA or Giveup"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"clearingFlipFirm"}),(0,t.jsx)(r.td,{children:"VARCHAR(6)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"clearingFlip BrokerMPIDCMTA"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"clearingFlipAccnt"}),(0,t.jsx)(r.td,{children:"VARCHAR(10)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"clearingFlip additional detail subaccnt"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"riskGroupId"}),(0,t.jsx)(r.td,{children:"CHAR(19)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'0000-0000-0000-0000'"}),(0,t.jsx)(r.td,{children:"riskGroupId parent order group ID for this execution report"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"fillBrkrRate"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"billing brokerage rate tier 1"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"fillRoutingRate"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"billing routing rate tier 1"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"billingSecType"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/BillingSecType",children:"enum - BillingSecType"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{children:"SpiderRock billing security type"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"billingCategory"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/BillingCategory",children:"enum - BillingCategory"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{children:"SpiderRock billing category"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"firmType"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/FirmType",children:"enum - FirmType"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{children:"chld order firm type Customer ProCust Firm MM etc"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"side"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum - BuySell"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{children:"parentchild order side"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"priceType"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/PriceType",children:"enum - PriceType"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{children:"order limit price type"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"ssaleFlag"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum - ShortSaleFlag"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{children:"child order short sale flag"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"spdrSSaleFlag"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum - ShortSaleFlag"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{children:"parent order short sale flag"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"positionType"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/PositionType",children:"enum - PositionType"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{children:"child order position type"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"autoHedge"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/AutoHedge",children:"enum - AutoHedge"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{children:"SpiderRock autohedge algorithm if any"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"orderDttm"}),(0,t.jsx)(r.td,{children:"DATETIME(6)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'1900-01-01 00:00:00.000000'"}),(0,t.jsx)(r.td,{children:"Datetime of parent order arrival"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"orderUBid"}),(0,t.jsx)(r.td,{children:"DOUBLE"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"underlier market bid  parent order arrival"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"orderUAsk"}),(0,t.jsx)(r.td,{children:"DOUBLE"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"underlier market ask  parent order arrival"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"orderBid"}),(0,t.jsx)(r.td,{children:"DOUBLE"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"option market bid  parent order arrival options only"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"orderAsk"}),(0,t.jsx)(r.td,{children:"DOUBLE"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"option market ask  parent order arrival options only"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"orderSurfPrc"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"SpiderRock surface price  parent order arrival options only"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"orderSurfVol"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"orderLimitVol"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"parent order limit volatilty options only"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"orderLimitPrc"}),(0,t.jsx)(r.td,{children:"DOUBLE"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"parent order limit price  parent order arrival"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"orderLimitRefUPrc"}),(0,t.jsx)(r.td,{children:"DOUBLE"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"limit reference underlier price  parent order arrival options only"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"childShape"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/SpdrOrderShape",children:"enum - SpdrOrderShape"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"childSize"}),(0,t.jsx)(r.td,{children:"INT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"child order size"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"childPrice"}),(0,t.jsx)(r.td,{children:"DOUBLE"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"child order price"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"childExch"}),(0,t.jsx)(r.td,{children:"VARCHAR(6)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"child order exchange code SpiderRock"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"childExDest"}),(0,t.jsx)(r.td,{children:"VARCHAR(16)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"child order exchange code downstream"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"childDttm"}),(0,t.jsx)(r.td,{children:"DATETIME(6)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'1900-01-01 00:00:00.000000'"}),(0,t.jsx)(r.td,{children:"child order send datetime"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"childUBid"}),(0,t.jsx)(r.td,{children:"DOUBLE"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"underlier market bid  child order send time"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"childUAsk"}),(0,t.jsx)(r.td,{children:"DOUBLE"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"underlier market bid  child order send time"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"childBid"}),(0,t.jsx)(r.td,{children:"DOUBLE"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"option market bid  child order send time options only"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"childAsk"}),(0,t.jsx)(r.td,{children:"DOUBLE"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"option market ask  child order send time options only"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"childSurfPrc"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"SpiderRock surface price  child order send time options only"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"childVol"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"child order volatilty options only"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"childProb"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"child order probability Tx"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"childLimitPrc"}),(0,t.jsx)(r.td,{children:"DOUBLE"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"parent order limit price  child order send time"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"childLimitRefUPrc"}),(0,t.jsx)(r.td,{children:"DOUBLE"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"limit reference underlier price  child order send time options only"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"childLimitPnl"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"child limit improvement pnl childLimitPrc to fillPrice"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"childAlgoHandler"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/ChildHandler",children:"enum - ChildHandler"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{children:"algo that generated the child order responsible for this fill"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"childOrderHandling"}),(0,t.jsx)(r.td,{children:"VARCHAR(24)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"algo that generated the child order responsible for this fill"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"childCreateReason"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/ChildCreateReason",children:"enum - ChildCreateReason"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{children:"child order create reason code"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"childCancelReason"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/ChildCancelReason",children:"enum - ChildCancelReason"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{children:"child order cancel reason code"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"childMktStance"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/MktStance",children:"enum - MktStance"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{children:"child order was expected to be marketable  child send time"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"childCxlAttempted"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/YesNo",children:"enum - YesNo"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{children:"cancel attempt was made on the child order prior to receiving this fill"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"childCxlFillLatency"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"cancel latency for fills with a cancel attempt"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"fillExch"}),(0,t.jsx)(r.td,{children:"VARCHAR(12)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"ExDest code from child order execution report lastMkt"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"fillPrice"}),(0,t.jsx)(r.td,{children:"DOUBLE"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"fill price"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"fillTs"}),(0,t.jsx)(r.td,{children:"DOUBLE"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"fill report ts seconds since startup 100 nanosec resolution"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"fillDttm"}),(0,t.jsx)(r.td,{children:"DATETIME(6)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'1900-01-01 00:00:00.000000'"}),(0,t.jsx)(r.td,{children:"Datetime of fill arrival"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"fillSize"}),(0,t.jsx)(r.td,{children:"INT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"fill quantity"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"effFillSize"}),(0,t.jsx)(r.td,{children:"INT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"fill size x underliers per contract"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"fillVol"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"fill volatilty options only"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"fillProb"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"fill order probability Tx"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"fillLimitPrc"}),(0,t.jsx)(r.td,{children:"DOUBLE"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"parent order limit price  fill arrival time"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"fillLimitRefUPrc"}),(0,t.jsx)(r.td,{children:"DOUBLE"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"limit reference underlier price  fill arrival time options only"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"fillLimitPnl"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"fill limit improvement pnl fillLimitPrc to fillPrice"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"fillDe"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"fill delta"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"fillVe"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"fill vega"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"fillTh"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"fill theta"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"fillUPrc"}),(0,t.jsx)(r.td,{children:"DOUBLE"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"fill underlier midmarket"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"fillBeta"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"SpiderRock estimate of beta to SPX"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"fillTv"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"theo vol user supplied"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"fillTp"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"theo price"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"fillUBid"}),(0,t.jsx)(r.td,{children:"DOUBLE"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"underlier market bid  fill arrival"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"fillUAsk"}),(0,t.jsx)(r.td,{children:"DOUBLE"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"underlier market ask  fill arrival"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"fillBid"}),(0,t.jsx)(r.td,{children:"DOUBLE"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"option market bid  fill arrival"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"fillAsk"}),(0,t.jsx)(r.td,{children:"DOUBLE"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"option market ask  fill arrival"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"fillSurfPrc"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"SpiderRock surface price  fill arrival"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"fillPostUMark1M"}),(0,t.jsx)(r.td,{children:"DOUBLE"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"underlier mark  fill arrival  1M"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"fillPostUMark10M"}),(0,t.jsx)(r.td,{children:"DOUBLE"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"underlier mark  fill arrival  10M"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"fillPostMark1M"}),(0,t.jsx)(r.td,{children:"DOUBLE"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"SpiderRock mid or surface mark  fill arrival  1M"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"fillPostMark10M"}),(0,t.jsx)(r.td,{children:"DOUBLE"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"SpiderRock mid or surface mark  fill arrival  10M"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"marginUDnVDn"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"Aggregate RiskSlide uPrc dn vol dn"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"marginUDnVUp"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"Aggregate RiskSlide uPrc dn vol up"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"marginUUpVDn"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"Aggregate RiskSlide uPrc up vol dn"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"marginUUpVUp"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"Aggregate RiskSlide uPrc up vol up"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"riskCode"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/RiskCode",children:"enum - RiskCode"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{children:"SpiderRock Risk Code if any"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"exchLiquidityTag"}),(0,t.jsx)(r.td,{children:"VARCHAR(4)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"liquidity tag exchange"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"spdrLiquidityTag"}),(0,t.jsx)(r.td,{children:"VARCHAR(2)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"SpiderRock normalized liquidity tag"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"fillExchDetail"}),(0,t.jsx)(r.td,{children:"TINYTEXT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"other fix tags tagvaluetagvalue additional detail used for analysis"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"notionalValue"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"cn  mult  uPrc"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"marketValue"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"cn  mult  fillPrice"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"orderMktWidth"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"market width  parent order arrival"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"childMktWidth"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"market width  child order send time"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"fillMktWidth"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"market width  fill arrival"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"parentOrderAge"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"elaspsed time from parent order entryupdate to this fill event"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"parentAgeCode"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/ParentAge",children:"enum - ParentAge"})}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'None'"}),(0,t.jsx)(r.td,{children:"elaspsed time from parent order entryupdate to this fill event coded"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"trdDelta"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"trade delta"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"trdDDelta"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"trade delta"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"trdGamma"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"trade gamma"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"trdVega"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"trade vega"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"trdWtVega"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"trade wtVega vega  vol  sqrtmax01 years  4"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"trdTheta"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"trade theta"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"trdPrem"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"trade premium over parity"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"trdBeta"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"trade beta"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"trdDBeta"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"trade beta"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"surfEdge"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"SR surface edge user supplied theo volprc to SpiderRock surface price"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"surfEdgeUnit"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"SR surface edge normalized to 100 underlier"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"theoEdge"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"theo edge user supplied theo volprc to SpiderRock surface price"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"theoEdgeUnit"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"theo edge normalized to 100 underlier"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"exchFee"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"SpiderRock exchange fee estimate"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"halfWidthPnl"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"estimated halfwidth Pnl"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"clArrivePnl"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"dir  qty  fillPrice  clArriveMark   maybe use orderSurfPrc instead"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"arrivePnl"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"dir  qty  fillPrice  05  orderBid  orderAsk   maybe use orderSurfPrc instead"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"arriveDnPnl"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"arrivePnl  uDriftArrivePnl"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"uDriftArrivePnl"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"dir  qty  fillDe  05  fillUBid  fillUAsk  05  orderUBid  orderUAsk"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"dayDnPnl"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"delta neutral Pnl to EOD"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"dayM1Pnl"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"delta neutral Pnl Fill  1M"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"dayM10Pnl"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"delta neutral Pnl Fill  10M"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"uDriftDayPnl"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"underlier delta drift Pnl to EOD"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"uDriftM1Pnl"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"underlier delta drift Pnl Fill  1M"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"uDriftM10Pnl"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"underlier delta drift Pnl Fill  10M"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"dayPnl"}),(0,t.jsx)(r.td,{children:"FLOAT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"actual Pnl to EOD"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"liveMark"}),(0,t.jsx)(r.td,{children:"DOUBLE"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"SpiderRock internal use"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"liveUPrc"}),(0,t.jsx)(r.td,{children:"DOUBLE"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"SpiderRock internal use"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"pendMark"}),(0,t.jsx)(r.td,{children:"DOUBLE"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"SpiderRock internal use"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"pendUPrc"}),(0,t.jsx)(r.td,{children:"DOUBLE"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"0"}),(0,t.jsx)(r.td,{children:"SpiderRock internal use"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"trdMarkError"}),(0,t.jsx)(r.td,{children:"VARCHAR(8)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"trade mark error code"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"dayMarkError"}),(0,t.jsx)(r.td,{children:"VARCHAR(8)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"day mark error code"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"userData1"}),(0,t.jsx)(r.td,{children:"TINYTEXT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"client supplied data field passes through to parent and child executions and reports as well as FIX drops"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"userData2"}),(0,t.jsx)(r.td,{children:"TINYTEXT"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"''"}),(0,t.jsx)(r.td,{children:"client supplied data field passes through to parent and child executions and reports as well as FIX drops"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"timestamp"}),(0,t.jsx)(r.td,{children:"DATETIME(6)"}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"'1900-01-01 00:00:00.000000'"}),(0,t.jsx)(r.td,{children:"SR system timestamp"})]})]})]}),"\n",(0,t.jsx)(r.h3,{id:"primary-key-definition-unique",children:"PRIMARY KEY DEFINITION (Unique)"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Field"}),(0,t.jsx)(r.th,{children:"Sequence"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"fillNumber"}),(0,t.jsx)(r.td,{children:"1"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"tradeDate"}),(0,t.jsx)(r.td,{children:"2"})]})]})]}),"\n",(0,t.jsx)(r.h3,{id:"create-table-example-query",children:"CREATE TABLE EXAMPLE QUERY"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-sql",children:"CREATE TABLE `SRRisk`.`MsgTradeCubeDetailV5` (\n    `fillNumber` BIGINT NOT NULL DEFAULT 0 COMMENT 'SpiderRock execution number (globally unique over trailing 10 days)',\n    `tradeDate` DATE NOT NULL DEFAULT '1900-01-01' COMMENT 'trade date',\n    `runStatus` ENUM('None','Prod','Beta','UAT','SysTest') NOT NULL DEFAULT 'None',\n    `sysEnvironment` ENUM('None','Neptune','Pluto','V7_Stable','V7_Latest','Saturn','Venus','Mars','SysTest','V7_Current') NOT NULL DEFAULT 'None',\n    `version` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'record version number; starts at zero and goes up every time an execution record is re-published (eg, bust, +1m marks, +10m marks, etc)',\n    `clOrdId` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'clOrdId resulting in fill (child order)',\n    `parentNumber` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'SpiderRock parent number',\n    `packageId` BIGINT NOT NULL DEFAULT 0 COMMENT 'groups related order/brokers together (eg. Legger w/MLeg Parent)',\n    `altOrderId` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'alternate order ID (usually clOrdId from client)',\n    `srcRoutingCode` TINYTEXT NOT NULL DEFAULT '' COMMENT 'inbound FIX routing code, if any',\n    `spdrSource` ENUM('None','SpdrTicket','SpdrSingle','SRSE','FIX','HedgeTool','TradeHedge','OpenHedge','AutoHedge','Orphan','RiskManager','OrderManager','ManagedOrder','RFQRespSrvr','Legger','SRSEDrop','FixDrop','TicketDrop','SysTest','RFRResponse','AllocOmni','AllocClient','CertGateway','MLegResponse','LeggerX','DropManager','AutoHedgeSrvr','AuctionStrategySrvr','AllocBlockFace','AllocBlockCust','IceChatGateway','EXS2SRC','MLinkResponse','AutoResponderVD','AutoResponderRC','AutoResponderSN','AutoResponderBX','MLink','SymChatGateway') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock parent order source code [broker pkey]',\n    `groupingCode` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'SpiderRock parent broker number [broker pkey]',\n    `accnt` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'SpiderRock Accnt Code',\n    `clientFirm` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'SpiderRock ClientFirm Code',\n    `priAggGroup` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'primary aggregation group',\n    `secAggGroup` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'secondary aggregation group',\n    `secKey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'security key',\n    `secKey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'security key',\n    `secKey_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'security key',\n    `secKey_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'security key',\n    `secKey_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'security key',\n    `secKey_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'security key',\n    `secKey_xx` DOUBLE NOT NULL DEFAULT 0 COMMENT 'security key',\n    `secKey_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call' COMMENT 'security key',\n    `secType` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None' COMMENT 'security type [Stock, Future, Option]',\n    `ticker_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'base ticker',\n    `ticker_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'base ticker',\n    `ticker_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'base ticker',\n    `viewGroup1` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'viewGroup1 (user supplied; if any)',\n    `viewGroup2` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'viewGroup2 (user supplied; if any)',\n    `viewGroup3` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'viewGroup3 (user supplied; if any)',\n    `riskClass` VARCHAR(8) NOT NULL DEFAULT '' COMMENT 'user supplied risk class code (from SymbolControl record)',\n    `symbolType` ENUM('None','Equity','ADR','ETF','CashIndex','MutualFund','ShortETF','Future','Bond','DepReceipts','PreferredSec','PreferenceShare','StructuredProd','StapledSec','TradeableRights','Unit','Warrant','WhenIssued','ForeignIssue') NOT NULL DEFAULT 'None' COMMENT 'symbol type',\n    `sector` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'user supplied sector code (from SymbolControl record)',\n    `indNum` INT NOT NULL DEFAULT 0 COMMENT 'ind num (00)',\n    `subNum` INT NOT NULL DEFAULT 0 COMMENT 'sub num (0000)',\n    `grpNum` INT NOT NULL DEFAULT 0 COMMENT 'grp num (000000)',\n    `nbrNum` INT NOT NULL DEFAULT 0 COMMENT 'nbr num (00000000)',\n    `edays` SMALLINT NOT NULL DEFAULT 0 COMMENT 'days to next earnings [-5, +60]',\n    `expCode` ENUM('None','W1','W2','M1','M2','M34','M56','M7C','Y1','Y2') NOT NULL DEFAULT 'None' COMMENT 'expiration tenor code',\n    `skewCode` ENUM('None','DD','DN','AT','UP','DU') NOT NULL DEFAULT 'None' COMMENT 'strike skew code',\n    `widthCode` ENUM('None','Pv1','Pv2','Pv3','Pv5','Pv10','Pv15','Pv20','Pv25','Wide') NOT NULL DEFAULT 'None' COMMENT 'market width code',\n    `priceFormat` ENUM('None','N0','N1','N2','N3','N4','N5','N6','N7','F4','F8','Q8','F16','F32','H32','Q32','F64','H64','FullPenny','PartPenny','PartNickle','EQT','V1','V2','V3','V4','V5','V6','V7','V8','V9','V10','V11','V12','V13','V14','V15','A0','A1','A2','A3','A4','A5','A6','A7','E32','EU2A','EU2B','EU2C','EU2D','EU2E','EU3A','EU3B','EU3C','EU3D','EU3E','EU4A','EU5A') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock price display format code',\n    `uPriceFormat` ENUM('None','N0','N1','N2','N3','N4','N5','N6','N7','F4','F8','Q8','F16','F32','H32','Q32','F64','H64','FullPenny','PartPenny','PartNickle','EQT','V1','V2','V3','V4','V5','V6','V7','V8','V9','V10','V11','V12','V13','V14','V15','A0','A1','A2','A3','A4','A5','A6','A7','E32','EU2A','EU2B','EU2C','EU2D','EU2E','EU3A','EU3B','EU3C','EU3D','EU3E','EU4A','EU5A') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock underlier price display code',\n    `years` FLOAT NOT NULL DEFAULT 0 COMMENT 'years to expiration',\n    `underliersPerCn` INT NOT NULL DEFAULT 0 COMMENT 'underliers per contract (futures and options)',\n    `underlierType` ENUM('None','Equity','Other','FX') NOT NULL DEFAULT 'None' COMMENT 'underlier type (affects $greek calcs)',\n    `tickValue` FLOAT NOT NULL DEFAULT 0 COMMENT '$NLV value of a single tick change in display premium	(pointValue = tickValue / tickSize)',\n    `pointValue` FLOAT NOT NULL DEFAULT 0 COMMENT '$NLV value of a point',\n    `pointCurrency` ENUM('None','AUD','BRL','CAD','CHF','CNH','CNY','EUR','GBP','JPY','KRW','MXN','MYR','NOK','NZD','SEK','TRY','USD','USDCents','CZK','ZAR','HUF','USX','GBX','DKK','GEL') NOT NULL DEFAULT 'None',\n    `uPrcRatio` FLOAT NOT NULL DEFAULT 0 COMMENT 'UPrcRatio (SymbolRatio) from product definition',\n    `minTickSize` FLOAT NOT NULL DEFAULT 0,\n    `routingCode` TINYTEXT NOT NULL DEFAULT '' COMMENT 'SpiderRock market routing code',\n    `origExecID` VARCHAR(20) NOT NULL DEFAULT '' COMMENT 'original execution ID string (child order)',\n    `lastExecID` VARCHAR(20) NOT NULL DEFAULT '' COMMENT 'most recent execution ID (same as origExecID unless CANCEL/CORRECTION has been processed)',\n    `transactDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'transaction date/time as reported by exchange or down stream broker',\n    `execStatus` ENUM('None','Fill','Bust','Correct','Reject','SysRej') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock execution status (Fill,Bust,Correct,Reject,SysRej)',\n    `remoteText` VARCHAR(64) NOT NULL DEFAULT '' COMMENT 'text comment from endpoint (if any)',\n    `orderLimitType` ENUM('None','Market','MarketArrival','Prc','PrcDe','PrcDeX','PrcDeT','PrcDeP','PrcDeXT','PrcDeXP','Vol','VolX','PrcV','PrcVX','NoLimit','RelMid','RelJoin','RelCross','SmrtFast','SmrtNorm','RelTurn','PrcDeEm','VolEm','Aux','UPrcPct','PkgNeutral','RcPrem','SynthLimitMM','SynthLimitBW','SynthLimitWW') NOT NULL DEFAULT 'None' COMMENT 'parent order limit type [Vol, VolX, PrcDe, PrcDeX, etc]',\n    `orderLimitClass` ENUM('Simple','Surface','Probability','SurfProb') NOT NULL DEFAULT 'Simple' COMMENT 'parent order limit class (makeLimitClass if fill was from making; takeLimitClass if fill was from taking)',\n    `parentShape` ENUM('None','Single','Cross','MLeg','MLegCross') NOT NULL DEFAULT 'None',\n    `parentOrderHandling` ENUM('None','ActiveTaker','PostOnly','DMA','MktOnOpn','MktOnCls','Facilitate','Matrix','Legger','Seeker','SeekerLegger','CrossResponse','AuctionResponse','MLegAuctionResp','RFQRequest','AwayAlgo','ExchPing','BlockAuction','BlockResponse','SweepTake','CobMaker','FaceOmni','TestParent') NOT NULL DEFAULT 'None' COMMENT 'base parent order algo [take style algo]',\n    `parentBalanceHandling` ENUM('None','PostWith','PostTurn','PostImprove','PostLimit','MaxIntern','PostWthF','PostImprvR','PostFlash','PostFlashW','PostPeg','PostFlashI') NOT NULL DEFAULT 'None' COMMENT 'base parent order balance handling [make style algo]',\n    `parentOrderSize` INT NOT NULL DEFAULT 0 COMMENT 'parent order size',\n    `method` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'execution method string',\n    `strategy` VARCHAR(36) NOT NULL DEFAULT '' COMMENT 'client strategy [usually client supplied]',\n    `userName` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'SpiderRock user name associated with the parent order',\n    `origin` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'parent order origin string',\n    `source` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'execution source string',\n    `server` VARCHAR(20) NOT NULL DEFAULT '' COMMENT 'SpiderRock execution engine that handled the parent order',\n    `clearingFirm` VARCHAR(8) NOT NULL DEFAULT '' COMMENT 'clearing firm (delivery)',\n    `clearingAccnt` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'clearing firm account (if any)',\n    `lastCapacity` ENUM('None','Agency','Principal','Individual','Proprietary','AgentOtherMember','RisklessPrincipal','MarketMaker') NOT NULL DEFAULT 'None' COMMENT 'child order capacity',\n    `execRole` ENUM('None','DirectAccnt','AwayGiveup','RiskDrop','AwayDrop','PullDrop','ReconMiss') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock relationship to this execution record (Direct, Drop, etc)',\n    `execBrkrCode` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'SR exec broker acronym',\n    `execBrkrAccnt` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'account at executing broker/prime (if any)',\n    `execBrkrClFirm` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'client/firm at executing broker/prime (if any)',\n    `execBrkrUserName` VARCHAR(16) NOT NULL DEFAULT '',\n    `clearingFlipType` ENUM('None','CMTA','Giveup','QSR','NSCC_Flip','DVP','BrkrAccnt') NOT NULL DEFAULT 'None' COMMENT 'clearingFlip Type (CMTA or Giveup)',\n    `clearingFlipFirm` VARCHAR(6) NOT NULL DEFAULT '' COMMENT 'clearingFlip Broker/MPID/CMTA',\n    `clearingFlipAccnt` VARCHAR(10) NOT NULL DEFAULT '' COMMENT 'clearingFlip additional detail (sub-accnt)',\n    `riskGroupId` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'riskGroupId (parent order group ID) for this execution report',\n    `fillBrkrRate` FLOAT NOT NULL DEFAULT 0 COMMENT 'billing brokerage rate (tier 1)',\n    `fillRoutingRate` FLOAT NOT NULL DEFAULT 0 COMMENT 'billing routing rate (tier 1)',\n    `billingSecType` ENUM('None','Equity','Future','EqtOption','FutOption') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock billing security type',\n    `billingCategory` ENUM('None','Alpha','AlphaTop50','TiedMaker','TiedTaker','SOR','DMA','AuctionResponse','Facilitate','AlphaFacilitate','AwayTrade','SymOverride','Extern','NonBillable','Seeker','Legger','Drop','AwayAlgo','IsoSweep','SpdrSweep','GTH','AlphaGTH','BlockAuction','BlockResponse') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock billing category',\n    `firmType` ENUM('None','Customer','Firm','MarketMaker','ProCustomer','BrokerDealer','AwayMM','FirmJBO','BrkrDlrCust') NOT NULL DEFAULT 'None' COMMENT 'chld order firm type [Customer, ProCust, Firm, MM, etc]',\n    `side` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'None' COMMENT 'parent/child order side',\n    `priceType` ENUM('None','Explicit','Offset','Zero') NOT NULL DEFAULT 'None' COMMENT 'order limit price type',\n    `ssaleFlag` ENUM('None','Long','Short','Exempt','Auto','Open','Close','Cover','NA') NOT NULL DEFAULT 'None' COMMENT 'child order short sale flag',\n    `spdrSSaleFlag` ENUM('None','Long','Short','Exempt','Auto','Open','Close','Cover','NA') NOT NULL DEFAULT 'None' COMMENT 'parent order short sale flag',\n    `positionType` ENUM('None','Opening','Closing','Auto') NOT NULL DEFAULT 'None' COMMENT 'child order position type',\n    `autoHedge` ENUM('None','Static','AutoMid','AutoCrx','AutoTrn','SpdrAuto','Spdr10S','Spdr30S','Spdr90S','Spdr5M','Spdr30M','SpdrDay','SmartFast','SmartNorm','FastCrx','FastDark','SlowDark','AlphaVwap1pct','AlphaVwap2pct','AlphaVwap5pct','AlphaVwap25pct','Custom','AwayAlgo','EuxMsAlgo') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock auto-hedge algorithm (if any)',\n    `orderDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'Date/time of parent order arrival',\n    `orderUBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier market bid @ parent order arrival',\n    `orderUAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier market ask @ parent order arrival',\n    `orderBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'option market bid @ parent order arrival (options only)',\n    `orderAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'option market ask @ parent order arrival (options only)',\n    `orderSurfPrc` FLOAT NOT NULL DEFAULT 0 COMMENT 'SpiderRock surface price @ parent order arrival (options only)',\n    `orderSurfVol` FLOAT NOT NULL DEFAULT 0,\n    `orderLimitVol` FLOAT NOT NULL DEFAULT 0 COMMENT 'parent order limit volatilty (options only)',\n    `orderLimitPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'parent order limit price @ parent order arrival',\n    `orderLimitRefUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'limit reference underlier price @ parent order arrival (options only)',\n    `childShape` ENUM('None','Single','Cross','MLeg','MLegCross') NOT NULL DEFAULT 'None',\n    `childSize` INT NOT NULL DEFAULT 0 COMMENT 'child order size',\n    `childPrice` DOUBLE NOT NULL DEFAULT 0 COMMENT 'child order price',\n    `childExch` VARCHAR(6) NOT NULL DEFAULT '' COMMENT 'child order exchange code (SpiderRock)',\n    `childExDest` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'child order exchange code (downstream)',\n    `childDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'child order send date/time',\n    `childUBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier market bid @ child order send time',\n    `childUAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier market bid @ child order send time',\n    `childBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'option market bid @ child order send time (options only)',\n    `childAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'option market ask @ child order send time (options only)',\n    `childSurfPrc` FLOAT NOT NULL DEFAULT 0 COMMENT 'SpiderRock surface price @ child order send time (options only)',\n    `childVol` FLOAT NOT NULL DEFAULT 0 COMMENT 'child order volatilty (options only)',\n    `childProb` FLOAT NOT NULL DEFAULT 0 COMMENT 'child order probability (T+x)',\n    `childLimitPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'parent order limit price @ child order send time',\n    `childLimitRefUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'limit reference underlier price @ child order send time (options only)',\n    `childLimitPnl` FLOAT NOT NULL DEFAULT 0 COMMENT 'child limit improvement pnl (childLimitPrc to fillPrice)',\n    `childAlgoHandler` ENUM('None','ActiveTaker','ActiveMaker','Auction','Responder','Matrix','Cross','Face','Extern','MLegHandler','AutoHedge','Sprayer','Legger','Restart','Orphan','UDefSpread','RFQRequest','MLegResponder','LeggerX','ExchPing','BrkrReview','AuctionResponder','TakeSweep','TestChild') NOT NULL DEFAULT 'None' COMMENT 'algo that generated the child order responsible for this fill',\n    `childOrderHandling` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'algo that generated the child order responsible for this fill',\n    `childCreateReason` ENUM('None','CheckAddExch','DarkCross','DmaExtern','DmaSmart','MakeJoin','MakeNbboImpr','MakePostLimit','MakeSelfImpr','MarketAuction','MatrixImpr','MatrixJoin','MatrixLvlSweep','MatrixMaxSweep','MLegSeeker','OptAuctionResp','OptFaceHandler','RelWaitTrigger','SprdDma','SprdFace','SprdSeeker','TakeBrkr','TakeExch','TakeNbbo','RFQRequest','MLegResponse','BrkrCross','PostFlash','MakeOff','MakeFlashImprv','AwayExtern','MatrixCross','ExchPing','BrkrReview','AuctionResponse','SweepTake','TestChild') NOT NULL DEFAULT 'None' COMMENT 'child order create reason code',\n    `childCancelReason` ENUM('None','MakeException','MakeMaxRiskSize','MakeLimitError','MakeCxlImpr','MakeLmtPrc','MakeSelfImpr','MakeJoinImprv','MakeReJoin','MakeBhnd','MakeAlone','MakeAloneF','MakeOffMkt','MakeMaxExpose','MakeJoinImpr','ContLmtPrc','ChildCxlAll','ChildFlashCxl','ChildIOCTimeout','ForceRetry','StkCxlAll','FutCxlAll','OptCxlAll','FastCxlUBid','FastCxlUAsk','FastCxlUMin','FastCxlUMax','MktMiss','CxlClear','CxlRplDMA','CxlRplTurn','CxlRplSize','CxlRplPrc','CxlRplMake','CxlRplExch','MLegSeekSwitch','MLegSeekChange','MLegSeekND','MLegSeekLimit','MLegDMA','MLegSprdLimit','ParentRplRej','ParentReject','ParentClose','LeggerSwitch','AccelTake','EnginePreOpen','LegLmtPrcRng','MakeLmtPrcErr','ProgTerminate','TickSzErr','ContBrkrTerm','ContCancelHold','ContLimitErr','ContMaxUPrc','ContMinUPrc','ContMktData','ContMktHalt','ContRiskHold','ContSecType','ContStkData','ContStkState','ContFutData','ContFutState','ContOptData','ContOptState','ContUFutData','ContUFutState','ContUMktData','ContUMktState','LegExposeSize','LegLimitErr','LegMarketPrc','MLegCobLmtPrc','MLegLeggerChange','MLegLeggerSwitch','MLegSprdLmtPrc','SprdMktPrc','ContUMktPrc','ContUMktQte','SGContCxl','SGSysCxl','CxlRplPart','CxlRplAlgo','ContingentCancel','SwitchMOC','CxlRplReview','CxlRplAltR','SurfPrcErr','UserHold','DayClose','PendNewTimeout','ActiveHold') NOT NULL DEFAULT 'None' COMMENT 'child order cancel reason code',\n    `childMktStance` ENUM('None','ExchMrkt','NbboMrkt','ExchImpr','NbboImpr','ExchJoin','NbboJoin','Away') NOT NULL DEFAULT 'None' COMMENT 'child order was expected to be marketable @ child send time',\n    `childCxlAttempted` ENUM('None','Yes','No') NOT NULL DEFAULT 'None' COMMENT 'cancel attempt was made on the child order prior to receiving this fill',\n    `childCxlFillLatency` FLOAT NOT NULL DEFAULT 0 COMMENT 'cancel latency (for fills with a cancel attempt)',\n    `fillExch` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'ExDest code from child order execution report (lastMkt)',\n    `fillPrice` DOUBLE NOT NULL DEFAULT 0 COMMENT 'fill price',\n    `fillTs` DOUBLE NOT NULL DEFAULT 0 COMMENT 'fill report ts (seconds since startup; 100 nanosec resolution)',\n    `fillDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'Date/time of fill arrival',\n    `fillSize` INT NOT NULL DEFAULT 0 COMMENT 'fill quantity',\n    `effFillSize` INT NOT NULL DEFAULT 0 COMMENT 'fill size x underliers per contract',\n    `fillVol` FLOAT NOT NULL DEFAULT 0 COMMENT 'fill volatilty (options only)',\n    `fillProb` FLOAT NOT NULL DEFAULT 0 COMMENT 'fill order probability (T+x)',\n    `fillLimitPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'parent order limit price @ fill arrival time',\n    `fillLimitRefUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'limit reference underlier price @ fill arrival time (options only)',\n    `fillLimitPnl` FLOAT NOT NULL DEFAULT 0 COMMENT 'fill limit improvement pnl (fillLimitPrc to fillPrice)',\n    `fillDe` FLOAT NOT NULL DEFAULT 0 COMMENT 'fill delta',\n    `fillVe` FLOAT NOT NULL DEFAULT 0 COMMENT 'fill vega',\n    `fillTh` FLOAT NOT NULL DEFAULT 0 COMMENT 'fill theta',\n    `fillUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'fill underlier mid-market',\n    `fillBeta` FLOAT NOT NULL DEFAULT 0 COMMENT 'SpiderRock estimate of beta to SPX',\n    `fillTv` FLOAT NOT NULL DEFAULT 0 COMMENT 'theo vol (user supplied)',\n    `fillTp` FLOAT NOT NULL DEFAULT 0 COMMENT 'theo price',\n    `fillUBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier market bid @ fill arrival',\n    `fillUAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier market ask @ fill arrival',\n    `fillBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'option market bid @ fill arrival',\n    `fillAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'option market ask @ fill arrival',\n    `fillSurfPrc` FLOAT NOT NULL DEFAULT 0 COMMENT 'SpiderRock surface price @ fill arrival',\n    `fillPostUMark1M` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier mark @ fill arrival + 1M',\n    `fillPostUMark10M` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier mark @ fill arrival + 10M',\n    `fillPostMark1M` DOUBLE NOT NULL DEFAULT 0 COMMENT 'SpiderRock mid or surface mark @ fill arrival + 1M',\n    `fillPostMark10M` DOUBLE NOT NULL DEFAULT 0 COMMENT 'SpiderRock mid or surface mark @ fill arrival + 10M',\n    `marginUDnVDn` FLOAT NOT NULL DEFAULT 0 COMMENT 'Aggregate RiskSlide: uPrc dn, vol dn',\n    `marginUDnVUp` FLOAT NOT NULL DEFAULT 0 COMMENT 'Aggregate RiskSlide: uPrc dn, vol up',\n    `marginUUpVDn` FLOAT NOT NULL DEFAULT 0 COMMENT 'Aggregate RiskSlide: uPrc up, vol dn',\n    `marginUUpVUp` FLOAT NOT NULL DEFAULT 0 COMMENT 'Aggregate RiskSlide: uPrc up, vol up',\n    `riskCode` ENUM('None','R1','R2','R3','R4','R5','R6','R7','R8') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock Risk Code (if any)',\n    `exchLiquidityTag` VARCHAR(4) NOT NULL DEFAULT '' COMMENT 'liquidity tag (exchange)',\n    `spdrLiquidityTag` VARCHAR(2) NOT NULL DEFAULT '' COMMENT 'SpiderRock normalized liquidity tag',\n    `fillExchDetail` TINYTEXT NOT NULL DEFAULT '' COMMENT 'other fix tags (tag:value#tag:value) [additional detail used for analysis]',\n    `notionalValue` FLOAT NOT NULL DEFAULT 0 COMMENT 'cn * mult * uPrc',\n    `marketValue` FLOAT NOT NULL DEFAULT 0 COMMENT 'cn * mult * fillPrice',\n    `orderMktWidth` FLOAT NOT NULL DEFAULT 0 COMMENT 'market width @ parent order arrival',\n    `childMktWidth` FLOAT NOT NULL DEFAULT 0 COMMENT 'market width @ child order send time',\n    `fillMktWidth` FLOAT NOT NULL DEFAULT 0 COMMENT 'market width @ fill arrival',\n    `parentOrderAge` FLOAT NOT NULL DEFAULT 0 COMMENT 'elaspsed time from parent order entry/update to this fill event',\n    `parentAgeCode` ENUM('None','Sec1','Sec5','Sec20','Sec60','Min5','Min30','Hour2','LT') NOT NULL DEFAULT 'None' COMMENT 'elaspsed time from parent order entry/update to this fill event [coded]',\n    `trdDelta` FLOAT NOT NULL DEFAULT 0 COMMENT 'trade delta',\n    `trdDDelta` FLOAT NOT NULL DEFAULT 0 COMMENT 'trade $delta',\n    `trdGamma` FLOAT NOT NULL DEFAULT 0 COMMENT 'trade gamma',\n    `trdVega` FLOAT NOT NULL DEFAULT 0 COMMENT 'trade vega',\n    `trdWtVega` FLOAT NOT NULL DEFAULT 0 COMMENT 'trade wtVega (vega * vol / sqrt(max(0.1, years * 4)))',\n    `trdTheta` FLOAT NOT NULL DEFAULT 0 COMMENT 'trade theta',\n    `trdPrem` FLOAT NOT NULL DEFAULT 0 COMMENT 'trade premium over parity',\n    `trdBeta` FLOAT NOT NULL DEFAULT 0 COMMENT 'trade beta',\n    `trdDBeta` FLOAT NOT NULL DEFAULT 0 COMMENT 'trade $beta',\n    `surfEdge` FLOAT NOT NULL DEFAULT 0 COMMENT 'SR surface edge (user supplied theo vol/prc to SpiderRock surface price)',\n    `surfEdgeUnit` FLOAT NOT NULL DEFAULT 0 COMMENT 'SR surface edge normalized to $100 underlier',\n    `theoEdge` FLOAT NOT NULL DEFAULT 0 COMMENT 'theo edge (user supplied theo vol/prc to SpiderRock surface price)',\n    `theoEdgeUnit` FLOAT NOT NULL DEFAULT 0 COMMENT 'theo edge normalized to $100 underlier',\n    `exchFee` FLOAT NOT NULL DEFAULT 0 COMMENT 'SpiderRock exchange fee estimate',\n    `halfWidthPnl` FLOAT NOT NULL DEFAULT 0 COMMENT 'estimated half-width Pnl',\n    `clArrivePnl` FLOAT NOT NULL DEFAULT 0 COMMENT '-dir * qty * (fillPrice - clArriveMark)  # maybe use orderSurfPrc instead',\n    `arrivePnl` FLOAT NOT NULL DEFAULT 0 COMMENT '-dir * qty * (fillPrice - 0.5 * (orderBid + orderAsk))  # maybe use orderSurfPrc instead',\n    `arriveDnPnl` FLOAT NOT NULL DEFAULT 0 COMMENT 'arrivePnl - uDriftArrivePnl',\n    `uDriftArrivePnl` FLOAT NOT NULL DEFAULT 0 COMMENT '-dir * qty * fillDe * (0.5 * (fillUBid + fillUAsk) - 0.5 * (orderUBid + orderUAsk))',\n    `dayDnPnl` FLOAT NOT NULL DEFAULT 0 COMMENT 'delta neutral Pnl (to EOD)',\n    `dayM1Pnl` FLOAT NOT NULL DEFAULT 0 COMMENT 'delta neutral Pnl (Fill + 1M)',\n    `dayM10Pnl` FLOAT NOT NULL DEFAULT 0 COMMENT 'delta neutral Pnl (Fill + 10M)',\n    `uDriftDayPnl` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier delta drift Pnl (to EOD)',\n    `uDriftM1Pnl` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier delta drift Pnl (Fill + 1M)',\n    `uDriftM10Pnl` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier delta drift Pnl (Fill + 10M)',\n    `dayPnl` FLOAT NOT NULL DEFAULT 0 COMMENT 'actual Pnl to EOD',\n    `liveMark` DOUBLE NOT NULL DEFAULT 0 COMMENT 'SpiderRock internal use',\n    `liveUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'SpiderRock internal use',\n    `pendMark` DOUBLE NOT NULL DEFAULT 0 COMMENT 'SpiderRock internal use',\n    `pendUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'SpiderRock internal use',\n    `trdMarkError` VARCHAR(8) NOT NULL DEFAULT '' COMMENT 'trade mark error code',\n    `dayMarkError` VARCHAR(8) NOT NULL DEFAULT '' COMMENT 'day mark error code',\n    `userData1` TINYTEXT NOT NULL DEFAULT '' COMMENT 'client supplied data field; passes through to parent and child executions and reports as well as FIX drops',\n    `userData2` TINYTEXT NOT NULL DEFAULT '' COMMENT 'client supplied data field; passes through to parent and child executions and reports as well as FIX drops',\n    `timestamp` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'SR system timestamp',\n    CONSTRAINT nonnegative_parentNumber CHECK(ASCII(parentNumber) < 56),\n    CONSTRAINT nonnegative_groupingCode CHECK(ASCII(groupingCode) < 56),\n    CONSTRAINT nonnegative_riskGroupId CHECK(ASCII(riskGroupId) < 56),\n    PRIMARY KEY USING HASH (`fillNumber`,`tradeDate`)\n) ENGINE=SRSE DEFAULT CHARSET=LATIN1 COMMENT='TradeCubeDetail records are published by CoreRiskServers and are visible in SRSE throughout the day.  They are designed to be aggregated and analyzed over time.\\nTradeCubeDetail records are published to the SpiderRock Archive Host data pipeline after all markup detail is complete.';\n\n"})}),"\n",(0,t.jsx)(r.h3,{id:"select-table-example-query",children:"SELECT TABLE EXAMPLE QUERY"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-sql",children:"SELECT\n    `fillNumber`,\n    `tradeDate`,\n    `runStatus`,\n    `sysEnvironment`,\n    `version`,\n    `clOrdId`,\n    `parentNumber`,\n    `packageId`,\n    `altOrderId`,\n    `srcRoutingCode`,\n    `spdrSource`,\n    `groupingCode`,\n    `accnt`,\n    `clientFirm`,\n    `priAggGroup`,\n    `secAggGroup`,\n    `secKey_at`,\n    `secKey_ts`,\n    `secKey_tk`,\n    `secKey_yr`,\n    `secKey_mn`,\n    `secKey_dy`,\n    `secKey_xx`,\n    `secKey_cp`,\n    `secType`,\n    `ticker_at`,\n    `ticker_ts`,\n    `ticker_tk`,\n    `viewGroup1`,\n    `viewGroup2`,\n    `viewGroup3`,\n    `riskClass`,\n    `symbolType`,\n    `sector`,\n    `indNum`,\n    `subNum`,\n    `grpNum`,\n    `nbrNum`,\n    `edays`,\n    `expCode`,\n    `skewCode`,\n    `widthCode`,\n    `priceFormat`,\n    `uPriceFormat`,\n    `years`,\n    `underliersPerCn`,\n    `underlierType`,\n    `tickValue`,\n    `pointValue`,\n    `pointCurrency`,\n    `uPrcRatio`,\n    `minTickSize`,\n    `routingCode`,\n    `origExecID`,\n    `lastExecID`,\n    `transactDttm`,\n    `execStatus`,\n    `remoteText`,\n    `orderLimitType`,\n    `orderLimitClass`,\n    `parentShape`,\n    `parentOrderHandling`,\n    `parentBalanceHandling`,\n    `parentOrderSize`,\n    `method`,\n    `strategy`,\n    `userName`,\n    `origin`,\n    `source`,\n    `server`,\n    `clearingFirm`,\n    `clearingAccnt`,\n    `lastCapacity`,\n    `execRole`,\n    `execBrkrCode`,\n    `execBrkrAccnt`,\n    `execBrkrClFirm`,\n    `execBrkrUserName`,\n    `clearingFlipType`,\n    `clearingFlipFirm`,\n    `clearingFlipAccnt`,\n    `riskGroupId`,\n    `fillBrkrRate`,\n    `fillRoutingRate`,\n    `billingSecType`,\n    `billingCategory`,\n    `firmType`,\n    `side`,\n    `priceType`,\n    `ssaleFlag`,\n    `spdrSSaleFlag`,\n    `positionType`,\n    `autoHedge`,\n    `orderDttm`,\n    `orderUBid`,\n    `orderUAsk`,\n    `orderBid`,\n    `orderAsk`,\n    `orderSurfPrc`,\n    `orderSurfVol`,\n    `orderLimitVol`,\n    `orderLimitPrc`,\n    `orderLimitRefUPrc`,\n    `childShape`,\n    `childSize`,\n    `childPrice`,\n    `childExch`,\n    `childExDest`,\n    `childDttm`,\n    `childUBid`,\n    `childUAsk`,\n    `childBid`,\n    `childAsk`,\n    `childSurfPrc`,\n    `childVol`,\n    `childProb`,\n    `childLimitPrc`,\n    `childLimitRefUPrc`,\n    `childLimitPnl`,\n    `childAlgoHandler`,\n    `childOrderHandling`,\n    `childCreateReason`,\n    `childCancelReason`,\n    `childMktStance`,\n    `childCxlAttempted`,\n    `childCxlFillLatency`,\n    `fillExch`,\n    `fillPrice`,\n    `fillTs`,\n    `fillDttm`,\n    `fillSize`,\n    `effFillSize`,\n    `fillVol`,\n    `fillProb`,\n    `fillLimitPrc`,\n    `fillLimitRefUPrc`,\n    `fillLimitPnl`,\n    `fillDe`,\n    `fillVe`,\n    `fillTh`,\n    `fillUPrc`,\n    `fillBeta`,\n    `fillTv`,\n    `fillTp`,\n    `fillUBid`,\n    `fillUAsk`,\n    `fillBid`,\n    `fillAsk`,\n    `fillSurfPrc`,\n    `fillPostUMark1M`,\n    `fillPostUMark10M`,\n    `fillPostMark1M`,\n    `fillPostMark10M`,\n    `marginUDnVDn`,\n    `marginUDnVUp`,\n    `marginUUpVDn`,\n    `marginUUpVUp`,\n    `riskCode`,\n    `exchLiquidityTag`,\n    `spdrLiquidityTag`,\n    `fillExchDetail`,\n    `notionalValue`,\n    `marketValue`,\n    `orderMktWidth`,\n    `childMktWidth`,\n    `fillMktWidth`,\n    `parentOrderAge`,\n    `parentAgeCode`,\n    `trdDelta`,\n    `trdDDelta`,\n    `trdGamma`,\n    `trdVega`,\n    `trdWtVega`,\n    `trdTheta`,\n    `trdPrem`,\n    `trdBeta`,\n    `trdDBeta`,\n    `surfEdge`,\n    `surfEdgeUnit`,\n    `theoEdge`,\n    `theoEdgeUnit`,\n    `exchFee`,\n    `halfWidthPnl`,\n    `clArrivePnl`,\n    `arrivePnl`,\n    `arriveDnPnl`,\n    `uDriftArrivePnl`,\n    `dayDnPnl`,\n    `dayM1Pnl`,\n    `dayM10Pnl`,\n    `uDriftDayPnl`,\n    `uDriftM1Pnl`,\n    `uDriftM10Pnl`,\n    `dayPnl`,\n    `liveMark`,\n    `liveUPrc`,\n    `pendMark`,\n    `pendUPrc`,\n    `trdMarkError`,\n    `dayMarkError`,\n    `userData1`,\n    `userData2`,\n    `timestamp`\nFROM `SRRisk`.`MsgTradeCubeDetailV5`\nWHERE \n    /* Replace with a BIGINT */ \n    `fillNumber` = 1234567890\n  AND\n    /* Replace with a DATE */\n    `tradeDate` = '2022-01-01';\n"})}),"\n",(0,t.jsx)(r.h3,{id:"doc-columns-query",children:"Doc Columns Query"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-sql",children:"SELECT * FROM SRRisk.doccolumns WHERE TABLE_NAME='TradeCubeDetailV5' ORDER BY ordinal_position ASC;\n"})})]})}function x(e={}){let{wrapper:r}={...(0,n.a)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},91503:function(e,r,d){d.d(r,{Z:function(){return s},a:function(){return l}});var i=d(75271);let t={},n=i.createContext(t);function l(e){let r=i.useContext(n);return i.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(n.Provider,{value:r},e.children)}}}]);