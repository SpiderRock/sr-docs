"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([["43275"],{70896:function(e,t,a){a.r(t),a.d(t,{default:()=>b,frontMatter:()=>d,metadata:()=>n,assets:()=>o,toc:()=>h,contentTitle:()=>c});var n=JSON.parse('{"id":"MessageSchemas/Schema/Topics/market-statistics/StockBetaExt","title":"StockBetaExt","description":"Beta values are computed nightly for a few different indexes and industries.","source":"@site/versioned_docs/version-8.5.8.3/MessageSchemas/Schema/Topics/3225-market-statistics/StockBetaExt.md","sourceDirName":"MessageSchemas/Schema/Topics/3225-market-statistics","slug":"/MessageSchemas/Schema/Topics/market-statistics/StockBetaExt","permalink":"/docs/8.5.8.3/MessageSchemas/Schema/Topics/market-statistics/StockBetaExt","draft":false,"unlisted":false,"tags":[],"version":"8.5.8.3","frontMatter":{"title":"StockBetaExt"},"sidebar":"messageSchemasSidebar","previous":{"title":"StockBeta","permalink":"/docs/8.5.8.3/MessageSchemas/Schema/Topics/market-statistics/StockBeta"},"next":{"title":"StockDetail","permalink":"/docs/8.5.8.3/MessageSchemas/Schema/Topics/market-statistics/StockDetail"}}'),s=a("52676"),r=a("91503"),l=a("71386"),i=a("9641");let d={title:"StockBetaExt"},c="Schema: StockBetaExt (ID: 3245)",o={},h=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3}];function u(e){let t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsxs)(t.h1,{id:"schema-stockbetaext-id-3245",children:["Schema: StockBetaExt ",(0,s.jsx)("span",{className:"small-text",children:"(ID: 3245)"})]})}),"\n",(0,s.jsx)(t.p,{children:"Beta values are computed nightly for a few different indexes and industries."}),"\n",(0,s.jsx)(t.h3,{id:"metadata",children:"METADATA"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Attribute"}),(0,s.jsx)(t.th,{children:"Value"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Topic"}),(0,s.jsx)(t.td,{children:"3225-market-statistics"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"MLink Token"}),(0,s.jsx)(t.td,{children:"EqtAnalytics"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"SRSE Product"}),(0,s.jsx)(t.td,{children:"SRAnalytics"})]})]})]}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Note:"})," The symbol ",(0,s.jsx)(t.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"body",children:"BODY"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"#"}),(0,s.jsx)(t.th,{children:"Field"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Default Value"}),(0,s.jsx)(t.th,{children:"Comment"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"10="}),(0,s.jsx)(t.td,{children:"ticker"}),(0,s.jsx)(t.td,{children:"TickerKey"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"100"}),(0,s.jsx)(t.td,{children:"status"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"../../../Enums/BetaStatus",children:"enum : BetaStatus"})}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"103"}),(0,s.jsx)(t.td,{children:"betaInd"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"SR beta to IND"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"106"}),(0,s.jsx)(t.td,{children:"betaSub"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"SR beta to SUB"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"109"}),(0,s.jsx)(t.td,{children:"betaGrp"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"SR beta to GRP"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"112"}),(0,s.jsx)(t.td,{children:"betaNbr"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"SR beta to NBR"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"115"}),(0,s.jsx)(t.td,{children:"betaSPY"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"SR beta [2 year; weekly (fri - fri)]"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"118"}),(0,s.jsx)(t.td,{children:"betaSPY_R2"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"SR beta R2 [2 year; weekly (fri - fri)]"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"121"}),(0,s.jsx)(t.td,{children:"betaQQQ"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"SR beta [2 year; weekly (fri - fri)]"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"124"}),(0,s.jsx)(t.td,{children:"betaQQQ_R2"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"SR beta R2 [2 year; weekly (fri - fri)]"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"127"}),(0,s.jsx)(t.td,{children:"betaIWM"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"SR beta [2 year; weekly (fri - fri)]"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"130"}),(0,s.jsx)(t.td,{children:"betaIWM_R2"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"SR beta R2 [2 year; weekly (fri - fri)]"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"133"}),(0,s.jsx)(t.td,{children:"betaEEM"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"SR beta [2 year; weekly (fri - fri)]"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"136"}),(0,s.jsx)(t.td,{children:"betaEEM_R2"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"SR beta R2 [2 year; weekly (fri - fri)]"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"139"}),(0,s.jsx)(t.td,{children:"betaEFA"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"SR beta [2 year; weekly (fri - fri)]"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"142"}),(0,s.jsx)(t.td,{children:"betaEFA_R2"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"SR beta R2 [2 year; weekly (fri - fri)]"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"145"}),(0,s.jsx)(t.td,{children:"betaTicker"}),(0,s.jsx)(t.td,{children:"TickerKey"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"ETF ticker with the largest beta R2 [from the set of ETF's with significant option volume]"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"148"}),(0,s.jsx)(t.td,{children:"betaValue"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"beta value for the above ticker"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"151"}),(0,s.jsx)(t.td,{children:"betaR2"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"R2 value for the above ticker"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"154"}),(0,s.jsx)(t.td,{children:"betaTickerA"}),(0,s.jsx)(t.td,{children:"TickerKey"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"ETF ticker A with the largest joint (A+B) beta R2 [Y ~ a + betaA * A + betaB * B]"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"157"}),(0,s.jsx)(t.td,{children:"betaTickerB"}),(0,s.jsx)(t.td,{children:"TickerKey"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"ETF ticker B with the largest joint (A+B) beta R2"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"160"}),(0,s.jsx)(t.td,{children:"betaValueA"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"joint beta value for TickerA"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"163"}),(0,s.jsx)(t.td,{children:"betaValueB"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"joint beta value for TickerB"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"166"}),(0,s.jsx)(t.td,{children:"betaR2B"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"joint R2 value for the TickerA + TickerB"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"169"}),(0,s.jsx)(t.td,{children:"betaSPY1y"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"SR beta [1 year; weekly (fri - fri)]"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"172"}),(0,s.jsx)(t.td,{children:"betaSPY1y_R2"}),(0,s.jsx)(t.td,{children:"float"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"SR beta R2 [1 year; weekly (fri - fri)]"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"175"}),(0,s.jsx)(t.td,{children:"timestamp"}),(0,s.jsx)(t.td,{children:"DateTime"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,s.jsxs)(l.Z,{children:[(0,s.jsx)(i.Z,{value:"Python",label:"Python",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'StockBetaExt'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n    # Required Parameters\n    \"apiKey\": API_KEY,\n    \"cmd\": 'getschema',\n    \"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,s.jsx)(i.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=StockBetaExt'\n\n"})})})]}),"\n",(0,s.jsx)(t.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,s.jsxs)(l.Z,{children:[(0,s.jsx)(i.Z,{value:"Python",label:"Python",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'StockBetaExt\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'status|betaInd|betaSub|betaGrp|betaNbr|betaSPY|betaSPY_R2|betaQQQ|betaQQQ_R2|betaIWM|betaIWM_R2|betaEEM|betaEEM_R2|betaEFA|betaEFA_R2|betaTicker|betaValue|betaR2|betaTickerA|betaTickerB|betaValueA|betaValueB|betaR2B|betaSPY1y|betaSPY1y_R2|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(i.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=StockBetaExt' \\\n--data-urlencode 'view=status|betaInd|betaSub|betaGrp|betaNbr|betaSPY|betaSPY_R2|betaQQQ|betaQQQ_R2|betaIWM|betaIWM_R2|betaEEM|betaEEM_R2|betaEFA|betaEFA_R2|betaTicker|betaValue|betaR2|betaTickerA|betaTickerB|betaValueA|betaValueB|betaR2B|betaSPY1y|betaSPY1y_R2|timestamp' \\\n--data-urlencode 'where='\n"})})})]}),"\n",(0,s.jsx)(t.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,s.jsxs)(l.Z,{children:[(0,s.jsx)(i.Z,{value:"Python",label:"Python",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'StockBetaExt\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'status|betaInd|betaSub|betaGrp|betaNbr|betaSPY|betaSPY_R2|betaQQQ|betaQQQ_R2|betaIWM|betaIWM_R2|betaEEM|betaEEM_R2|betaEFA|betaEFA_R2|betaTicker|betaValue|betaR2|betaTickerA|betaTickerB|betaValueA|betaValueB|betaR2B|betaSPY1y|betaSPY1y_R2|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'status:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(i.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=StockBetaExt' \\\n--data-urlencode 'view=status|betaInd|betaSub|betaGrp|betaNbr|betaSPY|betaSPY_R2|betaQQQ|betaQQQ_R2|betaIWM|betaIWM_R2|betaEEM|betaEEM_R2|betaEFA|betaEFA_R2|betaTicker|betaValue|betaR2|betaTickerA|betaTickerB|betaValueA|betaValueB|betaR2B|betaSPY1y|betaSPY1y_R2|timestamp' \\\n--data-urlencode 'where=' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=status:ASC'\n"})})})]}),"\n",(0,s.jsx)(t.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,s.jsxs)(l.Z,{children:[(0,s.jsx)(i.Z,{value:"Python",label:"Python",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'StockBetaExt\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'status|betaInd|betaSub|betaGrp|betaNbr|betaSPY|betaSPY_R2|betaQQQ|betaQQQ_R2|betaIWM|betaIWM_R2|betaEEM|betaEEM_R2|betaEFA|betaEFA_R2|betaTicker|betaValue|betaR2|betaTickerA|betaTickerB|betaValueA|betaValueB|betaR2B|betaSPY1y|betaSPY1y_R2|timestamp\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'status\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getaggregate\',\n    "msgType": MSG_TYPE,\n    "measure": MEASURE,\n    "group": GROUP,\n    # Optional Parameters\n    "where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(i.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=StockBetaExt' \\\n--data-urlencode 'measure=status|betaInd|betaSub|betaGrp|betaNbr|betaSPY|betaSPY_R2|betaQQQ|betaQQQ_R2|betaIWM|betaIWM_R2|betaEEM|betaEEM_R2|betaEFA|betaEFA_R2|betaTicker|betaValue|betaR2|betaTickerA|betaTickerB|betaValueA|betaValueB|betaR2B|betaSPY1y|betaSPY1y_R2|timestamp' \\\n--data-urlencode 'group=status' \\\n--data-urlencode 'where='\n"})})})]}),"\n",(0,s.jsx)(t.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,s.jsxs)(l.Z,{children:[(0,s.jsx)(i.Z,{value:"Python",label:"Python",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'StockBetaExt\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(i.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=StockBetaExt' \\\n--data-urlencode 'where='\n"})})})]})]})}function b(e={}){let{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},9641:function(e,t,a){a.d(t,{Z:()=>r});var n=a("52676");a("75271");var s=a("54461");function r(e){let{children:t,hidden:a,className:r}=e;return(0,n.jsx)("div",{role:"tabpanel",className:(0,s.Z)("tabItem_SSzl",r),hidden:a,children:t})}},71386:function(e,t,a){a.d(t,{Z:()=>f});var n=a("52676"),s=a("75271"),r=a("54461"),l=a("52289"),i=a("3225"),d=a("42834"),c=a("40578"),o=a("35834"),h=a("79616");function u(e){return s.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||s.isValidElement(e)&&function(e){let{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function b(e){let{value:t,tabValues:a}=e;return a.some(e=>e.value===t)}var x=a("44537");function j(e){let{className:t,block:a,selectedValue:s,selectValue:i,tabValues:d}=e,c=[],{blockElementScrollPositionUntilNextRender:o}=(0,l.o5)(),h=e=>{let t=e.currentTarget,a=d[c.indexOf(t)].value;a!==s&&(o(t),i(a))},u=e=>{let t=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{let a=c.indexOf(e.currentTarget)+1;t=c[a]??c[0];break}case"ArrowLeft":{let a=c.indexOf(e.currentTarget)-1;t=c[a]??c[c.length-1]}}t?.focus()};return(0,n.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":a},t),children:d.map(e=>{let{value:t,label:a,attributes:l}=e;return(0,n.jsx)("li",{role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,ref:e=>c.push(e),onKeyDown:u,onClick:h,...l,className:(0,r.Z)("tabs__item","tabItem_aitt",l?.className,{"tabs__item--active":s===t}),children:a??t},t)})})}function m(e){let{lazy:t,children:a,selectedValue:l}=e,i=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){let e=i.find(e=>e.props.value===l);return e?(0,s.cloneElement)(e,{className:(0,r.Z)("margin-top--md",e.props.className)}):null}return(0,n.jsx)("div",{className:"margin-top--md",children:i.map((e,t)=>(0,s.cloneElement)(e,{key:t,hidden:e.props.value!==l}))})}function p(e){let t=function(e){let{defaultValue:t,queryString:a=!1,groupId:n}=e,r=function(e){let{values:t,children:a}=e;return(0,s.useMemo)(()=>{let e=t??u(a).map(e=>{let{props:{value:t,label:a,attributes:n,default:s}}=e;return{value:t,label:a,attributes:n,default:s}});return!function(e){let t=(0,o.lx)(e,(e,t)=>e.value===t.value);if(t.length>0)throw Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[t,a])}(e),[l,x]=(0,s.useState)(()=>(function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!b({value:t,tabValues:a}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}let n=a.find(e=>e.default)??a[0];if(!n)throw Error("Unexpected error: 0 tabValues");return n.value})({defaultValue:t,tabValues:r})),[j,m]=function(e){let{queryString:t=!1,groupId:a}=e,n=(0,i.k6)(),r=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,c._X)(r),(0,s.useCallback)(e=>{if(!r)return;let t=new URLSearchParams(n.location.search);t.set(r,e),n.replace({...n.location,search:t.toString()})},[r,n])]}({queryString:a,groupId:n}),[p,f]=function(e){let{groupId:t}=e,a=t?`docusaurus.tab.${t}`:null,[n,r]=(0,h.Nk)(a);return[n,(0,s.useCallback)(e=>{a&&r.set(e)},[a,r])]}({groupId:n}),g=(()=>{let e=j??p;return b({value:e,tabValues:r})?e:null})();return(0,d.Z)(()=>{g&&x(g)},[g]),{selectedValue:l,selectValue:(0,s.useCallback)(e=>{if(!b({value:e,tabValues:r}))throw Error(`Can't select invalid tab value=${e}`);x(e),m(e),f(e)},[m,f,r]),tabValues:r}}(e);return(0,n.jsxs)("div",{className:(0,r.Z)("tabs-container","tabList_ArS0"),children:[(0,n.jsx)(j,{...t,...e}),(0,n.jsx)(m,{...t,...e})]})}function f(e){let t=(0,x.Z)();return(0,n.jsx)(p,{...e,children:u(e.children)},String(t))}},91503:function(e,t,a){a.d(t,{Z:function(){return i},a:function(){return l}});var n=a(75271);let s={},r=n.createContext(s);function l(e){let t=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);