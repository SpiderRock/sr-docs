"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[85727],{41907:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>l,metadata:()=>d,toc:()=>u});var n=t(74848),a=t(28453),s=t(11470),i=t(19365);const l={title:"LiveRevConQuote"},c="Schema: LiveRevConQuote (ID: 1125)",d={id:"MessageSchemas/Schema/Topics/analytics/LiveRevConQuote",title:"LiveRevConQuote",description:"METADATA",source:"@site/versioned_docs/version-8.5.3.3/MessageSchemas/Schema/Topics/1000-analytics/LiveRevConQuote.md",sourceDirName:"MessageSchemas/Schema/Topics/1000-analytics",slug:"/MessageSchemas/Schema/Topics/analytics/LiveRevConQuote",permalink:"/docs/8.5.3.3/MessageSchemas/Schema/Topics/analytics/LiveRevConQuote",draft:!1,unlisted:!1,tags:[],version:"8.5.3.3",frontMatter:{title:"LiveRevConQuote"},sidebar:"messageSchemasSidebar",previous:{title:"LiveRateCurve",permalink:"/docs/8.5.3.3/MessageSchemas/Schema/Topics/analytics/LiveRateCurve"},next:{title:"LiveSurfaceAtm",permalink:"/docs/8.5.3.3/MessageSchemas/Schema/Topics/analytics/LiveSurfaceAtm"}},o={},u=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3}];function h(e){const r={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(r.h1,{id:"schema-liverevconquote-id-1125",children:["Schema: LiveRevConQuote ",(0,n.jsx)("span",{className:"small-text",children:"(ID: 1125)"})]}),"\n",(0,n.jsx)(r.h3,{id:"metadata",children:"METADATA"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Attribute"}),(0,n.jsx)(r.th,{children:"Value"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Topic"}),(0,n.jsx)(r.td,{children:"1000-analytics"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"MLink Token"}),(0,n.jsx)(r.td,{children:"OptAnalytics"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"SRSE Product"}),(0,n.jsx)(r.td,{children:"SRAnalytics"})]})]})]}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"Note:"})," The symbol ",(0,n.jsx)(r.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,n.jsx)(r.h3,{id:"body",children:"BODY"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"#"}),(0,n.jsx)(r.th,{children:"Field"}),(0,n.jsx)(r.th,{children:"Type"}),(0,n.jsx)(r.th,{children:"Comment"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"10="}),(0,n.jsx)(r.td,{children:"okey"}),(0,n.jsx)(r.td,{children:"OptionKey"}),(0,n.jsx)(r.td,{children:"cp = Both"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"11="}),(0,n.jsx)(r.td,{children:"tradeDate"}),(0,n.jsx)(r.td,{children:"DateKey"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"100"}),(0,n.jsx)(r.td,{children:"ticker"}),(0,n.jsx)(r.td,{children:"TickerKey"}),(0,n.jsx)(r.td,{children:"SR Ticker (Product Group)"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"101"}),(0,n.jsx)(r.td,{children:"xAxis"}),(0,n.jsx)(r.td,{children:"float"}),(0,n.jsx)(r.td,{children:"xAxis = Moneyness"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"102"}),(0,n.jsx)(r.td,{children:"cDe"}),(0,n.jsx)(r.td,{children:"float"}),(0,n.jsx)(r.td,{children:"call delta"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"103"}),(0,n.jsx)(r.td,{children:"pDe"}),(0,n.jsx)(r.td,{children:"float"}),(0,n.jsx)(r.td,{children:"put delta"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"104"}),(0,n.jsx)(r.td,{children:"uPrc"}),(0,n.jsx)(r.td,{children:"double"}),(0,n.jsx)(r.td,{children:"live underlier price"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"105"}),(0,n.jsx)(r.td,{children:"atmVol"}),(0,n.jsx)(r.td,{children:"float"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"106"}),(0,n.jsx)(r.td,{children:"years"}),(0,n.jsx)(r.td,{children:"float"}),(0,n.jsx)(r.td,{children:"number of volatility years to exiry date (volatility time metric)"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"107"}),(0,n.jsx)(r.td,{children:"globalRate"}),(0,n.jsx)(r.td,{children:"float"}),(0,n.jsx)(r.td,{children:"global rate (average discount rate) to expiry date"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"108"}),(0,n.jsx)(r.td,{children:"ddiv"}),(0,n.jsx)(r.td,{children:"float"}),(0,n.jsx)(r.td,{children:"sum of estimated discrete dividend stream to expiry date"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"109"}),(0,n.jsx)(r.td,{children:"ddivPv"}),(0,n.jsx)(r.td,{children:"float"}),(0,n.jsx)(r.td,{children:"present value of estimated discrete dividend stream to expiry date"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"110"}),(0,n.jsx)(r.td,{children:"ddivSource"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/DDivSource",children:"enum : DDivSource"})}),(0,n.jsx)(r.td,{children:"present value of estimated discrete dividend stream to expiry date"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"111"}),(0,n.jsx)(r.td,{children:"iDays"}),(0,n.jsx)(r.td,{children:"int"}),(0,n.jsx)(r.td,{children:"number of interest (calendar) days to expiry"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"129"}),(0,n.jsx)(r.td,{children:"ddivDisc"}),(0,n.jsx)(r.td,{children:"float"}),(0,n.jsx)(r.td,{children:"dividend discount factor: SUM(div * iDays / 365.0 - divYrs) due to dividends being paid (thereby lowering the uPrc basis) prior to expiry"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"112"}),(0,n.jsx)(r.td,{children:"strikePv"}),(0,n.jsx)(r.td,{children:"float"}),(0,n.jsx)(r.td,{children:"strike * EXP(-globalRate * iDays / 365)"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"113"}),(0,n.jsx)(r.td,{children:"fairSVol"}),(0,n.jsx)(r.td,{children:"float"}),(0,n.jsx)(r.td,{children:"call/put surface volatility value"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"114"}),(0,n.jsx)(r.td,{children:"fairSDiv"}),(0,n.jsx)(r.td,{children:"float"}),(0,n.jsx)(r.td,{children:"call/put surface alignment sdiv value"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"115"}),(0,n.jsx)(r.td,{children:"fairCallPrc"}),(0,n.jsx)(r.td,{children:"float"}),(0,n.jsx)(r.td,{children:"fairPrice = PRICE.AMERICAN(uPrc, years, fairVol, fairSDiv, globalRate, {ddivStream})"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"116"}),(0,n.jsx)(r.td,{children:"fairCallPrcE"}),(0,n.jsx)(r.td,{children:"float"}),(0,n.jsx)(r.td,{children:"fairPrice = PRICE.EUROPEAN(uPrc, years, fairVol, fairSDiv, globalRate, {ddivStream})"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"117"}),(0,n.jsx)(r.td,{children:"fairPutPrc"}),(0,n.jsx)(r.td,{children:"float"}),(0,n.jsx)(r.td,{children:"fairPrice = PRICE.AMERICAN(uPrc, years, fairVol, fairSDiv, globalRate, {ddivStream})"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"118"}),(0,n.jsx)(r.td,{children:"fairPutPrcE"}),(0,n.jsx)(r.td,{children:"float"}),(0,n.jsx)(r.td,{children:"fairPrice = PRICE.EUROPEAN(uPrc, years, fairVol, fairSDiv, globalRate, {ddivStream})"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"119"}),(0,n.jsx)(r.td,{children:"rcFairPrc"}),(0,n.jsx)(r.td,{children:"float"}),(0,n.jsx)(r.td,{children:"fairCallPrc - fairPutPrc - uPrc + strike  (revCon fairMid price)"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"120"}),(0,n.jsx)(r.td,{children:"rcEExPrem"}),(0,n.jsx)(r.td,{children:"float"}),(0,n.jsx)(r.td,{children:"(fairPutPrc - fairPutPrcE) - (fairCallPrc - fairCallPrcE)"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"121"}),(0,n.jsx)(r.td,{children:"fairLoanPv"}),(0,n.jsx)(r.td,{children:"float"}),(0,n.jsx)(r.td,{children:"fairCallPrc - fairPutPrc - uPrc + strike + strikePv + ddivPv  (total present value of letting out shares) (term to expiry) (per share)"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"122"}),(0,n.jsx)(r.td,{children:"fairLoanRate"}),(0,n.jsx)(r.td,{children:"float"}),(0,n.jsx)(r.td,{children:"fairLoanPv / (uPrc * iDays / 365.0 - ddivDisc)"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"130"}),(0,n.jsx)(r.td,{children:"rcBidPrc"}),(0,n.jsx)(r.td,{children:"float"}),(0,n.jsx)(r.td,{children:"callBid - putAsk - uPrc + strike (best way) (join markets)"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"131"}),(0,n.jsx)(r.td,{children:"rcAskPrc"}),(0,n.jsx)(r.td,{children:"float"}),(0,n.jsx)(r.td,{children:"callAsk - putBid - uPrc + strike (worst way) (cross markets)"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"125"}),(0,n.jsx)(r.td,{children:"calcError"}),(0,n.jsx)(r.td,{children:"string(16)"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"126"}),(0,n.jsx)(r.td,{children:"cpOI"}),(0,n.jsx)(r.td,{children:"int"}),(0,n.jsx)(r.td,{children:"c/p open interest (market) [upper bound]"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"127"}),(0,n.jsx)(r.td,{children:"cpVlm"}),(0,n.jsx)(r.td,{children:"int"}),(0,n.jsx)(r.td,{children:"c/p print volume (this exchange) [upper bound]"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"128"}),(0,n.jsx)(r.td,{children:"timestamp"}),(0,n.jsx)(r.td,{children:"DateTime"}),(0,n.jsx)(r.td,{children:"last update time (Date)"})]})]})]}),"\n",(0,n.jsx)(r.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,n.jsxs)(s.A,{children:[(0,n.jsx)(i.A,{value:"Python",label:"Python",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'LiveRevConQuote'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n    # Required Parameters\n    \"apiKey\": API_KEY,\n    \"cmd\": 'getschema',\n    \"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,n.jsx)(i.A,{value:"cUrl",label:"cUrl",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=LiveRevConQuote'\n\n"})})})]}),"\n",(0,n.jsx)(r.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,n.jsxs)(s.A,{children:[(0,n.jsx)(i.A,{value:"Python",label:"Python",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'LiveRevConQuote\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'ticker|xAxis|cDe|pDe|uPrc|atmVol|years|globalRate|ddiv|ddivPv|ddivSource|iDays|ddivDisc|strikePv|fairSVol|fairSDiv|fairCallPrc|fairCallPrcE|fairPutPrc|fairPutPrcE|rcFairPrc|rcEExPrem|fairLoanPv|fairLoanRate|rcBidPrc|rcAskPrc|calcError|cpOI|cpVlm|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'calcError:eq:ExampleString\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,n.jsx)(i.A,{value:"cUrl",label:"cUrl",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=LiveRevConQuote' \\\n--data-urlencode 'view=ticker|xAxis|cDe|pDe|uPrc|atmVol|years|globalRate|ddiv|ddivPv|ddivSource|iDays|ddivDisc|strikePv|fairSVol|fairSDiv|fairCallPrc|fairCallPrcE|fairPutPrc|fairPutPrcE|rcFairPrc|rcEExPrem|fairLoanPv|fairLoanRate|rcBidPrc|rcAskPrc|calcError|cpOI|cpVlm|timestamp' \\\n--data-urlencode 'where=calcError:eq:ExampleString'\n"})})})]}),"\n",(0,n.jsx)(r.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,n.jsxs)(s.A,{children:[(0,n.jsx)(i.A,{value:"Python",label:"Python",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'LiveRevConQuote\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'ticker|xAxis|cDe|pDe|uPrc|atmVol|years|globalRate|ddiv|ddivPv|ddivSource|iDays|ddivDisc|strikePv|fairSVol|fairSDiv|fairCallPrc|fairCallPrcE|fairPutPrc|fairPutPrcE|rcFairPrc|rcEExPrem|fairLoanPv|fairLoanRate|rcBidPrc|rcAskPrc|calcError|cpOI|cpVlm|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'calcError:eq:ExampleString\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'ticker:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,n.jsx)(i.A,{value:"cUrl",label:"cUrl",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=LiveRevConQuote' \\\n--data-urlencode 'view=ticker|xAxis|cDe|pDe|uPrc|atmVol|years|globalRate|ddiv|ddivPv|ddivSource|iDays|ddivDisc|strikePv|fairSVol|fairSDiv|fairCallPrc|fairCallPrcE|fairPutPrc|fairPutPrcE|rcFairPrc|rcEExPrem|fairLoanPv|fairLoanRate|rcBidPrc|rcAskPrc|calcError|cpOI|cpVlm|timestamp' \\\n--data-urlencode 'where=calcError:eq:ExampleString' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=ticker:ASC'\n"})})})]}),"\n",(0,n.jsx)(r.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,n.jsxs)(s.A,{children:[(0,n.jsx)(i.A,{value:"Python",label:"Python",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'LiveRevConQuote\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'ticker|xAxis|cDe|pDe|uPrc|atmVol|years|globalRate|ddiv|ddivPv|ddivSource|iDays|ddivDisc|strikePv|fairSVol|fairSDiv|fairCallPrc|fairCallPrcE|fairPutPrc|fairPutPrcE|rcFairPrc|rcEExPrem|fairLoanPv|fairLoanRate|rcBidPrc|rcAskPrc|calcError|cpOI|cpVlm|timestamp\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'ddivSource\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'calcError:eq:ExampleString\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getaggregate\',\n    "msgType": MSG_TYPE,\n    "measure": MEASURE,\n    "group": GROUP,\n    # Optional Parameters\n    "where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,n.jsx)(i.A,{value:"cUrl",label:"cUrl",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=LiveRevConQuote' \\\n--data-urlencode 'measure=ticker|xAxis|cDe|pDe|uPrc|atmVol|years|globalRate|ddiv|ddivPv|ddivSource|iDays|ddivDisc|strikePv|fairSVol|fairSDiv|fairCallPrc|fairCallPrcE|fairPutPrc|fairPutPrcE|rcFairPrc|rcEExPrem|fairLoanPv|fairLoanRate|rcBidPrc|rcAskPrc|calcError|cpOI|cpVlm|timestamp' \\\n--data-urlencode 'group=ddivSource' \\\n--data-urlencode 'where=calcError:eq:ExampleString'\n"})})})]}),"\n",(0,n.jsx)(r.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,n.jsxs)(s.A,{children:[(0,n.jsx)(i.A,{value:"Python",label:"Python",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'LiveRevConQuote\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'calcError:eq:ExampleString\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,n.jsx)(i.A,{value:"cUrl",label:"cUrl",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=LiveRevConQuote' \\\n--data-urlencode 'where=calcError:eq:ExampleString'\n"})})})]})]})}function p(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},19365:(e,r,t)=>{t.d(r,{A:()=>i});t(96540);var n=t(34164);const a={tabItem:"tabItem_Ymn6"};var s=t(74848);function i(e){let{children:r,hidden:t,className:i}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,n.A)(a.tabItem,i),hidden:t,children:r})}},11470:(e,r,t)=>{t.d(r,{A:()=>X});var n=t(96540),a=t(34164),s=t(23104),i=t(56347),l=t(205),c=t(57485),d=t(31682),o=t(70679);function u(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:r,children:t}=e;return(0,n.useMemo)((()=>{const e=r??function(e){return u(e).map((e=>{let{props:{value:r,label:t,attributes:n,default:a}}=e;return{value:r,label:t,attributes:n,default:a}}))}(t);return function(e){const r=(0,d.X)(e,((e,r)=>e.value===r.value));if(r.length>0)throw new Error(`Docusaurus error: Duplicate values "${r.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[r,t])}function p(e){let{value:r,tabValues:t}=e;return t.some((e=>e.value===r))}function m(e){let{queryString:r=!1,groupId:t}=e;const a=(0,i.W6)(),s=function(e){let{queryString:r=!1,groupId:t}=e;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:r,groupId:t});return[(0,c.aZ)(s),(0,n.useCallback)((e=>{if(!s)return;const r=new URLSearchParams(a.location.search);r.set(s,e),a.replace({...a.location,search:r.toString()})}),[s,a])]}function x(e){const{defaultValue:r,queryString:t=!1,groupId:a}=e,s=h(e),[i,c]=(0,n.useState)((()=>function(e){let{defaultValue:r,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!p({value:r,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${r}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return r}const n=t.find((e=>e.default))??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:r,tabValues:s}))),[d,u]=m({queryString:t,groupId:a}),[x,v]=function(e){let{groupId:r}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(r),[a,s]=(0,o.Dv)(t);return[a,(0,n.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:a}),j=(()=>{const e=d??x;return p({value:e,tabValues:s})?e:null})();(0,l.A)((()=>{j&&c(j)}),[j]);return{selectedValue:i,selectValue:(0,n.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);c(e),u(e),v(e)}),[u,v,s]),tabValues:s}}var v=t(92303);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=t(74848);function P(e){let{className:r,block:t,selectedValue:n,selectValue:i,tabValues:l}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,s.a_)(),o=e=>{const r=e.currentTarget,t=c.indexOf(r),a=l[t].value;a!==n&&(d(r),i(a))},u=e=>{let r=null;switch(e.key){case"Enter":o(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;r=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;r=c[t]??c[c.length-1];break}}r?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":t},r),children:l.map((e=>{let{value:r,label:t,attributes:s}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:n===r?0:-1,"aria-selected":n===r,ref:e=>c.push(e),onKeyDown:u,onClick:o,...s,className:(0,a.A)("tabs__item",j.tabItem,s?.className,{"tabs__item--active":n===r}),children:t??r},r)}))})}function g(e){let{lazy:r,children:t,selectedValue:a}=e;const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(r){const e=s.find((e=>e.props.value===a));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:s.map(((e,r)=>(0,n.cloneElement)(e,{key:r,hidden:e.props.value!==a})))})}function y(e){const r=x(e);return(0,f.jsxs)("div",{className:(0,a.A)("tabs-container",j.tabList),children:[(0,f.jsx)(P,{...r,...e}),(0,f.jsx)(g,{...r,...e})]})}function X(e){const r=(0,v.A)();return(0,f.jsx)(y,{...e,children:u(e.children)},String(r))}},28453:(e,r,t)=>{t.d(r,{R:()=>i,x:()=>l});var n=t(96540);const a={},s=n.createContext(a);function i(e){const r=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),n.createElement(s.Provider,{value:r},e.children)}}}]);