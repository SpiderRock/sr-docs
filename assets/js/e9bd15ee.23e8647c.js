"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([["71958"],{94402:function(e,n,s){s.r(n),s.d(n,{default:()=>m,frontMatter:()=>a,metadata:()=>t,assets:()=>o,toc:()=>u,contentTitle:()=>c});var t=JSON.parse('{"id":"MessageSchemas/Schema/Topics/liquidity-notice/ResponderMarkupRC","title":"ResponderMarkupRC","description":"METADATA","source":"@site/versioned_docs/version-8.5.8.3/MessageSchemas/Schema/Topics/2450-liquidity-notice/ResponderMarkupRC.md","sourceDirName":"MessageSchemas/Schema/Topics/2450-liquidity-notice","slug":"/MessageSchemas/Schema/Topics/liquidity-notice/ResponderMarkupRC","permalink":"/docs/8.5.8.3/MessageSchemas/Schema/Topics/liquidity-notice/ResponderMarkupRC","draft":false,"unlisted":false,"tags":[],"version":"8.5.8.3","frontMatter":{"title":"ResponderMarkupRC"},"sidebar":"messageSchemasSidebar","previous":{"title":"ResponderMarkupBX","permalink":"/docs/8.5.8.3/MessageSchemas/Schema/Topics/liquidity-notice/ResponderMarkupBX"},"next":{"title":"ResponderMarkupSN","permalink":"/docs/8.5.8.3/MessageSchemas/Schema/Topics/liquidity-notice/ResponderMarkupSN"}}'),i=s("52676"),d=s("91503"),r=s("71386"),l=s("9641");let a={title:"ResponderMarkupRC"},c="Schema: ResponderMarkupRC (ID: 2501)",o={},u=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3},{value:"Post Msgs API Call",id:"post-msgs-api-call",level:3}];function h(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsxs)(n.h1,{id:"schema-respondermarkuprc-id-2501",children:["Schema: ResponderMarkupRC ",(0,i.jsx)("span",{className:"small-text",children:"(ID: 2501)"})]})}),"\n",(0,i.jsx)(n.h3,{id:"metadata",children:"METADATA"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Attribute"}),(0,i.jsx)(n.th,{children:"Value"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Topic"}),(0,i.jsx)(n.td,{children:"2450-liquidity-notice"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"MLink Token"}),(0,i.jsx)(n.td,{children:"SRATS"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"SRSE Product"}),(0,i.jsx)(n.td,{children:"SRTrade"})]})]})]}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Note:"})," The symbol ",(0,i.jsx)(n.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"body",children:"BODY"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"#"}),(0,i.jsx)(n.th,{children:"Field"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Default Value"}),(0,i.jsx)(n.th,{children:"Comment"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"10="}),(0,i.jsx)(n.td,{children:"accnt"}),(0,i.jsx)(n.td,{children:"string(16)"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"11="}),(0,i.jsx)(n.td,{children:"clientFirm"}),(0,i.jsx)(n.td,{children:"string(16)"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"15="}),(0,i.jsx)(n.td,{children:"ekey"}),(0,i.jsx)(n.td,{children:"ExpiryKey"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"14="}),(0,i.jsx)(n.td,{children:"respSide"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"auction responder side (your side); Buy = Buy Synthetic (Sell Shares)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"100"}),(0,i.jsx)(n.td,{children:"ticker"}),(0,i.jsx)(n.td,{children:"TickerKey"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"101"}),(0,i.jsx)(n.td,{children:"isDisabled"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"if Yes, this auto-responder record is disabled"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"134"}),(0,i.jsx)(n.td,{children:"enabledUntil"}),(0,i.jsx)(n.td,{children:"DateTime"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"will be enabled up until this time"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"102"}),(0,i.jsx)(n.td,{children:"expiryQtyAvail"}),(0,i.jsx)(n.td,{children:"int"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"revcons (contracts) available for responding (day total; this ticker/expiry; all strikes) [note: 1 contract = undPerCn underlier units]"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"103"}),(0,i.jsx)(n.td,{children:"tickerQtyAvail"}),(0,i.jsx)(n.td,{children:"int"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"revcons (contracts) available for responding (day total; this ticker; all strikes) [note: 1 contract = undPerCn underlier units]"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"104"}),(0,i.jsx)(n.td,{children:"transactFee"}),(0,i.jsx)(n.td,{children:"double"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"(+ = you pay) / (- = you receive)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"105"}),(0,i.jsx)(n.td,{children:"stockRate"}),(0,i.jsx)(n.td,{children:"double"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"0.00 = no effective lend/borrow value  (360 day convention)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"106"}),(0,i.jsx)(n.td,{children:"moneyRate"}),(0,i.jsx)(n.td,{children:"double"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"effective rate to borrow/lend money to expiry (360 day convention) [compares to globalRate * 360 / 365]"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"107"}),(0,i.jsx)(n.td,{children:"ddivPv"}),(0,i.jsx)(n.td,{children:"double"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"present value of any expected dividends to expiry"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"108"}),(0,i.jsx)(n.td,{children:"divControl"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"../../../Enums/DivControl",children:"enum : DivControl"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"disable this auto-responder record if SR Dividends exist or are estimates"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"109"}),(0,i.jsx)(n.td,{children:"respondFlex"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"if not None, much match auction notice containsFlex field"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"110"}),(0,i.jsx)(n.td,{children:"incFeesInResp"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"include all estimated responder fees in final response price"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"111"}),(0,i.jsx)(n.td,{children:"roundRule"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"../../../Enums/RoundRule",children:"enum : RoundRule"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"112"}),(0,i.jsx)(n.td,{children:"openExpiryQty"}),(0,i.jsx)(n.td,{children:"int"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"remaining revcons (100 share units) available for responding (day total; this ticker/expiry; all strikes)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"113"}),(0,i.jsx)(n.td,{children:"openTickerQty"}),(0,i.jsx)(n.td,{children:"int"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"remaining revcons (100 share units) available for responding (day total; ticker; all strikes)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"114"}),(0,i.jsx)(n.td,{children:"cumFillQty"}),(0,i.jsx)(n.td,{children:"int"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"revcons (100 share units) traded (day total; this expiry; all strikes)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"115"}),(0,i.jsx)(n.td,{children:"cumFillMoney"}),(0,i.jsx)(n.td,{children:"double"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"cumulative fill money (credit/debit) (this expiry)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"116"}),(0,i.jsx)(n.td,{children:"avgFillRate"}),(0,i.jsx)(n.td,{children:"double"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"avg fill effective stock rate (this expiry)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"117"}),(0,i.jsx)(n.td,{children:"isDivControlDisabled"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"yes if dividend control above is triggered"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"118"}),(0,i.jsx)(n.td,{children:"uBid"}),(0,i.jsx)(n.td,{children:"double"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"live stock nbbo bid price [SR Supplied]"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"119"}),(0,i.jsx)(n.td,{children:"uAsk"}),(0,i.jsx)(n.td,{children:"double"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"live stock nbbo ask price [SR Supplied]"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"120"}),(0,i.jsx)(n.td,{children:"iDays"}),(0,i.jsx)(n.td,{children:"double"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"iDays = effective interest days [SR supplied]"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"121"}),(0,i.jsx)(n.td,{children:"iYears"}),(0,i.jsx)(n.td,{children:"double"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"iYears = iDays / 360.0"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"122"}),(0,i.jsx)(n.td,{children:"strike"}),(0,i.jsx)(n.td,{children:"double"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"SR selected strike (standard day strike)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"123"}),(0,i.jsx)(n.td,{children:"rcEExPrem"}),(0,i.jsx)(n.td,{children:"double"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"rcEExPrem = (pRv.price - pRvE.price) - (cRv.price - cRvE.price) [american price - european price] (same model parameters; SR supplied parameters including DDivs; is zero for flex revcons)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"124"}),(0,i.jsx)(n.td,{children:"strikePv"}),(0,i.jsx)(n.td,{children:"double"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"strikePv = strike * (1.0 - moneyRate * iYears) [moneyRate supplied above]"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"125"}),(0,i.jsx)(n.td,{children:"stockLendPv"}),(0,i.jsx)(n.td,{children:"double"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"stockLendPv = uPrc * stockRate * iYears [stockRate supplied above]"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"126"}),(0,i.jsx)(n.td,{children:"revConPrem"}),(0,i.jsx)(n.td,{children:"double"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"revConPrem = stockLendPv + strikePv + ddivPv + rcEExPrem (if any) [uPrc + pRv.price - cRv.price] [ddivPv supplied above]"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"127"}),(0,i.jsx)(n.td,{children:"effRevConLimit"}),(0,i.jsx)(n.td,{children:"double"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"effRevConLimit = refConPrem +/- transactFee [lend/borrow]"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"128"}),(0,i.jsx)(n.td,{children:"limitPrice"}),(0,i.jsx)(n.td,{children:"double"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"limitPrice = ROUND(effRevConLimit) [this is your response limit]"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"129"}),(0,i.jsx)(n.td,{children:"effStockLendPv"}),(0,i.jsx)(n.td,{children:"double"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"effStockLendPv = limitPrice - strikePv - ddivPv - rcEExPrem"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"130"}),(0,i.jsx)(n.td,{children:"effStockRate"}),(0,i.jsx)(n.td,{children:"double"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"effStockRate = effStockLendPv / (uPrc * iYears)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"135"}),(0,i.jsx)(n.td,{children:"numNotices"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number of notices that match response bucket"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"167"}),(0,i.jsx)(n.td,{children:"numNoticeBlock"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number of SR block auction numNotices"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"168"}),(0,i.jsx)(n.td,{children:"numNoticeFlash"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number of SR flash auction numNotices"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"169"}),(0,i.jsx)(n.td,{children:"numNoticeExchPI"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number of Exch Price Improvement auction numNotices"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"170"}),(0,i.jsx)(n.td,{children:"numNoticeExchEX"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number of Exch Exposure auction numNotices"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"171"}),(0,i.jsx)(n.td,{children:"numNotMktPenny"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number auction numNotices"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"172"}),(0,i.jsx)(n.td,{children:"numMktPenny1"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number auction numNotices"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"173"}),(0,i.jsx)(n.td,{children:"numMktPenny2"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number auction numNotices"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"174"}),(0,i.jsx)(n.td,{children:"numMktPenny3p"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number auction numNotices"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"175"}),(0,i.jsx)(n.td,{children:"numNotMktNickle"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number auction numNotices"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"176"}),(0,i.jsx)(n.td,{children:"numMktNickle1"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number auction numNotices"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"177"}),(0,i.jsx)(n.td,{children:"numMktNickle2"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number auction numNotices"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"178"}),(0,i.jsx)(n.td,{children:"numMktNickle3p"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number auction numNotices"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"155"}),(0,i.jsx)(n.td,{children:"respDisabledSkips"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number skipped from isDisabled"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"179"}),(0,i.jsx)(n.td,{children:"stockDisabledSkips"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number skipped from canIncludeStock != Yes"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"180"}),(0,i.jsx)(n.td,{children:"cpFlagSkips"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number skipped from cpFlag not matching notice legs CallPut"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"181"}),(0,i.jsx)(n.td,{children:"expiryRangeSkips"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number skipped from out of range expiry value"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"182"}),(0,i.jsx)(n.td,{children:"yearsRangeSkips"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number skipped from out of range years value"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"156"}),(0,i.jsx)(n.td,{children:"listedFlexSkips"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number skipped from flex/listed filter"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"157"}),(0,i.jsx)(n.td,{children:"noticePriceSkips"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number skipped from limit price filter (exchange only)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"183"}),(0,i.jsx)(n.td,{children:"aggSizeLimitSkips"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number skipped from aggregate contract/vega size limit"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"159"}),(0,i.jsx)(n.td,{children:"riskGroupLimitSkips"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number skipped from riskGroup limits"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"184"}),(0,i.jsx)(n.td,{children:"rootSkips"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number skipped from leg root mismatch"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"185"}),(0,i.jsx)(n.td,{children:"xDeltaRangeSkips"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number skipped from out of range XDelta value"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"186"}),(0,i.jsx)(n.td,{children:"strikeRangeSkips"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number skipped from out of range strike"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"187"}),(0,i.jsx)(n.td,{children:"minVegaRatioSkips"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number skipped from not qualifying ratio netVega/sum(abs(vega))"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"188"}),(0,i.jsx)(n.td,{children:"probabilitySkips"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number skipped from min probability threshold not being met"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"160"}),(0,i.jsx)(n.td,{children:"numResponses"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number of response attempts (number of parentOrders/NoticeExecReports)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"189"}),(0,i.jsx)(n.td,{children:"numRespondsBlock"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number of SR block auction responses"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"190"}),(0,i.jsx)(n.td,{children:"numRespondsFlash"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number of SR flash auction responses"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"191"}),(0,i.jsx)(n.td,{children:"numResponsesExchPI"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number of Exch Price Improvement auction responses"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"192"}),(0,i.jsx)(n.td,{children:"numResponsesExchEX"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number of Exch Exposure auction responses"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"161"}),(0,i.jsx)(n.td,{children:"numFullSize"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"162"}),(0,i.jsx)(n.td,{children:"numAllocSize"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"163"}),(0,i.jsx)(n.td,{children:"numPriceMiss"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"164"}),(0,i.jsx)(n.td,{children:"numTooLate"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"165"}),(0,i.jsx)(n.td,{children:"numOtherMiss"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"166"}),(0,i.jsx)(n.td,{children:"numDidNotTrade"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"193"}),(0,i.jsx)(n.td,{children:"numTraded"}),(0,i.jsx)(n.td,{children:"int"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"194"}),(0,i.jsx)(n.td,{children:"qtyTraded"}),(0,i.jsx)(n.td,{children:"int"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"195"}),(0,i.jsx)(n.td,{children:"sumWidthTraded"}),(0,i.jsx)(n.td,{children:"double"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"SUM: marketWidth * trdQty      => AvgMktWidth = sumWidthTraded / qtyTraded"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"196"}),(0,i.jsx)(n.td,{children:"sumSurfEdgeTraded"}),(0,i.jsx)(n.td,{children:"double"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"SUM: printEdge * trdQty        => AvgPrintEdge = sumSurfEdgeTraded / qtyTraded"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"197"}),(0,i.jsx)(n.td,{children:"sumM1PnLTraded"}),(0,i.jsx)(n.td,{children:"double"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"SUM: M1PnL * trdQty            => AvgM1PnL = sumM1PnLTraded / qtyTraded"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"198"}),(0,i.jsx)(n.td,{children:"sumM10PnLTraded"}),(0,i.jsx)(n.td,{children:"double"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"SUM: M10PnL * trdQty           => AvgM10PnL = sumM10PnLTraded / qtyTraded"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"199"}),(0,i.jsx)(n.td,{children:"numTradedBlock"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number of SR block auctions traded"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"200"}),(0,i.jsx)(n.td,{children:"numTradedFlash"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number of SR flash auctions traded"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"201"}),(0,i.jsx)(n.td,{children:"numTradedExchPI"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number of Exch Price Improvement auctions traded"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"202"}),(0,i.jsx)(n.td,{children:"numTradedExchEX"}),(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"number of Exch Exposure auctions traded"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"131"}),(0,i.jsx)(n.td,{children:"modifiedBy"}),(0,i.jsx)(n.td,{children:"string(24)"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"user who last modified this record"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"132"}),(0,i.jsx)(n.td,{children:"modifiedIn"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"../../../Enums/SysEnvironment",children:"enum : SysEnvironment"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"133"}),(0,i.jsx)(n.td,{children:"timestamp"}),(0,i.jsx)(n.td,{children:"DateTime"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"timestamp of last modification"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,i.jsxs)(r.Z,{children:[(0,i.jsx)(l.Z,{value:"Python",label:"Python",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'ResponderMarkupRC'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n    # Required Parameters\n    \"apiKey\": API_KEY,\n    \"cmd\": 'getschema',\n    \"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,i.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=ResponderMarkupRC'\n\n"})})})]}),"\n",(0,i.jsx)(n.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,i.jsxs)(r.Z,{children:[(0,i.jsx)(l.Z,{value:"Python",label:"Python",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'ResponderMarkupRC\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'ticker|isDisabled|enabledUntil|expiryQtyAvail|tickerQtyAvail|transactFee|stockRate|moneyRate|ddivPv|divControl|respondFlex|incFeesInResp|roundRule|openExpiryQty|openTickerQty|cumFillQty|cumFillMoney|avgFillRate|isDivControlDisabled|uBid|uAsk|iDays|iYears|strike|rcEExPrem|strikePv|stockLendPv|revConPrem|effRevConLimit|limitPrice|effStockLendPv|effStockRate|numNotices|numNoticeBlock|numNoticeFlash|numNoticeExchPI|numNoticeExchEX|numNotMktPenny|numMktPenny1|numMktPenny2|numMktPenny3p|numNotMktNickle|numMktNickle1|numMktNickle2|numMktNickle3p|respDisabledSkips|stockDisabledSkips|cpFlagSkips|expiryRangeSkips|yearsRangeSkips|listedFlexSkips|noticePriceSkips|aggSizeLimitSkips|riskGroupLimitSkips|rootSkips|xDeltaRangeSkips|strikeRangeSkips|minVegaRatioSkips|probabilitySkips|numResponses|numRespondsBlock|numRespondsFlash|numResponsesExchPI|numResponsesExchEX|numFullSize|numAllocSize|numPriceMiss|numTooLate|numOtherMiss|numDidNotTrade|numTraded|qtyTraded|sumWidthTraded|sumSurfEdgeTraded|sumM1PnLTraded|sumM10PnLTraded|numTradedBlock|numTradedFlash|numTradedExchPI|numTradedExchEX|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,i.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=ResponderMarkupRC' \\\n--data-urlencode 'view=ticker|isDisabled|enabledUntil|expiryQtyAvail|tickerQtyAvail|transactFee|stockRate|moneyRate|ddivPv|divControl|respondFlex|incFeesInResp|roundRule|openExpiryQty|openTickerQty|cumFillQty|cumFillMoney|avgFillRate|isDivControlDisabled|uBid|uAsk|iDays|iYears|strike|rcEExPrem|strikePv|stockLendPv|revConPrem|effRevConLimit|limitPrice|effStockLendPv|effStockRate|numNotices|numNoticeBlock|numNoticeFlash|numNoticeExchPI|numNoticeExchEX|numNotMktPenny|numMktPenny1|numMktPenny2|numMktPenny3p|numNotMktNickle|numMktNickle1|numMktNickle2|numMktNickle3p|respDisabledSkips|stockDisabledSkips|cpFlagSkips|expiryRangeSkips|yearsRangeSkips|listedFlexSkips|noticePriceSkips|aggSizeLimitSkips|riskGroupLimitSkips|rootSkips|xDeltaRangeSkips|strikeRangeSkips|minVegaRatioSkips|probabilitySkips|numResponses|numRespondsBlock|numRespondsFlash|numResponsesExchPI|numResponsesExchEX|numFullSize|numAllocSize|numPriceMiss|numTooLate|numOtherMiss|numDidNotTrade|numTraded|qtyTraded|sumWidthTraded|sumSurfEdgeTraded|sumM1PnLTraded|sumM10PnLTraded|numTradedBlock|numTradedFlash|numTradedExchPI|numTradedExchEX|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,i.jsx)(n.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,i.jsxs)(r.Z,{children:[(0,i.jsx)(l.Z,{value:"Python",label:"Python",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'ResponderMarkupRC\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'ticker|isDisabled|enabledUntil|expiryQtyAvail|tickerQtyAvail|transactFee|stockRate|moneyRate|ddivPv|divControl|respondFlex|incFeesInResp|roundRule|openExpiryQty|openTickerQty|cumFillQty|cumFillMoney|avgFillRate|isDivControlDisabled|uBid|uAsk|iDays|iYears|strike|rcEExPrem|strikePv|stockLendPv|revConPrem|effRevConLimit|limitPrice|effStockLendPv|effStockRate|numNotices|numNoticeBlock|numNoticeFlash|numNoticeExchPI|numNoticeExchEX|numNotMktPenny|numMktPenny1|numMktPenny2|numMktPenny3p|numNotMktNickle|numMktNickle1|numMktNickle2|numMktNickle3p|respDisabledSkips|stockDisabledSkips|cpFlagSkips|expiryRangeSkips|yearsRangeSkips|listedFlexSkips|noticePriceSkips|aggSizeLimitSkips|riskGroupLimitSkips|rootSkips|xDeltaRangeSkips|strikeRangeSkips|minVegaRatioSkips|probabilitySkips|numResponses|numRespondsBlock|numRespondsFlash|numResponsesExchPI|numResponsesExchEX|numFullSize|numAllocSize|numPriceMiss|numTooLate|numOtherMiss|numDidNotTrade|numTraded|qtyTraded|sumWidthTraded|sumSurfEdgeTraded|sumM1PnLTraded|sumM10PnLTraded|numTradedBlock|numTradedFlash|numTradedExchPI|numTradedExchEX|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'ticker:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,i.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=ResponderMarkupRC' \\\n--data-urlencode 'view=ticker|isDisabled|enabledUntil|expiryQtyAvail|tickerQtyAvail|transactFee|stockRate|moneyRate|ddivPv|divControl|respondFlex|incFeesInResp|roundRule|openExpiryQty|openTickerQty|cumFillQty|cumFillMoney|avgFillRate|isDivControlDisabled|uBid|uAsk|iDays|iYears|strike|rcEExPrem|strikePv|stockLendPv|revConPrem|effRevConLimit|limitPrice|effStockLendPv|effStockRate|numNotices|numNoticeBlock|numNoticeFlash|numNoticeExchPI|numNoticeExchEX|numNotMktPenny|numMktPenny1|numMktPenny2|numMktPenny3p|numNotMktNickle|numMktNickle1|numMktNickle2|numMktNickle3p|respDisabledSkips|stockDisabledSkips|cpFlagSkips|expiryRangeSkips|yearsRangeSkips|listedFlexSkips|noticePriceSkips|aggSizeLimitSkips|riskGroupLimitSkips|rootSkips|xDeltaRangeSkips|strikeRangeSkips|minVegaRatioSkips|probabilitySkips|numResponses|numRespondsBlock|numRespondsFlash|numResponsesExchPI|numResponsesExchEX|numFullSize|numAllocSize|numPriceMiss|numTooLate|numOtherMiss|numDidNotTrade|numTraded|qtyTraded|sumWidthTraded|sumSurfEdgeTraded|sumM1PnLTraded|sumM10PnLTraded|numTradedBlock|numTradedFlash|numTradedExchPI|numTradedExchEX|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'where=accnt:eq:ExampleString' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=ticker:ASC'\n"})})})]}),"\n",(0,i.jsx)(n.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,i.jsxs)(r.Z,{children:[(0,i.jsx)(l.Z,{value:"Python",label:"Python",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'ResponderMarkupRC\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'ticker|isDisabled|enabledUntil|expiryQtyAvail|tickerQtyAvail|transactFee|stockRate|moneyRate|ddivPv|divControl|respondFlex|incFeesInResp|roundRule|openExpiryQty|openTickerQty|cumFillQty|cumFillMoney|avgFillRate|isDivControlDisabled|uBid|uAsk|iDays|iYears|strike|rcEExPrem|strikePv|stockLendPv|revConPrem|effRevConLimit|limitPrice|effStockLendPv|effStockRate|numNotices|numNoticeBlock|numNoticeFlash|numNoticeExchPI|numNoticeExchEX|numNotMktPenny|numMktPenny1|numMktPenny2|numMktPenny3p|numNotMktNickle|numMktNickle1|numMktNickle2|numMktNickle3p|respDisabledSkips|stockDisabledSkips|cpFlagSkips|expiryRangeSkips|yearsRangeSkips|listedFlexSkips|noticePriceSkips|aggSizeLimitSkips|riskGroupLimitSkips|rootSkips|xDeltaRangeSkips|strikeRangeSkips|minVegaRatioSkips|probabilitySkips|numResponses|numRespondsBlock|numRespondsFlash|numResponsesExchPI|numResponsesExchEX|numFullSize|numAllocSize|numPriceMiss|numTooLate|numOtherMiss|numDidNotTrade|numTraded|qtyTraded|sumWidthTraded|sumSurfEdgeTraded|sumM1PnLTraded|sumM10PnLTraded|numTradedBlock|numTradedFlash|numTradedExchPI|numTradedExchEX|modifiedBy|modifiedIn|timestamp\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'isDisabled|divControl|respondFlex|incFeesInResp|roundRule|isDivControlDisabled|modifiedIn\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getaggregate\',\n    "msgType": MSG_TYPE,\n    "measure": MEASURE,\n    "group": GROUP,\n    # Optional Parameters\n    "where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,i.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=ResponderMarkupRC' \\\n--data-urlencode 'measure=ticker|isDisabled|enabledUntil|expiryQtyAvail|tickerQtyAvail|transactFee|stockRate|moneyRate|ddivPv|divControl|respondFlex|incFeesInResp|roundRule|openExpiryQty|openTickerQty|cumFillQty|cumFillMoney|avgFillRate|isDivControlDisabled|uBid|uAsk|iDays|iYears|strike|rcEExPrem|strikePv|stockLendPv|revConPrem|effRevConLimit|limitPrice|effStockLendPv|effStockRate|numNotices|numNoticeBlock|numNoticeFlash|numNoticeExchPI|numNoticeExchEX|numNotMktPenny|numMktPenny1|numMktPenny2|numMktPenny3p|numNotMktNickle|numMktNickle1|numMktNickle2|numMktNickle3p|respDisabledSkips|stockDisabledSkips|cpFlagSkips|expiryRangeSkips|yearsRangeSkips|listedFlexSkips|noticePriceSkips|aggSizeLimitSkips|riskGroupLimitSkips|rootSkips|xDeltaRangeSkips|strikeRangeSkips|minVegaRatioSkips|probabilitySkips|numResponses|numRespondsBlock|numRespondsFlash|numResponsesExchPI|numResponsesExchEX|numFullSize|numAllocSize|numPriceMiss|numTooLate|numOtherMiss|numDidNotTrade|numTraded|qtyTraded|sumWidthTraded|sumSurfEdgeTraded|sumM1PnLTraded|sumM10PnLTraded|numTradedBlock|numTradedFlash|numTradedExchPI|numTradedExchEX|modifiedBy|modifiedIn|timestamp' \\\n--data-urlencode 'group=isDisabled|divControl|respondFlex|incFeesInResp|roundRule|isDivControlDisabled|modifiedIn' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,i.jsx)(n.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,i.jsxs)(r.Z,{children:[(0,i.jsx)(l.Z,{value:"Python",label:"Python",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'ResponderMarkupRC\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,i.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=ResponderMarkupRC' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,i.jsx)(n.h3,{id:"post-msgs-api-call",children:"Post Msgs API Call"}),"\n",(0,i.jsxs)(r.Z,{children:[(0,i.jsx)(l.Z,{value:"Python",label:"Python",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import requests\n\n# Replace with your desired MLINK URL\nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Request Parameters\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'postmsgs\',\n    "postaction": "U", # (U)pdate, (I)nsert, or (R)eplace\n    "postmerge": "Y", # (Y)es or (N)o\n}\n\npayload = {\n    "header": {\n        "mTyp": "ResponderMarkupRC"\n    },\n    "message": {\n        "pkey": {\n            "accnt": "exampleString", // string\n            "clientFirm": "exampleString", // string\n            "ekey": {\n                "at": "EQT",\n                "ts": "NMS",\n                "tk": "AAPL",\n                "dt": "2025-01-01"\n            },\n            "respSide": "enumValue" // enum(BuySell) - None Buy Sell\n        },\n        "ticker": {\n            "at": "EQT",\n            "ts": "NMS",\n            "tk": "AAPL"\n        },\n        "isDisabled": "enumValue", // enum(YesNo) - None, Yes, No\n        "enabledUntil": "2025-01-01 12:00:00.000000", // yyyy-MM-dd HH:mm:ss.SSSSSS\n        "expiryQtyAvail": 1, // int\n        "tickerQtyAvail": 1, // int\n        "transactFee": 1.0, // double\n        "stockRate": 1.0, // double\n        "moneyRate": 1.0, // double\n        "ddivPv": 1.0, // double\n        "divControl": "enumValue", // enum(DivControl) - None, DisableAny, DisableEstimates\n        "respondFlex": "enumValue", // enum(YesNo) - None, Yes, No\n        "incFeesInResp": "enumValue", // enum(YesNo) - None, Yes, No\n        "roundRule": "enumValue", // enum(RoundRule) - None, Exact, Fuzzy\n        "openExpiryQty": 1, // int\n        "openTickerQty": 1, // int\n        "cumFillQty": 1, // int\n        "cumFillMoney": 1.0, // double\n        "avgFillRate": 1.0, // double\n        "isDivControlDisabled": "enumValue", // enum(YesNo) - None, Yes, No\n        "uBid": 1.0, // double\n        "uAsk": 1.0, // double\n        "iDays": 1.0, // double\n        "iYears": 1.0, // double\n        "strike": 1.0, // double\n        "rcEExPrem": 1.0, // double\n        "strikePv": 1.0, // double\n        "stockLendPv": 1.0, // double\n        "revConPrem": 1.0, // double\n        "effRevConLimit": 1.0, // double\n        "limitPrice": 1.0, // double\n        "effStockLendPv": 1.0, // double\n        "effStockRate": 1.0, // double\n        "numNotices": 1, // long\n        "numNoticeBlock": 1, // long\n        "numNoticeFlash": 1, // long\n        "numNoticeExchPI": 1, // long\n        "numNoticeExchEX": 1, // long\n        "numNotMktPenny": 1, // long\n        "numMktPenny1": 1, // long\n        "numMktPenny2": 1, // long\n        "numMktPenny3p": 1, // long\n        "numNotMktNickle": 1, // long\n        "numMktNickle1": 1, // long\n        "numMktNickle2": 1, // long\n        "numMktNickle3p": 1, // long\n        "respDisabledSkips": 1, // long\n        "stockDisabledSkips": 1, // long\n        "cpFlagSkips": 1, // long\n        "expiryRangeSkips": 1, // long\n        "yearsRangeSkips": 1, // long\n        "listedFlexSkips": 1, // long\n        "noticePriceSkips": 1, // long\n        "aggSizeLimitSkips": 1, // long\n        "riskGroupLimitSkips": 1, // long\n        "rootSkips": 1, // long\n        "xDeltaRangeSkips": 1, // long\n        "strikeRangeSkips": 1, // long\n        "minVegaRatioSkips": 1, // long\n        "probabilitySkips": 1, // long\n        "numResponses": 1, // long\n        "numRespondsBlock": 1, // long\n        "numRespondsFlash": 1, // long\n        "numResponsesExchPI": 1, // long\n        "numResponsesExchEX": 1, // long\n        "numFullSize": 1, // long\n        "numAllocSize": 1, // long\n        "numPriceMiss": 1, // long\n        "numTooLate": 1, // long\n        "numOtherMiss": 1, // long\n        "numDidNotTrade": 1, // long\n        "numTraded": 1, // int\n        "qtyTraded": 1, // int\n        "sumWidthTraded": 1.0, // double\n        "sumSurfEdgeTraded": 1.0, // double\n        "sumM1PnLTraded": 1.0, // double\n        "sumM10PnLTraded": 1.0, // double\n        "numTradedBlock": 1, // long\n        "numTradedFlash": 1, // long\n        "numTradedExchPI": 1, // long\n        "numTradedExchEX": 1, // long\n        "modifiedBy": "exampleString", // string\n        "modifiedIn": "enumValue", // enum(SysEnvironment) - None, Neptune, Pluto, V7_Stable, V7_Latest, Saturn, Venus, Mars, SysTest, V7_Current\n        "timestamp": "2025-01-01 12:00:00.000000" // yyyy-MM-dd HH:mm:ss.SSSSSS\n    }\n}\n\nresponse = requests.post(MLINK_PROD_URL, params=params, json=payload)\n'})})}),(0,i.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X POST \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\' \\\n--data-urlencode \'apiKey=XXXX-XXXX-XXXX-XXXX\' \\\n--data-urlencode \'cmd=postmsgs\' \\\n--data-urlencode \'postaction=U\' \\ # (U)pdate, (I)nsert, or (R)eplace\n--data-urlencode \'postmerge=Y\' \\ # (Y)es or (N)o\n--header \'Content-Type: application/json\' \\\n--data \'{\n    "header": {\n        "mTyp": "ResponderMarkupRC"\n    },\n    "message": {\n        "pkey": {\n            "accnt": "exampleString", // string\n            "clientFirm": "exampleString", // string\n            "ekey": {\n                "at": "EQT",\n                "ts": "NMS",\n                "tk": "AAPL",\n                "dt": "2025-01-01"\n            },\n            "respSide": "enumValue" // enum(BuySell) - None Buy Sell\n        },\n        "ticker": {\n            "at": "EQT",\n            "ts": "NMS",\n            "tk": "AAPL"\n        },\n        "isDisabled": "enumValue", // enum(YesNo) - None, Yes, No\n        "enabledUntil": "2025-01-01 12:00:00.000000", // yyyy-MM-dd HH:mm:ss.SSSSSS\n        "expiryQtyAvail": 1, // int\n        "tickerQtyAvail": 1, // int\n        "transactFee": 1.0, // double\n        "stockRate": 1.0, // double\n        "moneyRate": 1.0, // double\n        "ddivPv": 1.0, // double\n        "divControl": "enumValue", // enum(DivControl) - None, DisableAny, DisableEstimates\n        "respondFlex": "enumValue", // enum(YesNo) - None, Yes, No\n        "incFeesInResp": "enumValue", // enum(YesNo) - None, Yes, No\n        "roundRule": "enumValue", // enum(RoundRule) - None, Exact, Fuzzy\n        "openExpiryQty": 1, // int\n        "openTickerQty": 1, // int\n        "cumFillQty": 1, // int\n        "cumFillMoney": 1.0, // double\n        "avgFillRate": 1.0, // double\n        "isDivControlDisabled": "enumValue", // enum(YesNo) - None, Yes, No\n        "uBid": 1.0, // double\n        "uAsk": 1.0, // double\n        "iDays": 1.0, // double\n        "iYears": 1.0, // double\n        "strike": 1.0, // double\n        "rcEExPrem": 1.0, // double\n        "strikePv": 1.0, // double\n        "stockLendPv": 1.0, // double\n        "revConPrem": 1.0, // double\n        "effRevConLimit": 1.0, // double\n        "limitPrice": 1.0, // double\n        "effStockLendPv": 1.0, // double\n        "effStockRate": 1.0, // double\n        "numNotices": 1, // long\n        "numNoticeBlock": 1, // long\n        "numNoticeFlash": 1, // long\n        "numNoticeExchPI": 1, // long\n        "numNoticeExchEX": 1, // long\n        "numNotMktPenny": 1, // long\n        "numMktPenny1": 1, // long\n        "numMktPenny2": 1, // long\n        "numMktPenny3p": 1, // long\n        "numNotMktNickle": 1, // long\n        "numMktNickle1": 1, // long\n        "numMktNickle2": 1, // long\n        "numMktNickle3p": 1, // long\n        "respDisabledSkips": 1, // long\n        "stockDisabledSkips": 1, // long\n        "cpFlagSkips": 1, // long\n        "expiryRangeSkips": 1, // long\n        "yearsRangeSkips": 1, // long\n        "listedFlexSkips": 1, // long\n        "noticePriceSkips": 1, // long\n        "aggSizeLimitSkips": 1, // long\n        "riskGroupLimitSkips": 1, // long\n        "rootSkips": 1, // long\n        "xDeltaRangeSkips": 1, // long\n        "strikeRangeSkips": 1, // long\n        "minVegaRatioSkips": 1, // long\n        "probabilitySkips": 1, // long\n        "numResponses": 1, // long\n        "numRespondsBlock": 1, // long\n        "numRespondsFlash": 1, // long\n        "numResponsesExchPI": 1, // long\n        "numResponsesExchEX": 1, // long\n        "numFullSize": 1, // long\n        "numAllocSize": 1, // long\n        "numPriceMiss": 1, // long\n        "numTooLate": 1, // long\n        "numOtherMiss": 1, // long\n        "numDidNotTrade": 1, // long\n        "numTraded": 1, // int\n        "qtyTraded": 1, // int\n        "sumWidthTraded": 1.0, // double\n        "sumSurfEdgeTraded": 1.0, // double\n        "sumM1PnLTraded": 1.0, // double\n        "sumM10PnLTraded": 1.0, // double\n        "numTradedBlock": 1, // long\n        "numTradedFlash": 1, // long\n        "numTradedExchPI": 1, // long\n        "numTradedExchEX": 1, // long\n        "modifiedBy": "exampleString", // string\n        "modifiedIn": "enumValue", // enum(SysEnvironment) - None, Neptune, Pluto, V7_Stable, V7_Latest, Saturn, Venus, Mars, SysTest, V7_Current\n        "timestamp": "2025-01-01 12:00:00.000000" // yyyy-MM-dd HH:mm:ss.SSSSSS\n    }\n}\'\n'})})})]})]})}function m(e={}){let{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},9641:function(e,n,s){s.d(n,{Z:()=>d});var t=s("52676");s("75271");var i=s("54461");function d(e){let{children:n,hidden:s,className:d}=e;return(0,t.jsx)("div",{role:"tabpanel",className:(0,i.Z)("tabItem_SSzl",d),hidden:s,children:n})}},71386:function(e,n,s){s.d(n,{Z:()=>g});var t=s("52676"),i=s("75271"),d=s("54461"),r=s("52289"),l=s("3225"),a=s("42834"),c=s("40578"),o=s("35834"),u=s("79616");function h(e){return i.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||i.isValidElement(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function m(e){let{value:n,tabValues:s}=e;return s.some(e=>e.value===n)}var x=s("44537");function p(e){let{className:n,block:s,selectedValue:i,selectValue:l,tabValues:a}=e,c=[],{blockElementScrollPositionUntilNextRender:o}=(0,r.o5)(),u=e=>{let n=e.currentTarget,s=a[c.indexOf(n)].value;s!==i&&(o(n),l(s))},h=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{let s=c.indexOf(e.currentTarget)+1;n=c[s]??c[0];break}case"ArrowLeft":{let s=c.indexOf(e.currentTarget)-1;n=c[s]??c[c.length-1]}}n?.focus()};return(0,t.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,d.Z)("tabs",{"tabs--block":s},n),children:a.map(e=>{let{value:n,label:s,attributes:r}=e;return(0,t.jsx)("li",{role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:e=>c.push(e),onKeyDown:h,onClick:u,...r,className:(0,d.Z)("tabs__item","tabItem_aitt",r?.className,{"tabs__item--active":i===n}),children:s??n},n)})})}function j(e){let{lazy:n,children:s,selectedValue:r}=e,l=(Array.isArray(s)?s:[s]).filter(Boolean);if(n){let e=l.find(e=>e.props.value===r);return e?(0,i.cloneElement)(e,{className:(0,d.Z)("margin-top--md",e.props.className)}):null}return(0,t.jsx)("div",{className:"margin-top--md",children:l.map((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==r}))})}function k(e){let n=function(e){let{defaultValue:n,queryString:s=!1,groupId:t}=e,d=function(e){let{values:n,children:s}=e;return(0,i.useMemo)(()=>{let e=n??h(s).map(e=>{let{props:{value:n,label:s,attributes:t,default:i}}=e;return{value:n,label:s,attributes:t,default:i}});return!function(e){let n=(0,o.lx)(e,(e,n)=>e.value===n.value);if(n.length>0)throw Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,s])}(e),[r,x]=(0,i.useState)(()=>(function(e){let{defaultValue:n,tabValues:s}=e;if(0===s.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:s}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${s.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}let t=s.find(e=>e.default)??s[0];if(!t)throw Error("Unexpected error: 0 tabValues");return t.value})({defaultValue:n,tabValues:d})),[p,j]=function(e){let{queryString:n=!1,groupId:s}=e,t=(0,l.k6)(),d=function(e){let{queryString:n=!1,groupId:s}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!s)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return s??null}({queryString:n,groupId:s});return[(0,c._X)(d),(0,i.useCallback)(e=>{if(!d)return;let n=new URLSearchParams(t.location.search);n.set(d,e),t.replace({...t.location,search:n.toString()})},[d,t])]}({queryString:s,groupId:t}),[k,g]=function(e){let{groupId:n}=e,s=n?`docusaurus.tab.${n}`:null,[t,d]=(0,u.Nk)(s);return[t,(0,i.useCallback)(e=>{s&&d.set(e)},[s,d])]}({groupId:t}),y=(()=>{let e=p??k;return m({value:e,tabValues:d})?e:null})();return(0,a.Z)(()=>{y&&x(y)},[y]),{selectedValue:r,selectValue:(0,i.useCallback)(e=>{if(!m({value:e,tabValues:d}))throw Error(`Can't select invalid tab value=${e}`);x(e),j(e),g(e)},[j,g,d]),tabValues:d}}(e);return(0,t.jsxs)("div",{className:(0,d.Z)("tabs-container","tabList_ArS0"),children:[(0,t.jsx)(p,{...n,...e}),(0,t.jsx)(j,{...n,...e})]})}function g(e){let n=(0,x.Z)();return(0,t.jsx)(k,{...e,children:h(e.children)},String(n))}},91503:function(e,n,s){s.d(n,{Z:function(){return l},a:function(){return r}});var t=s(75271);let i={},d=t.createContext(i);function r(e){let n=t.useContext(d);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(d.Provider,{value:n},e.children)}}}]);