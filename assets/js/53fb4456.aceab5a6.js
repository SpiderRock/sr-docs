"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([["84883"],{35650:function(e,n,d){d.r(n),d.d(n,{default:()=>p,frontMatter:()=>a,metadata:()=>t,assets:()=>o,toc:()=>h,contentTitle:()=>c});var t=JSON.parse('{"id":"MessageSchemas/Schema/Topics/risk-v5/RiskCubeDetailV5","title":"RiskCubeDetailV5","description":"RiskCubeDetail records are published by CoreRiskServers and are designed to be aggregated and analyzed over time.RiskCubeDetail records are published to the SpiderRock Archive Host data pipeline at the end of each trading period.","source":"@site/docs/MessageSchemas/Schema/Topics/4740-risk-v5/RiskCubeDetailV5.md","sourceDirName":"MessageSchemas/Schema/Topics/4740-risk-v5","slug":"/MessageSchemas/Schema/Topics/risk-v5/RiskCubeDetailV5","permalink":"/docs/next/MessageSchemas/Schema/Topics/risk-v5/RiskCubeDetailV5","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"RiskCubeDetailV5"},"sidebar":"messageSchemasSidebar","previous":{"title":"RiskAggGroupStateV5","permalink":"/docs/next/MessageSchemas/Schema/Topics/risk-v5/RiskAggGroupStateV5"},"next":{"title":"SodCashRecordV5","permalink":"/docs/next/MessageSchemas/Schema/Topics/risk-v5/SodCashRecordV5"}}'),s=d("52676"),r=d("91503"),l=d("71386"),i=d("9641");let a={title:"RiskCubeDetailV5"},c="Schema: RiskCubeDetailV5 (ID: 4825)",o={},h=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3}];function x(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsxs)(n.h1,{id:"schema-riskcubedetailv5-id-4825",children:["Schema: RiskCubeDetailV5 ",(0,s.jsx)("span",{className:"small-text",children:"(ID: 4825)"})]})}),"\n",(0,s.jsxs)(n.p,{children:["RiskCubeDetail records are published by CoreRiskServers and are designed to be aggregated and analyzed over time.",(0,s.jsx)("br",{}),(0,s.jsx)("br",{}),"RiskCubeDetail records are published to the SpiderRock Archive Host data pipeline at the end of each trading period."]}),"\n",(0,s.jsx)(n.h3,{id:"metadata",children:"METADATA"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Attribute"}),(0,s.jsx)(n.th,{children:"Value"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Topic"}),(0,s.jsx)(n.td,{children:"4740-risk-v5"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"MLink Token"}),(0,s.jsx)(n.td,{children:"ClientRisk"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"SRSE Product"}),(0,s.jsx)(n.td,{children:"SRRisk"})]})]})]}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note:"})," The symbol ",(0,s.jsx)(n.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"body",children:"BODY"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"#"}),(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default Value"}),(0,s.jsx)(n.th,{children:"Comment"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"10="}),(0,s.jsx)(n.td,{children:"accnt"}),(0,s.jsx)(n.td,{children:"string(16)"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"SR Accnt"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"11="}),(0,s.jsx)(n.td,{children:"secKey"}),(0,s.jsx)(n.td,{children:"OptionKey"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"12="}),(0,s.jsx)(n.td,{children:"secType"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/SecType",children:"enum : SecType"})}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"[Call, Put, Stock, Future, Cash]"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"13="}),(0,s.jsx)(n.td,{children:"tradeDate"}),(0,s.jsx)(n.td,{children:"DateKey"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"14="}),(0,s.jsx)(n.td,{children:"riskSession"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/RiskSession",children:"enum : RiskSession"})}),(0,s.jsx)(n.td,{children:"Regular"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"15="}),(0,s.jsx)(n.td,{children:"clientFirm"}),(0,s.jsx)(n.td,{children:"string(16)"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"SR assigned client firm"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"100"}),(0,s.jsx)(n.td,{children:"version"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/RiskCubeVersion",children:"enum : RiskCubeVersion"})}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"106"}),(0,s.jsx)(n.td,{children:"clearingFirm"}),(0,s.jsx)(n.td,{children:"string(8)"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Clearing Firm"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"109"}),(0,s.jsx)(n.td,{children:"clearingAccnt"}),(0,s.jsx)(n.td,{children:"string(16)"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Clearing Firm Accnt"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"112"}),(0,s.jsx)(n.td,{children:"riskServerCode"}),(0,s.jsx)(n.td,{children:"string(6)"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"SR RiskServer (server that published this record)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"115"}),(0,s.jsx)(n.td,{children:"viewGroup1"}),(0,s.jsx)(n.td,{children:"string(12)"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Client defined view group #1 (can be fitered/aggregated)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"118"}),(0,s.jsx)(n.td,{children:"viewGroup2"}),(0,s.jsx)(n.td,{children:"string(12)"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Client defined view group #2 (can be fitered/aggregated)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"121"}),(0,s.jsx)(n.td,{children:"viewGroup3"}),(0,s.jsx)(n.td,{children:"string(12)"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Client defined view group #3 (can be fitered/aggregated)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"124"}),(0,s.jsx)(n.td,{children:"ticker"}),(0,s.jsx)(n.td,{children:"TickerKey"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Risk Symbol (underlier for equities; product group for future/option complexes)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"127"}),(0,s.jsx)(n.td,{children:"riskClass"}),(0,s.jsx)(n.td,{children:"string(8)"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Symbol risk class (from SymbolControl record)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"130"}),(0,s.jsx)(n.td,{children:"symbolType"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/SymbolType",children:"enum : SymbolType"})}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Symbol type"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"133"}),(0,s.jsx)(n.td,{children:"beta"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"beta (usually beta to SPX; see AccountConfig.betaSource)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"136"}),(0,s.jsx)(n.td,{children:"betaSource"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/BetaSource",children:"enum : BetaSource"})}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"139"}),(0,s.jsx)(n.td,{children:"sector"}),(0,s.jsx)(n.td,{children:"string(16)"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Client defined sector (from SymbolControl record)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"142"}),(0,s.jsx)(n.td,{children:"indNum"}),(0,s.jsx)(n.td,{children:"int"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Ind Num (00)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"145"}),(0,s.jsx)(n.td,{children:"subNum"}),(0,s.jsx)(n.td,{children:"int"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Sub Num (0000)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"148"}),(0,s.jsx)(n.td,{children:"grpNum"}),(0,s.jsx)(n.td,{children:"int"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Grp Num (000000)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"151"}),(0,s.jsx)(n.td,{children:"nbrNum"}),(0,s.jsx)(n.td,{children:"int"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Nbr Num (00000000)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"154"}),(0,s.jsx)(n.td,{children:"eDays"}),(0,s.jsx)(n.td,{children:"short"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"days to next earnings [-5, +30]"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"157"}),(0,s.jsx)(n.td,{children:"dDays"}),(0,s.jsx)(n.td,{children:"short"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"days to next dividend [-5, +30]"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"160"}),(0,s.jsx)(n.td,{children:"xDelta"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"calls = +0.5 - delta; puts = -0.5 - delta"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"163"}),(0,s.jsx)(n.td,{children:"expCode"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/ExpCode",children:"enum : ExpCode"})}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Time-to-expiry code (W1, W2, M1, M2, M34, M56, M7C, Y1, Y2)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"166"}),(0,s.jsx)(n.td,{children:"skewCode"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/SkewCode",children:"enum : SkewCode"})}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Skew bucket code (Dd=Deep DownSide, Dn = DownSide, At = ATM, Up = UpSide, DU = FarUpSide)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"169"}),(0,s.jsx)(n.td,{children:"eDaysCode"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/EDaysCode",children:"enum : EDaysCode"})}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Days to next earnings event (if any)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"172"}),(0,s.jsx)(n.td,{children:"iVolRange"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/iVolRange",children:"enum : iVolRange"})}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Implied ATM Vol Range"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"175"}),(0,s.jsx)(n.td,{children:"skewDD"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"dd (deep downside) skew metric (xde < -0.30)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"178"}),(0,s.jsx)(n.td,{children:"skewDN"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"dn (downside) skew metric (-0.30 < xde < -0.10)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"181"}),(0,s.jsx)(n.td,{children:"skewAT"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"at (atm) skew risk metric (-0.10 < xde < +0.10)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"184"}),(0,s.jsx)(n.td,{children:"skewUP"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"up (upside) skew risk metric (+0.10 < xde < +0.30)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"187"}),(0,s.jsx)(n.td,{children:"skewDU"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"du (far upside) skew risk metric (+0.30 < xde)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"190"}),(0,s.jsx)(n.td,{children:"shOpnPos"}),(0,s.jsx)(n.td,{children:"int"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"shares (start-of-day)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"193"}),(0,s.jsx)(n.td,{children:"fcOpnPos"}),(0,s.jsx)(n.td,{children:"int"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"futures contracts (start-of-day)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"196"}),(0,s.jsx)(n.td,{children:"cnOpnPos"}),(0,s.jsx)(n.td,{children:"int"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"options contracts (start-of-day)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"199"}),(0,s.jsx)(n.td,{children:"cnAtmEquiv"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"atm equivalent contracts; (opr.cnOpnPos + opr.cnBot - opr.cnSld) * opr.ve / opr.atmVega"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"202"}),(0,s.jsx)(n.td,{children:"shBot"}),(0,s.jsx)(n.td,{children:"int"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"shares bot"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"205"}),(0,s.jsx)(n.td,{children:"shSld"}),(0,s.jsx)(n.td,{children:"int"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"shares sld"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"208"}),(0,s.jsx)(n.td,{children:"shSldShrt"}),(0,s.jsx)(n.td,{children:"int"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"shares sld short"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"211"}),(0,s.jsx)(n.td,{children:"fcBot"}),(0,s.jsx)(n.td,{children:"int"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"future contracts bot"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"214"}),(0,s.jsx)(n.td,{children:"fcSld"}),(0,s.jsx)(n.td,{children:"int"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"future contracts sld"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"217"}),(0,s.jsx)(n.td,{children:"cnBot"}),(0,s.jsx)(n.td,{children:"int"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"option contracts bot"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"220"}),(0,s.jsx)(n.td,{children:"cnSld"}),(0,s.jsx)(n.td,{children:"int"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"option contracts sld"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"223"}),(0,s.jsx)(n.td,{children:"cnOpened"}),(0,s.jsx)(n.td,{children:"int"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"option contracts opened"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"226"}),(0,s.jsx)(n.td,{children:"cnClosed"}),(0,s.jsx)(n.td,{children:"int"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"option contracts closed"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"229"}),(0,s.jsx)(n.td,{children:"opnDir"}),(0,s.jsx)(n.td,{children:"string(2)"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"open (start-of-day) direction (LN or SH)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"232"}),(0,s.jsx)(n.td,{children:"posDir"}),(0,s.jsx)(n.td,{children:"string(2)"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"current (start-of-day + trades) direction (LN or SH)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"235"}),(0,s.jsx)(n.td,{children:"unitOpnPos"}),(0,s.jsx)(n.td,{children:"int"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"effective opening position (shares or cn * pointValue) (start-of-day)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"238"}),(0,s.jsx)(n.td,{children:"unitCurPos"}),(0,s.jsx)(n.td,{children:"int"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"effective current position (shares or cn * pointValue) (start-of-day + trades)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"241"}),(0,s.jsx)(n.td,{children:"unitQtyBot"}),(0,s.jsx)(n.td,{children:"int"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"effective shares bot (shares or cn * underlierPerCn)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"244"}),(0,s.jsx)(n.td,{children:"unitQtySld"}),(0,s.jsx)(n.td,{children:"int"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"effective shares sld (shares or cn * underlierPerCn)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"247"}),(0,s.jsx)(n.td,{children:"dayPnl"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"day pnl"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"250"}),(0,s.jsx)(n.td,{children:"dayDnPnl"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"day pnl (delta neutral)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"253"}),(0,s.jsx)(n.td,{children:"dayTrdDelta"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"day trade delta"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"256"}),(0,s.jsx)(n.td,{children:"dayTrdDDelta"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"day trade $delta"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"259"}),(0,s.jsx)(n.td,{children:"dayTrdGamma"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"day trade gamma"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"262"}),(0,s.jsx)(n.td,{children:"dayTrdDGamma"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"day trade $gamma"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"265"}),(0,s.jsx)(n.td,{children:"dayTrdVega"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"day trade vega"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"268"}),(0,s.jsx)(n.td,{children:"dayTrdWVega"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"day trade wVega (vega * vol)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"271"}),(0,s.jsx)(n.td,{children:"dayTrdTVega"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"day trade tVega (vega / sqrt(max(0.1, years * 4)))"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"274"}),(0,s.jsx)(n.td,{children:"dayTrdWtVega"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"day trade wtVega (vega * vol / sqrt(max(0.1, years * 4)))"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"277"}),(0,s.jsx)(n.td,{children:"dayTrdTheta"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"day trade theta"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"280"}),(0,s.jsx)(n.td,{children:"dayEdgeOpened"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"day theo option edge opened (requires a theo model)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"283"}),(0,s.jsx)(n.td,{children:"dayEdgeClosed"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"day theo option edge closed (requires a theo model)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"286"}),(0,s.jsx)(n.td,{children:"dayMnyBot"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"day money bot"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"289"}),(0,s.jsx)(n.td,{children:"dayMnySld"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"day money sld"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"292"}),(0,s.jsx)(n.td,{children:"opnPnlVolMark"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"(cur.surface - pr.surface) * cnOpnClr * upc"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"295"}),(0,s.jsx)(n.td,{children:"opnPnlMidMark"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"(cur.mid - pr.mid) * cnOpnClr * upc"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"298"}),(0,s.jsx)(n.td,{children:"opnPnlClrMark"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"(cur.mid - pr.clr) * cnOpnClr * upc"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"301"}),(0,s.jsx)(n.td,{children:"opnMarkBrkMny"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"(cur.surface - cur.mid) * cnOpnClr * upc"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"304"}),(0,s.jsx)(n.td,{children:"opnTheoEdge"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"opening edge (edge at the end of prior period) (requires a theo model)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"307"}),(0,s.jsx)(n.td,{children:"posTheoEdge"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"current edge (opening positions + trades) (requires a theo model)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"310"}),(0,s.jsx)(n.td,{children:"tVolMove"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"LN(tVol / tVolPr)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"313"}),(0,s.jsx)(n.td,{children:"tEdgeMove"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"LN(tVol / iVol) - LN(tVolPr / iVolPr)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"316"}),(0,s.jsx)(n.td,{children:"tEdge"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"LN(tVol / iVol)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"319"}),(0,s.jsx)(n.td,{children:"opnPnlDe"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"open position * mult * optDelta * dUPrc			( pnlSD = sum(pnlDe) [stock + futures + options] )"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"322"}),(0,s.jsx)(n.td,{children:"opnPnlGa"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"open position * mult * 0.5 * optGamma * dUPrc * dUPrc"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"325"}),(0,s.jsx)(n.td,{children:"opnPnlTh"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"open position * mult * optTheta * dTime"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"328"}),(0,s.jsx)(n.td,{children:"opnPnlVe"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"open position * mult * optVega * dVol"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"331"}),(0,s.jsx)(n.td,{children:"opnPnlVo"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"open position * mult * 0.5 * optVolga * dVol * dVol"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"334"}),(0,s.jsx)(n.td,{children:"opnPnlVa"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"open position * mult * optVanna * dVol * dUPrc"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"337"}),(0,s.jsx)(n.td,{children:"opnPnlSl"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"open position * mult * vol/uPrc * slope * optVega * dUPrc"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"340"}),(0,s.jsx)(n.td,{children:"opnPnlRate"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"open position * mult * optRho * dRate"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"343"}),(0,s.jsx)(n.td,{children:"opnPnlSDiv"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"open position * mult * optPhi * dSDv"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"346"}),(0,s.jsx)(n.td,{children:"opnPnlDDiv"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"open position * mult * optPhi * dDDv"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"349"}),(0,s.jsx)(n.td,{children:"opnPnlErr"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"unattributed pnl: SR Vol Pnl - opnPnlDe - opnPnlGa - opnPnlTh - opnPnlVe - opnPnlRat - opnPnlSDiv - opnPnlDDiv"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"352"}),(0,s.jsx)(n.td,{children:"opnEdgeChange"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"open position * mult * (tEdge - tEdgePr) (requires a theo model)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"355"}),(0,s.jsx)(n.td,{children:"posDelta"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"live position * mult * optDelta"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"358"}),(0,s.jsx)(n.td,{children:"posDDelta"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"live position * mult * optDelta * UPrc"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"361"}),(0,s.jsx)(n.td,{children:"posDBeta"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"live position * mult * optDelta * beta * UPrc"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"364"}),(0,s.jsx)(n.td,{children:"posGamma"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"live position * mult * optGamma"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"367"}),(0,s.jsx)(n.td,{children:"posDGamma"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"live position * mult * optGamma * uPrc * uPrc / 100"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"370"}),(0,s.jsx)(n.td,{children:"posVega"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"live position * mult * optVega"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"373"}),(0,s.jsx)(n.td,{children:"posWVega"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"live position * mult * optVega * iVol"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"376"}),(0,s.jsx)(n.td,{children:"posTVega"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"live position * mult * optVega / sqrt(max(0.1, years * 4))"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"379"}),(0,s.jsx)(n.td,{children:"posWtVega"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"live position * mult * optVega * iVol / sqrt(max(0.1, years * 4))"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"382"}),(0,s.jsx)(n.td,{children:"posVolga"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"live position * mult * optVolg"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"385"}),(0,s.jsx)(n.td,{children:"posVanna"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"live position * mult * optVanna"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"388"}),(0,s.jsx)(n.td,{children:"posTheta"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"live position * mult * optTheta"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"391"}),(0,s.jsx)(n.td,{children:"posRho"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"live position * mult * optRho"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"394"}),(0,s.jsx)(n.td,{children:"posPhi"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"live position * mult * optPhi"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"503"}),(0,s.jsx)(n.td,{children:"posHDelta"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"hedge delta (either ivol or tvol based;follows binary rules)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"504"}),(0,s.jsx)(n.td,{children:"posHDDelta"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"hedge delta (dollarized)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"505"}),(0,s.jsx)(n.td,{children:"posHGamma"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"hedge gamma (either ivol or tvol based;follows binary rules)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"507"}),(0,s.jsx)(n.td,{children:"posHDGamma"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"hedge gamma (dollarized)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"397"}),(0,s.jsx)(n.td,{children:"posNotional"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"live position * mult * uPrc"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"400"}),(0,s.jsx)(n.td,{children:"posMktValue"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"live position * mult * SR surface mark"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"403"}),(0,s.jsx)(n.td,{children:"posPremOPar"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"live position * mult * premium over parity"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"406"}),(0,s.jsx)(n.td,{children:"atmVol"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"atm volatility"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"409"}),(0,s.jsx)(n.td,{children:"symVol"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"underlier symbol volatility (term.21d;censored)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"412"}),(0,s.jsx)(n.td,{children:"srSlope"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"strike veSlope (sr surface;options only)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"415"}),(0,s.jsx)(n.td,{children:"prcSVol"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"SR Surface Vol"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"418"}),(0,s.jsx)(n.td,{children:"prcTOpx"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"SR Surface Price"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"421"}),(0,s.jsx)(n.td,{children:"prcYOpx"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"SR Yesterday Surface Price"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"424"}),(0,s.jsx)(n.td,{children:"prcUPrc"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"underlier price"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"427"}),(0,s.jsx)(n.td,{children:"prcYears"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"years-to-expiry"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"430"}),(0,s.jsx)(n.td,{children:"prcRate"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"discount rate-to-expiry"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"433"}),(0,s.jsx)(n.td,{children:"prcSdiv"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"continuous stock div rate-to-expiry"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"436"}),(0,s.jsx)(n.td,{children:"prcDdiv"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"cumulative discrete dividend paid through expiry"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"439"}),(0,s.jsx)(n.td,{children:"uPrcRatio"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{children:"0"}),(0,s.jsx)(n.td,{children:"stock price multiplier"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"442"}),(0,s.jsx)(n.td,{children:"uPrcMove"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Underlier price change"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"445"}),(0,s.jsx)(n.td,{children:"iVolMove"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Implied vol change (fixed strike ivol change from prior period)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"448"}),(0,s.jsx)(n.td,{children:"exDivAmt"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"estimated exDiv amount (if any)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"451"}),(0,s.jsx)(n.td,{children:"borrowRate"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"estimated stock borrow rate (if any)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"452"}),(0,s.jsx)(n.td,{children:"curMidMark"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"current mid market price"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"454"}),(0,s.jsx)(n.td,{children:"modelType"}),(0,s.jsx)(n.td,{children:"byte"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"SRPricingLib.CalcModelType"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"457"}),(0,s.jsx)(n.td,{children:"underliersPerCn"}),(0,s.jsx)(n.td,{children:"int"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"underliers per contract"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"460"}),(0,s.jsx)(n.td,{children:"underlierType"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/UnderlierType",children:"enum : UnderlierType"})}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"underlier type (used for option pricing)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"463"}),(0,s.jsx)(n.td,{children:"pointValue"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"value of one point"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"466"}),(0,s.jsx)(n.td,{children:"pointCurrency"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/Currency",children:"enum : Currency"})}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"469"}),(0,s.jsx)(n.td,{children:"tickValue"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"value of one tick"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"472"}),(0,s.jsx)(n.td,{children:"multihedge"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/Multihedge",children:"enum : Multihedge"})}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"475"}),(0,s.jsx)(n.td,{children:"multihedgeSource"}),(0,s.jsx)(n.td,{children:"TickerKey"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"MH Ticker Key (starts with '_') (if exists)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"478"}),(0,s.jsx)(n.td,{children:"multihedgePVRatio"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"pv multiplier (fraction of underlier value (uPerCn x uPrc) / SUM(uPerCn x uPrc) associated with this fragment"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"481"}),(0,s.jsx)(n.td,{children:"spanPrcIncUp"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"default (exchange) span price up increment for this asset"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"484"}),(0,s.jsx)(n.td,{children:"spanPrcIncDn"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"default (exchange) span price dn increment for this asset"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"487"}),(0,s.jsx)(n.td,{children:"spanVolInc"}),(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"default (exchange) span volatility increment for this asset"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"490"}),(0,s.jsx)(n.td,{children:"prcSpanType"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/SpanType",children:"enum : SpanType"})}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"exchange prcSpan type"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"493"}),(0,s.jsx)(n.td,{children:"volSpanType"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/SpanType",children:"enum : SpanType"})}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"exchange volSpan type"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"496"}),(0,s.jsx)(n.td,{children:"spanPricingModel"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/SpanPricingModel",children:"enum : SpanPricingModel"})}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Exchange-defined model for SPAN option pricing calcs"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"499"}),(0,s.jsx)(n.td,{children:"marginType"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"../../../Enums/MarginType",children:"enum : MarginType"})}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"margin slide type: NMS_Equity = +/- 15%, NMS_Index = -8%/+6%, NMS_Medium = +/-10%"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"502"}),(0,s.jsx)(n.td,{children:"timestamp"}),(0,s.jsx)(n.td,{children:"DateTime"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,s.jsxs)(l.Z,{children:[(0,s.jsx)(i.Z,{value:"Python",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'RiskCubeDetailV5'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n    # Required Parameters\n    \"apiKey\": API_KEY,\n    \"cmd\": 'getschema',\n    \"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,s.jsx)(i.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=RiskCubeDetailV5'\n\n"})})})]}),"\n",(0,s.jsx)(n.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,s.jsxs)(l.Z,{children:[(0,s.jsx)(i.Z,{value:"Python",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'RiskCubeDetailV5\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'version|clearingFirm|clearingAccnt|riskServerCode|viewGroup1|viewGroup2|viewGroup3|ticker|riskClass|symbolType|beta|betaSource|sector|indNum|subNum|grpNum|nbrNum|eDays|dDays|xDelta|expCode|skewCode|eDaysCode|iVolRange|skewDD|skewDN|skewAT|skewUP|skewDU|shOpnPos|fcOpnPos|cnOpnPos|cnAtmEquiv|shBot|shSld|shSldShrt|fcBot|fcSld|cnBot|cnSld|cnOpened|cnClosed|opnDir|posDir|unitOpnPos|unitCurPos|unitQtyBot|unitQtySld|dayPnl|dayDnPnl|dayTrdDelta|dayTrdDDelta|dayTrdGamma|dayTrdDGamma|dayTrdVega|dayTrdWVega|dayTrdTVega|dayTrdWtVega|dayTrdTheta|dayEdgeOpened|dayEdgeClosed|dayMnyBot|dayMnySld|opnPnlVolMark|opnPnlMidMark|opnPnlClrMark|opnMarkBrkMny|opnTheoEdge|posTheoEdge|tVolMove|tEdgeMove|tEdge|opnPnlDe|opnPnlGa|opnPnlTh|opnPnlVe|opnPnlVo|opnPnlVa|opnPnlSl|opnPnlRate|opnPnlSDiv|opnPnlDDiv|opnPnlErr|opnEdgeChange|posDelta|posDDelta|posDBeta|posGamma|posDGamma|posVega|posWVega|posTVega|posWtVega|posVolga|posVanna|posTheta|posRho|posPhi|posHDelta|posHDDelta|posHGamma|posHDGamma|posNotional|posMktValue|posPremOPar|atmVol|symVol|srSlope|prcSVol|prcTOpx|prcYOpx|prcUPrc|prcYears|prcRate|prcSdiv|prcDdiv|uPrcRatio|uPrcMove|iVolMove|exDivAmt|borrowRate|curMidMark|modelType|underliersPerCn|underlierType|pointValue|pointCurrency|tickValue|multihedge|multihedgeSource|multihedgePVRatio|spanPrcIncUp|spanPrcIncDn|spanVolInc|prcSpanType|volSpanType|spanPricingModel|marginType|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(i.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=RiskCubeDetailV5' \\\n--data-urlencode 'view=version|clearingFirm|clearingAccnt|riskServerCode|viewGroup1|viewGroup2|viewGroup3|ticker|riskClass|symbolType|beta|betaSource|sector|indNum|subNum|grpNum|nbrNum|eDays|dDays|xDelta|expCode|skewCode|eDaysCode|iVolRange|skewDD|skewDN|skewAT|skewUP|skewDU|shOpnPos|fcOpnPos|cnOpnPos|cnAtmEquiv|shBot|shSld|shSldShrt|fcBot|fcSld|cnBot|cnSld|cnOpened|cnClosed|opnDir|posDir|unitOpnPos|unitCurPos|unitQtyBot|unitQtySld|dayPnl|dayDnPnl|dayTrdDelta|dayTrdDDelta|dayTrdGamma|dayTrdDGamma|dayTrdVega|dayTrdWVega|dayTrdTVega|dayTrdWtVega|dayTrdTheta|dayEdgeOpened|dayEdgeClosed|dayMnyBot|dayMnySld|opnPnlVolMark|opnPnlMidMark|opnPnlClrMark|opnMarkBrkMny|opnTheoEdge|posTheoEdge|tVolMove|tEdgeMove|tEdge|opnPnlDe|opnPnlGa|opnPnlTh|opnPnlVe|opnPnlVo|opnPnlVa|opnPnlSl|opnPnlRate|opnPnlSDiv|opnPnlDDiv|opnPnlErr|opnEdgeChange|posDelta|posDDelta|posDBeta|posGamma|posDGamma|posVega|posWVega|posTVega|posWtVega|posVolga|posVanna|posTheta|posRho|posPhi|posHDelta|posHDDelta|posHGamma|posHDGamma|posNotional|posMktValue|posPremOPar|atmVol|symVol|srSlope|prcSVol|prcTOpx|prcYOpx|prcUPrc|prcYears|prcRate|prcSdiv|prcDdiv|uPrcRatio|uPrcMove|iVolMove|exDivAmt|borrowRate|curMidMark|modelType|underliersPerCn|underlierType|pointValue|pointCurrency|tickValue|multihedge|multihedgeSource|multihedgePVRatio|spanPrcIncUp|spanPrcIncDn|spanVolInc|prcSpanType|volSpanType|spanPricingModel|marginType|timestamp' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,s.jsx)(n.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,s.jsxs)(l.Z,{children:[(0,s.jsx)(i.Z,{value:"Python",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'RiskCubeDetailV5\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'version|clearingFirm|clearingAccnt|riskServerCode|viewGroup1|viewGroup2|viewGroup3|ticker|riskClass|symbolType|beta|betaSource|sector|indNum|subNum|grpNum|nbrNum|eDays|dDays|xDelta|expCode|skewCode|eDaysCode|iVolRange|skewDD|skewDN|skewAT|skewUP|skewDU|shOpnPos|fcOpnPos|cnOpnPos|cnAtmEquiv|shBot|shSld|shSldShrt|fcBot|fcSld|cnBot|cnSld|cnOpened|cnClosed|opnDir|posDir|unitOpnPos|unitCurPos|unitQtyBot|unitQtySld|dayPnl|dayDnPnl|dayTrdDelta|dayTrdDDelta|dayTrdGamma|dayTrdDGamma|dayTrdVega|dayTrdWVega|dayTrdTVega|dayTrdWtVega|dayTrdTheta|dayEdgeOpened|dayEdgeClosed|dayMnyBot|dayMnySld|opnPnlVolMark|opnPnlMidMark|opnPnlClrMark|opnMarkBrkMny|opnTheoEdge|posTheoEdge|tVolMove|tEdgeMove|tEdge|opnPnlDe|opnPnlGa|opnPnlTh|opnPnlVe|opnPnlVo|opnPnlVa|opnPnlSl|opnPnlRate|opnPnlSDiv|opnPnlDDiv|opnPnlErr|opnEdgeChange|posDelta|posDDelta|posDBeta|posGamma|posDGamma|posVega|posWVega|posTVega|posWtVega|posVolga|posVanna|posTheta|posRho|posPhi|posHDelta|posHDDelta|posHGamma|posHDGamma|posNotional|posMktValue|posPremOPar|atmVol|symVol|srSlope|prcSVol|prcTOpx|prcYOpx|prcUPrc|prcYears|prcRate|prcSdiv|prcDdiv|uPrcRatio|uPrcMove|iVolMove|exDivAmt|borrowRate|curMidMark|modelType|underliersPerCn|underlierType|pointValue|pointCurrency|tickValue|multihedge|multihedgeSource|multihedgePVRatio|spanPrcIncUp|spanPrcIncDn|spanVolInc|prcSpanType|volSpanType|spanPricingModel|marginType|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'version:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(i.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=RiskCubeDetailV5' \\\n--data-urlencode 'view=version|clearingFirm|clearingAccnt|riskServerCode|viewGroup1|viewGroup2|viewGroup3|ticker|riskClass|symbolType|beta|betaSource|sector|indNum|subNum|grpNum|nbrNum|eDays|dDays|xDelta|expCode|skewCode|eDaysCode|iVolRange|skewDD|skewDN|skewAT|skewUP|skewDU|shOpnPos|fcOpnPos|cnOpnPos|cnAtmEquiv|shBot|shSld|shSldShrt|fcBot|fcSld|cnBot|cnSld|cnOpened|cnClosed|opnDir|posDir|unitOpnPos|unitCurPos|unitQtyBot|unitQtySld|dayPnl|dayDnPnl|dayTrdDelta|dayTrdDDelta|dayTrdGamma|dayTrdDGamma|dayTrdVega|dayTrdWVega|dayTrdTVega|dayTrdWtVega|dayTrdTheta|dayEdgeOpened|dayEdgeClosed|dayMnyBot|dayMnySld|opnPnlVolMark|opnPnlMidMark|opnPnlClrMark|opnMarkBrkMny|opnTheoEdge|posTheoEdge|tVolMove|tEdgeMove|tEdge|opnPnlDe|opnPnlGa|opnPnlTh|opnPnlVe|opnPnlVo|opnPnlVa|opnPnlSl|opnPnlRate|opnPnlSDiv|opnPnlDDiv|opnPnlErr|opnEdgeChange|posDelta|posDDelta|posDBeta|posGamma|posDGamma|posVega|posWVega|posTVega|posWtVega|posVolga|posVanna|posTheta|posRho|posPhi|posHDelta|posHDDelta|posHGamma|posHDGamma|posNotional|posMktValue|posPremOPar|atmVol|symVol|srSlope|prcSVol|prcTOpx|prcYOpx|prcUPrc|prcYears|prcRate|prcSdiv|prcDdiv|uPrcRatio|uPrcMove|iVolMove|exDivAmt|borrowRate|curMidMark|modelType|underliersPerCn|underlierType|pointValue|pointCurrency|tickValue|multihedge|multihedgeSource|multihedgePVRatio|spanPrcIncUp|spanPrcIncDn|spanVolInc|prcSpanType|volSpanType|spanPricingModel|marginType|timestamp' \\\n--data-urlencode 'where=accnt:eq:ExampleString' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=version:ASC'\n"})})})]}),"\n",(0,s.jsx)(n.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,s.jsxs)(l.Z,{children:[(0,s.jsx)(i.Z,{value:"Python",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'RiskCubeDetailV5\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'version|clearingFirm|clearingAccnt|riskServerCode|viewGroup1|viewGroup2|viewGroup3|ticker|riskClass|symbolType|beta|betaSource|sector|indNum|subNum|grpNum|nbrNum|eDays|dDays|xDelta|expCode|skewCode|eDaysCode|iVolRange|skewDD|skewDN|skewAT|skewUP|skewDU|shOpnPos|fcOpnPos|cnOpnPos|cnAtmEquiv|shBot|shSld|shSldShrt|fcBot|fcSld|cnBot|cnSld|cnOpened|cnClosed|opnDir|posDir|unitOpnPos|unitCurPos|unitQtyBot|unitQtySld|dayPnl|dayDnPnl|dayTrdDelta|dayTrdDDelta|dayTrdGamma|dayTrdDGamma|dayTrdVega|dayTrdWVega|dayTrdTVega|dayTrdWtVega|dayTrdTheta|dayEdgeOpened|dayEdgeClosed|dayMnyBot|dayMnySld|opnPnlVolMark|opnPnlMidMark|opnPnlClrMark|opnMarkBrkMny|opnTheoEdge|posTheoEdge|tVolMove|tEdgeMove|tEdge|opnPnlDe|opnPnlGa|opnPnlTh|opnPnlVe|opnPnlVo|opnPnlVa|opnPnlSl|opnPnlRate|opnPnlSDiv|opnPnlDDiv|opnPnlErr|opnEdgeChange|posDelta|posDDelta|posDBeta|posGamma|posDGamma|posVega|posWVega|posTVega|posWtVega|posVolga|posVanna|posTheta|posRho|posPhi|posHDelta|posHDDelta|posHGamma|posHDGamma|posNotional|posMktValue|posPremOPar|atmVol|symVol|srSlope|prcSVol|prcTOpx|prcYOpx|prcUPrc|prcYears|prcRate|prcSdiv|prcDdiv|uPrcRatio|uPrcMove|iVolMove|exDivAmt|borrowRate|curMidMark|modelType|underliersPerCn|underlierType|pointValue|pointCurrency|tickValue|multihedge|multihedgeSource|multihedgePVRatio|spanPrcIncUp|spanPrcIncDn|spanVolInc|prcSpanType|volSpanType|spanPricingModel|marginType|timestamp\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'version|symbolType|betaSource|expCode|skewCode|eDaysCode|iVolRange|underlierType|pointCurrency|multihedge|prcSpanType|volSpanType|spanPricingModel|marginType\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getaggregate\',\n    "msgType": MSG_TYPE,\n    "measure": MEASURE,\n    "group": GROUP,\n    # Optional Parameters\n    "where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(i.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=RiskCubeDetailV5' \\\n--data-urlencode 'measure=version|clearingFirm|clearingAccnt|riskServerCode|viewGroup1|viewGroup2|viewGroup3|ticker|riskClass|symbolType|beta|betaSource|sector|indNum|subNum|grpNum|nbrNum|eDays|dDays|xDelta|expCode|skewCode|eDaysCode|iVolRange|skewDD|skewDN|skewAT|skewUP|skewDU|shOpnPos|fcOpnPos|cnOpnPos|cnAtmEquiv|shBot|shSld|shSldShrt|fcBot|fcSld|cnBot|cnSld|cnOpened|cnClosed|opnDir|posDir|unitOpnPos|unitCurPos|unitQtyBot|unitQtySld|dayPnl|dayDnPnl|dayTrdDelta|dayTrdDDelta|dayTrdGamma|dayTrdDGamma|dayTrdVega|dayTrdWVega|dayTrdTVega|dayTrdWtVega|dayTrdTheta|dayEdgeOpened|dayEdgeClosed|dayMnyBot|dayMnySld|opnPnlVolMark|opnPnlMidMark|opnPnlClrMark|opnMarkBrkMny|opnTheoEdge|posTheoEdge|tVolMove|tEdgeMove|tEdge|opnPnlDe|opnPnlGa|opnPnlTh|opnPnlVe|opnPnlVo|opnPnlVa|opnPnlSl|opnPnlRate|opnPnlSDiv|opnPnlDDiv|opnPnlErr|opnEdgeChange|posDelta|posDDelta|posDBeta|posGamma|posDGamma|posVega|posWVega|posTVega|posWtVega|posVolga|posVanna|posTheta|posRho|posPhi|posHDelta|posHDDelta|posHGamma|posHDGamma|posNotional|posMktValue|posPremOPar|atmVol|symVol|srSlope|prcSVol|prcTOpx|prcYOpx|prcUPrc|prcYears|prcRate|prcSdiv|prcDdiv|uPrcRatio|uPrcMove|iVolMove|exDivAmt|borrowRate|curMidMark|modelType|underliersPerCn|underlierType|pointValue|pointCurrency|tickValue|multihedge|multihedgeSource|multihedgePVRatio|spanPrcIncUp|spanPrcIncDn|spanVolInc|prcSpanType|volSpanType|spanPricingModel|marginType|timestamp' \\\n--data-urlencode 'group=version|symbolType|betaSource|expCode|skewCode|eDaysCode|iVolRange|underlierType|pointCurrency|multihedge|prcSpanType|volSpanType|spanPricingModel|marginType' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,s.jsx)(n.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,s.jsxs)(l.Z,{children:[(0,s.jsx)(i.Z,{value:"Python",label:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'RiskCubeDetailV5\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(i.Z,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=RiskCubeDetailV5' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]})]})}function p(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}},9641:function(e,n,d){d.d(n,{Z:()=>r});var t=d("52676");d("75271");var s=d("54461");function r(e){let{children:n,hidden:d,className:r}=e;return(0,t.jsx)("div",{role:"tabpanel",className:(0,s.Z)("tabItem_SSzl",r),hidden:d,children:n})}},71386:function(e,n,d){d.d(n,{Z:()=>y});var t=d("52676"),s=d("75271"),r=d("54461"),l=d("52289"),i=d("3225"),a=d("42834"),c=d("40578"),o=d("35834"),h=d("79616");function x(e){return s.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||s.isValidElement(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p(e){let{value:n,tabValues:d}=e;return d.some(e=>e.value===n)}var j=d("44537");function u(e){let{className:n,block:d,selectedValue:s,selectValue:i,tabValues:a}=e,c=[],{blockElementScrollPositionUntilNextRender:o}=(0,l.o5)(),h=e=>{let n=e.currentTarget,d=a[c.indexOf(n)].value;d!==s&&(o(n),i(d))},x=e=>{let n=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{let d=c.indexOf(e.currentTarget)+1;n=c[d]??c[0];break}case"ArrowLeft":{let d=c.indexOf(e.currentTarget)-1;n=c[d]??c[c.length-1]}}n?.focus()};return(0,t.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":d},n),children:a.map(e=>{let{value:n,label:d,attributes:l}=e;return(0,t.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>c.push(e),onKeyDown:x,onClick:h,...l,className:(0,r.Z)("tabs__item","tabItem_aitt",l?.className,{"tabs__item--active":s===n}),children:d??n},n)})})}function m(e){let{lazy:n,children:d,selectedValue:l}=e,i=(Array.isArray(d)?d:[d]).filter(Boolean);if(n){let e=i.find(e=>e.props.value===l);return e?(0,s.cloneElement)(e,{className:(0,r.Z)("margin-top--md",e.props.className)}):null}return(0,t.jsx)("div",{className:"margin-top--md",children:i.map((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==l}))})}function g(e){let n=function(e){let{defaultValue:n,queryString:d=!1,groupId:t}=e,r=function(e){let{values:n,children:d}=e;return(0,s.useMemo)(()=>{let e=n??x(d).map(e=>{let{props:{value:n,label:d,attributes:t,default:s}}=e;return{value:n,label:d,attributes:t,default:s}});return!function(e){let n=(0,o.lx)(e,(e,n)=>e.value===n.value);if(n.length>0)throw Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,d])}(e),[l,j]=(0,s.useState)(()=>(function(e){let{defaultValue:n,tabValues:d}=e;if(0===d.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:d}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${d.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}let t=d.find(e=>e.default)??d[0];if(!t)throw Error("Unexpected error: 0 tabValues");return t.value})({defaultValue:n,tabValues:r})),[u,m]=function(e){let{queryString:n=!1,groupId:d}=e,t=(0,i.k6)(),r=function(e){let{queryString:n=!1,groupId:d}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!d)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return d??null}({queryString:n,groupId:d});return[(0,c._X)(r),(0,s.useCallback)(e=>{if(!r)return;let n=new URLSearchParams(t.location.search);n.set(r,e),t.replace({...t.location,search:n.toString()})},[r,t])]}({queryString:d,groupId:t}),[g,y]=function(e){let{groupId:n}=e,d=n?`docusaurus.tab.${n}`:null,[t,r]=(0,h.Nk)(d);return[t,(0,s.useCallback)(e=>{d&&r.set(e)},[d,r])]}({groupId:t}),P=(()=>{let e=u??g;return p({value:e,tabValues:r})?e:null})();return(0,a.Z)(()=>{P&&j(P)},[P]),{selectedValue:l,selectValue:(0,s.useCallback)(e=>{if(!p({value:e,tabValues:r}))throw Error(`Can't select invalid tab value=${e}`);j(e),m(e),y(e)},[m,y,r]),tabValues:r}}(e);return(0,t.jsxs)("div",{className:(0,r.Z)("tabs-container","tabList_ArS0"),children:[(0,t.jsx)(u,{...n,...e}),(0,t.jsx)(m,{...n,...e})]})}function y(e){let n=(0,j.Z)();return(0,t.jsx)(g,{...e,children:x(e.children)},String(n))}},91503:function(e,n,d){d.d(n,{Z:function(){return i},a:function(){return l}});var t=d(75271);let s={},r=t.createContext(s);function l(e){let n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);