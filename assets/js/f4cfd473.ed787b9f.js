"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([["41443"],{22475:function(e,r,n){n.r(r),n.d(r,{default:()=>m,frontMatter:()=>d,metadata:()=>s,assets:()=>o,toc:()=>u,contentTitle:()=>c});var s=JSON.parse('{"id":"MessageSchemas/Schema/Topics/probabilities/OptionQuoteProbability","title":"OptionQuoteProbability","description":"METADATA","source":"@site/versioned_docs/version-8.5.3.3/MessageSchemas/Schema/Topics/4255-probabilities/OptionQuoteProbability.md","sourceDirName":"MessageSchemas/Schema/Topics/4255-probabilities","slug":"/MessageSchemas/Schema/Topics/probabilities/OptionQuoteProbability","permalink":"/docs/8.5.3.3/MessageSchemas/Schema/Topics/probabilities/OptionQuoteProbability","draft":false,"unlisted":false,"tags":[],"version":"8.5.3.3","frontMatter":{"title":"OptionQuoteProbability"},"sidebar":"messageSchemasSidebar","previous":{"title":"OptionPrintProbability","permalink":"/docs/8.5.3.3/MessageSchemas/Schema/Topics/probabilities/OptionPrintProbability"},"next":{"title":"StockPrintProbability","permalink":"/docs/8.5.3.3/MessageSchemas/Schema/Topics/probabilities/StockPrintProbability"}}'),t=n("52676"),i=n("91503"),a=n("71386"),l=n("9641");let d={title:"OptionQuoteProbability"},c="Schema: OptionQuoteProbability (ID: 4270)",o={},u=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3}];function h(e){let r={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsxs)(r.h1,{id:"schema-optionquoteprobability-id-4270",children:["Schema: OptionQuoteProbability ",(0,t.jsx)("span",{className:"small-text",children:"(ID: 4270)"})]})}),"\n",(0,t.jsx)(r.h3,{id:"metadata",children:"METADATA"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Attribute"}),(0,t.jsx)(r.th,{children:"Value"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Topic"}),(0,t.jsx)(r.td,{children:"4255-probabilities"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"MLink Token"}),(0,t.jsx)(r.td,{children:"OptProbModel"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"SRSE Product"}),(0,t.jsx)(r.td,{children:"SRLive, SRAnalytics"})]})]})]}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Note:"})," The symbol ",(0,t.jsx)(r.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"body",children:"BODY"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"#"}),(0,t.jsx)(r.th,{children:"Field"}),(0,t.jsx)(r.th,{children:"Type"}),(0,t.jsx)(r.th,{children:"Comment"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"10="}),(0,t.jsx)(r.td,{children:"okey"}),(0,t.jsx)(r.td,{children:"OptionKey"}),(0,t.jsx)(r.td,{})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"11="}),(0,t.jsx)(r.td,{children:"stateModel"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/StateModel",children:"enum : StateModel"})}),(0,t.jsx)(r.td,{})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"100"}),(0,t.jsx)(r.td,{children:"uMid"}),(0,t.jsx)(r.td,{children:"double"}),(0,t.jsx)(r.td,{children:"reference underlier midPrice (0.5 prob price)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"103"}),(0,t.jsx)(r.td,{children:"uPrc"}),(0,t.jsx)(r.td,{children:"double"}),(0,t.jsx)(r.td,{children:"reference underlier price (mid-quote)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"106"}),(0,t.jsx)(r.td,{children:"bidPrice"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"nbbo bid price"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"109"}),(0,t.jsx)(r.td,{children:"askPrice"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"nbbo ask price"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"112"}),(0,t.jsx)(r.td,{children:"bidSize"}),(0,t.jsx)(r.td,{children:"int"}),(0,t.jsx)(r.td,{children:"cumulative size @ bid price"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"115"}),(0,t.jsx)(r.td,{children:"askSize"}),(0,t.jsx)(r.td,{children:"int"}),(0,t.jsx)(r.td,{children:"cumulative size @ ask price"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"118"}),(0,t.jsx)(r.td,{children:"bidTakeProb"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"bid take probability of current nbbo market (zero exchange fee) [average size print]"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"121"}),(0,t.jsx)(r.td,{children:"askTakeProb"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"ask take probability of current nbbo market (zero exchange fee) [average size print]"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"124"}),(0,t.jsx)(r.td,{children:"bidTakeRv"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/PredictResult",children:"enum : PredictResult"})}),(0,t.jsx)(r.td,{children:"model result code"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"127"}),(0,t.jsx)(r.td,{children:"askTakeRv"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/PredictResult",children:"enum : PredictResult"})}),(0,t.jsx)(r.td,{children:"model result code"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"130"}),(0,t.jsx)(r.td,{children:"bidImprPrice"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"trial improvement price (usually 1 tick or 1/2 spread inside bidPrice)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"133"}),(0,t.jsx)(r.td,{children:"askImprPrice"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"trial improvement price (usually 1 tick or 1/2 spread inside askPrice)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"136"}),(0,t.jsx)(r.td,{children:"bidTkImProb"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"bid take imprv probability of current nbbo market (zero exchange fee) [prob to sell (take) @ bid + imprIncrement]"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"139"}),(0,t.jsx)(r.td,{children:"askTkImProb"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"ask take imprv probability of current nbbo market (zero exchange fee) [prob to buy (take) @ ask - imprIncrement]"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"142"}),(0,t.jsx)(r.td,{children:"bidTkImRv"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/PredictResult",children:"enum : PredictResult"})}),(0,t.jsx)(r.td,{children:"model result code"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"145"}),(0,t.jsx)(r.td,{children:"askTkImRv"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/PredictResult",children:"enum : PredictResult"})}),(0,t.jsx)(r.td,{children:"model result code"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"148"}),(0,t.jsx)(r.td,{children:"surfPrice"}),(0,t.jsx)(r.td,{children:"double"}),(0,t.jsx)(r.td,{children:"surface price"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"151"}),(0,t.jsx)(r.td,{children:"surfVol"}),(0,t.jsx)(r.td,{children:"double"}),(0,t.jsx)(r.td,{children:"surface volatility"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"154"}),(0,t.jsx)(r.td,{children:"sdiv"}),(0,t.jsx)(r.td,{children:"double"}),(0,t.jsx)(r.td,{children:"expiry sdiv"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"157"}),(0,t.jsx)(r.td,{children:"surfBuyProb"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"surface buy take probability (zero exchange fee) [average size print]"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"160"}),(0,t.jsx)(r.td,{children:"surfSellProb"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"surface sell take probability (zero exchange fee) [average size print]"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"163"}),(0,t.jsx)(r.td,{children:"bSurfRv"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/PredictResult",children:"enum : PredictResult"})}),(0,t.jsx)(r.td,{children:"model result code"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"166"}),(0,t.jsx)(r.td,{children:"sSurfRv"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/PredictResult",children:"enum : PredictResult"})}),(0,t.jsx)(r.td,{children:"model result code"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"169"}),(0,t.jsx)(r.td,{children:"vega"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"option vega"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"172"}),(0,t.jsx)(r.td,{children:"delta"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"option delta"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"175"}),(0,t.jsx)(r.td,{children:"midPrice"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"price corresponding to 0.50 probability"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"178"}),(0,t.jsx)(r.td,{children:"avgBidLink10m"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"average bid take prob link value (~10 min)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"181"}),(0,t.jsx)(r.td,{children:"maeBidLink10m"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"bid link value mean abs err (~10 min)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"184"}),(0,t.jsx)(r.td,{children:"avgAskLink10m"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"average ask take prob link value (~10 min)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"187"}),(0,t.jsx)(r.td,{children:"maeAskLink10m"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"ask link value mean abs err (~10 min)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"190"}),(0,t.jsx)(r.td,{children:"avgMktWidth10m"}),(0,t.jsx)(r.td,{children:"float"}),(0,t.jsx)(r.td,{children:"askPrice - bidPrice (~10 min)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"193"}),(0,t.jsx)(r.td,{children:"counter"}),(0,t.jsx)(r.td,{children:"int"}),(0,t.jsx)(r.td,{children:"record update counter (zero @ start of period;per okey)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"196"}),(0,t.jsx)(r.td,{children:"qpSource"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../../../Enums/QPSource",children:"enum : QPSource"})}),(0,t.jsx)(r.td,{})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"199"}),(0,t.jsx)(r.td,{children:"srcTimestamp"}),(0,t.jsx)(r.td,{children:"long"}),(0,t.jsx)(r.td,{children:"feed timestamp from the packet"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"202"}),(0,t.jsx)(r.td,{children:"netTimestamp"}),(0,t.jsx)(r.td,{children:"long"}),(0,t.jsx)(r.td,{children:"inbound packet PTP timestamp from SR gateway switch (from OptionNbboQuote)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"205"}),(0,t.jsx)(r.td,{children:"smsTimestamp"}),(0,t.jsx)(r.td,{children:"long"}),(0,t.jsx)(r.td,{children:"state model server timestamp (just before publish)"})]})]})]}),"\n",(0,t.jsx)(r.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,t.jsxs)(a.Z,{children:[(0,t.jsx)(l.Z,{value:"Python",label:"Python",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'OptionQuoteProbability'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n    # Required Parameters\n    \"apiKey\": API_KEY,\n    \"cmd\": 'getschema',\n    \"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,t.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=OptionQuoteProbability'\n\n"})})})]}),"\n",(0,t.jsx)(r.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,t.jsxs)(a.Z,{children:[(0,t.jsx)(l.Z,{value:"Python",label:"Python",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'OptionQuoteProbability\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'uMid|uPrc|bidPrice|askPrice|bidSize|askSize|bidTakeProb|askTakeProb|bidTakeRv|askTakeRv|bidImprPrice|askImprPrice|bidTkImProb|askTkImProb|bidTkImRv|askTkImRv|surfPrice|surfVol|sdiv|surfBuyProb|surfSellProb|bSurfRv|sSurfRv|vega|delta|midPrice|avgBidLink10m|maeBidLink10m|avgAskLink10m|maeAskLink10m|avgMktWidth10m|counter|qpSource|srcTimestamp|netTimestamp|smsTimestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,t.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=OptionQuoteProbability' \\\n--data-urlencode 'view=uMid|uPrc|bidPrice|askPrice|bidSize|askSize|bidTakeProb|askTakeProb|bidTakeRv|askTakeRv|bidImprPrice|askImprPrice|bidTkImProb|askTkImProb|bidTkImRv|askTkImRv|surfPrice|surfVol|sdiv|surfBuyProb|surfSellProb|bSurfRv|sSurfRv|vega|delta|midPrice|avgBidLink10m|maeBidLink10m|avgAskLink10m|maeAskLink10m|avgMktWidth10m|counter|qpSource|srcTimestamp|netTimestamp|smsTimestamp' \\\n--data-urlencode 'where='\n"})})})]}),"\n",(0,t.jsx)(r.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,t.jsxs)(a.Z,{children:[(0,t.jsx)(l.Z,{value:"Python",label:"Python",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'OptionQuoteProbability\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'uMid|uPrc|bidPrice|askPrice|bidSize|askSize|bidTakeProb|askTakeProb|bidTakeRv|askTakeRv|bidImprPrice|askImprPrice|bidTkImProb|askTkImProb|bidTkImRv|askTkImRv|surfPrice|surfVol|sdiv|surfBuyProb|surfSellProb|bSurfRv|sSurfRv|vega|delta|midPrice|avgBidLink10m|maeBidLink10m|avgAskLink10m|maeAskLink10m|avgMktWidth10m|counter|qpSource|srcTimestamp|netTimestamp|smsTimestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'uMid:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,t.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=OptionQuoteProbability' \\\n--data-urlencode 'view=uMid|uPrc|bidPrice|askPrice|bidSize|askSize|bidTakeProb|askTakeProb|bidTakeRv|askTakeRv|bidImprPrice|askImprPrice|bidTkImProb|askTkImProb|bidTkImRv|askTkImRv|surfPrice|surfVol|sdiv|surfBuyProb|surfSellProb|bSurfRv|sSurfRv|vega|delta|midPrice|avgBidLink10m|maeBidLink10m|avgAskLink10m|maeAskLink10m|avgMktWidth10m|counter|qpSource|srcTimestamp|netTimestamp|smsTimestamp' \\\n--data-urlencode 'where=' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=uMid:ASC'\n"})})})]}),"\n",(0,t.jsx)(r.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,t.jsxs)(a.Z,{children:[(0,t.jsx)(l.Z,{value:"Python",label:"Python",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'OptionQuoteProbability\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'uMid|uPrc|bidPrice|askPrice|bidSize|askSize|bidTakeProb|askTakeProb|bidTakeRv|askTakeRv|bidImprPrice|askImprPrice|bidTkImProb|askTkImProb|bidTkImRv|askTkImRv|surfPrice|surfVol|sdiv|surfBuyProb|surfSellProb|bSurfRv|sSurfRv|vega|delta|midPrice|avgBidLink10m|maeBidLink10m|avgAskLink10m|maeAskLink10m|avgMktWidth10m|counter|qpSource|srcTimestamp|netTimestamp|smsTimestamp\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'bidTakeRv|askTakeRv|bidTkImRv|askTkImRv|bSurfRv|sSurfRv|qpSource\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getaggregate\',\n    "msgType": MSG_TYPE,\n    "measure": MEASURE,\n    "group": GROUP,\n    # Optional Parameters\n    "where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,t.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=OptionQuoteProbability' \\\n--data-urlencode 'measure=uMid|uPrc|bidPrice|askPrice|bidSize|askSize|bidTakeProb|askTakeProb|bidTakeRv|askTakeRv|bidImprPrice|askImprPrice|bidTkImProb|askTkImProb|bidTkImRv|askTkImRv|surfPrice|surfVol|sdiv|surfBuyProb|surfSellProb|bSurfRv|sSurfRv|vega|delta|midPrice|avgBidLink10m|maeBidLink10m|avgAskLink10m|maeAskLink10m|avgMktWidth10m|counter|qpSource|srcTimestamp|netTimestamp|smsTimestamp' \\\n--data-urlencode 'group=bidTakeRv|askTakeRv|bidTkImRv|askTkImRv|bSurfRv|sSurfRv|qpSource' \\\n--data-urlencode 'where='\n"})})})]}),"\n",(0,t.jsx)(r.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,t.jsxs)(a.Z,{children:[(0,t.jsx)(l.Z,{value:"Python",label:"Python",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'OptionQuoteProbability\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,t.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=OptionQuoteProbability' \\\n--data-urlencode 'where='\n"})})})]})]})}function m(e={}){let{wrapper:r}={...(0,i.a)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},9641:function(e,r,n){n.d(r,{Z:()=>i});var s=n("52676");n("75271");var t=n("54461");function i(e){let{children:r,hidden:n,className:i}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,t.Z)("tabItem_SSzl",i),hidden:n,children:r})}},71386:function(e,r,n){n.d(r,{Z:()=>k});var s=n("52676"),t=n("75271"),i=n("54461"),a=n("52289"),l=n("3225"),d=n("42834"),c=n("40578"),o=n("35834"),u=n("79616");function h(e){return t.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||t.isValidElement(e)&&function(e){let{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function m(e){let{value:r,tabValues:n}=e;return n.some(e=>e.value===r)}var p=n("44537");function b(e){let{className:r,block:n,selectedValue:t,selectValue:l,tabValues:d}=e,c=[],{blockElementScrollPositionUntilNextRender:o}=(0,a.o5)(),u=e=>{let r=e.currentTarget,n=d[c.indexOf(r)].value;n!==t&&(o(r),l(n))},h=e=>{let r=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{let n=c.indexOf(e.currentTarget)+1;r=c[n]??c[0];break}case"ArrowLeft":{let n=c.indexOf(e.currentTarget)-1;r=c[n]??c[c.length-1]}}r?.focus()};return(0,s.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},r),children:d.map(e=>{let{value:r,label:n,attributes:a}=e;return(0,s.jsx)("li",{role:"tab",tabIndex:t===r?0:-1,"aria-selected":t===r,ref:e=>c.push(e),onKeyDown:h,onClick:u,...a,className:(0,i.Z)("tabs__item","tabItem_aitt",a?.className,{"tabs__item--active":t===r}),children:n??r},r)})})}function x(e){let{lazy:r,children:n,selectedValue:a}=e,l=(Array.isArray(n)?n:[n]).filter(Boolean);if(r){let e=l.find(e=>e.props.value===a);return e?(0,t.cloneElement)(e,{className:(0,i.Z)("margin-top--md",e.props.className)}):null}return(0,s.jsx)("div",{className:"margin-top--md",children:l.map((e,r)=>(0,t.cloneElement)(e,{key:r,hidden:e.props.value!==a}))})}function j(e){let r=function(e){let{defaultValue:r,queryString:n=!1,groupId:s}=e,i=function(e){let{values:r,children:n}=e;return(0,t.useMemo)(()=>{let e=r??h(n).map(e=>{let{props:{value:r,label:n,attributes:s,default:t}}=e;return{value:r,label:n,attributes:s,default:t}});return!function(e){let r=(0,o.lx)(e,(e,r)=>e.value===r.value);if(r.length>0)throw Error(`Docusaurus error: Duplicate values "${r.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[r,n])}(e),[a,p]=(0,t.useState)(()=>(function(e){let{defaultValue:r,tabValues:n}=e;if(0===n.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!m({value:r,tabValues:n}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${r}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return r}let s=n.find(e=>e.default)??n[0];if(!s)throw Error("Unexpected error: 0 tabValues");return s.value})({defaultValue:r,tabValues:i})),[b,x]=function(e){let{queryString:r=!1,groupId:n}=e,s=(0,l.k6)(),i=function(e){let{queryString:r=!1,groupId:n}=e;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!n)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:r,groupId:n});return[(0,c._X)(i),(0,t.useCallback)(e=>{if(!i)return;let r=new URLSearchParams(s.location.search);r.set(i,e),s.replace({...s.location,search:r.toString()})},[i,s])]}({queryString:n,groupId:s}),[j,k]=function(e){let{groupId:r}=e,n=r?`docusaurus.tab.${r}`:null,[s,i]=(0,u.Nk)(n);return[s,(0,t.useCallback)(e=>{n&&i.set(e)},[n,i])]}({groupId:s}),v=(()=>{let e=b??j;return m({value:e,tabValues:i})?e:null})();return(0,d.Z)(()=>{v&&p(v)},[v]),{selectedValue:a,selectValue:(0,t.useCallback)(e=>{if(!m({value:e,tabValues:i}))throw Error(`Can't select invalid tab value=${e}`);p(e),x(e),k(e)},[x,k,i]),tabValues:i}}(e);return(0,s.jsxs)("div",{className:(0,i.Z)("tabs-container","tabList_ArS0"),children:[(0,s.jsx)(b,{...r,...e}),(0,s.jsx)(x,{...r,...e})]})}function k(e){let r=(0,p.Z)();return(0,s.jsx)(j,{...e,children:h(e.children)},String(r))}},91503:function(e,r,n){n.d(r,{Z:function(){return l},a:function(){return a}});var s=n(75271);let t={},i=s.createContext(t);function a(e){let r=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(i.Provider,{value:r},e.children)}}}]);