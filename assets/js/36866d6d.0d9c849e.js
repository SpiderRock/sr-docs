"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([["74886"],{14999:function(e,t,r){r.r(t),r.d(t,{default:()=>j,frontMatter:()=>c,metadata:()=>s,assets:()=>o,toc:()=>h,contentTitle:()=>a});var s=JSON.parse('{"id":"MessageSchemas/Schema/Topics/parent-orders/SpdrParentBrkrState","title":"SpdrParentBrkrState","description":"SpdrParentBrkrState records are created/published by SpiderRock Execution Engines. Each record describes the current state of one (or more) parent orders. If a parent order is canceled/replaced then entire chain is represented by a single broker state record.","source":"@site/docs/MessageSchemas/Schema/Topics/3985-parent-orders/SpdrParentBrkrState.md","sourceDirName":"MessageSchemas/Schema/Topics/3985-parent-orders","slug":"/MessageSchemas/Schema/Topics/parent-orders/SpdrParentBrkrState","permalink":"/docs/next/MessageSchemas/Schema/Topics/parent-orders/SpdrParentBrkrState","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"SpdrParentBrkrState"},"sidebar":"messageSchemasSidebar","previous":{"title":"SpdrParentBrkrEvent","permalink":"/docs/next/MessageSchemas/Schema/Topics/parent-orders/SpdrParentBrkrEvent"},"next":{"title":"SpdrParentBrokerSummary","permalink":"/docs/next/MessageSchemas/Schema/Topics/parent-orders/SpdrParentBrokerSummary"}}'),d=r("52676"),n=r("91503"),i=r("71386"),l=r("9641");let c={title:"SpdrParentBrkrState"},a="Schema: SpdrParentBrkrState (ID: 4070)",o={},h=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3}];function x(e){let t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.a)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(t.header,{children:(0,d.jsxs)(t.h1,{id:"schema-spdrparentbrkrstate-id-4070",children:["Schema: SpdrParentBrkrState ",(0,d.jsx)("span",{className:"small-text",children:"(ID: 4070)"})]})}),"\n",(0,d.jsx)(t.p,{children:"SpdrParentBrkrState records are created/published by SpiderRock Execution Engines. Each record describes the current state of one (or more) parent orders. If a parent order is canceled/replaced then entire chain is represented by a single broker state record."}),"\n",(0,d.jsx)(t.h3,{id:"metadata",children:"METADATA"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Attribute"}),(0,d.jsx)(t.th,{children:"Value"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Topic"}),(0,d.jsx)(t.td,{children:"3985-parent-orders"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"MLink Token"}),(0,d.jsx)(t.td,{children:"ClientTrading"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"SRSE Product"}),(0,d.jsx)(t.td,{children:"SRTrade"})]})]})]}),"\n",(0,d.jsx)("br",{}),"\n",(0,d.jsxs)(t.blockquote,{children:["\n",(0,d.jsxs)(t.p,{children:[(0,d.jsx)(t.strong,{children:"Note:"})," The symbol ",(0,d.jsx)(t.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,d.jsx)(t.h3,{id:"body",children:"BODY"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"#"}),(0,d.jsx)(t.th,{children:"Field"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Default Value"}),(0,d.jsx)(t.th,{children:"Comment"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"10="}),(0,d.jsx)(t.td,{children:"accnt"}),(0,d.jsx)(t.td,{children:"string(16)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"11="}),(0,d.jsx)(t.td,{children:"secKey"}),(0,d.jsx)(t.td,{children:"OptionKey"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"12="}),(0,d.jsx)(t.td,{children:"secType"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrKeyType",children:"enum : SpdrKeyType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"13="}),(0,d.jsx)(t.td,{children:"spdrSource"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrSource",children:"enum : SpdrSource"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"14="}),(0,d.jsx)(t.td,{children:"groupingCode"}),(0,d.jsx)(t.td,{children:"long"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"15="}),(0,d.jsx)(t.td,{children:"orderSide"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"16="}),(0,d.jsx)(t.td,{children:"clientFirm"}),(0,d.jsx)(t.td,{children:"string(16)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"SR client firm"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"100"}),(0,d.jsx)(t.td,{children:"userName"}),(0,d.jsx)(t.td,{children:"string(24)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"SR user name string"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"106"}),(0,d.jsx)(t.td,{children:"parentNumber"}),(0,d.jsx)(t.td,{children:"long"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"SR parent number"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"109"}),(0,d.jsx)(t.td,{children:"baseParentNumber"}),(0,d.jsx)(t.td,{children:"long"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"596"}),(0,d.jsx)(t.td,{children:"modifyNumber"}),(0,d.jsx)(t.td,{children:"long"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"most recent parent number affecting this order (AddReplace or Modify)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"604"}),(0,d.jsx)(t.td,{children:"noticeNumber"}),(0,d.jsx)(t.td,{children:"long"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"SR noticeNumber [required when parentOrderHandling = AtsResponse"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"112"}),(0,d.jsx)(t.td,{children:"riskGroupId"}),(0,d.jsx)(t.td,{children:"long"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"all orders with the same riskGroupId share a common set of risk counters;.Grp. risk limits apply to these shared counters"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"115"}),(0,d.jsx)(t.td,{children:"triggerGroupId"}),(0,d.jsx)(t.td,{children:"long"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"613"}),(0,d.jsx)(t.td,{children:"completionType"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/CompletionType",children:"enum : CompletionType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"None, DAC, POC, TAS, TACO, BTIC"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"614"}),(0,d.jsx)(t.td,{children:"completionState"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/CompletionState",children:"enum : CompletionState"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"None, Pending, Complete"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"615"}),(0,d.jsx)(t.td,{children:"avgCompletionPrice"}),(0,d.jsx)(t.td,{children:"double"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"completion trade price (final trade price) [also avg completion price]"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"616"}),(0,d.jsx)(t.td,{children:"completionSecKey"}),(0,d.jsx)(t.td,{children:"OptionKey"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"final settlement secKey (contract that DAC, TAS, TACO, etc. will convert to; might not be valid until completed)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"617"}),(0,d.jsx)(t.td,{children:"completionSecType"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrKeyType",children:"enum : SpdrKeyType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"usually Future or Option (None if not yet valid)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"118"}),(0,d.jsx)(t.td,{children:"strategy"}),(0,d.jsx)(t.td,{children:"string(36)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"parent order strategy string (can be user supplied)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"608"}),(0,d.jsx)(t.td,{children:"strategyAccnt"}),(0,d.jsx)(t.td,{children:"string(16)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"SR strategy account (option; if exists will be validated)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"606"}),(0,d.jsx)(t.td,{children:"execBrkrCode"}),(0,d.jsx)(t.td,{children:"string(16)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"execBrkrCode attached to parent order (if any)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"121"}),(0,d.jsx)(t.td,{children:"altOrderId"}),(0,d.jsx)(t.td,{children:"text1"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"alternate order ID (usually clOrdId from client)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"124"}),(0,d.jsx)(t.td,{children:"packageId"}),(0,d.jsx)(t.td,{children:"long"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"groups related order/brokers together (eg. Legger w/MLeg Parent)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"127"}),(0,d.jsx)(t.td,{children:"altAccnt"}),(0,d.jsx)(t.td,{children:"text1"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:'alternate (client assigned) "long" account string (optional)'})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"130"}),(0,d.jsx)(t.td,{children:"altUserName"}),(0,d.jsx)(t.td,{children:"string(24)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"alternate (client assigned) user name (optional)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"133"}),(0,d.jsx)(t.td,{children:"stageType"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrStageType",children:"enum : SpdrStageType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"parent is a staged order [ToolVisible]"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"136"}),(0,d.jsx)(t.td,{children:"isFlagged"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"broker state records is flagged for action (user alert only)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"139"}),(0,d.jsx)(t.td,{children:"ticker"}),(0,d.jsx)(t.td,{children:"TickerKey"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"underlier ticker"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"142"}),(0,d.jsx)(t.td,{children:"uPrc"}),(0,d.jsx)(t.td,{children:"double"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"underlier price (usually mid-market)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"145"}),(0,d.jsx)(t.td,{children:"uPrcOrder"}),(0,d.jsx)(t.td,{children:"double"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"underlier price at the time of last parent order arrival"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"148"}),(0,d.jsx)(t.td,{children:"nbboBid"}),(0,d.jsx)(t.td,{children:"double"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"current option nbbo bid (at time of record publish)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"151"}),(0,d.jsx)(t.td,{children:"nbboAsk"}),(0,d.jsx)(t.td,{children:"double"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"current option nbbo ask (at time of record publish)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"154"}),(0,d.jsx)(t.td,{children:"nbboBidSz"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"current option nbbo cum bid size (at time of record publish)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"157"}),(0,d.jsx)(t.td,{children:"nbboAskSz"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"current option nbbo cum ask size (at time of record publish)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"160"}),(0,d.jsx)(t.td,{children:"surfacePrc"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"SR surface price @ record publish"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"163"}),(0,d.jsx)(t.td,{children:"surfaceVol"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"SR surface volatility @ record publish"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"166"}),(0,d.jsx)(t.td,{children:"orderRefSDiv"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"169"}),(0,d.jsx)(t.td,{children:"orderRefSDivType"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/RefSDivType",children:"enum : RefSDivType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"172"}),(0,d.jsx)(t.td,{children:"spdrBrokerStatus"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrBrokerStatus",children:"enum : SpdrBrokerStatus"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"175"}),(0,d.jsx)(t.td,{children:"spdrOrderStatus"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrOrderStatus",children:"enum : SpdrOrderStatus"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"status of the most recent parent order handled by this broker"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"178"}),(0,d.jsx)(t.td,{children:"spdrCloseReason"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrCloseReason",children:"enum : SpdrCloseReason"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"close reason of most recent parent order"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"181"}),(0,d.jsx)(t.td,{children:"spdrRejectReason"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrRejectReason",children:"enum : SpdrRejectReason"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"reject reason (if any) of most recent parent order"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"599"}),(0,d.jsx)(t.td,{children:"spdrRejectLevel"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrRiskLevel",children:"enum : SpdrRiskLevel"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"reject level (if any) of most recent parent order"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"618"}),(0,d.jsx)(t.td,{children:"activeHoldState"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/ActiveHoldState",children:"enum : ActiveHoldState"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"619"}),(0,d.jsx)(t.td,{children:"activeHoldReason"}),(0,d.jsx)(t.td,{children:"text1"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"184"}),(0,d.jsx)(t.td,{children:"isPermanentlyClosed"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"indicates that this broker is permanently closed (cannot be cxl/replaced or re-opened) [auto-hedge orders only]"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"187"}),(0,d.jsx)(t.td,{children:"numExternRiskHold"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"num external risk management rejects received"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"190"}),(0,d.jsx)(t.td,{children:"lastExternRiskText"}),(0,d.jsx)(t.td,{children:"text1"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"last external (exch?) risk management reject"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"193"}),(0,d.jsx)(t.td,{children:"lastExternRiskReject"}),(0,d.jsx)(t.td,{children:"DateTime"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"196"}),(0,d.jsx)(t.td,{children:"spdrComment"}),(0,d.jsx)(t.td,{children:"text1"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"199"}),(0,d.jsx)(t.td,{children:"orderSize"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"order size of most recent parent order"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"202"}),(0,d.jsx)(t.td,{children:"orderActiveSize"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"total activated size (total size released for execution) (-1 = all available size)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"600"}),(0,d.jsx)(t.td,{children:"activeDuration"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"[optional] (number of seconds)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"205"}),(0,d.jsx)(t.td,{children:"updateDttm"}),(0,d.jsx)(t.td,{children:"DateTime"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"208"}),(0,d.jsx)(t.td,{children:"goodTillDttm"}),(0,d.jsx)(t.td,{children:"DateTime"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"order expiration date/time (most recent parent order in cxl/replace chain)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"211"}),(0,d.jsx)(t.td,{children:"leavesQuantity"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"current child order leaves quantity (quantity actively working in the market;all child orders)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"214"}),(0,d.jsx)(t.td,{children:"avgFillPrice"}),(0,d.jsx)(t.td,{children:"double"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"average fill price"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"217"}),(0,d.jsx)(t.td,{children:"avgFillUPrice"}),(0,d.jsx)(t.td,{children:"double"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"average fill underlier price"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"220"}),(0,d.jsx)(t.td,{children:"cumFillQuantity"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"cumulative fill quantity"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"223"}),(0,d.jsx)(t.td,{children:"avgFillVol"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"average fill volatility"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"226"}),(0,d.jsx)(t.td,{children:"cumFillVega"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"cumulative fill vega"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"229"}),(0,d.jsx)(t.td,{children:"cumFillTheta"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"cumulative fill theta"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"232"}),(0,d.jsx)(t.td,{children:"cumFillDDelta"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"cumulative fill $Delta"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"235"}),(0,d.jsx)(t.td,{children:"cumExchFee"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"cumulative fill exch fee"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"238"}),(0,d.jsx)(t.td,{children:"cumM10Pnl"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"241"}),(0,d.jsx)(t.td,{children:"cumArrivalPnl"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"244"}),(0,d.jsx)(t.td,{children:"lastFillDttm"}),(0,d.jsx)(t.td,{children:"DateTime"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"612"}),(0,d.jsx)(t.td,{children:"locateFirm"}),(0,d.jsx)(t.td,{children:"string(6)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"firm granting the locate (also locate firm used on street FIX orders)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"247"}),(0,d.jsx)(t.td,{children:"riskLimitSize"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"risk limit size (maximum size to nearest risk limit)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"250"}),(0,d.jsx)(t.td,{children:"riskLimitDesc"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrRisk",children:"enum : SpdrRisk"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"reason for size reduction"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"601"}),(0,d.jsx)(t.td,{children:"riskLimitLevel"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrRiskLevel",children:"enum : SpdrRiskLevel"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"risk limit level responsible for reduction"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"602"}),(0,d.jsx)(t.td,{children:"riskLimitDetail"}),(0,d.jsx)(t.td,{children:"text1"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"risk limit detail"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"253"}),(0,d.jsx)(t.td,{children:"limitPrice"}),(0,d.jsx)(t.td,{children:"double"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"simple limit"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"605"}),(0,d.jsx)(t.td,{children:"limitRefUPrc"}),(0,d.jsx)(t.td,{children:"double"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"256"}),(0,d.jsx)(t.td,{children:"limitErr"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/LimitError",children:"enum : LimitError"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"259"}),(0,d.jsx)(t.td,{children:"limitErrDesc"}),(0,d.jsx)(t.td,{children:"text1"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"262"}),(0,d.jsx)(t.td,{children:"bestLimitOffset"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"(possible price improvement) (gap between best price and init/limit price) (Face/Matrix orders)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"265"}),(0,d.jsx)(t.td,{children:"makeProbLimit"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"268"}),(0,d.jsx)(t.td,{children:"makeSurfOffset"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"271"}),(0,d.jsx)(t.td,{children:"makeLimitPrice"}),(0,d.jsx)(t.td,{children:"double"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"make limit"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"274"}),(0,d.jsx)(t.td,{children:"makeLimitErr"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/LimitError",children:"enum : LimitError"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"277"}),(0,d.jsx)(t.td,{children:"takeProbLimit"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"280"}),(0,d.jsx)(t.td,{children:"takeSurfOffset"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"283"}),(0,d.jsx)(t.td,{children:"takeLimitPrice"}),(0,d.jsx)(t.td,{children:"double"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"take limit"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"286"}),(0,d.jsx)(t.td,{children:"takeLimitErr"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/LimitError",children:"enum : LimitError"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"289"}),(0,d.jsx)(t.td,{children:"autoHedge"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/AutoHedge",children:"enum : AutoHedge"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"292"}),(0,d.jsx)(t.td,{children:"hedgeInstrument"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/HedgeInst",children:"enum : HedgeInst"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"auto-hedge instrument (from parent order)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"295"}),(0,d.jsx)(t.td,{children:"hedgeSecKey"}),(0,d.jsx)(t.td,{children:"ExpiryKey"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"auto-hedge sec key (if any)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"298"}),(0,d.jsx)(t.td,{children:"hedgeSecType"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrKeyType",children:"enum : SpdrKeyType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"auto-hedge sec type (Stock or Future)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"301"}),(0,d.jsx)(t.td,{children:"hedgeBetaRatio"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"auto-hedge ratio [from parent order (if supplied) or computed by SR]"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"304"}),(0,d.jsx)(t.td,{children:"hedgeScope"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/HedgeScope",children:"enum : HedgeScope"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"hedge group scope [RiskGroup or Accnt]"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"603"}),(0,d.jsx)(t.td,{children:"hedgeSession"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/MarketSession",children:"enum : MarketSession"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"market session for the autohedge order"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"607"}),(0,d.jsx)(t.td,{children:"externHedgeExDest"}),(0,d.jsx)(t.td,{children:"string(16)"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"external broker exDest (only used if orderHandling=Extern)			# Should match FixRoutingTable.destination type (eg. #Nighthawk)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"313"}),(0,d.jsx)(t.td,{children:"externHedgeParams"}),(0,d.jsx)(t.td,{children:"text1"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"external algo names/parameters (usually just an algo name)			# usually copied from the FixRoutingTable.externParams"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"609"}),(0,d.jsx)(t.td,{children:"hedgeFillUMarkLmtPrc"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"set a price limit on the autohedge order based on the most recent option fillUMark"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"316"}),(0,d.jsx)(t.td,{children:"userData1"}),(0,d.jsx)(t.td,{children:"text1"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"client supplied data field; passes through to parent and child executions and reports as well as FIX drops"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"319"}),(0,d.jsx)(t.td,{children:"userData2"}),(0,d.jsx)(t.td,{children:"text1"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"client supplied data field; passes through to parent and child executions and reports as well as FIX drops"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"322"}),(0,d.jsx)(t.td,{children:"maxProgress"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/MaxProgress",children:"enum : MaxProgress"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"maximum point of progress for most recent parent order"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"325"}),(0,d.jsx)(t.td,{children:"maxProgressDetail"}),(0,d.jsx)(t.td,{children:"text1"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"additional detail on point of maximum progress"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"328"}),(0,d.jsx)(t.td,{children:"maxProgressTime"}),(0,d.jsx)(t.td,{children:"DateTime"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"time of last max progress advance"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"331"}),(0,d.jsx)(t.td,{children:"brokerState"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/BrokerState",children:"enum : BrokerState"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"broker monitor state"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"334"}),(0,d.jsx)(t.td,{children:"brokerCounter"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"number of times order checked by broker monitor (note: most checks result in no action)]"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"337"}),(0,d.jsx)(t.td,{children:"makeState"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/AlgoState",children:"enum : AlgoState"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"[enum] current state of non-marketable order handler (maker)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"340"}),(0,d.jsx)(t.td,{children:"makeCounter"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"number of times order checked by post handler (note: most checks result in no action)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"343"}),(0,d.jsx)(t.td,{children:"takeState"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/AlgoState",children:"enum : AlgoState"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"[enum] current state of marketable order handler (taker)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"346"}),(0,d.jsx)(t.td,{children:"takeCounter"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"number of times order checked by take handler (note: most checks result in no action)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"349"}),(0,d.jsx)(t.td,{children:"mktRespState"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/MktRespState",children:"enum : MktRespState"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"[enum] current state of response handler (if any)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"352"}),(0,d.jsx)(t.td,{children:"mktRespCounter"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"number of times order checked by market response handler (note: most checks result in no action)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"355"}),(0,d.jsx)(t.td,{children:"mktCrossState"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/MktCrossState",children:"enum : MktCrossState"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"[enum] current state of mkt cross handler (if any)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"358"}),(0,d.jsx)(t.td,{children:"mktCrossCounter"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"number of times order checked by market cross handler (note: most checks result in no action)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"361"}),(0,d.jsx)(t.td,{children:"progressRuleDetail"}),(0,d.jsx)(t.td,{children:"text1"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"Twap/Vwap progress detail"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"364"}),(0,d.jsx)(t.td,{children:"lastChildEvent"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/ChildEvent",children:"enum : ChildEvent"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"[enum] last event code from broker/child order handler(s)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"367"}),(0,d.jsx)(t.td,{children:"lastChildRejectDttm"}),(0,d.jsx)(t.td,{children:"DateTime"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"last child order reject dttm (if any)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"370"}),(0,d.jsx)(t.td,{children:"lastChildRejectText"}),(0,d.jsx)(t.td,{children:"text1"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"last child order reject reason/text (if any)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"373"}),(0,d.jsx)(t.td,{children:"spdrMktState"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/SpdrMarketState",children:"enum : SpdrMarketState"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"[enum] market state"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"376"}),(0,d.jsx)(t.td,{children:"cpx1"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"child price level #1"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"379"}),(0,d.jsx)(t.td,{children:"csz1"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"cumulative size represented at this price"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"610"}),(0,d.jsx)(t.td,{children:"cex1"}),(0,d.jsx)(t.td,{children:"long"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"bit mask of all exchanges where we are at this price"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"385"}),(0,d.jsx)(t.td,{children:"cnt1"}),(0,d.jsx)(t.td,{children:"byte"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"number of child orders at price level #1"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"388"}),(0,d.jsx)(t.td,{children:"cpx2"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"child price level #2"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"391"}),(0,d.jsx)(t.td,{children:"csz2"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"cumulative size represented at this price"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"611"}),(0,d.jsx)(t.td,{children:"cex2"}),(0,d.jsx)(t.td,{children:"long"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"bit mask of all exchanges where we are at this price"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"397"}),(0,d.jsx)(t.td,{children:"cnt2"}),(0,d.jsx)(t.td,{children:"byte"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"number of child orders at price level #2"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"400"}),(0,d.jsx)(t.td,{children:"cMore"}),(0,d.jsx)(t.td,{children:"byte"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"number of additional child orders at inferior prices (if any)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"406"}),(0,d.jsx)(t.td,{children:"cnVol"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"409"}),(0,d.jsx)(t.td,{children:"cnYrs"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"412"}),(0,d.jsx)(t.td,{children:"cnUPrc"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"415"}),(0,d.jsx)(t.td,{children:"cnDe"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"delta per contract"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"418"}),(0,d.jsx)(t.td,{children:"cnDd"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"$delta per contract"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"421"}),(0,d.jsx)(t.td,{children:"cnVe"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"vega per contract"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"424"}),(0,d.jsx)(t.td,{children:"cnGa"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"427"}),(0,d.jsx)(t.td,{children:"cnTh"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"430"}),(0,d.jsx)(t.td,{children:"cnPr"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"premium per contract"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"433"}),(0,d.jsx)(t.td,{children:"ddMult"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"436"}),(0,d.jsx)(t.td,{children:"priceFormat"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/PriceFormat",children:"enum : PriceFormat"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"option price format code"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"439"}),(0,d.jsx)(t.td,{children:"uPriceFormat"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/PriceFormat",children:"enum : PriceFormat"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"underlier price format code"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"442"}),(0,d.jsx)(t.td,{children:"underliersPerCn"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"option delivery underliers per contract"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"445"}),(0,d.jsx)(t.td,{children:"underlierType"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/UnderlierType",children:"enum : UnderlierType"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"type of underlier (affects $greek calculations)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"448"}),(0,d.jsx)(t.td,{children:"tickValue"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"$NLV value of a single tick change in display premium	(pointValue = tickValue / tickSize)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"451"}),(0,d.jsx)(t.td,{children:"pointValue"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"$NLV value of a single point change in display premium (pointValue = tickValue / tickSize)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"454"}),(0,d.jsx)(t.td,{children:"pointCurrency"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/Currency",children:"enum : Currency"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"511"}),(0,d.jsx)(t.td,{children:"theoVol"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"514"}),(0,d.jsx)(t.td,{children:"theoPrc"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"517"}),(0,d.jsx)(t.td,{children:"numNewOrders"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"number of child orders generated by this broker (all parent orders)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"520"}),(0,d.jsx)(t.td,{children:"numParentLimits"}),(0,d.jsx)(t.td,{children:"ushort"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"number of parent limit messages received for this broker"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"523"}),(0,d.jsx)(t.td,{children:"brokerVwapMark"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"trade weighted average price (duration of parent order)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"526"}),(0,d.jsx)(t.td,{children:"brokerVwapUMark"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"option-trade weighted average underlier price (duration of parent order)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"529"}),(0,d.jsx)(t.td,{children:"brokerQwapMark"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"average quote mid-market (duration of parent order)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"532"}),(0,d.jsx)(t.td,{children:"brokerQwapUMark"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"average underlier quote mid-market (duration of parent order)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"535"}),(0,d.jsx)(t.td,{children:"vwapPnL"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"dir * qty * (brokerVwapMark - avgFillPrice)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"538"}),(0,d.jsx)(t.td,{children:"vwapDnPnL"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"vwapPnL - uDriftVwapPnL"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"541"}),(0,d.jsx)(t.td,{children:"uDriftVwapPnL"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"(dir * (de * qty * (brokerVwapUMark - avgFillUPrice)))"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"544"}),(0,d.jsx)(t.td,{children:"qwapPnL"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"dir * qty * (brokerQwapMark - avgFillPrice)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"547"}),(0,d.jsx)(t.td,{children:"qwapDnPnL"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"qwapPnL - uDriftQwapPnL"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"550"}),(0,d.jsx)(t.td,{children:"uDriftQwapPnL"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"(dir * (de * qty * (brokerQwapUMark - avgFillUPrice)))"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"553"}),(0,d.jsx)(t.td,{children:"numImprvChld"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"number of child orders that improved an existing market"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"556"}),(0,d.jsx)(t.td,{children:"activeSeconds"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"number of seconds that the parent order was active"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"559"}),(0,d.jsx)(t.td,{children:"withSeconds"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"number of seconds with one or more working child orders that are with of nbbo"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"562"}),(0,d.jsx)(t.td,{children:"aloneSeconds"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"number of seconds with one or more working child orders that make up 100% of nbbo"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"565"}),(0,d.jsx)(t.td,{children:"workingSeconds"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"number of child order seconds (can be greater than activeSeconds if working on more than one exchange)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"568"}),(0,d.jsx)(t.td,{children:"numRiskCancels"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"number of child orders cancels for risk reasons"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"571"}),(0,d.jsx)(t.td,{children:"riskHoldSeconds"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"number of seconds with parent order active but on risk hold (zero child order risk size)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"574"}),(0,d.jsx)(t.td,{children:"riskThrtlSeconds"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"number of seconds with parent order active but in risk throttle condition (temporary hold after fast/mass risk cancel)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"577"}),(0,d.jsx)(t.td,{children:"numMakeThrottleSkips"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"number of childs orders not send to market dues to outbound lines being in a queued/throttled state"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"580"}),(0,d.jsx)(t.td,{children:"sumMakeThrottleDelay"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"cumulative seconds of queue skip delay (seconds that a child order was not in the market dues to outbound lines being in a queued/throttled state)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"583"}),(0,d.jsx)(t.td,{children:"uPrcDrift"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"underlier drift (since parent order start)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"586"}),(0,d.jsx)(t.td,{children:"sVolDrift"}),(0,d.jsx)(t.td,{children:"float"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"surface vol drift (since parent order start)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"589"}),(0,d.jsx)(t.td,{children:"updateSrc"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"../../../Enums/UpdateSource",children:"enum : UpdateSource"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"592"}),(0,d.jsx)(t.td,{children:"numUpdates"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"number of record updates (cumulative for the day)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"595"}),(0,d.jsx)(t.td,{children:"timestamp"}),(0,d.jsx)(t.td,{children:"DateTime"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"SR system timestamp"})]})]})]}),"\n",(0,d.jsx)(t.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,d.jsxs)(i.Z,{children:[(0,d.jsx)(l.Z,{value:"Python",label:"Python",children:(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'SpdrParentBrkrState'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n    # Required Parameters\n    \"apiKey\": API_KEY,\n    \"cmd\": 'getschema',\n    \"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,d.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=SpdrParentBrkrState'\n\n"})})})]}),"\n",(0,d.jsx)(t.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,d.jsxs)(i.Z,{children:[(0,d.jsx)(l.Z,{value:"Python",label:"Python",children:(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'SpdrParentBrkrState\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'userName|parentNumber|baseParentNumber|modifyNumber|noticeNumber|riskGroupId|triggerGroupId|completionType|completionState|avgCompletionPrice|completionSecKey|completionSecType|strategy|strategyAccnt|execBrkrCode|altOrderId|packageId|altAccnt|altUserName|stageType|isFlagged|ticker|uPrc|uPrcOrder|nbboBid|nbboAsk|nbboBidSz|nbboAskSz|surfacePrc|surfaceVol|orderRefSDiv|orderRefSDivType|spdrBrokerStatus|spdrOrderStatus|spdrCloseReason|spdrRejectReason|spdrRejectLevel|activeHoldState|activeHoldReason|isPermanentlyClosed|numExternRiskHold|lastExternRiskText|lastExternRiskReject|spdrComment|orderSize|orderActiveSize|activeDuration|updateDttm|goodTillDttm|leavesQuantity|avgFillPrice|avgFillUPrice|cumFillQuantity|avgFillVol|cumFillVega|cumFillTheta|cumFillDDelta|cumExchFee|cumM10Pnl|cumArrivalPnl|lastFillDttm|locateFirm|riskLimitSize|riskLimitDesc|riskLimitLevel|riskLimitDetail|limitPrice|limitRefUPrc|limitErr|limitErrDesc|bestLimitOffset|makeProbLimit|makeSurfOffset|makeLimitPrice|makeLimitErr|takeProbLimit|takeSurfOffset|takeLimitPrice|takeLimitErr|autoHedge|hedgeInstrument|hedgeSecKey|hedgeSecType|hedgeBetaRatio|hedgeScope|hedgeSession|externHedgeExDest|externHedgeParams|hedgeFillUMarkLmtPrc|userData1|userData2|maxProgress|maxProgressDetail|maxProgressTime|brokerState|brokerCounter|makeState|makeCounter|takeState|takeCounter|mktRespState|mktRespCounter|mktCrossState|mktCrossCounter|progressRuleDetail|lastChildEvent|lastChildRejectDttm|lastChildRejectText|spdrMktState|cpx1|csz1|cex1|cnt1|cpx2|csz2|cex2|cnt2|cMore|cnVol|cnYrs|cnUPrc|cnDe|cnDd|cnVe|cnGa|cnTh|cnPr|ddMult|priceFormat|uPriceFormat|underliersPerCn|underlierType|tickValue|pointValue|pointCurrency|theoVol|theoPrc|numNewOrders|numParentLimits|brokerVwapMark|brokerVwapUMark|brokerQwapMark|brokerQwapUMark|vwapPnL|vwapDnPnL|uDriftVwapPnL|qwapPnL|qwapDnPnL|uDriftQwapPnL|numImprvChld|activeSeconds|withSeconds|aloneSeconds|workingSeconds|numRiskCancels|riskHoldSeconds|riskThrtlSeconds|numMakeThrottleSkips|sumMakeThrottleDelay|uPrcDrift|sVolDrift|updateSrc|numUpdates|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,d.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=SpdrParentBrkrState' \\\n--data-urlencode 'view=userName|parentNumber|baseParentNumber|modifyNumber|noticeNumber|riskGroupId|triggerGroupId|completionType|completionState|avgCompletionPrice|completionSecKey|completionSecType|strategy|strategyAccnt|execBrkrCode|altOrderId|packageId|altAccnt|altUserName|stageType|isFlagged|ticker|uPrc|uPrcOrder|nbboBid|nbboAsk|nbboBidSz|nbboAskSz|surfacePrc|surfaceVol|orderRefSDiv|orderRefSDivType|spdrBrokerStatus|spdrOrderStatus|spdrCloseReason|spdrRejectReason|spdrRejectLevel|activeHoldState|activeHoldReason|isPermanentlyClosed|numExternRiskHold|lastExternRiskText|lastExternRiskReject|spdrComment|orderSize|orderActiveSize|activeDuration|updateDttm|goodTillDttm|leavesQuantity|avgFillPrice|avgFillUPrice|cumFillQuantity|avgFillVol|cumFillVega|cumFillTheta|cumFillDDelta|cumExchFee|cumM10Pnl|cumArrivalPnl|lastFillDttm|locateFirm|riskLimitSize|riskLimitDesc|riskLimitLevel|riskLimitDetail|limitPrice|limitRefUPrc|limitErr|limitErrDesc|bestLimitOffset|makeProbLimit|makeSurfOffset|makeLimitPrice|makeLimitErr|takeProbLimit|takeSurfOffset|takeLimitPrice|takeLimitErr|autoHedge|hedgeInstrument|hedgeSecKey|hedgeSecType|hedgeBetaRatio|hedgeScope|hedgeSession|externHedgeExDest|externHedgeParams|hedgeFillUMarkLmtPrc|userData1|userData2|maxProgress|maxProgressDetail|maxProgressTime|brokerState|brokerCounter|makeState|makeCounter|takeState|takeCounter|mktRespState|mktRespCounter|mktCrossState|mktCrossCounter|progressRuleDetail|lastChildEvent|lastChildRejectDttm|lastChildRejectText|spdrMktState|cpx1|csz1|cex1|cnt1|cpx2|csz2|cex2|cnt2|cMore|cnVol|cnYrs|cnUPrc|cnDe|cnDd|cnVe|cnGa|cnTh|cnPr|ddMult|priceFormat|uPriceFormat|underliersPerCn|underlierType|tickValue|pointValue|pointCurrency|theoVol|theoPrc|numNewOrders|numParentLimits|brokerVwapMark|brokerVwapUMark|brokerQwapMark|brokerQwapUMark|vwapPnL|vwapDnPnL|uDriftVwapPnL|qwapPnL|qwapDnPnL|uDriftQwapPnL|numImprvChld|activeSeconds|withSeconds|aloneSeconds|workingSeconds|numRiskCancels|riskHoldSeconds|riskThrtlSeconds|numMakeThrottleSkips|sumMakeThrottleDelay|uPrcDrift|sVolDrift|updateSrc|numUpdates|timestamp' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,d.jsx)(t.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,d.jsxs)(i.Z,{children:[(0,d.jsx)(l.Z,{value:"Python",label:"Python",children:(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'SpdrParentBrkrState\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'userName|parentNumber|baseParentNumber|modifyNumber|noticeNumber|riskGroupId|triggerGroupId|completionType|completionState|avgCompletionPrice|completionSecKey|completionSecType|strategy|strategyAccnt|execBrkrCode|altOrderId|packageId|altAccnt|altUserName|stageType|isFlagged|ticker|uPrc|uPrcOrder|nbboBid|nbboAsk|nbboBidSz|nbboAskSz|surfacePrc|surfaceVol|orderRefSDiv|orderRefSDivType|spdrBrokerStatus|spdrOrderStatus|spdrCloseReason|spdrRejectReason|spdrRejectLevel|activeHoldState|activeHoldReason|isPermanentlyClosed|numExternRiskHold|lastExternRiskText|lastExternRiskReject|spdrComment|orderSize|orderActiveSize|activeDuration|updateDttm|goodTillDttm|leavesQuantity|avgFillPrice|avgFillUPrice|cumFillQuantity|avgFillVol|cumFillVega|cumFillTheta|cumFillDDelta|cumExchFee|cumM10Pnl|cumArrivalPnl|lastFillDttm|locateFirm|riskLimitSize|riskLimitDesc|riskLimitLevel|riskLimitDetail|limitPrice|limitRefUPrc|limitErr|limitErrDesc|bestLimitOffset|makeProbLimit|makeSurfOffset|makeLimitPrice|makeLimitErr|takeProbLimit|takeSurfOffset|takeLimitPrice|takeLimitErr|autoHedge|hedgeInstrument|hedgeSecKey|hedgeSecType|hedgeBetaRatio|hedgeScope|hedgeSession|externHedgeExDest|externHedgeParams|hedgeFillUMarkLmtPrc|userData1|userData2|maxProgress|maxProgressDetail|maxProgressTime|brokerState|brokerCounter|makeState|makeCounter|takeState|takeCounter|mktRespState|mktRespCounter|mktCrossState|mktCrossCounter|progressRuleDetail|lastChildEvent|lastChildRejectDttm|lastChildRejectText|spdrMktState|cpx1|csz1|cex1|cnt1|cpx2|csz2|cex2|cnt2|cMore|cnVol|cnYrs|cnUPrc|cnDe|cnDd|cnVe|cnGa|cnTh|cnPr|ddMult|priceFormat|uPriceFormat|underliersPerCn|underlierType|tickValue|pointValue|pointCurrency|theoVol|theoPrc|numNewOrders|numParentLimits|brokerVwapMark|brokerVwapUMark|brokerQwapMark|brokerQwapUMark|vwapPnL|vwapDnPnL|uDriftVwapPnL|qwapPnL|qwapDnPnL|uDriftQwapPnL|numImprvChld|activeSeconds|withSeconds|aloneSeconds|workingSeconds|numRiskCancels|riskHoldSeconds|riskThrtlSeconds|numMakeThrottleSkips|sumMakeThrottleDelay|uPrcDrift|sVolDrift|updateSrc|numUpdates|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'userName:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,d.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=SpdrParentBrkrState' \\\n--data-urlencode 'view=userName|parentNumber|baseParentNumber|modifyNumber|noticeNumber|riskGroupId|triggerGroupId|completionType|completionState|avgCompletionPrice|completionSecKey|completionSecType|strategy|strategyAccnt|execBrkrCode|altOrderId|packageId|altAccnt|altUserName|stageType|isFlagged|ticker|uPrc|uPrcOrder|nbboBid|nbboAsk|nbboBidSz|nbboAskSz|surfacePrc|surfaceVol|orderRefSDiv|orderRefSDivType|spdrBrokerStatus|spdrOrderStatus|spdrCloseReason|spdrRejectReason|spdrRejectLevel|activeHoldState|activeHoldReason|isPermanentlyClosed|numExternRiskHold|lastExternRiskText|lastExternRiskReject|spdrComment|orderSize|orderActiveSize|activeDuration|updateDttm|goodTillDttm|leavesQuantity|avgFillPrice|avgFillUPrice|cumFillQuantity|avgFillVol|cumFillVega|cumFillTheta|cumFillDDelta|cumExchFee|cumM10Pnl|cumArrivalPnl|lastFillDttm|locateFirm|riskLimitSize|riskLimitDesc|riskLimitLevel|riskLimitDetail|limitPrice|limitRefUPrc|limitErr|limitErrDesc|bestLimitOffset|makeProbLimit|makeSurfOffset|makeLimitPrice|makeLimitErr|takeProbLimit|takeSurfOffset|takeLimitPrice|takeLimitErr|autoHedge|hedgeInstrument|hedgeSecKey|hedgeSecType|hedgeBetaRatio|hedgeScope|hedgeSession|externHedgeExDest|externHedgeParams|hedgeFillUMarkLmtPrc|userData1|userData2|maxProgress|maxProgressDetail|maxProgressTime|brokerState|brokerCounter|makeState|makeCounter|takeState|takeCounter|mktRespState|mktRespCounter|mktCrossState|mktCrossCounter|progressRuleDetail|lastChildEvent|lastChildRejectDttm|lastChildRejectText|spdrMktState|cpx1|csz1|cex1|cnt1|cpx2|csz2|cex2|cnt2|cMore|cnVol|cnYrs|cnUPrc|cnDe|cnDd|cnVe|cnGa|cnTh|cnPr|ddMult|priceFormat|uPriceFormat|underliersPerCn|underlierType|tickValue|pointValue|pointCurrency|theoVol|theoPrc|numNewOrders|numParentLimits|brokerVwapMark|brokerVwapUMark|brokerQwapMark|brokerQwapUMark|vwapPnL|vwapDnPnL|uDriftVwapPnL|qwapPnL|qwapDnPnL|uDriftQwapPnL|numImprvChld|activeSeconds|withSeconds|aloneSeconds|workingSeconds|numRiskCancels|riskHoldSeconds|riskThrtlSeconds|numMakeThrottleSkips|sumMakeThrottleDelay|uPrcDrift|sVolDrift|updateSrc|numUpdates|timestamp' \\\n--data-urlencode 'where=accnt:eq:ExampleString' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=userName:ASC'\n"})})})]}),"\n",(0,d.jsx)(t.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,d.jsxs)(i.Z,{children:[(0,d.jsx)(l.Z,{value:"Python",label:"Python",children:(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'SpdrParentBrkrState\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'userName|parentNumber|baseParentNumber|modifyNumber|noticeNumber|riskGroupId|triggerGroupId|completionType|completionState|avgCompletionPrice|completionSecKey|completionSecType|strategy|strategyAccnt|execBrkrCode|altOrderId|packageId|altAccnt|altUserName|stageType|isFlagged|ticker|uPrc|uPrcOrder|nbboBid|nbboAsk|nbboBidSz|nbboAskSz|surfacePrc|surfaceVol|orderRefSDiv|orderRefSDivType|spdrBrokerStatus|spdrOrderStatus|spdrCloseReason|spdrRejectReason|spdrRejectLevel|activeHoldState|activeHoldReason|isPermanentlyClosed|numExternRiskHold|lastExternRiskText|lastExternRiskReject|spdrComment|orderSize|orderActiveSize|activeDuration|updateDttm|goodTillDttm|leavesQuantity|avgFillPrice|avgFillUPrice|cumFillQuantity|avgFillVol|cumFillVega|cumFillTheta|cumFillDDelta|cumExchFee|cumM10Pnl|cumArrivalPnl|lastFillDttm|locateFirm|riskLimitSize|riskLimitDesc|riskLimitLevel|riskLimitDetail|limitPrice|limitRefUPrc|limitErr|limitErrDesc|bestLimitOffset|makeProbLimit|makeSurfOffset|makeLimitPrice|makeLimitErr|takeProbLimit|takeSurfOffset|takeLimitPrice|takeLimitErr|autoHedge|hedgeInstrument|hedgeSecKey|hedgeSecType|hedgeBetaRatio|hedgeScope|hedgeSession|externHedgeExDest|externHedgeParams|hedgeFillUMarkLmtPrc|userData1|userData2|maxProgress|maxProgressDetail|maxProgressTime|brokerState|brokerCounter|makeState|makeCounter|takeState|takeCounter|mktRespState|mktRespCounter|mktCrossState|mktCrossCounter|progressRuleDetail|lastChildEvent|lastChildRejectDttm|lastChildRejectText|spdrMktState|cpx1|csz1|cex1|cnt1|cpx2|csz2|cex2|cnt2|cMore|cnVol|cnYrs|cnUPrc|cnDe|cnDd|cnVe|cnGa|cnTh|cnPr|ddMult|priceFormat|uPriceFormat|underliersPerCn|underlierType|tickValue|pointValue|pointCurrency|theoVol|theoPrc|numNewOrders|numParentLimits|brokerVwapMark|brokerVwapUMark|brokerQwapMark|brokerQwapUMark|vwapPnL|vwapDnPnL|uDriftVwapPnL|qwapPnL|qwapDnPnL|uDriftQwapPnL|numImprvChld|activeSeconds|withSeconds|aloneSeconds|workingSeconds|numRiskCancels|riskHoldSeconds|riskThrtlSeconds|numMakeThrottleSkips|sumMakeThrottleDelay|uPrcDrift|sVolDrift|updateSrc|numUpdates|timestamp\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'completionType|completionState|completionSecType|stageType|isFlagged|orderRefSDivType|spdrBrokerStatus|spdrOrderStatus|spdrCloseReason|spdrRejectReason|spdrRejectLevel|activeHoldState|isPermanentlyClosed|riskLimitDesc|riskLimitLevel|limitErr|makeLimitErr|takeLimitErr|autoHedge|hedgeInstrument|hedgeSecType|hedgeScope|hedgeSession|hedgeFillUMarkLmtPrc|maxProgress|brokerState|makeState|takeState|mktRespState|mktCrossState|lastChildEvent|spdrMktState|priceFormat|uPriceFormat|underlierType|pointCurrency|updateSrc\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getaggregate\',\n    "msgType": MSG_TYPE,\n    "measure": MEASURE,\n    "group": GROUP,\n    # Optional Parameters\n    "where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,d.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=SpdrParentBrkrState' \\\n--data-urlencode 'measure=userName|parentNumber|baseParentNumber|modifyNumber|noticeNumber|riskGroupId|triggerGroupId|completionType|completionState|avgCompletionPrice|completionSecKey|completionSecType|strategy|strategyAccnt|execBrkrCode|altOrderId|packageId|altAccnt|altUserName|stageType|isFlagged|ticker|uPrc|uPrcOrder|nbboBid|nbboAsk|nbboBidSz|nbboAskSz|surfacePrc|surfaceVol|orderRefSDiv|orderRefSDivType|spdrBrokerStatus|spdrOrderStatus|spdrCloseReason|spdrRejectReason|spdrRejectLevel|activeHoldState|activeHoldReason|isPermanentlyClosed|numExternRiskHold|lastExternRiskText|lastExternRiskReject|spdrComment|orderSize|orderActiveSize|activeDuration|updateDttm|goodTillDttm|leavesQuantity|avgFillPrice|avgFillUPrice|cumFillQuantity|avgFillVol|cumFillVega|cumFillTheta|cumFillDDelta|cumExchFee|cumM10Pnl|cumArrivalPnl|lastFillDttm|locateFirm|riskLimitSize|riskLimitDesc|riskLimitLevel|riskLimitDetail|limitPrice|limitRefUPrc|limitErr|limitErrDesc|bestLimitOffset|makeProbLimit|makeSurfOffset|makeLimitPrice|makeLimitErr|takeProbLimit|takeSurfOffset|takeLimitPrice|takeLimitErr|autoHedge|hedgeInstrument|hedgeSecKey|hedgeSecType|hedgeBetaRatio|hedgeScope|hedgeSession|externHedgeExDest|externHedgeParams|hedgeFillUMarkLmtPrc|userData1|userData2|maxProgress|maxProgressDetail|maxProgressTime|brokerState|brokerCounter|makeState|makeCounter|takeState|takeCounter|mktRespState|mktRespCounter|mktCrossState|mktCrossCounter|progressRuleDetail|lastChildEvent|lastChildRejectDttm|lastChildRejectText|spdrMktState|cpx1|csz1|cex1|cnt1|cpx2|csz2|cex2|cnt2|cMore|cnVol|cnYrs|cnUPrc|cnDe|cnDd|cnVe|cnGa|cnTh|cnPr|ddMult|priceFormat|uPriceFormat|underliersPerCn|underlierType|tickValue|pointValue|pointCurrency|theoVol|theoPrc|numNewOrders|numParentLimits|brokerVwapMark|brokerVwapUMark|brokerQwapMark|brokerQwapUMark|vwapPnL|vwapDnPnL|uDriftVwapPnL|qwapPnL|qwapDnPnL|uDriftQwapPnL|numImprvChld|activeSeconds|withSeconds|aloneSeconds|workingSeconds|numRiskCancels|riskHoldSeconds|riskThrtlSeconds|numMakeThrottleSkips|sumMakeThrottleDelay|uPrcDrift|sVolDrift|updateSrc|numUpdates|timestamp' \\\n--data-urlencode 'group=completionType|completionState|completionSecType|stageType|isFlagged|orderRefSDivType|spdrBrokerStatus|spdrOrderStatus|spdrCloseReason|spdrRejectReason|spdrRejectLevel|activeHoldState|isPermanentlyClosed|riskLimitDesc|riskLimitLevel|limitErr|makeLimitErr|takeLimitErr|autoHedge|hedgeInstrument|hedgeSecType|hedgeScope|hedgeSession|hedgeFillUMarkLmtPrc|maxProgress|brokerState|makeState|takeState|mktRespState|mktCrossState|lastChildEvent|spdrMktState|priceFormat|uPriceFormat|underlierType|pointCurrency|updateSrc' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]}),"\n",(0,d.jsx)(t.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,d.jsxs)(i.Z,{children:[(0,d.jsx)(l.Z,{value:"Python",label:"Python",children:(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'SpdrParentBrkrState\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'accnt:eq:ExampleString\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,d.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=SpdrParentBrkrState' \\\n--data-urlencode 'where=accnt:eq:ExampleString'\n"})})})]})]})}function j(e={}){let{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,d.jsx)(t,{...e,children:(0,d.jsx)(x,{...e})}):x(e)}},9641:function(e,t,r){r.d(t,{Z:()=>n});var s=r("52676");r("75271");var d=r("54461");function n(e){let{children:t,hidden:r,className:n}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,d.Z)("tabItem_SSzl",n),hidden:r,children:t})}},71386:function(e,t,r){r.d(t,{Z:()=>g});var s=r("52676"),d=r("75271"),n=r("54461"),i=r("52289"),l=r("3225"),c=r("42834"),a=r("40578"),o=r("35834"),h=r("79616");function x(e){return d.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||d.isValidElement(e)&&function(e){let{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function j(e){let{value:t,tabValues:r}=e;return r.some(e=>e.value===t)}var u=r("44537");function m(e){let{className:t,block:r,selectedValue:d,selectValue:l,tabValues:c}=e,a=[],{blockElementScrollPositionUntilNextRender:o}=(0,i.o5)(),h=e=>{let t=e.currentTarget,r=c[a.indexOf(t)].value;r!==d&&(o(t),l(r))},x=e=>{let t=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{let r=a.indexOf(e.currentTarget)+1;t=a[r]??a[0];break}case"ArrowLeft":{let r=a.indexOf(e.currentTarget)-1;t=a[r]??a[a.length-1]}}t?.focus()};return(0,s.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.Z)("tabs",{"tabs--block":r},t),children:c.map(e=>{let{value:t,label:r,attributes:i}=e;return(0,s.jsx)("li",{role:"tab",tabIndex:d===t?0:-1,"aria-selected":d===t,ref:e=>a.push(e),onKeyDown:x,onClick:h,...i,className:(0,n.Z)("tabs__item","tabItem_aitt",i?.className,{"tabs__item--active":d===t}),children:r??t},t)})})}function p(e){let{lazy:t,children:r,selectedValue:i}=e,l=(Array.isArray(r)?r:[r]).filter(Boolean);if(t){let e=l.find(e=>e.props.value===i);return e?(0,d.cloneElement)(e,{className:(0,n.Z)("margin-top--md",e.props.className)}):null}return(0,s.jsx)("div",{className:"margin-top--md",children:l.map((e,t)=>(0,d.cloneElement)(e,{key:t,hidden:e.props.value!==i}))})}function k(e){let t=function(e){let{defaultValue:t,queryString:r=!1,groupId:s}=e,n=function(e){let{values:t,children:r}=e;return(0,d.useMemo)(()=>{let e=t??x(r).map(e=>{let{props:{value:t,label:r,attributes:s,default:d}}=e;return{value:t,label:r,attributes:s,default:d}});return!function(e){let t=(0,o.lx)(e,(e,t)=>e.value===t.value);if(t.length>0)throw Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[t,r])}(e),[i,u]=(0,d.useState)(()=>(function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!j({value:t,tabValues:r}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}let s=r.find(e=>e.default)??r[0];if(!s)throw Error("Unexpected error: 0 tabValues");return s.value})({defaultValue:t,tabValues:n})),[m,p]=function(e){let{queryString:t=!1,groupId:r}=e,s=(0,l.k6)(),n=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,a._X)(n),(0,d.useCallback)(e=>{if(!n)return;let t=new URLSearchParams(s.location.search);t.set(n,e),s.replace({...s.location,search:t.toString()})},[n,s])]}({queryString:r,groupId:s}),[k,g]=function(e){let{groupId:t}=e,r=t?`docusaurus.tab.${t}`:null,[s,n]=(0,h.Nk)(r);return[s,(0,d.useCallback)(e=>{r&&n.set(e)},[r,n])]}({groupId:s}),f=(()=>{let e=m??k;return j({value:e,tabValues:n})?e:null})();return(0,c.Z)(()=>{f&&u(f)},[f]),{selectedValue:i,selectValue:(0,d.useCallback)(e=>{if(!j({value:e,tabValues:n}))throw Error(`Can't select invalid tab value=${e}`);u(e),p(e),g(e)},[p,g,n]),tabValues:n}}(e);return(0,s.jsxs)("div",{className:(0,n.Z)("tabs-container","tabList_ArS0"),children:[(0,s.jsx)(m,{...t,...e}),(0,s.jsx)(p,{...t,...e})]})}function g(e){let t=(0,u.Z)();return(0,s.jsx)(k,{...e,children:x(e.children)},String(t))}},91503:function(e,t,r){r.d(t,{Z:function(){return l},a:function(){return i}});var s=r(75271);let d={},n=s.createContext(d);function i(e){let t=s.useContext(n);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:i(e.components),s.createElement(n.Provider,{value:t},e.children)}}}]);