"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([["36864"],{84687:function(e,s,r){r.r(s),r.d(s,{default:()=>x,frontMatter:()=>i,metadata:()=>t,assets:()=>o,toc:()=>h,contentTitle:()=>c});var t=JSON.parse('{"id":"MessageSchemas/Schema/Topics/market-marks/OptionCloseMark","title":"OptionCloseMark","description":"OptionCloseMark records are published immediately after the market close - 5 min and again when exchanges publish official marks.OptionCloseMark records are published to the SpiderRock elastic cluster when clsMarkState=Final","source":"@site/versioned_docs/version-8.5.8.1/MessageSchemas/Schema/Topics/3120-market-marks/OptionCloseMark.md","sourceDirName":"MessageSchemas/Schema/Topics/3120-market-marks","slug":"/MessageSchemas/Schema/Topics/market-marks/OptionCloseMark","permalink":"/docs/8.5.8.1/MessageSchemas/Schema/Topics/market-marks/OptionCloseMark","draft":false,"unlisted":false,"tags":[],"version":"8.5.8.1","frontMatter":{"title":"OptionCloseMark"},"sidebar":"messageSchemasSidebar","previous":{"title":"FutureSettlementMark","permalink":"/docs/8.5.8.1/MessageSchemas/Schema/Topics/market-marks/FutureSettlementMark"},"next":{"title":"OptionOpenMark","permalink":"/docs/8.5.8.1/MessageSchemas/Schema/Topics/market-marks/OptionOpenMark"}}'),n=r("52676"),l=r("91503"),a=r("71386"),d=r("9641");let i={title:"OptionCloseMark"},c="Schema: OptionCloseMark (ID: 3140)",o={},h=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3}];function u(e){let s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,l.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsxs)(s.h1,{id:"schema-optionclosemark-id-3140",children:["Schema: OptionCloseMark ",(0,n.jsx)("span",{className:"small-text",children:"(ID: 3140)"})]})}),"\n",(0,n.jsxs)(s.p,{children:["OptionCloseMark records are published immediately after the market close - 5 min and again when exchanges publish official marks.",(0,n.jsx)("br",{}),(0,n.jsx)("br",{}),"OptionCloseMark records are published to the SpiderRock elastic cluster when clsMarkState=Final"]}),"\n",(0,n.jsx)(s.h3,{id:"metadata",children:"METADATA"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Attribute"}),(0,n.jsx)(s.th,{children:"Value"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Topic"}),(0,n.jsx)(s.td,{children:"3120-market-marks"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"MLink Token"}),(0,n.jsx)(s.td,{children:"OptMarkData"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"SRSE Product"}),(0,n.jsx)(s.td,{children:"SRLive, SRAnalytics"})]})]})]}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsxs)(s.blockquote,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Note:"})," The symbol ",(0,n.jsx)(s.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"body",children:"BODY"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"#"}),(0,n.jsx)(s.th,{children:"Field"}),(0,n.jsx)(s.th,{children:"Type"}),(0,n.jsx)(s.th,{children:"Default Value"}),(0,n.jsx)(s.th,{children:"Comment"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"10="}),(0,n.jsx)(s.td,{children:"okey"}),(0,n.jsx)(s.td,{children:"OptionKey"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"212"}),(0,n.jsx)(s.td,{children:"ticker"}),(0,n.jsx)(s.td,{children:"TickerKey"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"SR Ticker that this option rolls up to"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"100"}),(0,n.jsx)(s.td,{children:"tradeDate"}),(0,n.jsx)(s.td,{children:"DateKey"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"103"}),(0,n.jsx)(s.td,{children:"clsMarkState"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/ClsMarkState",children:"enum : ClsMarkState"})}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"Preview or Final"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"106"}),(0,n.jsx)(s.td,{children:"uBid"}),(0,n.jsx)(s.td,{children:"double"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"SpiderRock closing underlier bid (C - 5m)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"109"}),(0,n.jsx)(s.td,{children:"uAsk"}),(0,n.jsx)(s.td,{children:"double"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"SpiderRock closing underlier ask (C - 5m)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"112"}),(0,n.jsx)(s.td,{children:"uSrCls"}),(0,n.jsx)(s.td,{children:"double"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"SpiderRock underlier closing mark (C - 5m)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"115"}),(0,n.jsx)(s.td,{children:"uClose"}),(0,n.jsx)(s.td,{children:"double"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"exchange underlier closing mark"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"118"}),(0,n.jsx)(s.td,{children:"bidPrc"}),(0,n.jsx)(s.td,{children:"float"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"SpiderRock closing option bid (C - 5m)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"121"}),(0,n.jsx)(s.td,{children:"askPrc"}),(0,n.jsx)(s.td,{children:"float"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"SpiderRock closing option ask (C - 5m)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"124"}),(0,n.jsx)(s.td,{children:"srClsPrc"}),(0,n.jsx)(s.td,{children:"double"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"SpiderRock close mark (close - 5min) [NBBO mid-market]"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"127"}),(0,n.jsx)(s.td,{children:"closePrc"}),(0,n.jsx)(s.td,{children:"double"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"official exchange closing mark (last print;then official close)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"130"}),(0,n.jsx)(s.td,{children:"hasSRClsPrc"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"133"}),(0,n.jsx)(s.td,{children:"hasClosePrc"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"209"}),(0,n.jsx)(s.td,{children:"hasUClsPrc"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"136"}),(0,n.jsx)(s.td,{children:"bidIV"}),(0,n.jsx)(s.td,{children:"float"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"implied vol of SpiderRock closing bid price (C - 5m)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"139"}),(0,n.jsx)(s.td,{children:"askIV"}),(0,n.jsx)(s.td,{children:"float"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"implied vol of SpiderRock closing ask price (C - 5m)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"142"}),(0,n.jsx)(s.td,{children:"srPrc"}),(0,n.jsx)(s.td,{children:"float"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"sr close mark price (always within bidPx/askPx) (C - 5m)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"145"}),(0,n.jsx)(s.td,{children:"srVol"}),(0,n.jsx)(s.td,{children:"float"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"sr close mark volatility (C - 5m)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"148"}),(0,n.jsx)(s.td,{children:"srSrc"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../../../Enums/MarkSource",children:"enum : MarkSource"})}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"sr close mark source (SRVol is SurfaceVol)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"151"}),(0,n.jsx)(s.td,{children:"de"}),(0,n.jsx)(s.td,{children:"float"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"delta"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"154"}),(0,n.jsx)(s.td,{children:"ga"}),(0,n.jsx)(s.td,{children:"float"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"gamma"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"157"}),(0,n.jsx)(s.td,{children:"th"}),(0,n.jsx)(s.td,{children:"float"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"theta"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"160"}),(0,n.jsx)(s.td,{children:"ve"}),(0,n.jsx)(s.td,{children:"float"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"vega"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"163"}),(0,n.jsx)(s.td,{children:"vo"}),(0,n.jsx)(s.td,{children:"float"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"volga"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"166"}),(0,n.jsx)(s.td,{children:"va"}),(0,n.jsx)(s.td,{children:"float"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"vanna"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"169"}),(0,n.jsx)(s.td,{children:"rh"}),(0,n.jsx)(s.td,{children:"float"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"rho"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"172"}),(0,n.jsx)(s.td,{children:"ph"}),(0,n.jsx)(s.td,{children:"float"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"phi"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"175"}),(0,n.jsx)(s.td,{children:"srSlope"}),(0,n.jsx)(s.td,{children:"float"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"surface slope (SR surface)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"178"}),(0,n.jsx)(s.td,{children:"deDecay"}),(0,n.jsx)(s.td,{children:"float"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"delta decay"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"181"}),(0,n.jsx)(s.td,{children:"sdiv"}),(0,n.jsx)(s.td,{children:"float"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"sdiv rate"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"184"}),(0,n.jsx)(s.td,{children:"ddiv"}),(0,n.jsx)(s.td,{children:"float"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"ddiv amount (sum of discrete dividend amounts)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"210"}),(0,n.jsx)(s.td,{children:"ddivPv"}),(0,n.jsx)(s.td,{children:"float"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"ddiv (present value) amount (sum of discrete dividend pv amounts)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"187"}),(0,n.jsx)(s.td,{children:"rate"}),(0,n.jsx)(s.td,{children:"float"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"discount rate"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"211"}),(0,n.jsx)(s.td,{children:"iDays"}),(0,n.jsx)(s.td,{children:"int"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"interest days (today to expiry) (T+1)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"190"}),(0,n.jsx)(s.td,{children:"years"}),(0,n.jsx)(s.td,{children:"float"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"years to expiration"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"193"}),(0,n.jsx)(s.td,{children:"error"}),(0,n.jsx)(s.td,{children:"byte"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"calculation error code"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"196"}),(0,n.jsx)(s.td,{children:"openInterest"}),(0,n.jsx)(s.td,{children:"int"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"option open Interest"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"199"}),(0,n.jsx)(s.td,{children:"prtCount"}),(0,n.jsx)(s.td,{children:"int"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"print count"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"202"}),(0,n.jsx)(s.td,{children:"prtVolume"}),(0,n.jsx)(s.td,{children:"int"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"total printed volume (all prt types)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"205"}),(0,n.jsx)(s.td,{children:"srCloseMarkDttm"}),(0,n.jsx)(s.td,{children:"DateTime"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"from MarketCloseQuote.srCloseMarkDttm (in trading period local timezone)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"213"}),(0,n.jsx)(s.td,{children:"configNow"}),(0,n.jsx)(s.td,{children:"DateTime"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"timestamp in the trading period local timezone"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"208"}),(0,n.jsx)(s.td,{children:"timestamp"}),(0,n.jsx)(s.td,{children:"DateTime"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"record timestamp"})]})]})]}),"\n",(0,n.jsx)(s.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,n.jsxs)(a.Z,{children:[(0,n.jsx)(d.Z,{value:"Python",label:"Python",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'OptionCloseMark'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n    # Required Parameters\n    \"apiKey\": API_KEY,\n    \"cmd\": 'getschema',\n    \"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,n.jsx)(d.Z,{value:"cUrl",label:"cUrl",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=OptionCloseMark'\n\n"})})})]}),"\n",(0,n.jsx)(s.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,n.jsxs)(a.Z,{children:[(0,n.jsx)(d.Z,{value:"Python",label:"Python",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'OptionCloseMark\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'ticker|tradeDate|clsMarkState|uBid|uAsk|uSrCls|uClose|bidPrc|askPrc|srClsPrc|closePrc|hasSRClsPrc|hasClosePrc|hasUClsPrc|bidIV|askIV|srPrc|srVol|srSrc|de|ga|th|ve|vo|va|rh|ph|srSlope|deDecay|sdiv|ddiv|ddivPv|rate|iDays|years|error|openInterest|prtCount|prtVolume|srCloseMarkDttm|configNow|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,n.jsx)(d.Z,{value:"cUrl",label:"cUrl",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=OptionCloseMark' \\\n--data-urlencode 'view=ticker|tradeDate|clsMarkState|uBid|uAsk|uSrCls|uClose|bidPrc|askPrc|srClsPrc|closePrc|hasSRClsPrc|hasClosePrc|hasUClsPrc|bidIV|askIV|srPrc|srVol|srSrc|de|ga|th|ve|vo|va|rh|ph|srSlope|deDecay|sdiv|ddiv|ddivPv|rate|iDays|years|error|openInterest|prtCount|prtVolume|srCloseMarkDttm|configNow|timestamp' \\\n--data-urlencode 'where='\n"})})})]}),"\n",(0,n.jsx)(s.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,n.jsxs)(a.Z,{children:[(0,n.jsx)(d.Z,{value:"Python",label:"Python",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'OptionCloseMark\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'ticker|tradeDate|clsMarkState|uBid|uAsk|uSrCls|uClose|bidPrc|askPrc|srClsPrc|closePrc|hasSRClsPrc|hasClosePrc|hasUClsPrc|bidIV|askIV|srPrc|srVol|srSrc|de|ga|th|ve|vo|va|rh|ph|srSlope|deDecay|sdiv|ddiv|ddivPv|rate|iDays|years|error|openInterest|prtCount|prtVolume|srCloseMarkDttm|configNow|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'ticker:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,n.jsx)(d.Z,{value:"cUrl",label:"cUrl",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=OptionCloseMark' \\\n--data-urlencode 'view=ticker|tradeDate|clsMarkState|uBid|uAsk|uSrCls|uClose|bidPrc|askPrc|srClsPrc|closePrc|hasSRClsPrc|hasClosePrc|hasUClsPrc|bidIV|askIV|srPrc|srVol|srSrc|de|ga|th|ve|vo|va|rh|ph|srSlope|deDecay|sdiv|ddiv|ddivPv|rate|iDays|years|error|openInterest|prtCount|prtVolume|srCloseMarkDttm|configNow|timestamp' \\\n--data-urlencode 'where=' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=ticker:ASC'\n"})})})]}),"\n",(0,n.jsx)(s.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,n.jsxs)(a.Z,{children:[(0,n.jsx)(d.Z,{value:"Python",label:"Python",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'OptionCloseMark\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'ticker|tradeDate|clsMarkState|uBid|uAsk|uSrCls|uClose|bidPrc|askPrc|srClsPrc|closePrc|hasSRClsPrc|hasClosePrc|hasUClsPrc|bidIV|askIV|srPrc|srVol|srSrc|de|ga|th|ve|vo|va|rh|ph|srSlope|deDecay|sdiv|ddiv|ddivPv|rate|iDays|years|error|openInterest|prtCount|prtVolume|srCloseMarkDttm|configNow|timestamp\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'clsMarkState|hasSRClsPrc|hasClosePrc|hasUClsPrc|srSrc\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getaggregate\',\n    "msgType": MSG_TYPE,\n    "measure": MEASURE,\n    "group": GROUP,\n    # Optional Parameters\n    "where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,n.jsx)(d.Z,{value:"cUrl",label:"cUrl",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=OptionCloseMark' \\\n--data-urlencode 'measure=ticker|tradeDate|clsMarkState|uBid|uAsk|uSrCls|uClose|bidPrc|askPrc|srClsPrc|closePrc|hasSRClsPrc|hasClosePrc|hasUClsPrc|bidIV|askIV|srPrc|srVol|srSrc|de|ga|th|ve|vo|va|rh|ph|srSlope|deDecay|sdiv|ddiv|ddivPv|rate|iDays|years|error|openInterest|prtCount|prtVolume|srCloseMarkDttm|configNow|timestamp' \\\n--data-urlencode 'group=clsMarkState|hasSRClsPrc|hasClosePrc|hasUClsPrc|srSrc' \\\n--data-urlencode 'where='\n"})})})]}),"\n",(0,n.jsx)(s.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,n.jsxs)(a.Z,{children:[(0,n.jsx)(d.Z,{value:"Python",label:"Python",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'OptionCloseMark\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,n.jsx)(d.Z,{value:"cUrl",label:"cUrl",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=OptionCloseMark' \\\n--data-urlencode 'where='\n"})})})]})]})}function x(e={}){let{wrapper:s}={...(0,l.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},9641:function(e,s,r){r.d(s,{Z:()=>l});var t=r("52676");r("75271");var n=r("54461");function l(e){let{children:s,hidden:r,className:l}=e;return(0,t.jsx)("div",{role:"tabpanel",className:(0,n.Z)("tabItem_SSzl",l),hidden:r,children:s})}},71386:function(e,s,r){r.d(s,{Z:()=>v});var t=r("52676"),n=r("75271"),l=r("54461"),a=r("52289"),d=r("3225"),i=r("42834"),c=r("40578"),o=r("35834"),h=r("79616");function u(e){return n.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||n.isValidElement(e)&&function(e){let{props:s}=e;return!!s&&"object"==typeof s&&"value"in s}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function x(e){let{value:s,tabValues:r}=e;return r.some(e=>e.value===s)}var j=r("44537");function p(e){let{className:s,block:r,selectedValue:n,selectValue:d,tabValues:i}=e,c=[],{blockElementScrollPositionUntilNextRender:o}=(0,a.o5)(),h=e=>{let s=e.currentTarget,r=i[c.indexOf(s)].value;r!==n&&(o(s),d(r))},u=e=>{let s=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{let r=c.indexOf(e.currentTarget)+1;s=c[r]??c[0];break}case"ArrowLeft":{let r=c.indexOf(e.currentTarget)-1;s=c[r]??c[c.length-1]}}s?.focus()};return(0,t.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":r},s),children:i.map(e=>{let{value:s,label:r,attributes:a}=e;return(0,t.jsx)("li",{role:"tab",tabIndex:n===s?0:-1,"aria-selected":n===s,ref:e=>c.push(e),onKeyDown:u,onClick:h,...a,className:(0,l.Z)("tabs__item","tabItem_aitt",a?.className,{"tabs__item--active":n===s}),children:r??s},s)})})}function m(e){let{lazy:s,children:r,selectedValue:a}=e,d=(Array.isArray(r)?r:[r]).filter(Boolean);if(s){let e=d.find(e=>e.props.value===a);return e?(0,n.cloneElement)(e,{className:(0,l.Z)("margin-top--md",e.props.className)}):null}return(0,t.jsx)("div",{className:"margin-top--md",children:d.map((e,s)=>(0,n.cloneElement)(e,{key:s,hidden:e.props.value!==a}))})}function g(e){let s=function(e){let{defaultValue:s,queryString:r=!1,groupId:t}=e,l=function(e){let{values:s,children:r}=e;return(0,n.useMemo)(()=>{let e=s??u(r).map(e=>{let{props:{value:s,label:r,attributes:t,default:n}}=e;return{value:s,label:r,attributes:t,default:n}});return!function(e){let s=(0,o.lx)(e,(e,s)=>e.value===s.value);if(s.length>0)throw Error(`Docusaurus error: Duplicate values "${s.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[s,r])}(e),[a,j]=(0,n.useState)(()=>(function(e){let{defaultValue:s,tabValues:r}=e;if(0===r.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(s){if(!x({value:s,tabValues:r}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${s}" but none of its children has the corresponding value. Available values are: ${r.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return s}let t=r.find(e=>e.default)??r[0];if(!t)throw Error("Unexpected error: 0 tabValues");return t.value})({defaultValue:s,tabValues:l})),[p,m]=function(e){let{queryString:s=!1,groupId:r}=e,t=(0,d.k6)(),l=function(e){let{queryString:s=!1,groupId:r}=e;if("string"==typeof s)return s;if(!1===s)return null;if(!0===s&&!r)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:s,groupId:r});return[(0,c._X)(l),(0,n.useCallback)(e=>{if(!l)return;let s=new URLSearchParams(t.location.search);s.set(l,e),t.replace({...t.location,search:s.toString()})},[l,t])]}({queryString:r,groupId:t}),[g,v]=function(e){let{groupId:s}=e,r=s?`docusaurus.tab.${s}`:null,[t,l]=(0,h.Nk)(r);return[t,(0,n.useCallback)(e=>{r&&l.set(e)},[r,l])]}({groupId:t}),f=(()=>{let e=p??g;return x({value:e,tabValues:l})?e:null})();return(0,i.Z)(()=>{f&&j(f)},[f]),{selectedValue:a,selectValue:(0,n.useCallback)(e=>{if(!x({value:e,tabValues:l}))throw Error(`Can't select invalid tab value=${e}`);j(e),m(e),v(e)},[m,v,l]),tabValues:l}}(e);return(0,t.jsxs)("div",{className:(0,l.Z)("tabs-container","tabList_ArS0"),children:[(0,t.jsx)(p,{...s,...e}),(0,t.jsx)(m,{...s,...e})]})}function v(e){let s=(0,j.Z)();return(0,t.jsx)(g,{...e,children:u(e.children)},String(s))}},91503:function(e,s,r){r.d(s,{Z:function(){return d},a:function(){return a}});var t=r(75271);let n={},l=t.createContext(n);function a(e){let s=t.useContext(l);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),t.createElement(l.Provider,{value:s},e.children)}}}]);