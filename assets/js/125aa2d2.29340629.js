"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([["28957"],{91970:function(e,n,t){t.r(n),t.d(n,{default:()=>v,frontMatter:()=>d,metadata:()=>r,assets:()=>c,toc:()=>h,contentTitle:()=>o});var r=JSON.parse('{"id":"MessageSchemas/Schema/Topics/analytics/LiveSurfaceFixedGrid","title":"LiveSurfaceFixedGrid","description":"This table contains a live grided (interpolated) censored implied volatility surface.  Each record contains standarized live and prior period implied volatilities at standarized skew points for a standardized days-to-expiration value.LiveSurfaceGrid records are published to the SpiderRock elastic cluster nightly.","source":"@site/versioned_docs/version-8.5.4.2/MessageSchemas/Schema/Topics/1000-analytics/LiveSurfaceFixedGrid.md","sourceDirName":"MessageSchemas/Schema/Topics/1000-analytics","slug":"/MessageSchemas/Schema/Topics/analytics/LiveSurfaceFixedGrid","permalink":"/docs/8.5.4.2/MessageSchemas/Schema/Topics/analytics/LiveSurfaceFixedGrid","draft":false,"unlisted":false,"tags":[],"version":"8.5.4.2","frontMatter":{"title":"LiveSurfaceFixedGrid"},"sidebar":"messageSchemasSidebar","previous":{"title":"LiveSurfaceDetail","permalink":"/docs/8.5.4.2/MessageSchemas/Schema/Topics/analytics/LiveSurfaceDetail"},"next":{"title":"LiveSurfaceFixedTerm","permalink":"/docs/8.5.4.2/MessageSchemas/Schema/Topics/analytics/LiveSurfaceFixedTerm"}}'),l=t("52676"),s=t("91503"),i=t("71386"),a=t("9641");let d={title:"LiveSurfaceFixedGrid"},o="Schema: LiveSurfaceFixedGrid (ID: 1040)",c={},h=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3}];function u(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsxs)(n.h1,{id:"schema-livesurfacefixedgrid-id-1040",children:["Schema: LiveSurfaceFixedGrid ",(0,l.jsx)("span",{className:"small-text",children:"(ID: 1040)"})]})}),"\n",(0,l.jsxs)(n.p,{children:["This table contains a live grided (interpolated) censored implied volatility surface.  Each record contains standarized live and prior period implied volatilities at standarized skew points for a standardized days-to-expiration value.",(0,l.jsx)("br",{}),(0,l.jsx)("br",{}),"LiveSurfaceGrid records are published to the SpiderRock elastic cluster nightly."]}),"\n",(0,l.jsx)(n.h3,{id:"metadata",children:"METADATA"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Attribute"}),(0,l.jsx)(n.th,{children:"Value"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"Topic"}),(0,l.jsx)(n.td,{children:"1000-analytics"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"MLink Token"}),(0,l.jsx)(n.td,{children:"OptSurface"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"SRSE Product"}),(0,l.jsx)(n.td,{children:"SRAnalytics"})]})]})]}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Note:"})," The symbol ",(0,l.jsx)(n.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"body",children:"BODY"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"#"}),(0,l.jsx)(n.th,{children:"Field"}),(0,l.jsx)(n.th,{children:"Type"}),(0,l.jsx)(n.th,{children:"Comment"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"10="}),(0,l.jsx)(n.td,{children:"ticker"}),(0,l.jsx)(n.td,{children:"TickerKey"}),(0,l.jsx)(n.td,{})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"11="}),(0,l.jsx)(n.td,{children:"days"}),(0,l.jsx)(n.td,{children:"short"}),(0,l.jsx)(n.td,{children:"days to expiration [5, 21, 42, 63, 84, 105, 126, 189, 252, 378, 504]"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"12="}),(0,l.jsx)(n.td,{children:"surfaceType"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.a,{href:"../../../Enums/SurfaceCurveType",children:"enum : SurfaceCurveType"})}),(0,l.jsx)(n.td,{})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"100"}),(0,l.jsx)(n.td,{children:"date"}),(0,l.jsx)(n.td,{children:"string(10)"}),(0,l.jsx)(n.td,{})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"103"}),(0,l.jsx)(n.td,{children:"time"}),(0,l.jsx)(n.td,{children:"string(8)"}),(0,l.jsx)(n.td,{})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"106"}),(0,l.jsx)(n.td,{children:"sDiv"}),(0,l.jsx)(n.td,{children:"float"}),(0,l.jsx)(n.td,{children:"Interpolated implied sdiv rate (from LiveSurfaceFixedTerm.sDiv_N)"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"109"}),(0,l.jsx)(n.td,{children:"fwdUPrc"}),(0,l.jsx)(n.td,{children:"float"}),(0,l.jsx)(n.td,{children:"Interpolated implied forward price (from LiveSurfaceFixedTerm.fwdUPrc_N)"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"112"}),(0,l.jsx)(n.td,{children:"eCnt"}),(0,l.jsx)(n.td,{children:"int"}),(0,l.jsx)(n.td,{children:"Number of expected earnings dates (from LiveSurfaceFixedTerm.eCnt_N)"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"115"}),(0,l.jsx)(n.td,{children:"eMove"}),(0,l.jsx)(n.td,{children:"float"}),(0,l.jsx)(n.td,{children:"Implied earnings move (from LiveSurfaceFixedTerm.eMove)"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"118"}),(0,l.jsx)(n.td,{children:"eMoveHist"}),(0,l.jsx)(n.td,{children:"float"}),(0,l.jsx)(n.td,{children:"Historical earnings move (from LiveSurfaceFixedTerm.eMoveHist)"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"121"}),(0,l.jsx)(n.td,{children:"volD45"}),(0,l.jsx)(n.td,{children:"float"}),(0,l.jsx)(n.td,{children:"xde = -45	    (censored volatility)"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"124"}),(0,l.jsx)(n.td,{children:"volD40"}),(0,l.jsx)(n.td,{children:"float"}),(0,l.jsx)(n.td,{children:"xde = -40"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"127"}),(0,l.jsx)(n.td,{children:"volD35"}),(0,l.jsx)(n.td,{children:"float"}),(0,l.jsx)(n.td,{children:"xde = -35"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"130"}),(0,l.jsx)(n.td,{children:"volD30"}),(0,l.jsx)(n.td,{children:"float"}),(0,l.jsx)(n.td,{children:"xde = -30"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"133"}),(0,l.jsx)(n.td,{children:"volD25"}),(0,l.jsx)(n.td,{children:"float"}),(0,l.jsx)(n.td,{children:"xde = -25"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"136"}),(0,l.jsx)(n.td,{children:"volD20"}),(0,l.jsx)(n.td,{children:"float"}),(0,l.jsx)(n.td,{children:"xde = -20"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"139"}),(0,l.jsx)(n.td,{children:"volD15"}),(0,l.jsx)(n.td,{children:"float"}),(0,l.jsx)(n.td,{children:"xde = -15"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"142"}),(0,l.jsx)(n.td,{children:"volD10"}),(0,l.jsx)(n.td,{children:"float"}),(0,l.jsx)(n.td,{children:"xde = -10"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"145"}),(0,l.jsx)(n.td,{children:"volD05"}),(0,l.jsx)(n.td,{children:"float"}),(0,l.jsx)(n.td,{children:"xde = -5"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"148"}),(0,l.jsx)(n.td,{children:"volA00"}),(0,l.jsx)(n.td,{children:"float"}),(0,l.jsx)(n.td,{children:"xde = 0"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"151"}),(0,l.jsx)(n.td,{children:"volU05"}),(0,l.jsx)(n.td,{children:"float"}),(0,l.jsx)(n.td,{children:"xde = +5"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"154"}),(0,l.jsx)(n.td,{children:"volU10"}),(0,l.jsx)(n.td,{children:"float"}),(0,l.jsx)(n.td,{children:"xde = +10"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"157"}),(0,l.jsx)(n.td,{children:"volU15"}),(0,l.jsx)(n.td,{children:"float"}),(0,l.jsx)(n.td,{children:"xde = +15"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"160"}),(0,l.jsx)(n.td,{children:"volU20"}),(0,l.jsx)(n.td,{children:"float"}),(0,l.jsx)(n.td,{children:"xde = +20"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"163"}),(0,l.jsx)(n.td,{children:"volU25"}),(0,l.jsx)(n.td,{children:"float"}),(0,l.jsx)(n.td,{children:"xde = +25"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"166"}),(0,l.jsx)(n.td,{children:"volU30"}),(0,l.jsx)(n.td,{children:"float"}),(0,l.jsx)(n.td,{children:"xde = +30"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"169"}),(0,l.jsx)(n.td,{children:"volU35"}),(0,l.jsx)(n.td,{children:"float"}),(0,l.jsx)(n.td,{children:"xde = +35"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"172"}),(0,l.jsx)(n.td,{children:"volU40"}),(0,l.jsx)(n.td,{children:"float"}),(0,l.jsx)(n.td,{children:"xde = +40"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"175"}),(0,l.jsx)(n.td,{children:"volU45"}),(0,l.jsx)(n.td,{children:"float"}),(0,l.jsx)(n.td,{children:"xde = +45"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"178"}),(0,l.jsx)(n.td,{children:"vWidth"}),(0,l.jsx)(n.td,{children:"float"}),(0,l.jsx)(n.td,{children:"atm volatility width (from LiveSurfaceFixedTerm.vWidth_N)"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"181"}),(0,l.jsx)(n.td,{children:"vSlope"}),(0,l.jsx)(n.td,{children:"float"}),(0,l.jsx)(n.td,{children:"atm volatility slope (from LiveSurfaceFixedTerm.vSlope_N)"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"184"}),(0,l.jsx)(n.td,{children:"loYears"}),(0,l.jsx)(n.td,{children:"float"}),(0,l.jsx)(n.td,{children:"LiveSurfaceCurve.years before days [-1 = none]"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"187"}),(0,l.jsx)(n.td,{children:"hiYears"}),(0,l.jsx)(n.td,{children:"float"}),(0,l.jsx)(n.td,{children:"LiveSurfaceCurve.years after days	[-1 = none]"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"190"}),(0,l.jsx)(n.td,{children:"minDelta"}),(0,l.jsx)(n.td,{children:"float"}),(0,l.jsx)(n.td,{children:"minimum valid strike delta"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"193"}),(0,l.jsx)(n.td,{children:"maxDelta"}),(0,l.jsx)(n.td,{children:"float"}),(0,l.jsx)(n.td,{children:"maximum valid strike delta"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"196"}),(0,l.jsx)(n.td,{children:"timestamp"}),(0,l.jsx)(n.td,{children:"DateTime"}),(0,l.jsx)(n.td,{children:"surface fit timestamp"})]})]})]}),"\n",(0,l.jsx)(n.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,l.jsxs)(i.Z,{children:[(0,l.jsx)(a.Z,{value:"Python",label:"Python",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'LiveSurfaceFixedGrid'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n    # Required Parameters\n    \"apiKey\": API_KEY,\n    \"cmd\": 'getschema',\n    \"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,l.jsx)(a.Z,{value:"cUrl",label:"cUrl",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=LiveSurfaceFixedGrid'\n\n"})})})]}),"\n",(0,l.jsx)(n.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,l.jsxs)(i.Z,{children:[(0,l.jsx)(a.Z,{value:"Python",label:"Python",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'LiveSurfaceFixedGrid\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'date|time|sDiv|fwdUPrc|eCnt|eMove|eMoveHist|volD45|volD40|volD35|volD30|volD25|volD20|volD15|volD10|volD05|volA00|volU05|volU10|volU15|volU20|volU25|volU30|volU35|volU40|volU45|vWidth|vSlope|loYears|hiYears|minDelta|maxDelta|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'time:eq:ExampleString\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,l.jsx)(a.Z,{value:"cUrl",label:"cUrl",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=LiveSurfaceFixedGrid' \\\n--data-urlencode 'view=date|time|sDiv|fwdUPrc|eCnt|eMove|eMoveHist|volD45|volD40|volD35|volD30|volD25|volD20|volD15|volD10|volD05|volA00|volU05|volU10|volU15|volU20|volU25|volU30|volU35|volU40|volU45|vWidth|vSlope|loYears|hiYears|minDelta|maxDelta|timestamp' \\\n--data-urlencode 'where=time:eq:ExampleString'\n"})})})]}),"\n",(0,l.jsx)(n.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,l.jsxs)(i.Z,{children:[(0,l.jsx)(a.Z,{value:"Python",label:"Python",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'LiveSurfaceFixedGrid\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'date|time|sDiv|fwdUPrc|eCnt|eMove|eMoveHist|volD45|volD40|volD35|volD30|volD25|volD20|volD15|volD10|volD05|volA00|volU05|volU10|volU15|volU20|volU25|volU30|volU35|volU40|volU45|vWidth|vSlope|loYears|hiYears|minDelta|maxDelta|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'time:eq:ExampleString\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'date:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,l.jsx)(a.Z,{value:"cUrl",label:"cUrl",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=LiveSurfaceFixedGrid' \\\n--data-urlencode 'view=date|time|sDiv|fwdUPrc|eCnt|eMove|eMoveHist|volD45|volD40|volD35|volD30|volD25|volD20|volD15|volD10|volD05|volA00|volU05|volU10|volU15|volU20|volU25|volU30|volU35|volU40|volU45|vWidth|vSlope|loYears|hiYears|minDelta|maxDelta|timestamp' \\\n--data-urlencode 'where=time:eq:ExampleString' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=date:ASC'\n"})})})]}),"\n",(0,l.jsx)(n.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,l.jsxs)(i.Z,{children:[(0,l.jsx)(a.Z,{value:"Python",label:"Python",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'LiveSurfaceFixedGrid\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'date|time|sDiv|fwdUPrc|eCnt|eMove|eMoveHist|volD45|volD40|volD35|volD30|volD25|volD20|volD15|volD10|volD05|volA00|volU05|volU10|volU15|volU20|volU25|volU30|volU35|volU40|volU45|vWidth|vSlope|loYears|hiYears|minDelta|maxDelta|timestamp\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'time:eq:ExampleString\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getaggregate\',\n    "msgType": MSG_TYPE,\n    "measure": MEASURE,\n    "group": GROUP,\n    # Optional Parameters\n    "where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,l.jsx)(a.Z,{value:"cUrl",label:"cUrl",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=LiveSurfaceFixedGrid' \\\n--data-urlencode 'measure=date|time|sDiv|fwdUPrc|eCnt|eMove|eMoveHist|volD45|volD40|volD35|volD30|volD25|volD20|volD15|volD10|volD05|volA00|volU05|volU10|volU15|volU20|volU25|volU30|volU35|volU40|volU45|vWidth|vSlope|loYears|hiYears|minDelta|maxDelta|timestamp' \\\n--data-urlencode 'group=' \\\n--data-urlencode 'where=time:eq:ExampleString'\n"})})})]}),"\n",(0,l.jsx)(n.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,l.jsxs)(i.Z,{children:[(0,l.jsx)(a.Z,{value:"Python",label:"Python",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'LiveSurfaceFixedGrid\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'time:eq:ExampleString\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,l.jsx)(a.Z,{value:"cUrl",label:"cUrl",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=LiveSurfaceFixedGrid' \\\n--data-urlencode 'where=time:eq:ExampleString'\n"})})})]})]})}function v(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(u,{...e})}):u(e)}},9641:function(e,n,t){t.d(n,{Z:()=>s});var r=t("52676");t("75271");var l=t("54461");function s(e){let{children:n,hidden:t,className:s}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,l.Z)("tabItem_SSzl",s),hidden:t,children:n})}},71386:function(e,n,t){t.d(n,{Z:()=>f});var r=t("52676"),l=t("75271"),s=t("54461"),i=t("52289"),a=t("3225"),d=t("42834"),o=t("40578"),c=t("35834"),h=t("79616");function u(e){return l.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||l.isValidElement(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function v(e){let{value:n,tabValues:t}=e;return t.some(e=>e.value===n)}var x=t("44537");function m(e){let{className:n,block:t,selectedValue:l,selectValue:a,tabValues:d}=e,o=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.o5)(),h=e=>{let n=e.currentTarget,t=d[o.indexOf(n)].value;t!==l&&(c(n),a(t))},u=e=>{let n=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{let t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{let t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1]}}n?.focus()};return(0,r.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":t},n),children:d.map(e=>{let{value:n,label:t,attributes:i}=e;return(0,r.jsx)("li",{role:"tab",tabIndex:l===n?0:-1,"aria-selected":l===n,ref:e=>o.push(e),onKeyDown:u,onClick:h,...i,className:(0,s.Z)("tabs__item","tabItem_aitt",i?.className,{"tabs__item--active":l===n}),children:t??n},n)})})}function p(e){let{lazy:n,children:t,selectedValue:i}=e,a=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){let e=a.find(e=>e.props.value===i);return e?(0,l.cloneElement)(e,{className:(0,s.Z)("margin-top--md",e.props.className)}):null}return(0,r.jsx)("div",{className:"margin-top--md",children:a.map((e,n)=>(0,l.cloneElement)(e,{key:n,hidden:e.props.value!==i}))})}function j(e){let n=function(e){let{defaultValue:n,queryString:t=!1,groupId:r}=e,s=function(e){let{values:n,children:t}=e;return(0,l.useMemo)(()=>{let e=n??u(t).map(e=>{let{props:{value:n,label:t,attributes:r,default:l}}=e;return{value:n,label:t,attributes:r,default:l}});return!function(e){let n=(0,c.lx)(e,(e,n)=>e.value===n.value);if(n.length>0)throw Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,t])}(e),[i,x]=(0,l.useState)(()=>(function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!v({value:n,tabValues:t}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}let r=t.find(e=>e.default)??t[0];if(!r)throw Error("Unexpected error: 0 tabValues");return r.value})({defaultValue:n,tabValues:s})),[m,p]=function(e){let{queryString:n=!1,groupId:t}=e,r=(0,a.k6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,o._X)(s),(0,l.useCallback)(e=>{if(!s)return;let n=new URLSearchParams(r.location.search);n.set(s,e),r.replace({...r.location,search:n.toString()})},[s,r])]}({queryString:t,groupId:r}),[j,f]=function(e){let{groupId:n}=e,t=n?`docusaurus.tab.${n}`:null,[r,s]=(0,h.Nk)(t);return[r,(0,l.useCallback)(e=>{t&&s.set(e)},[t,s])]}({groupId:r}),g=(()=>{let e=m??j;return v({value:e,tabValues:s})?e:null})();return(0,d.Z)(()=>{g&&x(g)},[g]),{selectedValue:i,selectValue:(0,l.useCallback)(e=>{if(!v({value:e,tabValues:s}))throw Error(`Can't select invalid tab value=${e}`);x(e),p(e),f(e)},[p,f,s]),tabValues:s}}(e);return(0,r.jsxs)("div",{className:(0,s.Z)("tabs-container","tabList_ArS0"),children:[(0,r.jsx)(m,{...n,...e}),(0,r.jsx)(p,{...n,...e})]})}function f(e){let n=(0,x.Z)();return(0,r.jsx)(j,{...e,children:u(e.children)},String(n))}},91503:function(e,n,t){t.d(n,{Z:function(){return a},a:function(){return i}});var r=t(75271);let l={},s=r.createContext(l);function i(e){let n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);