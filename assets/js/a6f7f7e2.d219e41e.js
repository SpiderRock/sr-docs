"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[93791],{41874:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>c,contentTitle:()=>r,default:()=>L,frontMatter:()=>s,metadata:()=>i,toc:()=>a});var n=t(74848),N=t(28453);const s={title:"SpdrAllocationNotice"},r=void 0,i={id:"MessageSchemas/Schema/SRSE Products/SRTrade/SpdrAllocationNotice/SpdrAllocationNotice",title:"SpdrAllocationNotice",description:"V8 Message Definition",source:"@site/docs/MessageSchemas/Schema/SRSE Products/SRTrade/SpdrAllocationNotice/SpdrAllocationNotice.md",sourceDirName:"MessageSchemas/Schema/SRSE Products/SRTrade/SpdrAllocationNotice",slug:"/MessageSchemas/Schema/SRSE Products/SRTrade/SpdrAllocationNotice/",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRTrade/SpdrAllocationNotice/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"SpdrAllocationNotice"},sidebar:"messageSchemasSidebar",previous:{title:"SpdrAccntCancel",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRTrade/SpdrAccntCancel/"},next:{title:"SpdrAllocationNoticeStatus",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRTrade/SpdrAllocationNoticeStatus/"}},c={},a=[];function T(e){const o={a:"a",code:"code",p:"p",pre:"pre",...(0,N.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.p,{children:(0,n.jsx)(o.a,{href:"../../../Topics/order-allocation/SpdrAllocationNotice",children:"V8 Message Definition"})}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-sql",children:"CREATE TABLE `SRTrade`.`MsgSRAllocationNotice` (\n    `allocNumber` BIGINT NOT NULL DEFAULT 0 COMMENT 'unique number assigned to this allocation notice',\n    `tradeDate` DATE NOT NULL DEFAULT '1900-01-01',\n    `clientFirm` VARCHAR(16) NOT NULL DEFAULT '',\n    `omniAccnt` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'omnibus accnt (SR accnt)',\n    `secKey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'security key (stock, future, or option)',\n    `secKey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'security key (stock, future, or option)',\n    `secKey_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'security key (stock, future, or option)',\n    `secKey_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'security key (stock, future, or option)',\n    `secKey_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'security key (stock, future, or option)',\n    `secKey_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'security key (stock, future, or option)',\n    `secKey_xx` DOUBLE NOT NULL DEFAULT 0 COMMENT 'security key (stock, future, or option)',\n    `secKey_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call' COMMENT 'security key (stock, future, or option)',\n    `secType` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None' COMMENT 'security type',\n    `mlegLegKey` VARCHAR(255) NOT NULL DEFAULT '' COMMENT '[secKey.StringKey;legRatio;side;positionEffect, secKey.StringKey;legRatio;side;positionEffect, ...]',\n    `orderSide` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'None' COMMENT 'order side (always buy for MLEG orders)',\n    `ssaleFlag` ENUM('None','Long','Short','Exempt','Auto','Open','Close','Cover','NA') NOT NULL DEFAULT 'None' COMMENT 'ssale flag (None if not stock)',\n    `positionType` ENUM('None','Opening','Closing','Auto') NOT NULL DEFAULT 'None' COMMENT 'positionType (None if not equity option)',\n    `noticeState` ENUM('None','ReadyToSend','HoldForReview','Canceled','Error') NOT NULL DEFAULT 'None' COMMENT 'indicates that this noticed is ready to forward to a custodian',\n    `noticeText` VARCHAR(255) NOT NULL DEFAULT '',\n    `allocMethod` ENUM('None','FIX','FilePAS') NOT NULL DEFAULT 'None' COMMENT 'method for delivery of the allocation instruction to the broker',\n    `execBrkrCode` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'used for FIX routing (can be null)',\n    `allocExDest` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'used for FIX routing',\n    `orderShape` ENUM('None','Single','Cross','MLeg','MLegCross') NOT NULL DEFAULT 'None' COMMENT 'Single or MLeg',\n    `cumFillQuantity` INT NOT NULL DEFAULT 0 COMMENT 'total fill size of all ChildOrders',\n    `avgFillPrice` DOUBLE NOT NULL DEFAULT 0 COMMENT 'parent order average fill price',\n    `netMoney` DOUBLE NOT NULL DEFAULT 0 COMMENT 'net allocation money',\n    `modifiedBy` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'user who last modified this record',\n    `modifiedIn` ENUM('None','Neptune','Pluto','V7_Stable','V7_Latest','Saturn','Venus','Mars','SysTest','V7_Current') NOT NULL DEFAULT 'None',\n    `timestamp` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'timestamp of last modification',\n    `ChildOrdersList` JSON NOT NULL DEFAULT JSON_OBJECT() CHECK(JSON_VALID(ChildOrdersList)),\n    `FragmentsList` JSON NOT NULL DEFAULT JSON_OBJECT() CHECK(JSON_VALID(FragmentsList)),\n    `LegPosTypeList` JSON NOT NULL DEFAULT JSON_OBJECT() CHECK(JSON_VALID(LegPosTypeList)),\n    `OrderLegsList` JSON NOT NULL DEFAULT JSON_OBJECT() CHECK(JSON_VALID(OrderLegsList)),\n    PRIMARY KEY USING HASH (`allocNumber`)\n) ENGINE=SRSE DEFAULT CHARSET=LATIN1 COMMENT='';\n\n"})})]})}function L(e={}){const{wrapper:o}={...(0,N.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(T,{...e})}):T(e)}},28453:(e,o,t)=>{t.d(o,{R:()=>r,x:()=>i});var n=t(96540);const N={},s=n.createContext(N);function r(e){const o=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function i(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(N):e.components||N:r(e.components),n.createElement(s.Provider,{value:o},e.children)}}}]);