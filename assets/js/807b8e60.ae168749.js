"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[36687],{47066:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>n,default:()=>o,frontMatter:()=>s,metadata:()=>l,toc:()=>a});var d=t(74848),i=t(28453);const s={title:"SpdrAutoHedgeControl"},n="Message: SpdrAutoHedgeControl (ID: 5295)",l={id:"Schema/Topics/strategy-autohedge/SpdrAutoHedgeControl",title:"SpdrAutoHedgeControl",description:"SpdrAutoHedgeControl contains autohedge / risk group control details.  Can be uploaded from SRSE, created from ExecutionEngines, or created by SR tools.BridgeFromV7:SpdrRiskGroupControl",source:"@site/docs/Schema/Topics/5290-strategy-autohedge/SpdrAutoHedgeControl.md",sourceDirName:"Schema/Topics/5290-strategy-autohedge",slug:"/Schema/Topics/strategy-autohedge/SpdrAutoHedgeControl",permalink:"/sr-docs/docs/Schema/Topics/strategy-autohedge/SpdrAutoHedgeControl",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"SpdrAutoHedgeControl"},sidebar:"schemaSidebar",previous:{title:"AutoHedgeSymbol",permalink:"/sr-docs/docs/Schema/Topics/strategy-autohedge/AutoHedgeSymbol"},next:{title:"SpdrAutoHedgeState",permalink:"/sr-docs/docs/Schema/Topics/strategy-autohedge/SpdrAutoHedgeState"}},c={},a=[{value:"META DATA  (Topic: strategy-autohedge )",id:"meta-data--topic-strategy-autohedge-",level:3},{value:"PRIMARY KEY",id:"primary-key",level:3},{value:"BODY",id:"body",level:3}];function h(e){const r={a:"a",h1:"h1",h3:"h3",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsxs)(r.h1,{id:"message-spdrautohedgecontrol-id-5295",children:["Message: SpdrAutoHedgeControl ",(0,d.jsx)("span",{className:"small-text",children:"(ID: 5295)"})]}),"\n",(0,d.jsxs)(r.p,{children:["SpdrAutoHedgeControl contains autohedge / risk group control details.  Can be uploaded from SRSE, created from ExecutionEngines, or created by SR tools.",(0,d.jsx)("br",{}),(0,d.jsx)("br",{}),"BridgeFromV7",":SpdrRiskGroupControl"]}),"\n",(0,d.jsxs)("div",{className:"single-message-meta",children:[(0,d.jsx)(r.h3,{id:"meta-data--topic-strategy-autohedge-",children:"META DATA  (Topic: strategy-autohedge )"}),(0,d.jsxs)(r.table,{children:[(0,d.jsx)(r.thead,{children:(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.th,{children:"Attribute"}),(0,d.jsx)(r.th,{children:"Value"})]})}),(0,d.jsxs)(r.tbody,{children:[(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"MLink Token"}),(0,d.jsx)(r.td,{children:"SystemData"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"SRSE Product"}),(0,d.jsx)(r.td,{children:"SRTrade"})]})]})]})]}),"\n",(0,d.jsxs)("div",{className:"single-message-primarykey",children:[(0,d.jsx)(r.h3,{id:"primary-key",children:"PRIMARY KEY"}),(0,d.jsxs)(r.table,{children:[(0,d.jsx)(r.thead,{children:(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.th,{children:"Field"}),(0,d.jsx)(r.th,{children:"Type"}),(0,d.jsx)(r.th,{children:"Comment"})]})}),(0,d.jsxs)(r.tbody,{children:[(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"accnt"}),(0,d.jsx)(r.td,{children:"string(16)"}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"riskGroupId"}),(0,d.jsx)(r.td,{children:"long"}),(0,d.jsx)(r.td,{children:"riskGroupId = 0 means hedgeScope = Accnt"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"hedgeSecKey"}),(0,d.jsx)(r.td,{children:"ExpiryKey"}),(0,d.jsx)(r.td,{children:"Execution Hedge SecKey (from SpdrParentExecution.hedgeSecKey)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"hedgeSecType"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../Enums/SpdrKeyType",children:"enum : SpdrKeyType"})}),(0,d.jsx)(r.td,{children:"Execution Hedge SecType (Stock or Future)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"clientFirm"}),(0,d.jsx)(r.td,{children:"string(16)"}),(0,d.jsx)(r.td,{})]})]})]})]}),"\n",(0,d.jsxs)("div",{className:"single-message-body",children:[(0,d.jsx)(r.h3,{id:"body",children:"BODY"}),(0,d.jsxs)(r.table,{children:[(0,d.jsx)(r.thead,{children:(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.th,{children:"Field"}),(0,d.jsx)(r.th,{children:"Type"}),(0,d.jsx)(r.th,{children:"Comment"})]})}),(0,d.jsxs)(r.tbody,{children:[(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"activeDuration"}),(0,d.jsx)(r.td,{children:"int"}),(0,d.jsx)(r.td,{children:"[optional] (number of seconds)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"altAccnt"}),(0,d.jsx)(r.td,{children:"string(32)"}),(0,d.jsx)(r.td,{children:'alternate (client assigned) "long" account string (optional) [used to map between client and SR account strings]'})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"altOrderId"}),(0,d.jsx)(r.td,{children:"string(24)"}),(0,d.jsx)(r.td,{children:"alternate order ID (usually clOrdId from client)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"altUserName"}),(0,d.jsx)(r.td,{children:"string(24)"}),(0,d.jsx)(r.td,{children:"alternate (client assigned) user name (optional) [used to map between client and SR account strings]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"autoHedge"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../Enums/AutoHedge",children:"enum : AutoHedge"})}),(0,d.jsx)(r.td,{children:"auto-hedge algorithm (used for restoring tickets)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"canOverlapCxlRepl"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../Enums/YesNo",children:"enum : YesNo"})}),(0,d.jsx)(r.td,{children:"can execution engines overlap cancel/replace operations [order can overfill if YES] (at most one active overlapping cxl/replace operation for each parent order)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"exchMask"}),(0,d.jsx)(r.td,{children:"uint"}),(0,d.jsx)(r.td,{children:"eligible exchanges (0 = all)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"execBrkrCode"}),(0,d.jsx)(r.td,{children:"string(16)"}),(0,d.jsx)(r.td,{children:"(optional) override the default execBrkrCode for this order"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"externExDest"}),(0,d.jsx)(r.td,{children:"string(12)"}),(0,d.jsx)(r.td,{children:"routing code for orders directed to an external order router (default = null); should match FixRoutingTable.destination (in SR accnt config)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"externParams"}),(0,d.jsx)(r.td,{children:"text1"}),(0,d.jsx)(r.td,{children:"external algo names/parameters (usually just an algo name)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"goodTillDttm"}),(0,d.jsx)(r.td,{children:"DateTime"}),(0,d.jsx)(r.td,{children:"[optional] (default: 2099-01-01)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"hedgeTarget"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../Enums/HedgeTarget",children:"enum : HedgeTarget"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"incMakeExchFee"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../Enums/IncExchFee",children:"enum : IncExchFee"})}),(0,d.jsx)(r.td,{children:"include exchange fee in probability"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"incTakeExchFee"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../Enums/IncExchFee",children:"enum : IncExchFee"})}),(0,d.jsx)(r.td,{children:"include exchange fee in probability"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"makeAlphaFactor"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"[-2,+2] makeProbLimit = MAX(makeProbability, makeProbAvg + makeAlphaFactor * makeProbStd) [if AlphaType = Relative]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"makeAlphaType"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../Enums/AlphaType",children:"enum : AlphaType"})}),(0,d.jsx)(r.td,{children:"Applies if makeLimitClass = Probability"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"makeExchRule"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../Enums/MakeExchRule",children:"enum : MakeExchRule"})}),(0,d.jsx)(r.td,{children:"ActiveMaker exchange preference rule: 'MaxPart' will pick exchanges to maximize participation; 'FeeOrder' will pick exchanges to minimize fees [maximize rebates]; 'ImprvOnly' will only make when improving NBBO."})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"makeLimitClass"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../Enums/SpdrLimitClass",children:"enum : SpdrLimitClass"})}),(0,d.jsx)(r.td,{children:"Simple = LimitPrice, Probability = BEST(LimitPrice, ProbLimit)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"makeProbability"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"makeProbLimit = makeProbability [if AlphaType = Static]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"marketSession"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../Enums/MarketSession",children:"enum : MarketSession"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxChildOrders"}),(0,d.jsx)(r.td,{children:"int"}),(0,d.jsx)(r.td,{children:"maximum number of child orders that can be generated by this parent order [order will terminate if/when this cap is reached;zero or neg = unlimited]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxExposureSize"}),(0,d.jsx)(r.td,{children:"int"}),(0,d.jsx)(r.td,{children:"maximum simultaneous cumulative child order public size exposure (-1 = orderActiveSize) [order can overfill if > orderActiveSize and numMakeExchanges > 1]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxHedgeDDelta"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxMakeExchFee"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"maximum making exchange fee (in point value) [zero = no limit; use non-zero number for limit to apply]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxTakeExchFee"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"maximum taking exchange fee (in point value) [zero = no limit; use non-zero number for limit to apply]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"minHedgeDDelta"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"do not generate autohedge orders if total group $Delta is between [minHedgeDDelta and maxHedgeDDelta] (eg.[-$100,000, +$100,000])"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"minMktOnClosePct"}),(0,d.jsx)(r.td,{children:"byte"}),(0,d.jsx)(r.td,{children:"Minimum pct [0 - 100] of order reserved for the on-close auction"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"numMakeExchanges"}),(0,d.jsx)(r.td,{children:"byte"}),(0,d.jsx)(r.td,{children:"number of exchanges (1 - 4) on which to publish public making orders.  Effective number might be less than requested number if sufficient exchanges are not available."})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"orderDuration"}),(0,d.jsx)(r.td,{children:"int"}),(0,d.jsx)(r.td,{children:"[optional] (number of seconds)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"orderLimitType"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../Enums/SpdrLimitType",children:"enum : SpdrLimitType"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"orderPrcLimit"}),(0,d.jsx)(r.td,{children:"double"}),(0,d.jsx)(r.td,{children:"Applies if LimitType = Prc[]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"orderPrcOffset"}),(0,d.jsx)(r.td,{children:"double"}),(0,d.jsx)(r.td,{children:"default=0"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"orderSize"}),(0,d.jsx)(r.td,{children:"int"}),(0,d.jsx)(r.td,{children:"initial (and maximum) size of a hedge parent buy or sell order.  note: actual working size will be controlled by the autohedge server based on filled deltas but working size cannot exceed orderSize"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"parentBalanceHandling"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../Enums/ParentBalanceHandling",children:"enum : ParentBalanceHandling"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"parentOrderHandling"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../Enums/ParentOrderHandling",children:"enum : ParentOrderHandling"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"positionType"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../Enums/PositionType",children:"enum : PositionType"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"progressExposeTime"}),(0,d.jsx)(r.td,{children:"int"}),(0,d.jsx)(r.td,{children:"minimum time (secs) to expose order (0 = no minimum; used to guarantee that the order is exposed at mid-market for some time before actively taking)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"progressRule"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../Enums/ProgressRule",children:"enum : ProgressRule"})}),(0,d.jsx)(r.td,{children:"Immediate = all size immediately available; TWAP = size released in time intervals;VWAP = size released in volume intervals;TwapForce = size released in intervals/execution forced at the end of interval"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"progressSliceCnt"}),(0,d.jsx)(r.td,{children:"byte"}),(0,d.jsx)(r.td,{children:"number of twap slices to use (default = 4 or 8) [max 20]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"publicSize"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../Enums/PublicSizeHandling",children:"enum : PublicSizeHandling"})}),(0,d.jsx)(r.td,{children:"public order size handling: None=use default size handling (usually limits public size to 'typical' market size); Randomize=randomize public size; FullSize=expose entire order size where possible"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"srcRoutingCode"}),(0,d.jsx)(r.td,{children:"string(65)"}),(0,d.jsx)(r.td,{children:"inbound FIX routing code or SRSE/tool server appID (if any)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"ssaleFlag"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../Enums/ShortSaleFlag",children:"enum : ShortSaleFlag"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"startDttm"}),(0,d.jsx)(r.td,{children:"DateTime"}),(0,d.jsx)(r.td,{children:"[optional] (parent order start time)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"stateModel"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../Enums/StateModel",children:"enum : StateModel"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"strategy"}),(0,d.jsx)(r.td,{children:"string(36)"}),(0,d.jsx)(r.td,{children:"client-supplied strategy string;visible on SpiderRock GUI tools and other order reports."})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"takeAlphaFactor"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"[-2,+2] takeProbLimit = MAX(takeProbability, takeProbAvg + takeAlphaFactor * takeProbStd) [if AlphaType = Relative]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"takeAlphaType"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../Enums/AlphaType",children:"enum : AlphaType"})}),(0,d.jsx)(r.td,{children:"Applies if takeLimitClass = Probability"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"takeLimitClass"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../Enums/SpdrLimitClass",children:"enum : SpdrLimitClass"})}),(0,d.jsx)(r.td,{children:"Simple = LimitPrice, Probability = BEST(LimitPrice, ProbLimit)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"takeProbability"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"takeProbLimit = takeProbability [if AlphaType = Static]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"timestamp"}),(0,d.jsx)(r.td,{children:"DateTime"}),(0,d.jsx)(r.td,{children:"record timestamp"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"userName"}),(0,d.jsx)(r.td,{children:"string(24)"}),(0,d.jsx)(r.td,{children:"name of the user entering the order"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"vwapParticipation"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"target vwap participation rate (target % of trade activity)"})]})]})]})]})]})}function o(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,d.jsx)(r,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}},28453:(e,r,t)=>{t.d(r,{R:()=>n,x:()=>l});var d=t(96540);const i={},s=d.createContext(i);function n(e){const r=d.useContext(s);return d.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:n(e.components),d.createElement(s.Provider,{value:r},e.children)}}}]);