"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([["88368"],{66922:function(e,n,i){i.r(n),i.d(n,{default:()=>h,frontMatter:()=>r,metadata:()=>s,assets:()=>l,toc:()=>d,contentTitle:()=>o});var s=JSON.parse('{"id":"Documentation/PlatformAPIs/MLink/ApiKeys","title":"MLink API Keys","description":"MLink API Keys are used to authenticate with the MLink API, typically for machine to machine applications. This page provides documentation for how developers can obtain and use API Keys to connect to MLink servers.","source":"@site/versioned_docs/version-8.5.3.3/Documentation/PlatformAPIs/MLink/5.ApiKeys.md","sourceDirName":"Documentation/PlatformAPIs/MLink","slug":"/Documentation/PlatformAPIs/MLink/ApiKeys","permalink":"/docs/8.5.3.3/Documentation/PlatformAPIs/MLink/ApiKeys","draft":false,"unlisted":false,"tags":[],"version":"8.5.3.3","sidebarPosition":5,"frontMatter":{"title":"MLink API Keys"},"sidebar":"documentationSidebar","previous":{"title":"Connecting with Postman","permalink":"/docs/8.5.3.3/Documentation/PlatformAPIs/MLink/Postman"},"next":{"title":"LiveImpliedQuote to LiveImpliedQuoteAdj Conversion","permalink":"/docs/8.5.3.3/Documentation/PlatformAPIs/MLink/MessageConversion"}}'),t=i("52676"),a=i("91503");let r={title:"MLink API Keys"},o=void 0,l={},d=[{value:"Obtaining an API Key",id:"obtaining-an-api-key",level:2},{value:"Using an API Key",id:"using-an-api-key",level:2},{value:"Example: API Key management using the MLink API",id:"example-api-key-management-using-the-mlink-api",level:3},{value:"Inserting (Creating) a new API Key",id:"inserting-creating-a-new-api-key",level:4},{value:"Updating an API Key",id:"updating-an-api-key",level:4},{value:"Deleting an API Key",id:"deleting-an-api-key",level:4},{value:"Listing API Keys",id:"listing-api-keys",level:4}];function c(e){let n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"MLink API Keys are used to authenticate with the MLink API, typically for machine to machine applications. This page provides documentation for how developers can obtain and use API Keys to connect to MLink servers."}),"\n",(0,t.jsx)(n.p,{children:"MLink API Keys are encrypted on the backend and once SpiderRock does not have a copy of the unencrypted API Key. When a key is created the unencrypted key is returned to the user and should be stored securely. If the key is lost, it must be deleted and a new key created."}),"\n",(0,t.jsx)(n.h2,{id:"obtaining-an-api-key",children:"Obtaining an API Key"}),"\n",(0,t.jsxs)(n.p,{children:["You can obtain an API Key either by using the home page or by using the MLink API.\nIn order create, modify or delete API Keys your UserConfig must have the ",(0,t.jsx)(n.code,{children:"hasApiKeyAccess"})," set to ",(0,t.jsx)(n.code,{children:"Yes"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["The simplest way to obtain an API Key is through the ",(0,t.jsx)(n.a,{href:"https://spiderrockconnect.com",children:"home page"}),'. On this site, you can create a new API Key by clicking on the "Create API Key" button and following the instructions.']}),"\n",(0,t.jsx)(n.h2,{id:"using-an-api-key",children:"Using an API Key"}),"\n",(0,t.jsxs)(n.p,{children:["You can provide the API key in the ",(0,t.jsx)(n.code,{children:"Authorization"})," header of your HTTP requests. The header should be in the following format:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Authorization: Bearer $MLINK_API_KEY\n"})}),"\n",(0,t.jsx)(n.p,{children:"Or you can pass it in the URL as a query parameter:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"https://mlink-live.nms.venus.spiderrockconnect.com/rest/json?cmd=...&apiKey=$MLINK_API_KEY\n"})}),"\n",(0,t.jsx)(n.h3,{id:"example-api-key-management-using-the-mlink-api",children:"Example: API Key management using the MLink API"}),"\n",(0,t.jsx)(n.p,{children:"Managing API Keys using the MLink API is primarily useful for lifecycle management for these credentials."}),"\n",(0,t.jsx)(n.p,{children:"To obtain an API Key using the MLink API, you can use the following steps:"}),"\n",(0,t.jsx)(n.p,{children:"You will need a a valid API Key or Session Key to authenticate your request. If you do not already have an API key you can obtain a Session Key with your username, password and MFA credentials."}),"\n",(0,t.jsx)(n.h4,{id:"inserting-creating-a-new-api-key",children:"Inserting (Creating) a new API Key"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["To create an API Key you use ",(0,t.jsx)(n.code,{children:"cmd=postmsgs"})," with a message type of ",(0,t.jsx)(n.code,{children:"UserApiKey"})," and a message body that includes the following fields:"]}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"label"}),": A user-defined label for the API Key."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"expire"}),": The expiration date for the API Key."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"action"}),": ",(0,t.jsx)(n.code,{children:"Insert"})," to create a new API Key."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Example URL for posting:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'\ncurl -vv --request POST \'https://mlink-live.nms.venus.spiderrockconnect.com/rest/json?cmd=postmsgs\' \\\n     -H "Authorization: Bearer $MLINK_API_KEY" \\\n     --data-raw \'{\n       "header": {\n         "mTyp": "UserApiKey"\n       },\n       "message": {\n         "id": null,\n         "expires": "2024-12-31 00:00:00.000000",\n         "label": "my first api key",\n         "action": "Insert"\n       }\n     }\'\n'})}),"\n",(0,t.jsx)(n.p,{children:"You can substitute a session key for the API key if you prefer."}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"The MLink server will respond with a message that includes the new API Key."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'{\n  "header": {\n    "mTyp": "UserApiKey"\n  },\n  "message": {\n    "id": 1,\n    "expires": "2024-12-31 00:00:00.000000",\n    "created": "2024-09-27 21:30:02.951423",\n    "label": "my first api key",\n    "plaintextApiKey": "C0FFEE00-3141-5926-5358-979323846264",\n    "success": "Yes",\n    "action": "Insert"\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"plaintextApiKey"})," is the unencrypted API Key that you should store securely."]}),"\n",(0,t.jsx)(n.h4,{id:"updating-an-api-key",children:"Updating an API Key"}),"\n",(0,t.jsxs)(n.p,{children:["To update an API Key you use ",(0,t.jsx)(n.code,{children:"cmd=postmsgs"})," with a message type of ",(0,t.jsx)(n.code,{children:"UserApiKey"})," and a message body that includes the following fields:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"id"}),": The ID of the API Key to update."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"label"}),": A user-defined label for the API Key."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"expire"}),": The expiration date for the API Key."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"action"}),": ",(0,t.jsx)(n.code,{children:"Update"})," to update an existing API Key."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["You may only update the ",(0,t.jsx)(n.code,{children:"expire"})," and ",(0,t.jsx)(n.code,{children:"label"})," fields of an API Key."]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'\ncurl --request POST \'https://mlink-live.nms.venus.spiderrockconnect.com/rest/json?cmd=postmsgs\' \\\n        -H "Authorization: Bearer $MLINK_API_KEY" \\\n        --data-raw \'{\n          "header": {\n            "mTyp": "UserApiKey"\n          },\n          "message": {\n            "id": 1,\n            "expires": "2025-12-31 00:00:00.000000",\n            "label": "my updated api key",\n            "action": "Update"\n          }\n        }\'\n'})}),"\n",(0,t.jsx)(n.h4,{id:"deleting-an-api-key",children:"Deleting an API Key"}),"\n",(0,t.jsxs)(n.p,{children:["To delete an API Key you use ",(0,t.jsx)(n.code,{children:"cmd=postmsgs"})," with a message type of ",(0,t.jsx)(n.code,{children:"UserApiKey"})," and a message body that includes the following fields:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"id"}),": The ID of the API Key to delete."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"action"}),": ",(0,t.jsx)(n.code,{children:"Delete"})," to delete an existing API Key."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'\ncurl -vv --request POST \'https://mlink-live.nms.venus.spiderrockconnect.com/rest/json?cmd=postmsgs\' \\\n        -H "Authorization: Bearer $MLINK_API_KEY" \\\n        --data-raw \'\n        {\n          "header": {\n            "mTyp": "UserApiKey"\n          },\n          "message": {\n            "id": 1,\n            "action": "Delete"\n          }\n        }\'\n'})}),"\n",(0,t.jsx)(n.h4,{id:"listing-api-keys",children:"Listing API Keys"}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"curl -vv POST 'https://mlink-live.nms.venus.spiderrockconnect.com/auth?cmd=getusermetadata' \\\n     -H \"Authorization: Bearer $MLINK_API_KEY\" \\\n     | jq '.[0].message.ApiKeys'\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example response:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "id": 1,\n    "label": "my first api key",\n    "expires": "2024-12-31 00:00:00.000000",\n    "created": "2024-09-27 22:04:11.664419"\n  },\n]\n'})}),"\n",(0,t.jsx)(n.p,{children:"Note that the plaintext API Key is not returned in the list of API Keys, it is only available when you create the API key.."})]})}function h(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},91503:function(e,n,i){i.d(n,{Z:function(){return o},a:function(){return r}});var s=i(75271);let t={},a=s.createContext(t);function r(e){let n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);