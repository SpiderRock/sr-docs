"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[86591],{53120:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>n,default:()=>a,frontMatter:()=>s,metadata:()=>l,toc:()=>h});var d=t(74848),i=t(28453);const s={title:"SpdrParentOrder"},n="Message: SpdrParentOrder (ID: 4095)",l={id:"Schema/Topics/parent-orders/SpdrParentOrder",title:"SpdrParentOrder",description:"SpdrParentOrder records are visible in SRSE immediately after receipt.  Parent orders received via FIX, SRSE or SpiderRock GUI tools, or 3rd party vendor systems are all visible in this table.Parent orders can be for stocks, futures, options or spreads.  And they can be one-sided (agency) or two-sided (facilitation) orders.  Parent order records should be immutable and not update.SpdrParentOrder records are published to the SpiderRock elatic cluster on arrival.",source:"@site/docs/Schema/Topics/3985-parent-orders/SpdrParentOrder.md",sourceDirName:"Schema/Topics/3985-parent-orders",slug:"/Schema/Topics/parent-orders/SpdrParentOrder",permalink:"/docs/Schema/Topics/parent-orders/SpdrParentOrder",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"SpdrParentOrder"},sidebar:"schemaSidebar",previous:{title:"SpdrParentLimit",permalink:"/docs/Schema/Topics/parent-orders/SpdrParentLimit"},next:{title:"SpdrParentReport",permalink:"/docs/Schema/Topics/parent-orders/SpdrParentReport"}},c={},h=[{value:"META DATA  (Topic: parent-orders )",id:"meta-data--topic-parent-orders-",level:3},{value:"PRIMARY KEY",id:"primary-key",level:3},{value:"BODY",id:"body",level:3},{value:"REPEATING FIELDS",id:"repeating-fields",level:3}];function x(e){const r={a:"a",h1:"h1",h3:"h3",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsxs)(r.h1,{id:"message-spdrparentorder-id-4095",children:["Message: SpdrParentOrder ",(0,d.jsx)("span",{className:"small-text",children:"(ID: 4095)"})]}),"\n",(0,d.jsxs)(r.p,{children:["SpdrParentOrder records are visible in SRSE immediately after receipt.  Parent orders received via FIX, SRSE or SpiderRock GUI tools, or 3rd party vendor systems are all visible in this table.",(0,d.jsx)("br",{}),(0,d.jsx)("br",{}),"Parent orders can be for stocks, futures, options or spreads.  And they can be one-sided (agency) or two-sided (facilitation) orders.  Parent order records should be immutable and not update.",(0,d.jsx)("br",{}),(0,d.jsx)("br",{}),"SpdrParentOrder records are published to the SpiderRock elatic cluster on arrival."]}),"\n",(0,d.jsxs)("div",{className:"single-message-meta",children:[(0,d.jsx)(r.h3,{id:"meta-data--topic-parent-orders-",children:"META DATA  (Topic: parent-orders )"}),(0,d.jsxs)(r.table,{children:[(0,d.jsx)(r.thead,{children:(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.th,{children:"Attribute"}),(0,d.jsx)(r.th,{children:"Value"})]})}),(0,d.jsxs)(r.tbody,{children:[(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"MLink Token"}),(0,d.jsx)(r.td,{children:"ClientTrading"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"SRSE Product"}),(0,d.jsx)(r.td,{children:"SRTrade"})]})]})]})]}),"\n",(0,d.jsxs)("div",{className:"single-message-primarykey",children:[(0,d.jsx)(r.h3,{id:"primary-key",children:"PRIMARY KEY"}),(0,d.jsxs)(r.table,{children:[(0,d.jsx)(r.thead,{children:(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.th,{children:"Field"}),(0,d.jsx)(r.th,{children:"Type"}),(0,d.jsx)(r.th,{children:"Comment"})]})}),(0,d.jsx)(r.tbody,{children:(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"parentNumber"}),(0,d.jsx)(r.td,{children:"long"}),(0,d.jsx)(r.td,{children:"SPDR order number"})]})})]})]}),"\n",(0,d.jsxs)("div",{className:"single-message-body",children:[(0,d.jsx)(r.h3,{id:"body",children:"BODY"}),(0,d.jsxs)(r.table,{children:[(0,d.jsx)(r.thead,{children:(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.th,{children:"Field"}),(0,d.jsx)(r.th,{children:"Type"}),(0,d.jsx)(r.th,{children:"Comment"})]})}),(0,d.jsxs)(r.tbody,{children:[(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"accnt"}),(0,d.jsx)(r.td,{children:"string(16)"}),(0,d.jsx)(r.td,{children:"SR trading account"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"activeDuration"}),(0,d.jsx)(r.td,{children:"int"}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"addCumFillQuantity"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,d.jsx)(r.td,{children:"If Yes then OrderSize is calculated @ order arrival as requested OrderSize + existing 'CumFillQuantity'."})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"altAccnt"}),(0,d.jsx)(r.td,{children:"string(32)"}),(0,d.jsx)(r.td,{children:'alternate (client assigned) "long" account string (optional) [used to map between client and SR account strings]'})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"altAutoHedgeId"}),(0,d.jsx)(r.td,{children:"string(24)"}),(0,d.jsx)(r.td,{children:"alternate order ID for child autohedge orders (if any)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"altOrderId"}),(0,d.jsx)(r.td,{children:"string(24)"}),(0,d.jsx)(r.td,{children:"alternate order ID (usually clOrdId from client)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"altPrevOrderId"}),(0,d.jsx)(r.td,{children:"string(24)"}),(0,d.jsx)(r.td,{children:"alternate prev order ID (usually origClOrdId from client during cxl/replace)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"altUserName"}),(0,d.jsx)(r.td,{children:"string(24)"}),(0,d.jsx)(r.td,{children:"alternate (client assigned) user name (optional) [used to map between client and SR account strings]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"auctionResponder"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/AuctionResponder",children:"enum : AuctionResponder"})}),(0,d.jsx)(r.td,{children:"if set, parent order can be an auction responder"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"autoHedge"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/AutoHedge",children:"enum : AutoHedge"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"blockVisibility"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/BlockVisibility",children:"enum : BlockVisibility"})}),(0,d.jsx)(r.td,{children:"for BlockAuction orders, visibility (to responders) is neither, side only, or side + price"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"canOverlapCxlRepl"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,d.jsx)(r.td,{children:"can execution engines overlap cancel/replace operations [order can overfill if YES] (at most one active overlapping cxl/replace operation for each parent order)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"childData"}),(0,d.jsx)(r.td,{children:"text1"}),(0,d.jsx)(r.td,{children:"client supplied data field; passes through to down stream child orders"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"clArriveMark"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"client specified arrival mark (passed through to ParentExecution; markup only)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"clientFirm"}),(0,d.jsx)(r.td,{children:"string(16)"}),(0,d.jsx)(r.td,{children:"SR client firm"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"clientSeqNumIn"}),(0,d.jsx)(r.td,{children:"int"}),(0,d.jsx)(r.td,{children:"inbound client seq number (FIX orders only)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"curCumFillQuantity"}),(0,d.jsx)(r.td,{children:"int"}),(0,d.jsx)(r.td,{children:"set order size = orderSize - Max(0, curCumFillQty - ee.cumFillQty) (used to ensure integrity of submitted cxl/replace orders)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"cxlUPrcRange"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/UPrcCxl",children:"enum : UPrcCxl"})}),(0,d.jsx)(r.td,{children:"cancel parent order if/when outside the uPrice range [ _Halt = also cancel if halted ]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"ddivOverride"}),(0,d.jsx)(r.td,{children:"text1"}),(0,d.jsxs)(r.td,{children:["discrete dividend string override ([yearsToExpiry,divYears",":divAmount",",divYears",":divAmount",", ...])"]})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"exchMask"}),(0,d.jsx)(r.td,{children:"uint"}),(0,d.jsx)(r.td,{children:"eligible exchanges (0 = all)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"exchTraderId"}),(0,d.jsx)(r.td,{children:"string(16)"}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"execBrkrCode"}),(0,d.jsx)(r.td,{children:"string(16)"}),(0,d.jsx)(r.td,{children:"overrides the default executing broker for this parent order"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"expDayWtVegaOffset"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"max acct+symbol day wtVega offset (target)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"externExDest"}),(0,d.jsx)(r.td,{children:"string(16)"}),(0,d.jsx)(r.td,{children:"routing code for orders directed to an external order router (default = null); must match an exDest associated with a RouteDefinition"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"externHedgeExDest"}),(0,d.jsx)(r.td,{children:"string(16)"}),(0,d.jsx)(r.td,{children:"external broker exDest (only used if orderHandling=Extern)\t\t\t# Should match FixRoutingTable.destination type (eg. #Nighthawk)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"externHedgeParams"}),(0,d.jsx)(r.td,{children:"text1"}),(0,d.jsx)(r.td,{children:"external algo names/parameters (usually just an algo name)\t\t\t# usually copied from the FixRoutingTable.externParams"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"externParams"}),(0,d.jsx)(r.td,{children:"text1"}),(0,d.jsx)(r.td,{children:"external algo names/parameters (usually just an algo name)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"firmType"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/FirmType",children:"enum : FirmType"})}),(0,d.jsx)(r.td,{children:"used to override firmType in account config"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"goodTillDttm"}),(0,d.jsx)(r.td,{children:"DateTime"}),(0,d.jsx)(r.td,{children:"[optional] (default: 2099-01-01)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"groupingCode"}),(0,d.jsx)(r.td,{children:"long"}),(0,d.jsx)(r.td,{children:"unique broker code;broker.pkey = (key + accnt + spdrSource + groupingCode)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"grpDayRMetric1Ratio"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"target bot / sld ratio (eg ratio=0.5 means that neutral is bot rMetric1 = 0.5x sld rMetric1)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"grpDayVegaRatio"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"target bot / sld ratio (eg ratio=2.0 means that neutral is bot vega = 2x sld vega)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"hedgeBetaRatio"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"portion of executed $money to auto-hedge (can be 1.0 / Beta for beta hedging) [-4.0 to +4.0]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"hedgeInstrument"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/HedgeInst",children:"enum : HedgeInst"})}),(0,d.jsx)(r.td,{children:"Default=actual underlier (EQT or FUT) [IndexOptions use ETF]; FrontMonth=actual underlier (EQT) or front month (FUT) [IndexOptions use FM Fut]; Stock=hedgeSecKey.TickerKey; Future=hedgeSecKey.ExpiryKey"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"hedgeScope"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/HedgeScope",children:"enum : HedgeScope"})}),(0,d.jsx)(r.td,{children:"hedge group scope [RiskGroup or Accnt]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"hedgeSecKey"}),(0,d.jsx)(r.td,{children:"ExpiryKey"}),(0,d.jsx)(r.td,{children:"autohedge instrument (can be a TickerKey (stock) or ExpiryKey (future)) [required for Stock and Future]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"hedgeSession"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/MarketSession",children:"enum : MarketSession"})}),(0,d.jsx)(r.td,{children:"market session for the autohedge order [defaults to pOrder.marketSession]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"incMakeExchFee"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/IncExchFee",children:"enum : IncExchFee"})}),(0,d.jsx)(r.td,{children:"include exchange fee in probability and surface based make limit calculations"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"incTakeExchFee"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/IncExchFee",children:"enum : IncExchFee"})}),(0,d.jsx)(r.td,{children:"include exchange fee in probability and surface based take limit calculations"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"includeSRNetwork"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/InclExclDisclose",children:"enum : InclExclDisclose"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"largeTraderId"}),(0,d.jsx)(r.td,{children:"string(16)"}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"lastFillDttm"}),(0,d.jsx)(r.td,{children:"DateTime"}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"leadSide"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,d.jsx)(r.td,{children:"for legged orders, which side to lead with.  (optional, None ok)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"makeAlphaFactor"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"[-2,+2] makeProbLimit = MAX(makeProbability, makeProbAvg + makeAlphaFactor * makeProbStd) [if AlphaType = Relative]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"makeAlphaType"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/AlphaType",children:"enum : AlphaType"})}),(0,d.jsx)(r.td,{children:"Applies if makeLimitClass = Probability"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"makeExchRule"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/MakeExchRule",children:"enum : MakeExchRule"})}),(0,d.jsx)(r.td,{children:"ActiveMaker exch preference: 'MaxPart' = max participation; 'FeeOrder' = minimize fees [max rebates]; 'ImprvOnly' will only make when improving NBBO; 'RoundRobin' will rotate through exch list; 'ProRataOptim' will post on pro-rata only."})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"makeLimitClass"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/SpdrLimitClass",children:"enum : SpdrLimitClass"})}),(0,d.jsx)(r.td,{children:"Simple = LimitPrice +/- offset, Surface = BEST(LimitPrice, SurfLimit), Probability = BEST(LimitPrice, ProbLimit), SurfProb  = BEST(LimitPrice, SurfLimit, ProbLimit)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"makeProbability"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"makeProbLimit = makeProbability [if AlphaType = Static]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"makeSurfPrcOffset"}),(0,d.jsx)(r.td,{children:"double"}),(0,d.jsx)(r.td,{children:"default=0"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"makeSurfVolOffset"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"default=0"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"makeSurfWidthOffset"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"[-1.x to +1.x]       -1.0 = -0.5 * avgMktWidth, +1.0 = +0.5 * avgMktWidth"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"marketSession"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/MarketSession",children:"enum : MarketSession"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxChildOrders"}),(0,d.jsx)(r.td,{children:"int"}),(0,d.jsx)(r.td,{children:"maximum number of child orders that can be generated by this parent order [order will terminate if/when this cap is reached;zero or neg = unlimited]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxCompletionSlippage"}),(0,d.jsx)(r.td,{children:"double"}),(0,d.jsx)(r.td,{children:"maximum price slippage to complete an open basket"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxExpDayRMetric6Ln"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"max acct+expiration day rMetric6 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxExpDayRMetric6Sh"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"max acct+expiration day rMetric6 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxExpDayWtVegaLn"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"max accnt+expiration day (time weighted) vega long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxExpDayWtVegaSh"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"max accnt+expiration day (time weighted) vega short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxExposureSize"}),(0,d.jsx)(r.td,{children:"int"}),(0,d.jsx)(r.td,{children:"maximum simultaneous cumulative child order public size exposure (-1 = orderActiveSize) [order can overfill if > orderActiveSize and numMakeExchanges > 1]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxGrpDayContractsAbs"}),(0,d.jsx)(r.td,{children:"int"}),(0,d.jsx)(r.td,{children:"max acct+riskGroup day opt contracts abs (positive number;-1=no limit);risk limit = max limit - abs(current net counter)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxGrpDayContractsLn"}),(0,d.jsx)(r.td,{children:"int"}),(0,d.jsx)(r.td,{children:"max acct+riskGroup day opt contracts long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxGrpDayContractsSh"}),(0,d.jsx)(r.td,{children:"int"}),(0,d.jsx)(r.td,{children:"max acct+riskGroup day opt contracts short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxGrpDayDDeltaLn"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"max acct+riskGroup day $delta long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxGrpDayDDeltaSh"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"max acct+riskGroup day $delta short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxGrpDayRMetric1Abs"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"max acct+riskGroup day rMetric1 abs (positive number;-1=no limit);risk limit = max limit - abs(current net counter)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxGrpDayRMetric1Ln"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"max acct+riskGroup day rMetric1 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxGrpDayRMetric1Sh"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"max acct+riskGroup day rMetric1 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxGrpDayRMetric2Ln"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"max acct+riskGroup day rMetric2 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxGrpDayRMetric2Sh"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"max acct+riskGroup day rMetric2 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxGrpDayRMetric3Ln"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"max acct+riskGroup day rMetric3 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxGrpDayRMetric3Sh"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"max acct+riskGroup day rMetric3 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxGrpDayRMetric4Ln"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"max acct+riskGroup day rMetric4 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxGrpDayRMetric4Sh"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"max acct+riskGroup day rMetric4 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxGrpDayRMetric5Ln"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"max acct+riskGroup day rMetric5 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxGrpDayRMetric5Sh"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"max acct+riskGroup day rMetric5 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxGrpDayVegaAbs"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"max acct+riskGroup day vega abs (positive number;-1=no limit);risk limit = max limit - abs(current net counter)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxGrpDayVegaLn"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"max acct+riskGroup day vega long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxGrpDayVegaSh"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"max acct+riskGroup day vega short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxMakeExchFee"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"maximum making exchange fee (in point value) [zero = no limit; use non-zero number for limit to apply]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxSymDayDDeltaLn"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"max acct+symbol day $delta long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxSymDayDDeltaSh"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"max acct+symbol day $delta short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxSymDayRMetric7Ln"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"max acct+symbol day rMetric7 long (positive number;-1=no limit);risk limit = max limit - current net counter"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxSymDayRMetric7Sh"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"max acct+symbol day rMetric7 short (positive number;-1=no limit);risk limit = max limit + current net counter"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxSymDayVegaLn"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"max acct+symbol day vega long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxSymDayVegaSh"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"max acct+symbol day vega short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxSymDayWtVegaLn"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"max acct+symbol day (time weighted) vega long (positive number;-1=no limit);risk limit = max limit - (current net counter - offset)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxSymDayWtVegaSh"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"max acct+symbol day (time weighted) vega short (positive number;-1=no limit);risk limit = max limit + (current net counter - offset)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxTakeExchFee"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"maximum taking exchange fee (in point value) [zero = no limit; use non-zero number for limit to apply]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"maxUAsk"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"[optional] (< $0.01 = none)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"minMaxType"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/MinMaxType",children:"enum : MinMaxType"})}),(0,d.jsx)(r.td,{children:"if Prc minUBid/maxUAsk are expressed as prices; if Pct then they are expresses as pct change since parent order arrival"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"minMktOnClosePct"}),(0,d.jsx)(r.td,{children:"byte"}),(0,d.jsx)(r.td,{children:"Minimum pct [0 - 100] of order reserved for the on-close (MOC) auction"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"minOptionPx"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"[optional] option price floor for tied to stock orders"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"minUBid"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"[optional]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"noCrossGroup"}),(0,d.jsx)(r.td,{children:"string(16)"}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"noticeNumber"}),(0,d.jsx)(r.td,{children:"long"}),(0,d.jsx)(r.td,{children:"required when parentOrderHandling = BlockResponse"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"numMakeExchanges"}),(0,d.jsx)(r.td,{children:"byte"}),(0,d.jsx)(r.td,{children:"number of exchanges (1 - 4) on which to publish public making orders.  Effective number might be less than requested number if sufficient exchanges are not available."})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"orderActiveSize"}),(0,d.jsx)(r.td,{children:"int"}),(0,d.jsx)(r.td,{children:"total activated size (total size released for execution) (-1 = all available size)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"orderCapacity"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/OrderCapacity",children:"enum : OrderCapacity"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"orderDttm"}),(0,d.jsx)(r.td,{children:"DateTime"}),(0,d.jsx)(r.td,{children:"order entry time (from client;if any)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"orderDuration"}),(0,d.jsx)(r.td,{children:"int"}),(0,d.jsx)(r.td,{children:"[optional] (number of seconds)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"orderLimitType"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/SpdrLimitType",children:"enum : SpdrLimitType"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"orderPrcLimit"}),(0,d.jsx)(r.td,{children:"double"}),(0,d.jsx)(r.td,{children:"Applies if LimitType = Prc[]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"orderPrcOffset"}),(0,d.jsx)(r.td,{children:"double"}),(0,d.jsx)(r.td,{children:"default=0 [surface, relX and pegX limit offsets]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"orderRefDelta"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"default=option.delta"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"orderRefEventDttm"}),(0,d.jsx)(r.td,{children:"DateTime"}),(0,d.jsx)(r.td,{children:"Date/time of the next event.  Note that events are usually earnings but are not required to be."})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"orderRefEventMult"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"expected underlier abs move (0.01 = 1%) @ orderRefEventDttm"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"orderRefGamma"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"default=option.gamma"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"orderRefPremium"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"reference premium (mleg orders only)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"orderRefRMetric1"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"user supplied RMetric1 value (used in RiskGroupID risk controls) [netRMetric1 = sum(fillQty * orderRefRMetric1 * underlierPerCn)]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"orderRefRMetric2"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"user supplied RMetric2 value (used in RiskGroupID risk controls) [netRMetric2 = sum(fillQty * orderRefRMetric2 * underlierPerCn)]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"orderRefRMetric3"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"user supplied RMetric3 value (used in RiskGroupID risk controls) [netRMetric3 = sum(fillQty * orderRefRMetric3 * underlierPerCn)]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"orderRefRMetric4"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"user supplied RMetric4 value (used in RiskGroupID risk controls) [netRMetric4 = sum(fillQty * orderRefRMetric4 * underlierPerCn)]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"orderRefRMetric5"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"user supplied RMetric5 value (used in RiskGroupID risk controls) [netRMetric5 = sum(fillQty * orderRefRMetric5 * underlierPerCn)]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"orderRefRMetric6"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"user supplied RMetric6 value (used in ExpDay risk controls) [netRMetric6 = sum(fillQty * orderRefRMetric6 * underlierPerCn)]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"orderRefRMetric7"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"user supplied RMetric7 value (used in SymDay risk controls) [netRMetric7 = sum(fillQty * orderRefRMetric7 * underlierPerCn)]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"orderRefUPrc"}),(0,d.jsx)(r.td,{children:"double"}),(0,d.jsx)(r.td,{children:"default=underlier.mid"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"orderSide"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"orderSize"}),(0,d.jsx)(r.td,{children:"int"}),(0,d.jsx)(r.td,{children:"maximum fill size (contracts)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"orderVolLimit"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"Applies if LimitType = Vol[] [uses SR dividends and borrow rates]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"overrideCode"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/OverrideCode",children:"enum : OverrideCode"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"packageId"}),(0,d.jsx)(r.td,{children:"long"}),(0,d.jsx)(r.td,{children:"references spread orderNumber, if a legged spread order or auto-hedge order"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"parentBalanceHandling"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/ParentBalanceHandling",children:"enum : ParentBalanceHandling"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"parentOrderHandling"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/ParentOrderHandling",children:"enum : ParentOrderHandling"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"parentShape"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/SpdrOrderShape",children:"enum : SpdrOrderShape"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"positionType"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/PositionType",children:"enum : PositionType"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"progressExposeTime"}),(0,d.jsx)(r.td,{children:"int"}),(0,d.jsx)(r.td,{children:"minimum time (secs) to expose order (0 = no minimum; used to guarantee that the order is exposed at mid-market for some time before actively taking)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"progressRule"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/ProgressRule",children:"enum : ProgressRule"})}),(0,d.jsx)(r.td,{children:"Immediate = all size immediately available; TWAP = work from arrival to expiration; VWAP = work order not faster than participation rate"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"progressSliceCnt"}),(0,d.jsx)(r.td,{children:"byte"}),(0,d.jsx)(r.td,{children:"number of slices to use (default = 4 or 8) [max 20]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"publicSize"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/PublicSizeHandling",children:"enum : PublicSizeHandling"})}),(0,d.jsx)(r.td,{children:"public order size handling: None=algo default; Randomize=randomize public size; MktSize=expose typical market size; FullSize=expose entire order size where possible; FullSizeR=randomize full size"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"rateOverride"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"zero = ignore; > zero = override"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"refRMetric1Src"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/RMetricSource",children:"enum : RMetricSource"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"refRMetric2Src"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/RMetricSource",children:"enum : RMetricSource"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"refRMetric3Src"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/RMetricSource",children:"enum : RMetricSource"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"refRMetric4Src"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/RMetricSource",children:"enum : RMetricSource"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"refRMetric5Src"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/RMetricSource",children:"enum : RMetricSource"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"refRMetric6Src"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/RMetricSource",children:"enum : RMetricSource"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"refRMetric7Src"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/RMetricSource",children:"enum : RMetricSource"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"reqAuxRiskGroupCtrl"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"riskGroupId"}),(0,d.jsx)(r.td,{children:"long"}),(0,d.jsx)(r.td,{children:"all orders with the same riskGroupId share a common set of risk counters;.Grp. risk limits apply to these shared counters"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"runStatus"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/RunStatus",children:"enum : RunStatus"})}),(0,d.jsx)(r.td,{children:"original (source) run status [Prod,Beta]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"sdivOverride"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"secKey"}),(0,d.jsx)(r.td,{children:"OptionKey"}),(0,d.jsx)(r.td,{children:"Composite Security Key"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"secType"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/SpdrKeyType",children:"enum : SpdrKeyType"})}),(0,d.jsx)(r.td,{children:"Security Type [Stock, Future, Option]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"securityDesc"}),(0,d.jsx)(r.td,{children:"text1"}),(0,d.jsx)(r.td,{children:"additional security description"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"sgwTimestamp"}),(0,d.jsx)(r.td,{children:"long"}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"spdrActionType"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/SpdrActionType",children:"enum : SpdrActionType"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"spdrSource"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/SpdrSource",children:"enum : SpdrSource"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"spdrStageType"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/SpdrStageType",children:"enum : SpdrStageType"})}),(0,d.jsx)(r.td,{children:"note: stageType != None implies both KeepAlive behavior and makes the order visible on tools"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"srcRoutingCode"}),(0,d.jsx)(r.td,{children:"text1"}),(0,d.jsx)(r.td,{children:"inbound FIX routing code or SRSE/tool server appID (if any)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"srcTimestamp"}),(0,d.jsx)(r.td,{children:"long"}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"ssaleFlag"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum : ShortSaleFlag"})}),(0,d.jsx)(r.td,{children:"used to determine stock auto-hedge flags"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"startDttm"}),(0,d.jsx)(r.td,{children:"DateTime"}),(0,d.jsx)(r.td,{children:"[optional] (parent order start time)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"startType"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/StartType",children:"enum : StartType"})}),(0,d.jsx)(r.td,{children:"WaitTrigger associates this order with a triggerGroupId.  The initial wave of child orders from the TriggerGroup will be send when a (final) parent order with startType=TriggerAll or when an external trigger signal is received."})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"stateModel"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/StateModel",children:"enum : StateModel"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"strategy"}),(0,d.jsx)(r.td,{children:"string(36)"}),(0,d.jsx)(r.td,{children:"client-supplied strategy string;visible on SpiderRock GUI tools and other order reports."})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"symDayDDeltaOffset"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"max acct+symbol day $delta offset (target)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"symDayVegaOffset"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"max acct+symbol day vega offset (target)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"symDayWtVegaOffset"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"max acct+symbol day wtVega offset (target)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"symEmaCxlDDeltaLn"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"max acct+symbol 60s EMA $delta long (positive number; <= 0 is no limit) [will immediately cxl all option orders in a symbol if any order in the symbol breaches]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"symEmaCxlDDeltaSh"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"max acct+symbol 60s EMA $delta short (positive number; <= 0 is no limit)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"symEmaCxlWtVegaLn"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"max acct+symbol 60s EMA wtVega long (positive number; <= 0 is no limit) [will immediately cxl all option orders in a symbol if any order in the symbol breaches]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"symEmaCxlWtVegaSh"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"max acct+symbol 60s EMA wtVega short (positive number; <= 0 is no limit)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"sysEnvironment"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/SysEnvironment",children:"enum : SysEnvironment"})}),(0,d.jsx)(r.td,{children:"original (source) sys environment [Stable, Current, etc]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"takeAlphaFactor"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"[-2,+2] takeProbLimit = MAX(takeProbability, takeProbAvg + takeAlphaFactor * takeProbStd) [if AlphaType = Relative]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"takeAlphaType"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/AlphaType",children:"enum : AlphaType"})}),(0,d.jsx)(r.td,{children:"Applies if takeLimitClass = Probability"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"takeLimitClass"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/SpdrLimitClass",children:"enum : SpdrLimitClass"})}),(0,d.jsx)(r.td,{children:"Simple = LimitPrice +/- offset, Surface = BEST(LimitPrice, SurfLimit), Probability = BEST(LimitPrice, ProbLimit), SurfProb  = BEST(LimitPrice, SurfLimit, ProbLimit)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"takeProbability"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"takeProbLimit = takeProbability [if AlphaType = Static]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"takeReachRule"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/ReachRule",children:"enum : ReachRule"})}),(0,d.jsx)(r.td,{children:"None = size immediately available; Delayed = available after [1-3] seconds; Passive = available if contra side aggresses; WeakOnly = only take if available size < avgMarketSize; ISOSweep = Intermarket Sweep [requires WaitTrigger]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"takeSurfPrcOffset"}),(0,d.jsx)(r.td,{children:"double"}),(0,d.jsx)(r.td,{children:"default=0"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"takeSurfVolOffset"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"default=0"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"takeSurfWidthOffset"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"[-1.x to +1.x]       -1.0 = -0.5 * avgMktWidth, +1.0 = +0.5 * avgMktWidth"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"theoVol"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"client supplied theoretical volatility (used for markup only)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"timestamp"}),(0,d.jsx)(r.td,{children:"DateTime"}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"tradingLocation"}),(0,d.jsx)(r.td,{children:"string(16)"}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"triggerGroupId"}),(0,d.jsx)(r.td,{children:"long"}),(0,d.jsx)(r.td,{children:"triggerGroupId is required if startType=WaitTrigger; note that child orders from all parent orders in the trigger group will be organized and released optimally when the triggerGroup is released"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"triggerLevel"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"stop/trigger level for parent order to go active (can be either a price or vol)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"triggerTimestamp"}),(0,d.jsx)(r.td,{children:"long"}),(0,d.jsx)(r.td,{children:"WaitTrigger trigger timestamp (nanoseconds since epoch)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"triggerType"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/TriggerType",children:"enum : TriggerType"})}),(0,d.jsx)(r.td,{children:"type of trigger (PrintVol/SurfVol only for options) [print = print or actionable quote]"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"uStateModel"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/StateModel",children:"enum : StateModel"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"userData1"}),(0,d.jsx)(r.td,{children:"text1"}),(0,d.jsx)(r.td,{children:"client supplied data field; passes through to parent and child executions and reports as well as FIX drops"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"userData2"}),(0,d.jsx)(r.td,{children:"text1"}),(0,d.jsx)(r.td,{children:"client supplied data field; passes through to parent and child executions and reports as well as FIX drops"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"userName"}),(0,d.jsx)(r.td,{children:"string(24)"}),(0,d.jsx)(r.td,{children:"name of the user entering the order"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"userSource"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/SpdrSource",children:"enum : SpdrSource"})}),(0,d.jsx)(r.td,{children:"SpdrSource of this order (assumed to be the same as spdrSource if None)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"vwapParticipation"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"target vwap participation rate (target % of trade activity)"})]})]})]}),(0,d.jsx)(r.h3,{id:"repeating-fields",children:"REPEATING FIELDS"}),(0,d.jsx)(r.p,{children:"DirectedCounterParty"}),(0,d.jsxs)(r.table,{children:[(0,d.jsx)(r.thead,{children:(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.th,{children:"Field"}),(0,d.jsx)(r.th,{children:"Type"}),(0,d.jsx)(r.th,{children:"Comment"})]})}),(0,d.jsxs)(r.tbody,{children:[(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"clientFirm"}),(0,d.jsx)(r.td,{children:"string(16)"}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"inclExcl"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/InclExclDisclose",children:"enum : InclExclDisclose"})}),(0,d.jsx)(r.td,{})]})]})]}),(0,d.jsx)(r.p,{children:"OrderLegs"}),(0,d.jsxs)(r.table,{children:[(0,d.jsx)(r.thead,{children:(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.th,{children:"Field"}),(0,d.jsx)(r.th,{children:"Type"}),(0,d.jsx)(r.th,{children:"Comment"})]})}),(0,d.jsxs)(r.tbody,{children:[(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"altLegId1"}),(0,d.jsx)(r.td,{children:"string(24)"}),(0,d.jsx)(r.td,{children:"client leg Id (usually from a FIX order)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"altLegId2"}),(0,d.jsx)(r.td,{children:"string(24)"}),(0,d.jsx)(r.td,{children:"client leg Id (usually from a FIX order)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"altLegId3"}),(0,d.jsx)(r.td,{children:"string(24)"}),(0,d.jsx)(r.td,{children:"client leg Id (usually from a FIX order)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"altLegId4"}),(0,d.jsx)(r.td,{children:"string(24)"}),(0,d.jsx)(r.td,{children:"client leg Id (usually from a FIX order)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"altLegId5"}),(0,d.jsx)(r.td,{children:"string(24)"}),(0,d.jsx)(r.td,{children:"client leg Id (usually from a FIX order)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"altLegId6"}),(0,d.jsx)(r.td,{children:"string(24)"}),(0,d.jsx)(r.td,{children:"client leg Id (usually from a FIX order)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"altStkLegId"}),(0,d.jsx)(r.td,{children:"string(24)"}),(0,d.jsx)(r.td,{children:"client stock leg ID (usually from a FIX order)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"legId1"}),(0,d.jsx)(r.td,{children:"long"}),(0,d.jsx)(r.td,{children:"SR leg Id"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"legId2"}),(0,d.jsx)(r.td,{children:"long"}),(0,d.jsx)(r.td,{children:"SR leg Id"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"legId3"}),(0,d.jsx)(r.td,{children:"long"}),(0,d.jsx)(r.td,{children:"SR leg Id"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"legId4"}),(0,d.jsx)(r.td,{children:"long"}),(0,d.jsx)(r.td,{children:"SR leg Id"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"legId5"}),(0,d.jsx)(r.td,{children:"long"}),(0,d.jsx)(r.td,{children:"SR leg Id"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"legId6"}),(0,d.jsx)(r.td,{children:"long"}),(0,d.jsx)(r.td,{children:"SR leg Id"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"mult1"}),(0,d.jsx)(r.td,{children:"ushort"}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"mult2"}),(0,d.jsx)(r.td,{children:"ushort"}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"mult3"}),(0,d.jsx)(r.td,{children:"ushort"}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"mult4"}),(0,d.jsx)(r.td,{children:"ushort"}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"mult5"}),(0,d.jsx)(r.td,{children:"ushort"}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"mult6"}),(0,d.jsx)(r.td,{children:"ushort"}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"numLegs"}),(0,d.jsx)(r.td,{children:"byte"}),(0,d.jsx)(r.td,{children:"number of valid legs below"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"posType1"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/PositionType",children:"enum : PositionType"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"posType2"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/PositionType",children:"enum : PositionType"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"posType3"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/PositionType",children:"enum : PositionType"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"posType4"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/PositionType",children:"enum : PositionType"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"posType5"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/PositionType",children:"enum : PositionType"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"posType6"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/PositionType",children:"enum : PositionType"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"refDelta1"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"reference delta (for PrcDe order handling)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"refDelta2"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"reference delta (for PrcDe order handling)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"refDelta3"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"reference delta (for PrcDe order handling)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"refDelta4"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"reference delta (for PrcDe order handling)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"refDelta5"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"reference delta (for PrcDe order handling)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"refDelta6"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"reference delta (for PrcDe order handling)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"refEarnCnt1"}),(0,d.jsx)(r.td,{children:"byte"}),(0,d.jsx)(r.td,{children:"reference # of earnings moves before expiration"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"refEarnCnt2"}),(0,d.jsx)(r.td,{children:"byte"}),(0,d.jsx)(r.td,{children:"reference # of earnings moves before expiration"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"refEarnCnt3"}),(0,d.jsx)(r.td,{children:"byte"}),(0,d.jsx)(r.td,{children:"reference # of earnings moves before expiration"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"refEarnCnt4"}),(0,d.jsx)(r.td,{children:"byte"}),(0,d.jsx)(r.td,{children:"reference # of earnings moves before expiration"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"refEarnCnt5"}),(0,d.jsx)(r.td,{children:"byte"}),(0,d.jsx)(r.td,{children:"reference # of earnings moves before expiration"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"refEarnCnt6"}),(0,d.jsx)(r.td,{children:"byte"}),(0,d.jsx)(r.td,{children:"reference # of earnings moves before expiration"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"refUPrc"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{children:"reference underlier price (PrcDe orders)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"refUPrc1"}),(0,d.jsx)(r.td,{children:"double"}),(0,d.jsx)(r.td,{children:"reference underlier price (PrcDe orders)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"refUPrc2"}),(0,d.jsx)(r.td,{children:"double"}),(0,d.jsx)(r.td,{children:"reference underlier price (PrcDe orders)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"refUPrc3"}),(0,d.jsx)(r.td,{children:"double"}),(0,d.jsx)(r.td,{children:"reference underlier price (PrcDe orders)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"refUPrc4"}),(0,d.jsx)(r.td,{children:"double"}),(0,d.jsx)(r.td,{children:"reference underlier price (PrcDe orders)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"refUPrc5"}),(0,d.jsx)(r.td,{children:"double"}),(0,d.jsx)(r.td,{children:"reference underlier price (PrcDe orders)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"refUPrc6"}),(0,d.jsx)(r.td,{children:"double"}),(0,d.jsx)(r.td,{children:"reference underlier price (PrcDe orders)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"secKey1"}),(0,d.jsx)(r.td,{children:"OptionKey"}),(0,d.jsx)(r.td,{children:"leg #1"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"secKey2"}),(0,d.jsx)(r.td,{children:"OptionKey"}),(0,d.jsx)(r.td,{children:"leg #2"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"secKey3"}),(0,d.jsx)(r.td,{children:"OptionKey"}),(0,d.jsx)(r.td,{children:"leg #3"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"secKey4"}),(0,d.jsx)(r.td,{children:"OptionKey"}),(0,d.jsx)(r.td,{children:"leg #4"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"secKey5"}),(0,d.jsx)(r.td,{children:"OptionKey"}),(0,d.jsx)(r.td,{children:"leg #5"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"secKey6"}),(0,d.jsx)(r.td,{children:"OptionKey"}),(0,d.jsx)(r.td,{children:"leg #6"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"secType1"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/SpdrKeyType",children:"enum : SpdrKeyType"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"secType2"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/SpdrKeyType",children:"enum : SpdrKeyType"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"secType3"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/SpdrKeyType",children:"enum : SpdrKeyType"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"secType4"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/SpdrKeyType",children:"enum : SpdrKeyType"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"secType5"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/SpdrKeyType",children:"enum : SpdrKeyType"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"secType6"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/SpdrKeyType",children:"enum : SpdrKeyType"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"side1"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"side2"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"side3"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"side4"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"side5"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"side6"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"ssaleFlag"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum : ShortSaleFlag"})}),(0,d.jsx)(r.td,{children:"stock short sale flag"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"ssaleFlag1"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum : ShortSaleFlag"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"ssaleFlag2"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum : ShortSaleFlag"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"ssaleFlag3"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum : ShortSaleFlag"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"ssaleFlag4"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum : ShortSaleFlag"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"ssaleFlag5"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum : ShortSaleFlag"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"ssaleFlag6"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum : ShortSaleFlag"})}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"stockLegId"}),(0,d.jsx)(r.td,{children:"long"}),(0,d.jsx)(r.td,{children:"SR stock leg ID"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"stockShares"}),(0,d.jsx)(r.td,{children:"int"}),(0,d.jsx)(r.td,{children:"number of shares included (zero if none)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"stockSide"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,d.jsx)(r.td,{children:"[Buy"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"ticker"}),(0,d.jsx)(r.td,{children:"TickerKey"}),(0,d.jsx)(r.td,{children:"stock ticker"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"vega1"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"vega2"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"vega3"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"vega4"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"vega5"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"vega6"}),(0,d.jsx)(r.td,{children:"float"}),(0,d.jsx)(r.td,{})]})]})]})]})]})}function a(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,d.jsx)(r,{...e,children:(0,d.jsx)(x,{...e})}):x(e)}},28453:(e,r,t)=>{t.d(r,{R:()=>n,x:()=>l});var d=t(96540);const i={},s=d.createContext(i);function n(e){const r=d.useContext(s);return d.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:n(e.components),d.createElement(s.Provider,{value:r},e.children)}}}]);