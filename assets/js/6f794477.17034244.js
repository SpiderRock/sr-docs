"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([["65826"],{96454:function(e,t,s){s.r(t),s.d(t,{default:()=>u,frontMatter:()=>l,metadata:()=>r,assets:()=>h,toc:()=>o,contentTitle:()=>a});var r=JSON.parse('{"id":"MessageSchemas/Schema/Topics/liquidity-notice/AuctionPrint","title":"AuctionPrint","description":"METADATA","source":"@site/docs/MessageSchemas/Schema/Topics/2450-liquidity-notice/AuctionPrint.md","sourceDirName":"MessageSchemas/Schema/Topics/2450-liquidity-notice","slug":"/MessageSchemas/Schema/Topics/liquidity-notice/AuctionPrint","permalink":"/docs/next/MessageSchemas/Schema/Topics/liquidity-notice/AuctionPrint","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"AuctionPrint"},"sidebar":"messageSchemasSidebar","previous":{"title":"AuctionNoticeSN","permalink":"/docs/next/MessageSchemas/Schema/Topics/liquidity-notice/AuctionNoticeSN"},"next":{"title":"AuctionPrintBX","permalink":"/docs/next/MessageSchemas/Schema/Topics/liquidity-notice/AuctionPrintBX"}}'),n=s("52676"),i=s("91503"),d=s("71386"),c=s("9641");let l={title:"AuctionPrint"},a="Schema: AuctionPrint (ID: 2485)",h={},o=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"REPEATING FIELDS",id:"repeating-fields",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3}];function x(e){let t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsxs)(t.h1,{id:"schema-auctionprint-id-2485",children:["Schema: AuctionPrint ",(0,n.jsx)("span",{className:"small-text",children:"(ID: 2485)"})]})}),"\n",(0,n.jsx)(t.h3,{id:"metadata",children:"METADATA"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Attribute"}),(0,n.jsx)(t.th,{children:"Value"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Topic"}),(0,n.jsx)(t.td,{children:"2450-liquidity-notice"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"MLink Token"}),(0,n.jsx)(t.td,{children:"SRATS"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"SRSE Product"}),(0,n.jsx)(t.td,{children:"SRTrade"})]})]})]}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Note:"})," The symbol ",(0,n.jsx)(t.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"body",children:"BODY"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"#"}),(0,n.jsx)(t.th,{children:"Field"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Default Value"}),(0,n.jsx)(t.th,{children:"Comment"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"10="}),(0,n.jsx)(t.td,{children:"noticeNumber"}),(0,n.jsx)(t.td,{children:"long"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"AuctionNotice.noticeNumber"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"100"}),(0,n.jsx)(t.td,{children:"ticker"}),(0,n.jsx)(t.td,{children:"TickerKey"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"underlier ticker"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"103"}),(0,n.jsx)(t.td,{children:"tradeDate"}),(0,n.jsx)(t.td,{children:"DateKey"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"106"}),(0,n.jsx)(t.td,{children:"isTestAuction"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"if yes, auction is a test auction (not a prod/live auction)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"109"}),(0,n.jsx)(t.td,{children:"noticeTime"}),(0,n.jsx)(t.td,{children:"DateTime"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"notice create timestamp (high precision)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"112"}),(0,n.jsx)(t.td,{children:"auctionType"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../../Enums/AuctionType",children:"enum : AuctionType"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"(eg. Block, Flash, Improvement, Facilitation, etc.)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"115"}),(0,n.jsx)(t.td,{children:"auctionSource"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../../Enums/AuctionSource",children:"enum : AuctionSource"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"source of the auction notice (eg. SRC, MIAX, etc.)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"118"}),(0,n.jsx)(t.td,{children:"auctionDuration"}),(0,n.jsx)(t.td,{children:"int"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"expected auction / imbalance action duration (ms)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"111"}),(0,n.jsx)(t.td,{children:"industry"}),(0,n.jsx)(t.td,{children:"text1"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"industry string"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"121"}),(0,n.jsx)(t.td,{children:"symbolType"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../../Enums/SymbolType",children:"enum : SymbolType"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"124"}),(0,n.jsx)(t.td,{children:"uAvgDailyVlm"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"underlier average daily trading volume"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"127"}),(0,n.jsx)(t.td,{children:"custSide"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"from AuctionNotice (if known)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"130"}),(0,n.jsx)(t.td,{children:"custQty"}),(0,n.jsx)(t.td,{children:"int"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"from AuctionNotice (if known)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"133"}),(0,n.jsx)(t.td,{children:"custPrc"}),(0,n.jsx)(t.td,{children:"double"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"from AuctionNotice (if known)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"136"}),(0,n.jsx)(t.td,{children:"hasCustPrc"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"from AuctionNotice (if known)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"139"}),(0,n.jsx)(t.td,{children:"custFirmType"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../../Enums/FirmType",children:"enum : FirmType"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"cust firm type (if disclosed)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"142"}),(0,n.jsx)(t.td,{children:"custAgentMPID"}),(0,n.jsx)(t.td,{children:"string(6)"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"cust agent exchange member initiating the auction (if disclosed)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"145"}),(0,n.jsx)(t.td,{children:"commEnhancement"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"additional commission (if any) paid by responder"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"148"}),(0,n.jsx)(t.td,{children:"numOptLegs"}),(0,n.jsx)(t.td,{children:"byte"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"MLEG Only"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"151"}),(0,n.jsx)(t.td,{children:"spreadClass"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../../Enums/SpreadClass",children:"enum : SpreadClass"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"154"}),(0,n.jsx)(t.td,{children:"spreadFlavor"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../../Enums/SpreadFlavor",children:"enum : SpreadFlavor"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"MLEG Only"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"157"}),(0,n.jsx)(t.td,{children:"containsHedge"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"MLEG Only"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"160"}),(0,n.jsx)(t.td,{children:"flexType"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../../Enums/FlexType",children:"enum : FlexType"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"all legs are of this flex type"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"163"}),(0,n.jsx)(t.td,{children:"containsFlex"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"contains FLEX options"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"166"}),(0,n.jsx)(t.td,{children:"containsMultiHedge"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"contains MultiHedge (corp action adjusted) options"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"169"}),(0,n.jsx)(t.td,{children:"uBid"}),(0,n.jsx)(t.td,{children:"double"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"172"}),(0,n.jsx)(t.td,{children:"uAsk"}),(0,n.jsx)(t.td,{children:"double"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"175"}),(0,n.jsx)(t.td,{children:"netDe"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"178"}),(0,n.jsx)(t.td,{children:"netGa"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"181"}),(0,n.jsx)(t.td,{children:"netTh"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"184"}),(0,n.jsx)(t.td,{children:"netVe"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"187"}),(0,n.jsx)(t.td,{children:"pkgSurfPrc"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"SR Surface Price (entire package) from AuctionNotice"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"190"}),(0,n.jsx)(t.td,{children:"pkgBidPrc"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"pkg bid price (best way price) (entire package) from AuctionNotice"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"193"}),(0,n.jsx)(t.td,{children:"pkgAskPrc"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"pkg ask price (best way price) (entire package) from AuctionNotice"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"196"}),(0,n.jsx)(t.td,{children:"prtPrice"}),(0,n.jsx)(t.td,{children:"double"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"reported OPRA print price (pkgPrice if MLeg)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"199"}),(0,n.jsx)(t.td,{children:"prtPrice2"}),(0,n.jsx)(t.td,{children:"double"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"if reported as 2 separate prints at different prices (ie, partial size improvement, multiple responders)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"202"}),(0,n.jsx)(t.td,{children:"prtSize"}),(0,n.jsx)(t.td,{children:"int"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"reported OPRA print size (pkgSize if MLeg)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"205"}),(0,n.jsx)(t.td,{children:"prtSize2"}),(0,n.jsx)(t.td,{children:"int"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"reported OPRA print size (pkgSize if MLeg)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"208"}),(0,n.jsx)(t.td,{children:"prtTime"}),(0,n.jsx)(t.td,{children:"DateTime"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"reported OPRA print time (1st print if MLeg) (high precision)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"211"}),(0,n.jsx)(t.td,{children:"prtType"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../../Enums/PrtType",children:"enum : PrtType"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"reported OPRA print type"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"214"}),(0,n.jsx)(t.td,{children:"prtUBid"}),(0,n.jsx)(t.td,{children:"double"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"best estimate of uBid @ auction print time"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"217"}),(0,n.jsx)(t.td,{children:"prtUAsk"}),(0,n.jsx)(t.td,{children:"double"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"best estimate of uAsk @ auction print time"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"220"}),(0,n.jsx)(t.td,{children:"prtUPrc"}),(0,n.jsx)(t.td,{children:"double"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"best estimate of uPrc @ auction print time"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"223"}),(0,n.jsx)(t.td,{children:"prtSurfVol"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"surface vol @ auction print time (single option auction only)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"226"}),(0,n.jsx)(t.td,{children:"prtSurfPrc"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"surface prc @ auction print time (@ uMid) (pkgSurfPrc if MLeg)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"229"}),(0,n.jsx)(t.td,{children:"bidPrc"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"option nbbo bid @ auction print time"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"232"}),(0,n.jsx)(t.td,{children:"bidSz"}),(0,n.jsx)(t.td,{children:"int"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"nbbo bid cum size"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"235"}),(0,n.jsx)(t.td,{children:"bidMask"}),(0,n.jsx)(t.td,{children:"long"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"nbbo bid exch mask"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"238"}),(0,n.jsx)(t.td,{children:"askPrc"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"option nbbo ask @ auction print time"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"241"}),(0,n.jsx)(t.td,{children:"askSz"}),(0,n.jsx)(t.td,{children:"int"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"nbbo ask cum size"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"244"}),(0,n.jsx)(t.td,{children:"askMask"}),(0,n.jsx)(t.td,{children:"long"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"nbbo ask exch mask"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"247"}),(0,n.jsx)(t.td,{children:"exchBidPrc"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"exch bid @ auction print time"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"250"}),(0,n.jsx)(t.td,{children:"exchBidSz"}),(0,n.jsx)(t.td,{children:"int"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"exch bid size"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"253"}),(0,n.jsx)(t.td,{children:"exchAskPrc"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"exch ask @ auction print time"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"256"}),(0,n.jsx)(t.td,{children:"exchAskSz"}),(0,n.jsx)(t.td,{children:"int"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"exch ask size"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"259"}),(0,n.jsx)(t.td,{children:"uPrc1m"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"uPrc (mid market) @ auction print time + 1m"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"262"}),(0,n.jsx)(t.td,{children:"bidPrc1m"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"option nbbo bid @ auction print time + 1m"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"265"}),(0,n.jsx)(t.td,{children:"askPrc1m"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"option nbbo ask @ auction print time + 1m"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"268"}),(0,n.jsx)(t.td,{children:"surfVol1m"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"surface vol @ auction print time + 1m (single option auction only)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"271"}),(0,n.jsx)(t.td,{children:"surfPrc1m"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"surface prc @ auction print time + 1m (@ uMid)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"274"}),(0,n.jsx)(t.td,{children:"uPrc10m"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"uPrc (mid market) @ auction print time + 10m"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"277"}),(0,n.jsx)(t.td,{children:"bidPrc10m"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"option nbbo bid @ auction print time + 10m"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"280"}),(0,n.jsx)(t.td,{children:"askPrc10m"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"option nbbo ask @ auction print time + 10m"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"283"}),(0,n.jsx)(t.td,{children:"surfVol10m"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"surface vol @ auction print time + 10m (single option auction only)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"286"}),(0,n.jsx)(t.td,{children:"surfPrc10m"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"surface prc @ auction print time + 10m (@ uMid)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"289"}),(0,n.jsx)(t.td,{children:"timestamp"}),(0,n.jsx)(t.td,{children:"DateTime"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"repeating-fields",children:"REPEATING FIELDS"}),"\n",(0,n.jsx)(t.p,{children:"OrderLegs"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"#"}),(0,n.jsx)(t.th,{children:"Field"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Default Value"}),(0,n.jsx)(t.th,{children:"Comment"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"295"}),(0,n.jsx)(t.td,{children:"secKey"}),(0,n.jsx)(t.td,{children:"OptionKey"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"298"}),(0,n.jsx)(t.td,{children:"secType"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../../Enums/SpdrKeyType",children:"enum : SpdrKeyType"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"301"}),(0,n.jsx)(t.td,{children:"side"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"304"}),(0,n.jsx)(t.td,{children:"ratio"}),(0,n.jsx)(t.td,{children:"ushort"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"307"}),(0,n.jsx)(t.td,{children:"undPerCn"}),(0,n.jsx)(t.td,{children:"int"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"310"}),(0,n.jsx)(t.td,{children:"pointValue"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"313"}),(0,n.jsx)(t.td,{children:"pointCurrency"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../../Enums/Currency",children:"enum : Currency"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"316"}),(0,n.jsx)(t.td,{children:"expType"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../../Enums/ExpiryType",children:"enum : ExpiryType"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"ZDte,Daily,Weekly,Regular,Quarterly,LongTerm,OtherExp"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"319"}),(0,n.jsx)(t.td,{children:"years"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"SR volatility years to expiry"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"322"}),(0,n.jsx)(t.td,{children:"rate"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"SR global (discount) rate to expiry"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"325"}),(0,n.jsx)(t.td,{children:"atmVol"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"ATM (fwd uPrc) SR surface volatility"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"328"}),(0,n.jsx)(t.td,{children:"ddivPv"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"SR present value of ddiv stream"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"331"}),(0,n.jsx)(t.td,{children:"tVol"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"client theo surface volatility (if client surfaces uploaded to SR)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"334"}),(0,n.jsx)(t.td,{children:"sVol"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"SR Surface Volatility"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"337"}),(0,n.jsx)(t.td,{children:"sDiv"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"SR Surface SDiv"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"340"}),(0,n.jsx)(t.td,{children:"sPrc"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"SR Surface Price"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"343"}),(0,n.jsx)(t.td,{children:"de"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"346"}),(0,n.jsx)(t.td,{children:"ga"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"349"}),(0,n.jsx)(t.td,{children:"th"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"352"}),(0,n.jsx)(t.td,{children:"ve"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"355"}),(0,n.jsx)(t.td,{children:"sVolOk"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"Yes if live market and sVol are tracking as expected"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"358"}),(0,n.jsx)(t.td,{children:"bid"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"Leg bid price"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"361"}),(0,n.jsx)(t.td,{children:"bidSz"}),(0,n.jsx)(t.td,{children:"int"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"cumulative leg bid size"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"364"}),(0,n.jsx)(t.td,{children:"bidMask"}),(0,n.jsx)(t.td,{children:"long"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"bit-mask of participating exchanges"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"367"}),(0,n.jsx)(t.td,{children:"ask"}),(0,n.jsx)(t.td,{children:"float"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"leg ask price"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"370"}),(0,n.jsx)(t.td,{children:"askSz"}),(0,n.jsx)(t.td,{children:"int"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"cumulative leg ask size"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"373"}),(0,n.jsx)(t.td,{children:"askMask"}),(0,n.jsx)(t.td,{children:"long"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"bit-mask of participating exchanges"})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,n.jsxs)(d.Z,{children:[(0,n.jsx)(c.Z,{value:"Python",label:"Python",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'AuctionPrint'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n    # Required Parameters\n    \"apiKey\": API_KEY,\n    \"cmd\": 'getschema',\n    \"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,n.jsx)(c.Z,{value:"cUrl",label:"cUrl",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=AuctionPrint'\n\n"})})})]}),"\n",(0,n.jsx)(t.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,n.jsxs)(d.Z,{children:[(0,n.jsx)(c.Z,{value:"Python",label:"Python",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'AuctionPrint\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'ticker|tradeDate|isTestAuction|noticeTime|auctionType|auctionSource|auctionDuration|industry|symbolType|uAvgDailyVlm|custSide|custQty|custPrc|hasCustPrc|custFirmType|custAgentMPID|commEnhancement|numOptLegs|spreadClass|spreadFlavor|containsHedge|flexType|containsFlex|containsMultiHedge|uBid|uAsk|netDe|netGa|netTh|netVe|pkgSurfPrc|pkgBidPrc|pkgAskPrc|prtPrice|prtPrice2|prtSize|prtSize2|prtTime|prtType|prtUBid|prtUAsk|prtUPrc|prtSurfVol|prtSurfPrc|bidPrc|bidSz|bidMask|askPrc|askSz|askMask|exchBidPrc|exchBidSz|exchAskPrc|exchAskSz|uPrc1m|bidPrc1m|askPrc1m|surfVol1m|surfPrc1m|uPrc10m|bidPrc10m|askPrc10m|surfVol10m|surfPrc10m|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'custAgentMPID:eq:ExampleString\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,n.jsx)(c.Z,{value:"cUrl",label:"cUrl",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=AuctionPrint' \\\n--data-urlencode 'view=ticker|tradeDate|isTestAuction|noticeTime|auctionType|auctionSource|auctionDuration|industry|symbolType|uAvgDailyVlm|custSide|custQty|custPrc|hasCustPrc|custFirmType|custAgentMPID|commEnhancement|numOptLegs|spreadClass|spreadFlavor|containsHedge|flexType|containsFlex|containsMultiHedge|uBid|uAsk|netDe|netGa|netTh|netVe|pkgSurfPrc|pkgBidPrc|pkgAskPrc|prtPrice|prtPrice2|prtSize|prtSize2|prtTime|prtType|prtUBid|prtUAsk|prtUPrc|prtSurfVol|prtSurfPrc|bidPrc|bidSz|bidMask|askPrc|askSz|askMask|exchBidPrc|exchBidSz|exchAskPrc|exchAskSz|uPrc1m|bidPrc1m|askPrc1m|surfVol1m|surfPrc1m|uPrc10m|bidPrc10m|askPrc10m|surfVol10m|surfPrc10m|timestamp' \\\n--data-urlencode 'where=custAgentMPID:eq:ExampleString'\n"})})})]}),"\n",(0,n.jsx)(t.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,n.jsxs)(d.Z,{children:[(0,n.jsx)(c.Z,{value:"Python",label:"Python",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'AuctionPrint\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'ticker|tradeDate|isTestAuction|noticeTime|auctionType|auctionSource|auctionDuration|industry|symbolType|uAvgDailyVlm|custSide|custQty|custPrc|hasCustPrc|custFirmType|custAgentMPID|commEnhancement|numOptLegs|spreadClass|spreadFlavor|containsHedge|flexType|containsFlex|containsMultiHedge|uBid|uAsk|netDe|netGa|netTh|netVe|pkgSurfPrc|pkgBidPrc|pkgAskPrc|prtPrice|prtPrice2|prtSize|prtSize2|prtTime|prtType|prtUBid|prtUAsk|prtUPrc|prtSurfVol|prtSurfPrc|bidPrc|bidSz|bidMask|askPrc|askSz|askMask|exchBidPrc|exchBidSz|exchAskPrc|exchAskSz|uPrc1m|bidPrc1m|askPrc1m|surfVol1m|surfPrc1m|uPrc10m|bidPrc10m|askPrc10m|surfVol10m|surfPrc10m|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'custAgentMPID:eq:ExampleString\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'ticker:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,n.jsx)(c.Z,{value:"cUrl",label:"cUrl",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=AuctionPrint' \\\n--data-urlencode 'view=ticker|tradeDate|isTestAuction|noticeTime|auctionType|auctionSource|auctionDuration|industry|symbolType|uAvgDailyVlm|custSide|custQty|custPrc|hasCustPrc|custFirmType|custAgentMPID|commEnhancement|numOptLegs|spreadClass|spreadFlavor|containsHedge|flexType|containsFlex|containsMultiHedge|uBid|uAsk|netDe|netGa|netTh|netVe|pkgSurfPrc|pkgBidPrc|pkgAskPrc|prtPrice|prtPrice2|prtSize|prtSize2|prtTime|prtType|prtUBid|prtUAsk|prtUPrc|prtSurfVol|prtSurfPrc|bidPrc|bidSz|bidMask|askPrc|askSz|askMask|exchBidPrc|exchBidSz|exchAskPrc|exchAskSz|uPrc1m|bidPrc1m|askPrc1m|surfVol1m|surfPrc1m|uPrc10m|bidPrc10m|askPrc10m|surfVol10m|surfPrc10m|timestamp' \\\n--data-urlencode 'where=custAgentMPID:eq:ExampleString' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=ticker:ASC'\n"})})})]}),"\n",(0,n.jsx)(t.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,n.jsxs)(d.Z,{children:[(0,n.jsx)(c.Z,{value:"Python",label:"Python",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'AuctionPrint\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'ticker|tradeDate|isTestAuction|noticeTime|auctionType|auctionSource|auctionDuration|industry|symbolType|uAvgDailyVlm|custSide|custQty|custPrc|hasCustPrc|custFirmType|custAgentMPID|commEnhancement|numOptLegs|spreadClass|spreadFlavor|containsHedge|flexType|containsFlex|containsMultiHedge|uBid|uAsk|netDe|netGa|netTh|netVe|pkgSurfPrc|pkgBidPrc|pkgAskPrc|prtPrice|prtPrice2|prtSize|prtSize2|prtTime|prtType|prtUBid|prtUAsk|prtUPrc|prtSurfVol|prtSurfPrc|bidPrc|bidSz|bidMask|askPrc|askSz|askMask|exchBidPrc|exchBidSz|exchAskPrc|exchAskSz|uPrc1m|bidPrc1m|askPrc1m|surfVol1m|surfPrc1m|uPrc10m|bidPrc10m|askPrc10m|surfVol10m|surfPrc10m|timestamp\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'isTestAuction|auctionType|auctionSource|symbolType|custSide|hasCustPrc|custFirmType|spreadClass|spreadFlavor|containsHedge|flexType|containsFlex|containsMultiHedge|prtType\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'custAgentMPID:eq:ExampleString\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getaggregate\',\n    "msgType": MSG_TYPE,\n    "measure": MEASURE,\n    "group": GROUP,\n    # Optional Parameters\n    "where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,n.jsx)(c.Z,{value:"cUrl",label:"cUrl",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=AuctionPrint' \\\n--data-urlencode 'measure=ticker|tradeDate|isTestAuction|noticeTime|auctionType|auctionSource|auctionDuration|industry|symbolType|uAvgDailyVlm|custSide|custQty|custPrc|hasCustPrc|custFirmType|custAgentMPID|commEnhancement|numOptLegs|spreadClass|spreadFlavor|containsHedge|flexType|containsFlex|containsMultiHedge|uBid|uAsk|netDe|netGa|netTh|netVe|pkgSurfPrc|pkgBidPrc|pkgAskPrc|prtPrice|prtPrice2|prtSize|prtSize2|prtTime|prtType|prtUBid|prtUAsk|prtUPrc|prtSurfVol|prtSurfPrc|bidPrc|bidSz|bidMask|askPrc|askSz|askMask|exchBidPrc|exchBidSz|exchAskPrc|exchAskSz|uPrc1m|bidPrc1m|askPrc1m|surfVol1m|surfPrc1m|uPrc10m|bidPrc10m|askPrc10m|surfVol10m|surfPrc10m|timestamp' \\\n--data-urlencode 'group=isTestAuction|auctionType|auctionSource|symbolType|custSide|hasCustPrc|custFirmType|spreadClass|spreadFlavor|containsHedge|flexType|containsFlex|containsMultiHedge|prtType' \\\n--data-urlencode 'where=custAgentMPID:eq:ExampleString'\n"})})})]}),"\n",(0,n.jsx)(t.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,n.jsxs)(d.Z,{children:[(0,n.jsx)(c.Z,{value:"Python",label:"Python",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'AuctionPrint\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'custAgentMPID:eq:ExampleString\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,n.jsx)(c.Z,{value:"cUrl",label:"cUrl",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=AuctionPrint' \\\n--data-urlencode 'where=custAgentMPID:eq:ExampleString'\n"})})})]})]})}function u(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(x,{...e})}):x(e)}},9641:function(e,t,s){s.d(t,{Z:()=>i});var r=s("52676");s("75271");var n=s("54461");function i(e){let{children:t,hidden:s,className:i}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,n.Z)("tabItem_SSzl",i),hidden:s,children:t})}},71386:function(e,t,s){s.d(t,{Z:()=>g});var r=s("52676"),n=s("75271"),i=s("54461"),d=s("52289"),c=s("3225"),l=s("42834"),a=s("40578"),h=s("35834"),o=s("79616");function x(e){return n.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||n.isValidElement(e)&&function(e){let{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function u(e){let{value:t,tabValues:s}=e;return s.some(e=>e.value===t)}var j=s("44537");function p(e){let{className:t,block:s,selectedValue:n,selectValue:c,tabValues:l}=e,a=[],{blockElementScrollPositionUntilNextRender:h}=(0,d.o5)(),o=e=>{let t=e.currentTarget,s=l[a.indexOf(t)].value;s!==n&&(h(t),c(s))},x=e=>{let t=null;switch(e.key){case"Enter":o(e);break;case"ArrowRight":{let s=a.indexOf(e.currentTarget)+1;t=a[s]??a[0];break}case"ArrowLeft":{let s=a.indexOf(e.currentTarget)-1;t=a[s]??a[a.length-1]}}t?.focus()};return(0,r.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":s},t),children:l.map(e=>{let{value:t,label:s,attributes:d}=e;return(0,r.jsx)("li",{role:"tab",tabIndex:n===t?0:-1,"aria-selected":n===t,ref:e=>a.push(e),onKeyDown:x,onClick:o,...d,className:(0,i.Z)("tabs__item","tabItem_aitt",d?.className,{"tabs__item--active":n===t}),children:s??t},t)})})}function m(e){let{lazy:t,children:s,selectedValue:d}=e,c=(Array.isArray(s)?s:[s]).filter(Boolean);if(t){let e=c.find(e=>e.props.value===d);return e?(0,n.cloneElement)(e,{className:(0,i.Z)("margin-top--md",e.props.className)}):null}return(0,r.jsx)("div",{className:"margin-top--md",children:c.map((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==d}))})}function f(e){let t=function(e){let{defaultValue:t,queryString:s=!1,groupId:r}=e,i=function(e){let{values:t,children:s}=e;return(0,n.useMemo)(()=>{let e=t??x(s).map(e=>{let{props:{value:t,label:s,attributes:r,default:n}}=e;return{value:t,label:s,attributes:r,default:n}});return!function(e){let t=(0,h.lx)(e,(e,t)=>e.value===t.value);if(t.length>0)throw Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[t,s])}(e),[d,j]=(0,n.useState)(()=>(function(e){let{defaultValue:t,tabValues:s}=e;if(0===s.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!u({value:t,tabValues:s}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${s.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}let r=s.find(e=>e.default)??s[0];if(!r)throw Error("Unexpected error: 0 tabValues");return r.value})({defaultValue:t,tabValues:i})),[p,m]=function(e){let{queryString:t=!1,groupId:s}=e,r=(0,c.k6)(),i=function(e){let{queryString:t=!1,groupId:s}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!s)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return s??null}({queryString:t,groupId:s});return[(0,a._X)(i),(0,n.useCallback)(e=>{if(!i)return;let t=new URLSearchParams(r.location.search);t.set(i,e),r.replace({...r.location,search:t.toString()})},[i,r])]}({queryString:s,groupId:r}),[f,g]=function(e){let{groupId:t}=e,s=t?`docusaurus.tab.${t}`:null,[r,i]=(0,o.Nk)(s);return[r,(0,n.useCallback)(e=>{s&&i.set(e)},[s,i])]}({groupId:r}),P=(()=>{let e=p??f;return u({value:e,tabValues:i})?e:null})();return(0,l.Z)(()=>{P&&j(P)},[P]),{selectedValue:d,selectValue:(0,n.useCallback)(e=>{if(!u({value:e,tabValues:i}))throw Error(`Can't select invalid tab value=${e}`);j(e),m(e),g(e)},[m,g,i]),tabValues:i}}(e);return(0,r.jsxs)("div",{className:(0,i.Z)("tabs-container","tabList_ArS0"),children:[(0,r.jsx)(p,{...t,...e}),(0,r.jsx)(m,{...t,...e})]})}function g(e){let t=(0,j.Z)();return(0,r.jsx)(f,{...e,children:x(e.children)},String(t))}},91503:function(e,t,s){s.d(t,{Z:function(){return c},a:function(){return d}});var r=s(75271);let n={},i=r.createContext(n);function d(e){let t=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);