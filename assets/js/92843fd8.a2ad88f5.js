"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([["89229"],{22590:function(e,r,d){d.r(r),d.d(r,{default:()=>x,frontMatter:()=>l,metadata:()=>i,assets:()=>c,toc:()=>a,contentTitle:()=>s});var i=JSON.parse('{"id":"MessageSchemas/Schema/SRSE Products/SRTrade/ToolCompositeExecution/ToolCompositeExecution","title":"ToolCompositeExecution","description":"V8 Message Definiton","source":"@site/docs/MessageSchemas/Schema/SRSE Products/SRTrade/ToolCompositeExecution/ToolCompositeExecution.md","sourceDirName":"MessageSchemas/Schema/SRSE Products/SRTrade/ToolCompositeExecution","slug":"/MessageSchemas/Schema/SRSE Products/SRTrade/ToolCompositeExecution/","permalink":"/docs/next/MessageSchemas/Schema/SRSE Products/SRTrade/ToolCompositeExecution/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"messageSchemasSidebar","previous":{"title":"StkOrderGateway","permalink":"/docs/next/MessageSchemas/Schema/SRSE Products/SRTrade/StkOrderGateway/"},"next":{"title":"UserAuctionFilter","permalink":"/docs/next/MessageSchemas/Schema/SRSE Products/SRTrade/UserAuctionFilter/"}}'),n=d("52676"),t=d("91503");let l={},s=void 0,c={},a=[{value:"METADATA",id:"metadata",level:3},{value:"Table Definition",id:"table-definition",level:3},{value:"PRIMARY KEY DEFINITION (Unique)",id:"primary-key-definition-unique",level:3},{value:"SECONDARY INDEX (AccntIndex) (Not Unique)",id:"secondary-index-accntindex-not-unique",level:3},{value:"SECONDARY INDEX (ClientFirmIndex) (Not Unique)",id:"secondary-index-clientfirmindex-not-unique",level:3},{value:"CREATE TABLE EXAMPLE QUERY",id:"create-table-example-query",level:3},{value:"SELECT TABLE EXAMPLE QUERY",id:"select-table-example-query",level:3},{value:"Doc Columns Query",id:"doc-columns-query",level:3}];function h(e){let r={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.p,{children:(0,n.jsx)(r.a,{href:"../../../Topics/mlink-custom/ToolCompositeExecution",children:"V8 Message Definiton"})}),"\n",(0,n.jsx)(r.h3,{id:"metadata",children:"METADATA"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Attribute"}),(0,n.jsx)(r.th,{children:"Value"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Topic"}),(0,n.jsx)(r.td,{children:"3480-mlink-custom"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"MLink Token"}),(0,n.jsx)(r.td,{children:"ClientTrading"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Product"}),(0,n.jsx)(r.td,{children:"SRTrade"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"accessType"}),(0,n.jsx)(r.td,{children:"SELECT"})]})]})]}),"\n",(0,n.jsx)(r.h3,{id:"table-definition",children:"Table Definition"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Field"}),(0,n.jsx)(r.th,{children:"Type"}),(0,n.jsx)(r.th,{children:"Key"}),(0,n.jsx)(r.th,{children:"Default Value"}),(0,n.jsx)(r.th,{children:"Comment"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillNumber"}),(0,n.jsx)(r.td,{children:"CHAR(19)"}),(0,n.jsx)(r.td,{children:"PRI"}),(0,n.jsx)(r.td,{children:"'0000-0000-0000-0000'"}),(0,n.jsx)(r.td,{children:"SpiderRock execution number globally unique over trailing 10 days"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"tradeDate"}),(0,n.jsx)(r.td,{children:"DATE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'1900-01-01'"}),(0,n.jsx)(r.td,{children:"trade date"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"accnt"}),(0,n.jsx)(r.td,{children:"VARCHAR(16)"}),(0,n.jsx)(r.td,{children:"SEC"}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"SpiderRock Accnt Code"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"clientFirm"}),(0,n.jsx)(r.td,{children:"VARCHAR(16)"}),(0,n.jsx)(r.td,{children:"SEC"}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"SpiderRock ClientFirm Code"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"secKey_at"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"Security Key can be partially filled in look at secType"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"secKey_ts"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"Security Key can be partially filled in look at secType"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"secKey_tk"}),(0,n.jsx)(r.td,{children:"VARCHAR(12)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"Security Key can be partially filled in look at secType"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"secKey_yr"}),(0,n.jsx)(r.td,{children:"SMALLINT UNSIGNED"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"Security Key can be partially filled in look at secType"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"secKey_mn"}),(0,n.jsx)(r.td,{children:"TINYINT UNSIGNED"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"Security Key can be partially filled in look at secType"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"secKey_dy"}),(0,n.jsx)(r.td,{children:"TINYINT UNSIGNED"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"Security Key can be partially filled in look at secType"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"secKey_xx"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"Security Key can be partially filled in look at secType"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"secKey_cp"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/CallPut",children:"enum - CallPut"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'Call'"}),(0,n.jsx)(r.td,{children:"Security Key can be partially filled in look at secType"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"secType"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/SpdrKeyType",children:"enum - SpdrKeyType"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"Security Type Stock Future Option"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"side"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum - BuySell"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"order  execution side"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"version"}),(0,n.jsx)(r.td,{children:"TINYINT UNSIGNED"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"record version number starts at zero and goes up every time an execution record is republished eg bust 1m marks 10m marks etc"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentNumber"}),(0,n.jsx)(r.td,{children:"CHAR(19)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'0000-0000-0000-0000'"}),(0,n.jsx)(r.td,{children:"SpiderRock parent number"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"baseParentNumber"}),(0,n.jsx)(r.td,{children:"CHAR(19)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'0000-0000-0000-0000'"}),(0,n.jsx)(r.td,{children:"SpiderRock base parent number"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"spdrSource"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/SpdrSource",children:"enum - SpdrSource"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"SpiderRock parent order source code broker pkey"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"groupingCode"}),(0,n.jsx)(r.td,{children:"CHAR(19)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'0000-0000-0000-0000'"}),(0,n.jsx)(r.td,{children:"SpiderRock parent broker number broker pkey"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"riskGroupId"}),(0,n.jsx)(r.td,{children:"CHAR(19)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'0000-0000-0000-0000'"}),(0,n.jsx)(r.td,{children:"riskGroupId parent order group ID for this execution report"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"altOrderId"}),(0,n.jsx)(r.td,{children:"VARCHAR(24)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"alternate order ID usually clOrdId from client"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"srcRoutingCode"}),(0,n.jsx)(r.td,{children:"TINYTEXT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"inbound FIX routing code if any"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"userName"}),(0,n.jsx)(r.td,{children:"VARCHAR(24)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"SpiderRock user name associated with the parent order"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"server"}),(0,n.jsx)(r.td,{children:"VARCHAR(20)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"SpiderRock execution engine that handled the parent order"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"ticker_at"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"SpiderRock underlier ticker key synthetic for futures"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"ticker_ts"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"SpiderRock underlier ticker key synthetic for futures"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"ticker_tk"}),(0,n.jsx)(r.td,{children:"VARCHAR(12)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"SpiderRock underlier ticker key synthetic for futures"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"sector"}),(0,n.jsx)(r.td,{children:"VARCHAR(16)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"user supplied sector code from SymbolControl record"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"clientTags"}),(0,n.jsx)(r.td,{children:"TINYTEXT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"indNum"}),(0,n.jsx)(r.td,{children:"INT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"ind code 00"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"subNum"}),(0,n.jsx)(r.td,{children:"INT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"sub code 0000"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"grpNum"}),(0,n.jsx)(r.td,{children:"INT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"grp code 000000"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"nbrNum"}),(0,n.jsx)(r.td,{children:"INT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"nbr code 00000000"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"expCode"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/ExpCode",children:"enum - ExpCode"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"expiration tenor code"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"skewCode"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/SkewCode",children:"enum - SkewCode"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"strike skew code  parent order arrival"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"widthCode"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/WidthCode",children:"enum - WidthCode"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"market width code"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"priceFormat"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/PriceFormat",children:"enum - PriceFormat"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"SpiderRock price display format code"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"uPriceFormat"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/PriceFormat",children:"enum - PriceFormat"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"SpiderRock underlier price display code"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"years"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"years to expiration  parent order arrival"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"underlierType"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/UnderlierType",children:"enum - UnderlierType"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"underlier type affects greek calcs"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"minTickSize"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"NLV value of a single tick change in display premium	pointValue  tickValue  tickSize"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"pointValue"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"NLV value of a point"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"pointCurrency"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/Currency",children:"enum - Currency"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"underliersPerCn"}),(0,n.jsx)(r.td,{children:"INT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"underliers per contract futures and options"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentShape"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/SpdrOrderShape",children:"enum - SpdrOrderShape"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"parent order shape Single MLeg etc"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentLimitType"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/SpdrLimitType",children:"enum - SpdrLimitType"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"parent order limit type Vol VolX PrcDe PrcDeX etc"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentLimitClass"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/SpdrLimitClass",children:"enum - SpdrLimitClass"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'Simple'"}),(0,n.jsx)(r.td,{children:"parent order limit class makeLimitClass if fill was from making takeLimitClass if fill was from taking"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentOrderHandling"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/ParentOrderHandling",children:"enum - ParentOrderHandling"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"base parent order algo take style algo"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentBalanceHandling"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/ParentBalanceHandling",children:"enum - ParentBalanceHandling"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"base parent order balance handling make style algo"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentOrderSize"}),(0,n.jsx)(r.td,{children:"INT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"parent order size"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentDttm"}),(0,n.jsx)(r.td,{children:"DATETIME(6)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'1900-01-01 00:00:00.000000'"}),(0,n.jsx)(r.td,{children:"Datetime of parent order arrival"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentUMark"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"underlier mid mark  parent order arrival options only"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentBid"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"market bid  parent order arrival"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentAsk"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"market ask  parent order arrival"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentFairPrc"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"SpiderRock fair price  parent order arrival"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentFairWidth"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"SpiderRock fair width  parent order arrival"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentLimitPrc"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"parent order limit price  parent order arrival"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentLimitRefUPrc"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"limit reference underlier price  parent order arrival options only"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentSSaleFlag"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum - ShortSaleFlag"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"parent order short sale flag can be Auto"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentPositionType"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/PositionType",children:"enum - PositionType"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"parent order position type can be Auto"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentStrategy"}),(0,n.jsx)(r.td,{children:"VARCHAR(36)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"parent strategy usually client supplied"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"parentAutoHedge"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/AutoHedge",children:"enum - AutoHedge"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"SpiderRock autohedge algorithm if any"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childDttm"}),(0,n.jsx)(r.td,{children:"DATETIME(6)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'1900-01-01 00:00:00.000000'"}),(0,n.jsx)(r.td,{children:"child order send datetime if any"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childClOrdId"}),(0,n.jsx)(r.td,{children:"VARCHAR(24)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"child order clOrdId resulting in fill if any"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childRoutingCode"}),(0,n.jsx)(r.td,{children:"TINYTEXT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"SpiderRock child order routing code if any"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childSize"}),(0,n.jsx)(r.td,{children:"INT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"child order size"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childPrice"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"child order price"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childExch"}),(0,n.jsx)(r.td,{children:"VARCHAR(6)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"child order exchange code SpiderRock"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childExDest"}),(0,n.jsx)(r.td,{children:"VARCHAR(16)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"child order exchange code downstream"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childUPrc"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"underlier market price  child order send time"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childBid"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"market bid  child order send time"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childAsk"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"market ask  child order send time"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childFairPrc"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"SpiderRock fair price  child order send time"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childFairWidth"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"SpiderRock fair width  child order send time"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childVol"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"child order volatilty options only"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childProb"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"child order probability Tx"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childLimitPrc"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"parent order limit price  child order send time"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childLimitRefUPrc"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"limit reference underlier price  child order send time options only"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childAlgoHandler"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/ChildHandler",children:"enum - ChildHandler"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"algo that generated the child order responsible for this fill"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childOrderHandling"}),(0,n.jsx)(r.td,{children:"VARCHAR(24)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"algo handler detail string"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childCreateReason"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/ChildCreateReason",children:"enum - ChildCreateReason"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"child order create code"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childCancelReason"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/ChildCancelReason",children:"enum - ChildCancelReason"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"child order cancel code if any"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childMktStance"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/MktStance",children:"enum - MktStance"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"child order was expected to be marketable  child send time"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childCxlAttempted"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/YesNo",children:"enum - YesNo"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"cancel attempt was made on the child order prior to receiving this fill"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childSSaleFlag"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/ShortSaleFlag",children:"enum - ShortSaleFlag"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"child order short sale flag"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childPositionType"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/PositionType",children:"enum - PositionType"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"child order position type"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childFirmType"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/FirmType",children:"enum - FirmType"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"chld order firm type Customer ProCust Firm MM etc"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childCapacity"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/OrderCapacity",children:"enum - OrderCapacity"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"child order capacity"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillExch"}),(0,n.jsx)(r.td,{children:"VARCHAR(12)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"ExDest code from child order execution report lastMkt"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillPrice"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"fill price"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillDttm"}),(0,n.jsx)(r.td,{children:"DATETIME(6)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'1900-01-01 00:00:00.000000'"}),(0,n.jsx)(r.td,{children:"Datetime of fill arrival"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillSize"}),(0,n.jsx)(r.td,{children:"INT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"fill quantity"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillPointValue"}),(0,n.jsx)(r.td,{children:"INT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"fill size x pointValue"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillVol"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"fill volatilty options only"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillProb"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"fill order probability Tx"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillLimitPrc"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"parent order limit price  fill arrival time"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillLimitRefUPrc"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"limit reference underlier price  fill arrival time options only"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillUPrc"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"fill underlier midmarket"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillBeta"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"SpiderRock estimate of beta to SPX"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillTv"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"theo vol user supplied"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillTp"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"theo price"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillBid"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"option market bid  fill arrival"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillAsk"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"option market ask  fill arrival"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillFairPrc"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"SpiderRock fair price  fill arrival"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillFairWidth"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"SpiderRock fair width  fill arrival"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillBrkrRate"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"billing brokerage rate tier 1"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillRoutingRate"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"billing routing rate tier 1"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillOrigExecID"}),(0,n.jsx)(r.td,{children:"VARCHAR(20)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"original execution ID string child order"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillLastExecID"}),(0,n.jsx)(r.td,{children:"VARCHAR(20)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"most recent execution ID same as origExecID unless CANCELCORRECTION has been processed"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillExecStatus"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/ExecStatus",children:"enum - ExecStatus"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"SpiderRock execution status FillBustCorrectRejectSysRej"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillRemoteText"}),(0,n.jsx)(r.td,{children:"VARCHAR(64)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"text comment from endpoint if any"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillTransactDttm"}),(0,n.jsx)(r.td,{children:"DATETIME(6)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'1900-01-01 00:00:00.000000'"}),(0,n.jsx)(r.td,{children:"transaction datetime as reported by exchange or down stream broker"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillLiquidityTag"}),(0,n.jsx)(r.td,{children:"VARCHAR(2)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"SpiderRock normalized exch liquidity tag"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillExchFee"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"SpiderRock exchange fee estimate"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillDe"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillGa"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillVe"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"execRole"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/ExecRole",children:"enum - ExecRole"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"SpiderRock relationship to this execution record Direct Drop etc"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"execBrkrCode"}),(0,n.jsx)(r.td,{children:"VARCHAR(16)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"exec broker acronym usually an MPID"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"execBrkrAccnt"}),(0,n.jsx)(r.td,{children:"VARCHAR(16)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"account at executing broker if any"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"execBrkrClFirm"}),(0,n.jsx)(r.td,{children:"VARCHAR(16)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"clientfirm at executing broker if any"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"execBrkrUserName"}),(0,n.jsx)(r.td,{children:"VARCHAR(16)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"user executing broker if any"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"clearingFlipType"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/FlipType",children:"enum - FlipType"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"type of clearing corp delivery"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"clearingFlipFirm"}),(0,n.jsx)(r.td,{children:"VARCHAR(6)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"deliverTo clearing member eg OCC NSCC MPID or InstitutionID"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"clearingFlipAccnt"}),(0,n.jsx)(r.td,{children:"VARCHAR(10)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"deliverTo client account eg OCC AID or a DVP FBO code"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"clearingAgent"}),(0,n.jsx)(r.td,{children:"VARCHAR(10)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"deliverTo agent eg DVP Agent Bank ID"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"clearingTaxID"}),(0,n.jsx)(r.td,{children:"VARCHAR(10)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"deliverTo taxID eg DVP TaxID"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"billingSecType"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/BillingSecType",children:"enum - BillingSecType"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"SpiderRock billing security type"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"billingCategory"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"../../../Enums/BillingCategory",children:"enum - BillingCategory"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'None'"}),(0,n.jsx)(r.td,{children:"SpiderRock billing category"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"priAggGroup"}),(0,n.jsx)(r.td,{children:"VARCHAR(16)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"primary aggregation group"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"secAggGroup"}),(0,n.jsx)(r.td,{children:"VARCHAR(16)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"secondary aggregation group"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"trdDelta"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"trade delta"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"trdDDelta"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"trade delta"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"trdGamma"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"trade gamma"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"trdDGamma"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"trade dollar gamma"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"trdVega"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"trade vega"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"trdWtVega"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"trade wtVega vega  vol  sqrtmax01 years  4"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"trdTheta"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"trade theta"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"trdBeta"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"trade beta"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"trdDBeta"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"trade beta"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"trdNotionalValue"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"cn  pointValue  uPrc"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"trdMarketValue"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"cn  pointValue  fillPrice"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"marginUDnVDn"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"Aggregate RiskSlide uPrc dn vol dn"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"marginUDnVUp"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"Aggregate RiskSlide uPrc dn vol up"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"marginUUpVDn"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"Aggregate RiskSlide uPrc up vol dn"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"marginUUpVUp"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"Aggregate RiskSlide uPrc up vol up"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"trdFairEdge"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"SR trade edge fill price to SR fair price"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"trdFairEdgeUnit"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"SR trade edge normalized to 100 underlier"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"trdTheoEdge"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"theo edge user supplied theo volprc to SpiderRock surface price if any"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"trdTheoEdgeUnit"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"theo edge normalized to 100 underlier"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"clArrivePnL"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"arrival PnL client arrival mark to fill mark from clArriveMark on parent order if any"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"arrivePnL"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"arrival PnL parent arrival mark to fill mark"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"arriveDnPnL"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"arrival Dn PnL arrivalPnL  uDriftArrivalPnL"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"uDriftArrivePnL"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"underlier delta drift PnL arrival uMark to fill uMark"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"childLimitSlip"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"Fill Slippage ChildLimitPrice to FillPrice"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"halfWidthPnL"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"estimated halfwidth PnL"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"dayDnPnL"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"delta neutral PnL to EOD"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"dayM1PnL"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"delta neutral PnL Fill  1M"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"dayM10PnL"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"delta neutral PnL Fill  10M"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"uDriftDayPnL"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"underlier delta drift PnL to EOD"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"uDriftM1PnL"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"underlier delta drift PnL Fill  1M"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"uDriftM10PnL"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"underlier delta drift PnL Fill  10M"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"dayPnL"}),(0,n.jsx)(r.td,{children:"FLOAT"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"actual PnL to EOD fillMark to liveMark"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"m1Mark"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"T1min"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"m1UPrc"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"T1min"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"m10Mark"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"T10min"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"m10UPrc"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"T10min"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"liveMark"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"Live  Record Query"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"liveUPrc"}),(0,n.jsx)(r.td,{children:"DOUBLE"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"0"}),(0,n.jsx)(r.td,{children:"Live  Record Query"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"trdMarkError"}),(0,n.jsx)(r.td,{children:"VARCHAR(8)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"trade mark error code"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"dayMarkError"}),(0,n.jsx)(r.td,{children:"VARCHAR(8)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"''"}),(0,n.jsx)(r.td,{children:"day mark error code"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"timestamp"}),(0,n.jsx)(r.td,{children:"DATETIME(6)"}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"'1900-01-01 00:00:00.000000'"}),(0,n.jsx)(r.td,{children:"SR system timestamp"})]})]})]}),"\n",(0,n.jsx)(r.h3,{id:"primary-key-definition-unique",children:"PRIMARY KEY DEFINITION (Unique)"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Field"}),(0,n.jsx)(r.th,{children:"Sequence"})]})}),(0,n.jsx)(r.tbody,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"fillNumber"}),(0,n.jsx)(r.td,{children:"1"})]})})]}),"\n",(0,n.jsx)(r.h3,{id:"secondary-index-accntindex-not-unique",children:"SECONDARY INDEX (AccntIndex) (Not Unique)"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Field"}),(0,n.jsx)(r.th,{children:"Sequence"})]})}),(0,n.jsx)(r.tbody,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"accnt"}),(0,n.jsx)(r.td,{children:"1"})]})})]}),"\n",(0,n.jsx)(r.h3,{id:"secondary-index-clientfirmindex-not-unique",children:"SECONDARY INDEX (ClientFirmIndex) (Not Unique)"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Field"}),(0,n.jsx)(r.th,{children:"Sequence"})]})}),(0,n.jsx)(r.tbody,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"clientFirm"}),(0,n.jsx)(r.td,{children:"1"})]})})]}),"\n",(0,n.jsx)(r.h3,{id:"create-table-example-query",children:"CREATE TABLE EXAMPLE QUERY"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-sql",children:"CREATE TABLE `SRTrade`.`MsgToolCompositeExecution` (\n    `fillNumber` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'SpiderRock execution number (globally unique over trailing 10 days)',\n    `tradeDate` DATE NOT NULL DEFAULT '1900-01-01' COMMENT 'trade date',\n    `accnt` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'SpiderRock Accnt Code',\n    `clientFirm` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'SpiderRock ClientFirm Code',\n    `secKey_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'Security Key [can be partially filled in (look at secType)]',\n    `secKey_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'Security Key [can be partially filled in (look at secType)]',\n    `secKey_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'Security Key [can be partially filled in (look at secType)]',\n    `secKey_yr` SMALLINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Security Key [can be partially filled in (look at secType)]',\n    `secKey_mn` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Security Key [can be partially filled in (look at secType)]',\n    `secKey_dy` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Security Key [can be partially filled in (look at secType)]',\n    `secKey_xx` DOUBLE NOT NULL DEFAULT 0 COMMENT 'Security Key [can be partially filled in (look at secType)]',\n    `secKey_cp` ENUM('Call','Put','Pair') NOT NULL DEFAULT 'Call' COMMENT 'Security Key [can be partially filled in (look at secType)]',\n    `secType` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None' COMMENT 'Security Type [Stock, Future, Option]',\n    `side` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'None' COMMENT 'order / execution side',\n    `version` TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'record version number; starts at zero and goes up every time an execution record is re-published (eg, bust, +1m marks, +10m marks, etc)',\n    `parentNumber` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'SpiderRock parent number',\n    `baseParentNumber` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'SpiderRock base parent number',\n    `spdrSource` ENUM('None','SpdrTicket','SpdrSingle','SRSE','FIX','HedgeTool','TradeHedge','OpenHedge','AutoHedge','Orphan','RiskManager','OrderManager','ManagedOrder','RFQRespSrvr','Legger','SRSEDrop','FixDrop','TicketDrop','SysTest','RFRResponse','AllocOmni','AllocClient','CertGateway','MLegResponse','LeggerX','DropManager','AutoHedgeSrvr','AuctionStrategySrvr','AllocBlockFace','AllocBlockCust','IceChatGateway','EXS2SRC','MLinkResponse','AutoResponderVD','AutoResponderRC','AutoResponderSN','AutoResponderBX','MLink','SymChatGateway') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock parent order source code [broker pkey]',\n    `groupingCode` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'SpiderRock parent broker number [broker pkey]',\n    `riskGroupId` CHAR(19) NOT NULL DEFAULT '0000-0000-0000-0000' COMMENT 'riskGroupId (parent order group ID) for this execution report',\n    `altOrderId` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'alternate order ID (usually clOrdId from client)',\n    `srcRoutingCode` TINYTEXT NOT NULL DEFAULT '' COMMENT 'inbound FIX routing code, if any',\n    `userName` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'SpiderRock user name associated with the parent order',\n    `server` VARCHAR(20) NOT NULL DEFAULT '' COMMENT 'SpiderRock execution engine that handled the parent order',\n    `ticker_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock underlier ticker key [synthetic for futures]',\n    `ticker_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock underlier ticker key [synthetic for futures]',\n    `ticker_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'SpiderRock underlier ticker key [synthetic for futures]',\n    `sector` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'user supplied sector code (from SymbolControl record)',\n    `clientTags` TINYTEXT NOT NULL DEFAULT '',\n    `indNum` INT NOT NULL DEFAULT 0 COMMENT 'ind code (00)',\n    `subNum` INT NOT NULL DEFAULT 0 COMMENT 'sub code (0000)',\n    `grpNum` INT NOT NULL DEFAULT 0 COMMENT 'grp code (000000)',\n    `nbrNum` INT NOT NULL DEFAULT 0 COMMENT 'nbr code (00000000)',\n    `expCode` ENUM('None','W1','W2','M1','M2','M34','M56','M7C','Y1','Y2') NOT NULL DEFAULT 'None' COMMENT 'expiration tenor code',\n    `skewCode` ENUM('None','DD','DN','AT','UP','DU') NOT NULL DEFAULT 'None' COMMENT 'strike skew code (@ parent order arrival)',\n    `widthCode` ENUM('None','Pv1','Pv2','Pv3','Pv5','Pv10','Pv15','Pv20','Pv25','Wide') NOT NULL DEFAULT 'None' COMMENT 'market width code',\n    `priceFormat` ENUM('None','N0','N1','N2','N3','N4','N5','N6','N7','F4','F8','Q8','F16','F32','H32','Q32','F64','H64','FullPenny','PartPenny','PartNickle','EQT','V1','V2','V3','V4','V5','V6','V7','V8','V9','V10','V11','V12','V13','V14','V15','A0','A1','A2','A3','A4','A5','A6','A7','E32','EU2A','EU2B','EU2C','EU2D','EU2E','EU2F','EU3A','EU3B','EU3C','EU3D','EU3E','EU3F','EU3G','EU3H','EU3I','EU3J','EU4A','EU4B','EU4C','EU5A','EU5B') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock price display format code',\n    `uPriceFormat` ENUM('None','N0','N1','N2','N3','N4','N5','N6','N7','F4','F8','Q8','F16','F32','H32','Q32','F64','H64','FullPenny','PartPenny','PartNickle','EQT','V1','V2','V3','V4','V5','V6','V7','V8','V9','V10','V11','V12','V13','V14','V15','A0','A1','A2','A3','A4','A5','A6','A7','E32','EU2A','EU2B','EU2C','EU2D','EU2E','EU2F','EU3A','EU3B','EU3C','EU3D','EU3E','EU3F','EU3G','EU3H','EU3I','EU3J','EU4A','EU4B','EU4C','EU5A','EU5B') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock underlier price display code',\n    `years` FLOAT NOT NULL DEFAULT 0 COMMENT 'years to expiration (@ parent order arrival)',\n    `underlierType` ENUM('None','Equity','Other','FX') NOT NULL DEFAULT 'None' COMMENT 'underlier type (affects $greek calcs)',\n    `minTickSize` FLOAT NOT NULL DEFAULT 0 COMMENT '$NLV value of a single tick change in display premium	(pointValue = tickValue / tickSize)',\n    `pointValue` FLOAT NOT NULL DEFAULT 0 COMMENT '$NLV value of a point',\n    `pointCurrency` ENUM('None','AUD','BRL','CAD','CHF','CNH','CNY','EUR','GBP','JPY','KRW','MXN','MYR','NOK','NZD','SEK','TRY','USD','USDCents','CZK','ZAR','HUF','USX','GBX','DKK','GEL') NOT NULL DEFAULT 'None',\n    `underliersPerCn` INT NOT NULL DEFAULT 0 COMMENT 'underliers per contract (futures and options)',\n    `parentShape` ENUM('None','Single','Cross','MLeg','MLegCross') NOT NULL DEFAULT 'None' COMMENT 'parent order shape [Single, MLeg, etc]',\n    `parentLimitType` ENUM('None','Market','MarketArrival','Prc','PrcDe','PrcDeX','PrcDeT','PrcDeP','PrcDeXT','PrcDeXP','Vol','VolX','PrcV','PrcVX','NoLimit','RelMid','RelJoin','RelCross','SmrtFast','SmrtNorm','RelTurn','PrcDeEm','VolEm','Aux','UPrcPct','PkgNeutral','RcPrem','SynthLimitMM','SynthLimitBW','SynthLimitWW') NOT NULL DEFAULT 'None' COMMENT 'parent order limit type [Vol, VolX, PrcDe, PrcDeX, etc]',\n    `parentLimitClass` ENUM('Simple','Surface','Probability','SurfProb') NOT NULL DEFAULT 'Simple' COMMENT 'parent order limit class (makeLimitClass if fill was from making; takeLimitClass if fill was from taking)',\n    `parentOrderHandling` ENUM('None','ActiveTaker','PostOnly','DMA','MktOnOpn','MktOnCls','Facilitate','Matrix','Legger','Seeker','SeekerLegger','CrossResponse','AuctionResponse','MLegAuctionResp','RFQRequest','AwayAlgo','ExchPing','BlockAuction','BlockResponse','SweepTake','CobMaker','FaceOmni','TestParent') NOT NULL DEFAULT 'None' COMMENT 'base parent order algo [take style algo]',\n    `parentBalanceHandling` ENUM('None','PostWith','PostTurn','PostImprove','PostLimit','MaxIntern','PostWthF','PostImprvR','PostFlash','PostFlashW','PostPeg','PostFlashI') NOT NULL DEFAULT 'None' COMMENT 'base parent order balance handling [make style algo]',\n    `parentOrderSize` INT NOT NULL DEFAULT 0 COMMENT 'parent order size',\n    `parentDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'Date/time of parent order arrival',\n    `parentUMark` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier mid mark @ parent order arrival (options only)',\n    `parentBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'market bid @ parent order arrival',\n    `parentAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'market ask @ parent order arrival',\n    `parentFairPrc` FLOAT NOT NULL DEFAULT 0 COMMENT 'SpiderRock fair price @ parent order arrival',\n    `parentFairWidth` FLOAT NOT NULL DEFAULT 0 COMMENT 'SpiderRock fair width @ parent order arrival',\n    `parentLimitPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'parent order limit price @ parent order arrival',\n    `parentLimitRefUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'limit reference underlier price @ parent order arrival (options only)',\n    `parentSSaleFlag` ENUM('None','Long','Short','Exempt','Auto','Open','Close','Cover','NA') NOT NULL DEFAULT 'None' COMMENT 'parent order short sale flag (can be Auto)',\n    `parentPositionType` ENUM('None','Opening','Closing','Auto') NOT NULL DEFAULT 'None' COMMENT 'parent order position type (can be Auto)',\n    `parentStrategy` VARCHAR(36) NOT NULL DEFAULT '' COMMENT 'parent strategy [usually client supplied]',\n    `parentAutoHedge` ENUM('None','Static','AutoMid','AutoCrx','AutoTrn','SpdrAuto','Spdr10S','Spdr30S','Spdr90S','Spdr5M','Spdr30M','SpdrDay','SmartFast','SmartNorm','FastCrx','FastDark','SlowDark','AlphaVwap1pct','AlphaVwap2pct','AlphaVwap5pct','AlphaVwap25pct','Custom','AwayAlgo','EuxMsAlgo') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock auto-hedge algorithm (if any)',\n    `childDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'child order send date/time (if any)',\n    `childClOrdId` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'child order clOrdId resulting in fill (if any)',\n    `childRoutingCode` TINYTEXT NOT NULL DEFAULT '' COMMENT 'SpiderRock child order routing code (if any)',\n    `childSize` INT NOT NULL DEFAULT 0 COMMENT 'child order size',\n    `childPrice` DOUBLE NOT NULL DEFAULT 0 COMMENT 'child order price',\n    `childExch` VARCHAR(6) NOT NULL DEFAULT '' COMMENT 'child order exchange code (SpiderRock)',\n    `childExDest` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'child order exchange code (downstream)',\n    `childUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'underlier market price @ child order send time',\n    `childBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'market bid @ child order send time',\n    `childAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'market ask @ child order send time',\n    `childFairPrc` FLOAT NOT NULL DEFAULT 0 COMMENT 'SpiderRock fair price @ child order send time',\n    `childFairWidth` FLOAT NOT NULL DEFAULT 0 COMMENT 'SpiderRock fair width @ child order send time',\n    `childVol` FLOAT NOT NULL DEFAULT 0 COMMENT 'child order volatilty (options only)',\n    `childProb` FLOAT NOT NULL DEFAULT 0 COMMENT 'child order probability (T+x)',\n    `childLimitPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'parent order limit price @ child order send time',\n    `childLimitRefUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'limit reference underlier price @ child order send time (options only)',\n    `childAlgoHandler` ENUM('None','ActiveTaker','ActiveMaker','Auction','Responder','Matrix','Cross','Face','Extern','MLegHandler','AutoHedge','Sprayer','Legger','Restart','Orphan','UDefSpread','RFQRequest','MLegResponder','LeggerX','ExchPing','BrkrReview','AuctionResponder','TakeSweep','TestChild') NOT NULL DEFAULT 'None' COMMENT 'algo that generated the child order responsible for this fill',\n    `childOrderHandling` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'algo handler detail string',\n    `childCreateReason` ENUM('None','CheckAddExch','DarkCross','DmaExtern','DmaSmart','MakeJoin','MakeNbboImpr','MakePostLimit','MakeSelfImpr','MarketAuction','MatrixImpr','MatrixJoin','MatrixLvlSweep','MatrixMaxSweep','MLegSeeker','OptAuctionResp','OptFaceHandler','RelWaitTrigger','SprdDma','SprdFace','SprdSeeker','TakeBrkr','TakeExch','TakeNbbo','RFQRequest','MLegResponse','BrkrCross','PostFlash','MakeOff','MakeFlashImprv','AwayExtern','MatrixCross','ExchPing','BrkrReview','AuctionResponse','SweepTake','TestChild') NOT NULL DEFAULT 'None' COMMENT 'child order create code',\n    `childCancelReason` ENUM('None','MakeException','MakeMaxRiskSize','MakeLimitError','MakeCxlImpr','MakeLmtPrc','MakeSelfImpr','MakeJoinImprv','MakeReJoin','MakeBhnd','MakeAlone','MakeAloneF','MakeOffMkt','MakeMaxExpose','MakeJoinImpr','ContLmtPrc','ChildCxlAll','ChildFlashCxl','ChildIOCTimeout','ForceRetry','StkCxlAll','FutCxlAll','OptCxlAll','FastCxlUBid','FastCxlUAsk','FastCxlUMin','FastCxlUMax','MktMiss','CxlClear','CxlRplDMA','CxlRplTurn','CxlRplSize','CxlRplPrc','CxlRplMake','CxlRplExch','MLegSeekSwitch','MLegSeekChange','MLegSeekND','MLegSeekLimit','MLegDMA','MLegSprdLimit','ParentRplRej','ParentReject','ParentClose','LeggerSwitch','AccelTake','EnginePreOpen','LegLmtPrcRng','MakeLmtPrcErr','ProgTerminate','TickSzErr','ContBrkrTerm','ContCancelHold','ContLimitErr','ContMaxUPrc','ContMinUPrc','ContMktData','ContMktHalt','ContRiskHold','ContSecType','ContStkData','ContStkState','ContFutData','ContFutState','ContOptData','ContOptState','ContUFutData','ContUFutState','ContUMktData','ContUMktState','LegExposeSize','LegLimitErr','LegMarketPrc','MLegCobLmtPrc','MLegLeggerChange','MLegLeggerSwitch','MLegSprdLmtPrc','SprdMktPrc','ContUMktPrc','ContUMktQte','SGContCxl','SGSysCxl','CxlRplPart','CxlRplAlgo','ContingentCancel','SwitchMOC','CxlRplReview','CxlRplAltR','SurfPrcErr','UserHold','DayClose','PendNewTimeout','ActiveHold') NOT NULL DEFAULT 'None' COMMENT 'child order cancel code (if any)',\n    `childMktStance` ENUM('None','ExchMrkt','NbboMrkt','ExchImpr','NbboImpr','ExchJoin','NbboJoin','Away') NOT NULL DEFAULT 'None' COMMENT 'child order was expected to be marketable @ child send time',\n    `childCxlAttempted` ENUM('None','Yes','No') NOT NULL DEFAULT 'None' COMMENT 'cancel attempt was made on the child order prior to receiving this fill',\n    `childSSaleFlag` ENUM('None','Long','Short','Exempt','Auto','Open','Close','Cover','NA') NOT NULL DEFAULT 'None' COMMENT 'child order short sale flag',\n    `childPositionType` ENUM('None','Opening','Closing','Auto') NOT NULL DEFAULT 'None' COMMENT 'child order position type',\n    `childFirmType` ENUM('None','Customer','Firm','MarketMaker','ProCustomer','BrokerDealer','AwayMM','FirmJBO','BrkrDlrCust') NOT NULL DEFAULT 'None' COMMENT 'chld order firm type [Customer, ProCust, Firm, MM, etc]',\n    `childCapacity` ENUM('None','Agency','Principal','Individual','Proprietary','AgentOtherMember','RisklessPrincipal','MarketMaker') NOT NULL DEFAULT 'None' COMMENT 'child order capacity',\n    `fillExch` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'ExDest code from child order execution report (lastMkt)',\n    `fillPrice` DOUBLE NOT NULL DEFAULT 0 COMMENT 'fill price',\n    `fillDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'Date/time of fill arrival',\n    `fillSize` INT NOT NULL DEFAULT 0 COMMENT 'fill quantity',\n    `fillPointValue` INT NOT NULL DEFAULT 0 COMMENT 'fill size x pointValue',\n    `fillVol` FLOAT NOT NULL DEFAULT 0 COMMENT 'fill volatilty (options only)',\n    `fillProb` FLOAT NOT NULL DEFAULT 0 COMMENT 'fill order probability (T+x)',\n    `fillLimitPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'parent order limit price @ fill arrival time',\n    `fillLimitRefUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'limit reference underlier price @ fill arrival time (options only)',\n    `fillUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'fill underlier mid-market',\n    `fillBeta` FLOAT NOT NULL DEFAULT 0 COMMENT 'SpiderRock estimate of beta to SPX',\n    `fillTv` FLOAT NOT NULL DEFAULT 0 COMMENT 'theo vol (user supplied)',\n    `fillTp` FLOAT NOT NULL DEFAULT 0 COMMENT 'theo price',\n    `fillBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'option market bid @ fill arrival',\n    `fillAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'option market ask @ fill arrival',\n    `fillFairPrc` FLOAT NOT NULL DEFAULT 0 COMMENT 'SpiderRock fair price @ fill arrival',\n    `fillFairWidth` FLOAT NOT NULL DEFAULT 0 COMMENT 'SpiderRock fair width @ fill arrival',\n    `fillBrkrRate` FLOAT NOT NULL DEFAULT 0 COMMENT 'billing brokerage rate (tier 1)',\n    `fillRoutingRate` FLOAT NOT NULL DEFAULT 0 COMMENT 'billing routing rate (tier 1)',\n    `fillOrigExecID` VARCHAR(20) NOT NULL DEFAULT '' COMMENT 'original execution ID string (child order)',\n    `fillLastExecID` VARCHAR(20) NOT NULL DEFAULT '' COMMENT 'most recent execution ID (same as origExecID unless CANCEL/CORRECTION has been processed)',\n    `fillExecStatus` ENUM('None','Fill','Bust','Correct','Reject','SysRej') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock execution status (Fill,Bust,Correct,Reject,SysRej)',\n    `fillRemoteText` VARCHAR(64) NOT NULL DEFAULT '' COMMENT 'text comment from endpoint (if any)',\n    `fillTransactDttm` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'transaction date/time as reported by exchange or down stream broker',\n    `fillLiquidityTag` VARCHAR(2) NOT NULL DEFAULT '' COMMENT 'SpiderRock normalized exch liquidity tag',\n    `fillExchFee` FLOAT NOT NULL DEFAULT 0 COMMENT 'SpiderRock exchange fee estimate',\n    `fillDe` FLOAT NOT NULL DEFAULT 0,\n    `fillGa` FLOAT NOT NULL DEFAULT 0,\n    `fillVe` FLOAT NOT NULL DEFAULT 0,\n    `execRole` ENUM('None','DirectAccnt','AwayGiveup','RiskDrop','AwayDrop','PullDrop','ReconMiss') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock relationship to this execution record (Direct, Drop, etc)',\n    `execBrkrCode` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'exec broker acronym (usually an MPID)',\n    `execBrkrAccnt` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'account at executing broker (if any)',\n    `execBrkrClFirm` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'client/firm at executing broker (if any)',\n    `execBrkrUserName` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'user executing broker (if any)',\n    `clearingFlipType` ENUM('None','CMTA','Giveup','QSR','NSCC_Flip','DVP','BrkrAccnt') NOT NULL DEFAULT 'None' COMMENT 'type of clearing corp delivery',\n    `clearingFlipFirm` VARCHAR(6) NOT NULL DEFAULT '' COMMENT 'deliverTo clearing member (eg. OCC#, NSCC#, MPID, or InstitutionID)',\n    `clearingFlipAccnt` VARCHAR(10) NOT NULL DEFAULT '' COMMENT 'deliverTo client account (eg. OCC AID# or a DVP FBO code)',\n    `clearingAgent` VARCHAR(10) NOT NULL DEFAULT '' COMMENT 'deliverTo agent (eg. DVP Agent Bank ID)',\n    `clearingTaxID` VARCHAR(10) NOT NULL DEFAULT '' COMMENT 'deliverTo taxID (eg. DVP TaxID)',\n    `billingSecType` ENUM('None','Equity','Future','EqtOption','FutOption') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock billing security type',\n    `billingCategory` ENUM('None','Alpha','AlphaTop50','TiedMaker','TiedTaker','SOR','DMA','AuctionResponse','Facilitate','AlphaFacilitate','AwayTrade','SymOverride','Extern','NonBillable','Seeker','Legger','Drop','AwayAlgo','IsoSweep','SpdrSweep','GTH','AlphaGTH','BlockAuction','BlockResponse') NOT NULL DEFAULT 'None' COMMENT 'SpiderRock billing category',\n    `priAggGroup` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'primary aggregation group',\n    `secAggGroup` VARCHAR(16) NOT NULL DEFAULT '' COMMENT 'secondary aggregation group',\n    `trdDelta` FLOAT NOT NULL DEFAULT 0 COMMENT 'trade delta',\n    `trdDDelta` FLOAT NOT NULL DEFAULT 0 COMMENT 'trade $delta',\n    `trdGamma` FLOAT NOT NULL DEFAULT 0 COMMENT 'trade gamma',\n    `trdDGamma` FLOAT NOT NULL DEFAULT 0 COMMENT 'trade dollar gamma',\n    `trdVega` FLOAT NOT NULL DEFAULT 0 COMMENT 'trade vega',\n    `trdWtVega` FLOAT NOT NULL DEFAULT 0 COMMENT 'trade wtVega: (vega * vol / sqrt(max(0.1, years * 4))',\n    `trdTheta` FLOAT NOT NULL DEFAULT 0 COMMENT 'trade theta',\n    `trdBeta` FLOAT NOT NULL DEFAULT 0 COMMENT 'trade beta',\n    `trdDBeta` FLOAT NOT NULL DEFAULT 0 COMMENT 'trade $beta',\n    `trdNotionalValue` FLOAT NOT NULL DEFAULT 0 COMMENT 'cn * pointValue * uPrc',\n    `trdMarketValue` FLOAT NOT NULL DEFAULT 0 COMMENT 'cn * pointValue * fillPrice',\n    `marginUDnVDn` FLOAT NOT NULL DEFAULT 0 COMMENT 'Aggregate RiskSlide: uPrc dn, vol dn',\n    `marginUDnVUp` FLOAT NOT NULL DEFAULT 0 COMMENT 'Aggregate RiskSlide: uPrc dn, vol up',\n    `marginUUpVDn` FLOAT NOT NULL DEFAULT 0 COMMENT 'Aggregate RiskSlide: uPrc up, vol dn',\n    `marginUUpVUp` FLOAT NOT NULL DEFAULT 0 COMMENT 'Aggregate RiskSlide: uPrc up, vol up',\n    `trdFairEdge` FLOAT NOT NULL DEFAULT 0 COMMENT 'SR trade edge (fill price to SR fair price)',\n    `trdFairEdgeUnit` FLOAT NOT NULL DEFAULT 0 COMMENT 'SR trade edge normalized to $100 underlier',\n    `trdTheoEdge` FLOAT NOT NULL DEFAULT 0 COMMENT 'theo edge (user supplied theo vol/prc to SpiderRock surface price) (if any)',\n    `trdTheoEdgeUnit` FLOAT NOT NULL DEFAULT 0 COMMENT 'theo edge normalized to $100 underlier',\n    `clArrivePnL` FLOAT NOT NULL DEFAULT 0 COMMENT 'arrival PnL (client arrival mark to fill mark) [from clArriveMark on parent order if any]',\n    `arrivePnL` FLOAT NOT NULL DEFAULT 0 COMMENT 'arrival PnL (parent arrival mark to fill mark)',\n    `arriveDnPnL` FLOAT NOT NULL DEFAULT 0 COMMENT 'arrival Dn PnL (arrivalPnL - uDriftArrivalPnL)',\n    `uDriftArrivePnL` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier delta drift PnL (arrival uMark to fill uMark)',\n    `childLimitSlip` FLOAT NOT NULL DEFAULT 0 COMMENT 'Fill Slippage (ChildLimitPrice to FillPrice)',\n    `halfWidthPnL` FLOAT NOT NULL DEFAULT 0 COMMENT 'estimated half-width PnL',\n    `dayDnPnL` FLOAT NOT NULL DEFAULT 0 COMMENT 'delta neutral PnL (to EOD)',\n    `dayM1PnL` FLOAT NOT NULL DEFAULT 0 COMMENT 'delta neutral PnL (Fill + 1M)',\n    `dayM10PnL` FLOAT NOT NULL DEFAULT 0 COMMENT 'delta neutral PnL (Fill + 10M)',\n    `uDriftDayPnL` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier delta drift PnL (to EOD)',\n    `uDriftM1PnL` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier delta drift PnL (Fill + 1M)',\n    `uDriftM10PnL` FLOAT NOT NULL DEFAULT 0 COMMENT 'underlier delta drift PnL (Fill + 10M)',\n    `dayPnL` FLOAT NOT NULL DEFAULT 0 COMMENT 'actual PnL to EOD (fillMark to liveMark)',\n    `m1Mark` DOUBLE NOT NULL DEFAULT 0 COMMENT 'T+1min',\n    `m1UPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'T+1min',\n    `m10Mark` DOUBLE NOT NULL DEFAULT 0 COMMENT 'T+10min',\n    `m10UPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'T+10min',\n    `liveMark` DOUBLE NOT NULL DEFAULT 0 COMMENT 'Live @ Record Query',\n    `liveUPrc` DOUBLE NOT NULL DEFAULT 0 COMMENT 'Live @ Record Query',\n    `trdMarkError` VARCHAR(8) NOT NULL DEFAULT '' COMMENT 'trade mark error code',\n    `dayMarkError` VARCHAR(8) NOT NULL DEFAULT '' COMMENT 'day mark error code',\n    `timestamp` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'SR system timestamp',\n    CONSTRAINT nonnegative_fillNumber CHECK(ASCII(fillNumber) < 56),\n    CONSTRAINT nonnegative_parentNumber CHECK(ASCII(parentNumber) < 56),\n    CONSTRAINT nonnegative_baseParentNumber CHECK(ASCII(baseParentNumber) < 56),\n    CONSTRAINT nonnegative_groupingCode CHECK(ASCII(groupingCode) < 56),\n    CONSTRAINT nonnegative_riskGroupId CHECK(ASCII(riskGroupId) < 56),\n    PRIMARY KEY USING HASH (`fillNumber`),\n    KEY `AccntIndex` (`accnt`) USING HASH,\n    KEY `ClientFirmIndex` (`clientFirm`) USING HASH\n) ENGINE=SRSE DEFAULT CHARSET=LATIN1 COMMENT='';\n\n"})}),"\n",(0,n.jsx)(r.h3,{id:"select-table-example-query",children:"SELECT TABLE EXAMPLE QUERY"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-sql",children:"SELECT\n    `fillNumber`,\n    `tradeDate`,\n    `accnt`,\n    `clientFirm`,\n    `secKey_at`,\n    `secKey_ts`,\n    `secKey_tk`,\n    `secKey_yr`,\n    `secKey_mn`,\n    `secKey_dy`,\n    `secKey_xx`,\n    `secKey_cp`,\n    `secType`,\n    `side`,\n    `version`,\n    `parentNumber`,\n    `baseParentNumber`,\n    `spdrSource`,\n    `groupingCode`,\n    `riskGroupId`,\n    `altOrderId`,\n    `srcRoutingCode`,\n    `userName`,\n    `server`,\n    `ticker_at`,\n    `ticker_ts`,\n    `ticker_tk`,\n    `sector`,\n    `clientTags`,\n    `indNum`,\n    `subNum`,\n    `grpNum`,\n    `nbrNum`,\n    `expCode`,\n    `skewCode`,\n    `widthCode`,\n    `priceFormat`,\n    `uPriceFormat`,\n    `years`,\n    `underlierType`,\n    `minTickSize`,\n    `pointValue`,\n    `pointCurrency`,\n    `underliersPerCn`,\n    `parentShape`,\n    `parentLimitType`,\n    `parentLimitClass`,\n    `parentOrderHandling`,\n    `parentBalanceHandling`,\n    `parentOrderSize`,\n    `parentDttm`,\n    `parentUMark`,\n    `parentBid`,\n    `parentAsk`,\n    `parentFairPrc`,\n    `parentFairWidth`,\n    `parentLimitPrc`,\n    `parentLimitRefUPrc`,\n    `parentSSaleFlag`,\n    `parentPositionType`,\n    `parentStrategy`,\n    `parentAutoHedge`,\n    `childDttm`,\n    `childClOrdId`,\n    `childRoutingCode`,\n    `childSize`,\n    `childPrice`,\n    `childExch`,\n    `childExDest`,\n    `childUPrc`,\n    `childBid`,\n    `childAsk`,\n    `childFairPrc`,\n    `childFairWidth`,\n    `childVol`,\n    `childProb`,\n    `childLimitPrc`,\n    `childLimitRefUPrc`,\n    `childAlgoHandler`,\n    `childOrderHandling`,\n    `childCreateReason`,\n    `childCancelReason`,\n    `childMktStance`,\n    `childCxlAttempted`,\n    `childSSaleFlag`,\n    `childPositionType`,\n    `childFirmType`,\n    `childCapacity`,\n    `fillExch`,\n    `fillPrice`,\n    `fillDttm`,\n    `fillSize`,\n    `fillPointValue`,\n    `fillVol`,\n    `fillProb`,\n    `fillLimitPrc`,\n    `fillLimitRefUPrc`,\n    `fillUPrc`,\n    `fillBeta`,\n    `fillTv`,\n    `fillTp`,\n    `fillBid`,\n    `fillAsk`,\n    `fillFairPrc`,\n    `fillFairWidth`,\n    `fillBrkrRate`,\n    `fillRoutingRate`,\n    `fillOrigExecID`,\n    `fillLastExecID`,\n    `fillExecStatus`,\n    `fillRemoteText`,\n    `fillTransactDttm`,\n    `fillLiquidityTag`,\n    `fillExchFee`,\n    `fillDe`,\n    `fillGa`,\n    `fillVe`,\n    `execRole`,\n    `execBrkrCode`,\n    `execBrkrAccnt`,\n    `execBrkrClFirm`,\n    `execBrkrUserName`,\n    `clearingFlipType`,\n    `clearingFlipFirm`,\n    `clearingFlipAccnt`,\n    `clearingAgent`,\n    `clearingTaxID`,\n    `billingSecType`,\n    `billingCategory`,\n    `priAggGroup`,\n    `secAggGroup`,\n    `trdDelta`,\n    `trdDDelta`,\n    `trdGamma`,\n    `trdDGamma`,\n    `trdVega`,\n    `trdWtVega`,\n    `trdTheta`,\n    `trdBeta`,\n    `trdDBeta`,\n    `trdNotionalValue`,\n    `trdMarketValue`,\n    `marginUDnVDn`,\n    `marginUDnVUp`,\n    `marginUUpVDn`,\n    `marginUUpVUp`,\n    `trdFairEdge`,\n    `trdFairEdgeUnit`,\n    `trdTheoEdge`,\n    `trdTheoEdgeUnit`,\n    `clArrivePnL`,\n    `arrivePnL`,\n    `arriveDnPnL`,\n    `uDriftArrivePnL`,\n    `childLimitSlip`,\n    `halfWidthPnL`,\n    `dayDnPnL`,\n    `dayM1PnL`,\n    `dayM10PnL`,\n    `uDriftDayPnL`,\n    `uDriftM1PnL`,\n    `uDriftM10PnL`,\n    `dayPnL`,\n    `m1Mark`,\n    `m1UPrc`,\n    `m10Mark`,\n    `m10UPrc`,\n    `liveMark`,\n    `liveUPrc`,\n    `trdMarkError`,\n    `dayMarkError`,\n    `timestamp`\nFROM `SRTrade`.`MsgToolCompositeExecution`\nWHERE \n    /* Replace with a CHAR(19) */\n    `fillNumber` = 'Example_fillNumber';\n"})}),"\n",(0,n.jsx)(r.h3,{id:"doc-columns-query",children:"Doc Columns Query"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-sql",children:"SELECT * FROM SRTrade.doccolumns WHERE TABLE_NAME='ToolCompositeExecution' ORDER BY ordinal_position ASC;\n"})})]})}function x(e={}){let{wrapper:r}={...(0,t.a)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},91503:function(e,r,d){d.d(r,{Z:function(){return s},a:function(){return l}});var i=d(75271);let n={},t=i.createContext(n);function l(e){let r=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),i.createElement(t.Provider,{value:r},e.children)}}}]);