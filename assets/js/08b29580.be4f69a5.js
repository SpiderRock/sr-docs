"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[16601],{52600:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>a});var r=n(74848),d=n(28453);const t={},i=void 0,l={id:"MessageSchemas/Schema/SRSE Products/SRLive/MarketHoursConfig/MarketHoursConfig",title:"MarketHoursConfig",description:"V8 Message Definiton",source:"@site/docs/MessageSchemas/Schema/SRSE Products/SRLive/MarketHoursConfig/MarketHoursConfig.md",sourceDirName:"MessageSchemas/Schema/SRSE Products/SRLive/MarketHoursConfig",slug:"/MessageSchemas/Schema/SRSE Products/SRLive/MarketHoursConfig/",permalink:"/docs/next/MessageSchemas/Schema/SRSE Products/SRLive/MarketHoursConfig/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"messageSchemasSidebar",previous:{title:"IndexQuote",permalink:"/docs/next/MessageSchemas/Schema/SRSE Products/SRLive/IndexQuote/"},next:{title:"NMSCircuitBreaker",permalink:"/docs/next/MessageSchemas/Schema/SRSE Products/SRLive/NMSCircuitBreaker/"}},c={},a=[{value:"METADATA",id:"metadata",level:3},{value:"Table Definition",id:"table-definition",level:3},{value:"PRIMARY KEY DEFINITION (Unique)",id:"primary-key-definition-unique",level:3},{value:"CREATE TABLE EXAMPLE QUERY",id:"create-table-example-query",level:3},{value:"SELECT TABLE EXAMPLE QUERY",id:"select-table-example-query",level:3},{value:"Doc Columns Query",id:"doc-columns-query",level:3}];function o(e){const s={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"../../../Topics/product-status/MarketHoursConfig",children:"V8 Message Definiton"})}),"\n",(0,r.jsx)(s.p,{children:"Expected trading day market schedule for each TradingPeriod and SecType.  Including schedules for equity, futures, and options markets.  The NMS schedule is the NYSE announced trading calendar.  Other markets are from the listing exchange.\\nTypically includes records for the current week, previous week and next week"}),"\n",(0,r.jsx)(s.h3,{id:"metadata",children:"METADATA"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Attribute"}),(0,r.jsx)(s.th,{children:"Value"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Topic"}),(0,r.jsx)(s.td,{children:"4440-product-status"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"MLink Token"}),(0,r.jsx)(s.td,{children:"ClientLive"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Product"}),(0,r.jsx)(s.td,{children:"SRLive"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"accessType"}),(0,r.jsx)(s.td,{children:"SELECT"})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"table-definition",children:"Table Definition"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Field"}),(0,r.jsx)(s.th,{children:"Type"}),(0,r.jsx)(s.th,{children:"Key"}),(0,r.jsx)(s.th,{children:"Default Value"}),(0,r.jsx)(s.th,{children:"Comment"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"ticker_at"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"../../../Enums/AssetType",children:"enum - AssetType"})}),(0,r.jsx)(s.td,{children:"PRI"}),(0,r.jsx)(s.td,{children:"'None'"}),(0,r.jsx)(s.td,{children:"note should be ANYANY wildcard for the perTradingPeriod default MarketHoursConfig messages"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"ticker_ts"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"../../../Enums/TickerSrc",children:"enum - TickerSrc"})}),(0,r.jsx)(s.td,{children:"PRI"}),(0,r.jsx)(s.td,{children:"'None'"}),(0,r.jsx)(s.td,{children:"note should be ANYANY wildcard for the perTradingPeriod default MarketHoursConfig messages"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"ticker_tk"}),(0,r.jsx)(s.td,{children:"VARCHAR(12)"}),(0,r.jsx)(s.td,{children:"PRI"}),(0,r.jsx)(s.td,{children:"''"}),(0,r.jsx)(s.td,{children:"note should be ANYANY wildcard for the perTradingPeriod default MarketHoursConfig messages"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"secType"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"../../../Enums/SpdrKeyType",children:"enum - SpdrKeyType"})}),(0,r.jsx)(s.td,{children:"PRI"}),(0,r.jsx)(s.td,{children:"'None'"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"tradeDate"}),(0,r.jsx)(s.td,{children:"DATE"}),(0,r.jsx)(s.td,{children:"PRI"}),(0,r.jsx)(s.td,{children:"'1900-01-01'"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"tradingPeriod"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"../../../Enums/TradingPeriod",children:"enum - TradingPeriod"})}),(0,r.jsx)(s.td,{children:"PRI"}),(0,r.jsx)(s.td,{children:"'None'"}),(0,r.jsx)(s.td,{children:"note this trading period should be the same for all tradeDates for each tickersecType pair"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"timeZone"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"../../../Enums/SRTimeZone",children:"enum - SRTimeZone"})}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:"'None'"}),(0,r.jsx)(s.td,{children:"note this does not have to match the associated TradingPeriod timeZone default is TradingPeriodTimeZone"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"marketDayType"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"../../../Enums/MarketDayType",children:"enum - MarketDayType"})}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:"'None'"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"srCloseMarkTime"}),(0,r.jsx)(s.td,{children:"TIME(6)"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:"'00:00:00.000000'"}),(0,r.jsx)(s.td,{children:"SR Close Mark Time usually regular market close  5 minute C  5M"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"hasEarlySession"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"../../../Enums/YesNo",children:"enum - YesNo"})}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:"'None'"}),(0,r.jsx)(s.td,{children:"note early session can start the previous day"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"earlyPreOpenTime"}),(0,r.jsx)(s.td,{children:"TIME(6)"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:"'00:00:00.000000'"}),(0,r.jsx)(s.td,{children:"early session preopen orders accepted"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"earlySessionOpenTime"}),(0,r.jsx)(s.td,{children:"TIME(6)"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:"'00:00:00.000000'"}),(0,r.jsx)(s.td,{children:"early session market open"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"earlySessionCloseTime"}),(0,r.jsx)(s.td,{children:"TIME(6)"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:"'00:00:00.000000'"}),(0,r.jsx)(s.td,{children:"early session market close"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"hasRegularSession"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"../../../Enums/YesNo",children:"enum - YesNo"})}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:"'None'"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"regPreOpenTime"}),(0,r.jsx)(s.td,{children:"TIME(6)"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:"'00:00:00.000000'"}),(0,r.jsx)(s.td,{children:"regular session preopen order accepted"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"regSessionOpenTime"}),(0,r.jsx)(s.td,{children:"TIME(6)"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:"'00:00:00.000000'"}),(0,r.jsx)(s.td,{children:"regular session open"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"regSessionCloseTime"}),(0,r.jsx)(s.td,{children:"TIME(6)"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:"'00:00:00.000000'"}),(0,r.jsx)(s.td,{children:"regular session close"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"hasLateSession"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"../../../Enums/YesNo",children:"enum - YesNo"})}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:"'None'"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"latePreOpenTime"}),(0,r.jsx)(s.td,{children:"TIME(6)"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:"'00:00:00.000000'"}),(0,r.jsx)(s.td,{children:"extended session preopen orders accepted"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"lateSessionOpenTime"}),(0,r.jsx)(s.td,{children:"TIME(6)"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:"'00:00:00.000000'"}),(0,r.jsx)(s.td,{children:"extended session open"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"lateSessionCloseTime"}),(0,r.jsx)(s.td,{children:"TIME(6)"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:"'00:00:00.000000'"}),(0,r.jsx)(s.td,{children:"extended session close"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"hasExEarlyClose"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"../../../Enums/YesNo",children:"enum - YesNo"})}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:"'None'"}),(0,r.jsx)(s.td,{children:"options have an early close on expiry day secType  Option only"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"exEarlyCloseTime"}),(0,r.jsx)(s.td,{children:"TIME(6)"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:"'00:00:00.000000'"}),(0,r.jsx)(s.td,{children:"expiry day early close time"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"timestamp"}),(0,r.jsx)(s.td,{children:"DATETIME(6)"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:"'1900-01-01 00:00:00.000000'"}),(0,r.jsx)(s.td,{})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"primary-key-definition-unique",children:"PRIMARY KEY DEFINITION (Unique)"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Field"}),(0,r.jsx)(s.th,{children:"Sequence"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"ticker_tk"}),(0,r.jsx)(s.td,{children:"1"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"ticker_at"}),(0,r.jsx)(s.td,{children:"2"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"ticker_ts"}),(0,r.jsx)(s.td,{children:"3"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"secType"}),(0,r.jsx)(s.td,{children:"4"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"tradeDate"}),(0,r.jsx)(s.td,{children:"5"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"tradingPeriod"}),(0,r.jsx)(s.td,{children:"6"})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"create-table-example-query",children:"CREATE TABLE EXAMPLE QUERY"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-sql",children:"CREATE TABLE `SRLive`.`MsgMarketHoursConfig` (\n    `ticker_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None' COMMENT 'note: should be \"*-ANY-ANY\" (wildcard) for the per-TradingPeriod default MarketHoursConfig messages',\n    `ticker_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None' COMMENT 'note: should be \"*-ANY-ANY\" (wildcard) for the per-TradingPeriod default MarketHoursConfig messages',\n    `ticker_tk` VARCHAR(12) NOT NULL DEFAULT '' COMMENT 'note: should be \"*-ANY-ANY\" (wildcard) for the per-TradingPeriod default MarketHoursConfig messages',\n    `secType` ENUM('None','Stock','Future','Option','MLeg') NOT NULL DEFAULT 'None',\n    `tradeDate` DATE NOT NULL DEFAULT '1900-01-01',\n    `tradingPeriod` ENUM('None','NMS','NMS_EXT','NMS_GTH','CME_ES','CME_ZC','CME_ZN','CME_CL','CME_GC','CFE','ICE_US','ICE_EU','EUX','EU_ERX','EU_CBOE','EU_NXAM','EU_NXBR','EU_NXLS','EU_NXML','EU_NXOS','EU_NXP') NOT NULL DEFAULT 'None' COMMENT 'note: this trading period should be the same for all tradeDates for each [ticker/secType] pair',\n    `timeZone` ENUM('None','US_CST','US_EST','US_PST','UK_GMT','EU_CET') NOT NULL DEFAULT 'None' COMMENT 'note: this does not have to match the associated TradingPeriod timeZone (default is TradingPeriod.TimeZone)',\n    `marketDayType` ENUM('None','RegularDay','ModifiedDay','MarketClosed') NOT NULL DEFAULT 'None',\n    `srCloseMarkTime` TIME(6) NOT NULL DEFAULT '00:00:00.000000' COMMENT 'SR Close Mark Time; usually regular market close - 5 minute (C - 5M)',\n    `hasEarlySession` ENUM('None','Yes','No') NOT NULL DEFAULT 'None' COMMENT 'note: early session can start the previous day',\n    `earlyPreOpenTime` TIME(6) NOT NULL DEFAULT '00:00:00.000000' COMMENT 'early session pre-open (orders accepted)',\n    `earlySessionOpenTime` TIME(6) NOT NULL DEFAULT '00:00:00.000000' COMMENT 'early session market open',\n    `earlySessionCloseTime` TIME(6) NOT NULL DEFAULT '00:00:00.000000' COMMENT 'early session market close',\n    `hasRegularSession` ENUM('None','Yes','No') NOT NULL DEFAULT 'None',\n    `regPreOpenTime` TIME(6) NOT NULL DEFAULT '00:00:00.000000' COMMENT 'regular session pre-open (order accepted)',\n    `regSessionOpenTime` TIME(6) NOT NULL DEFAULT '00:00:00.000000' COMMENT 'regular session open',\n    `regSessionCloseTime` TIME(6) NOT NULL DEFAULT '00:00:00.000000' COMMENT 'regular session close',\n    `hasLateSession` ENUM('None','Yes','No') NOT NULL DEFAULT 'None',\n    `latePreOpenTime` TIME(6) NOT NULL DEFAULT '00:00:00.000000' COMMENT 'extended session pre-open (orders accepted)',\n    `lateSessionOpenTime` TIME(6) NOT NULL DEFAULT '00:00:00.000000' COMMENT 'extended session open',\n    `lateSessionCloseTime` TIME(6) NOT NULL DEFAULT '00:00:00.000000' COMMENT 'extended session close',\n    `hasExEarlyClose` ENUM('None','Yes','No') NOT NULL DEFAULT 'None' COMMENT 'options have an early close on expiry day (secType = Option only)',\n    `exEarlyCloseTime` TIME(6) NOT NULL DEFAULT '00:00:00.000000' COMMENT 'expiry day early close time',\n    `timestamp` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000',\n    PRIMARY KEY USING HASH (`ticker_tk`,`ticker_at`,`ticker_ts`,`secType`,`tradeDate`,`tradingPeriod`)\n) ENGINE=SRSE DEFAULT CHARSET=LATIN1 COMMENT='Expected trading day market schedule for each TradingPeriod and SecType.  Including schedules for equity, futures, and options markets.  The NMS schedule is the NYSE announced trading calendar.  Other markets are from the listing exchange.\\nTypically includes records for the current week, previous week and next week';\n\n"})}),"\n",(0,r.jsx)(s.h3,{id:"select-table-example-query",children:"SELECT TABLE EXAMPLE QUERY"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-sql",children:"SELECT\n    `ticker_at`,\n    `ticker_ts`,\n    `ticker_tk`,\n    `secType`,\n    `tradeDate`,\n    `tradingPeriod`,\n    `timeZone`,\n    `marketDayType`,\n    `srCloseMarkTime`,\n    `hasEarlySession`,\n    `earlyPreOpenTime`,\n    `earlySessionOpenTime`,\n    `earlySessionCloseTime`,\n    `hasRegularSession`,\n    `regPreOpenTime`,\n    `regSessionOpenTime`,\n    `regSessionCloseTime`,\n    `hasLateSession`,\n    `latePreOpenTime`,\n    `lateSessionOpenTime`,\n    `lateSessionCloseTime`,\n    `hasExEarlyClose`,\n    `exEarlyCloseTime`,\n    `timestamp`\nFROM `SRLive`.`MsgMarketHoursConfig`\nWHERE \n    /* Replace with a ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') */ \n    `ticker_at` = 'None'\n  AND\n    /* Replace with a ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','EUX','ANY','CXE','DXE','NXAM','NXBR','NXLS','NXML','NXOS','NXP','EUREX','CEDX','ICEFE') */ \n    `ticker_ts` = 'None'\n  AND\n    /* Replace with a VARCHAR(12) */ \n    `ticker_tk` = 'Example_ticker_tk'\n  AND\n    /* Replace with a ENUM('None','Stock','Future','Option','MLeg') */ \n    `secType` = 'None'\n  AND\n    /* Replace with a DATE */\n    `tradeDate` = '2022-01-01'\n  AND\n    /* Replace with a ENUM('None','NMS','NMS_EXT','NMS_GTH','CME_ES','CME_ZC','CME_ZN','CME_CL','CME_GC','CFE','ICE_US','ICE_EU','EUX','EU_ERX','EU_CBOE','EU_NXAM','EU_NXBR','EU_NXLS','EU_NXML','EU_NXOS','EU_NXP') */ \n    `tradingPeriod` = 'None';\n"})}),"\n",(0,r.jsx)(s.h3,{id:"doc-columns-query",children:"Doc Columns Query"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-sql",children:"SELECT * FROM SRLive.doccolumns WHERE TABLE_NAME='MarketHoursConfig' ORDER BY ordinal_position ASC;\n"})})]})}function h(e={}){const{wrapper:s}={...(0,d.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>l});var r=n(96540);const d={},t=r.createContext(d);function i(e){const s=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:i(e.components),r.createElement(t.Provider,{value:s},e.children)}}}]);