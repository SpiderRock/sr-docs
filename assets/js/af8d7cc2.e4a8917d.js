"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[14143],{54398:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>N,toc:()=>E});var t=r(74848),s=r(28453);const i={title:"ResponderMarkupRC"},o=void 0,N={id:"MessageSchemas/Schema/SRSE Products/SRTrade/ResponderMarkupRC/ResponderMarkupRC",title:"ResponderMarkupRC",description:"V8 Message Definition",source:"@site/docs/MessageSchemas/Schema/SRSE Products/SRTrade/ResponderMarkupRC/ResponderMarkupRC.md",sourceDirName:"MessageSchemas/Schema/SRSE Products/SRTrade/ResponderMarkupRC",slug:"/MessageSchemas/Schema/SRSE Products/SRTrade/ResponderMarkupRC/",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRTrade/ResponderMarkupRC/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"ResponderMarkupRC"},sidebar:"messageSchemasSidebar",previous:{title:"ResponderMarkupBX",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRTrade/ResponderMarkupBX/"},next:{title:"ResponderMarkupSN",permalink:"/docs/MessageSchemas/Schema/SRSE Products/SRTrade/ResponderMarkupSN/"}},a={},E=[];function L(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"../../../Topics/liquidity-notice/ResponderMarkupRC",children:"V8 Message Definition"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE `SRTrade`.`MsgResponderMarkupRC` (\n    `accnt` VARCHAR(16) NOT NULL DEFAULT '',\n    `clientFirm` VARCHAR(16) NOT NULL DEFAULT '',\n    `root_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None',\n    `root_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None',\n    `root_tk` VARCHAR(12) NOT NULL DEFAULT '',\n    `expiry` DATE NOT NULL DEFAULT '1900-01-01',\n    `respSide` ENUM('None','Buy','Sell') NOT NULL DEFAULT 'None' COMMENT 'auction responder side (your side); Buy = Buy Synthetic (Sell Shares)',\n    `ticker_at` ENUM('None','EQT','IDX','BND','CUR','COM','FUT','SYN','WAR','FLX','MUT','SPD','MM','MF','COIN','TOKEN','ANY') NOT NULL DEFAULT 'None',\n    `ticker_ts` ENUM('None','SR','NMS','CME','ICE','CFE','CBOT','NYMEX','COMEX','RUT','CIDX','ARCA','NYSE','OTC','NSDQ','MFQS','MIAX','DJI','CUSIP','ISIN','BXE','ESX','ANY','CXE','DXE','NXAM','NXBR','NXDUB','NXLS','NXLDN','NXML','NXMLT','NXOS','NXP','EUREX','CEDX','ICEFE') NOT NULL DEFAULT 'None',\n    `ticker_tk` VARCHAR(12) NOT NULL DEFAULT '',\n    `isDisabled` ENUM('None','Yes','No') NOT NULL DEFAULT 'None' COMMENT 'if Yes, this auto-responder record is disabled',\n    `expiryQtyAvail` INT NOT NULL DEFAULT 0 COMMENT 'revcons (contracts) available for responding (day total; this ticker/expiry; all strikes) [note: 1 contract = undPerCn underlier units]',\n    `tickerQtyAvail` INT NOT NULL DEFAULT 0 COMMENT 'revcons (contracts) available for responding (day total; this ticker; all strikes) [note: 1 contract = undPerCn underlier units]',\n    `transactFee` DOUBLE NOT NULL DEFAULT 0 COMMENT '(+ = you pay) / (- = you receive)',\n    `stockRate` DOUBLE NOT NULL DEFAULT 0 COMMENT '0.00 = no effective lend/borrow value  (360 day convention)',\n    `moneyRate` DOUBLE NOT NULL DEFAULT 0 COMMENT 'effective rate to borrow/lend money to expiry (360 day convention) [compares to globalRate * 360 / 365]',\n    `ddivPv` DOUBLE NOT NULL DEFAULT 0 COMMENT 'present value of any expected dividends to expiry',\n    `divControl` ENUM('None','DisableAny','DisableEstimates') NOT NULL DEFAULT 'None' COMMENT 'disable this auto-responder record if SR Dividends exist or are estimates',\n    `respondFlex` ENUM('None','Yes','No') NOT NULL DEFAULT 'None' COMMENT 'if not None, much match auction notice containsFlex field',\n    `incFeesInResp` ENUM('None','Yes','No') NOT NULL DEFAULT 'None' COMMENT 'include all estimated responder fees in final response price',\n    `roundRule` ENUM('None','Exact','Fuzzy') NOT NULL DEFAULT 'None',\n    `openExpiryQty` INT NOT NULL DEFAULT 0 COMMENT 'remaining revcons (100 share units) available for responding (day total; this ticker/expiry; all strikes)',\n    `openTickerQty` INT NOT NULL DEFAULT 0 COMMENT 'remaining revcons (100 share units) available for responding (day total; ticker; all strikes)',\n    `cumFillQty` INT NOT NULL DEFAULT 0 COMMENT 'revcons (100 share units) traded (day total; this expiry; all strikes)',\n    `cumFillMoney` DOUBLE NOT NULL DEFAULT 0 COMMENT 'cumulative fill money (credit/debit) (this expiry)',\n    `avgFillRate` DOUBLE NOT NULL DEFAULT 0 COMMENT 'avg fill effective stock rate (this expiry)',\n    `isDivControlDisabled` ENUM('None','Yes','No') NOT NULL DEFAULT 'None' COMMENT 'yes if dividend control above is triggered',\n    `uBid` DOUBLE NOT NULL DEFAULT 0 COMMENT 'live stock nbbo bid price [SR Supplied]',\n    `uAsk` DOUBLE NOT NULL DEFAULT 0 COMMENT 'live stock nbbo ask price [SR Supplied]',\n    `iDays` DOUBLE NOT NULL DEFAULT 0 COMMENT 'iDays = effective interest days [SR supplied]',\n    `iYears` DOUBLE NOT NULL DEFAULT 0 COMMENT 'iYears = iDays / 360.0',\n    `strike` DOUBLE NOT NULL DEFAULT 0 COMMENT 'SR selected strike (standard day strike)',\n    `rcEExPrem` DOUBLE NOT NULL DEFAULT 0 COMMENT 'rcEExPrem = (pRv.price - pRvE.price) - (cRv.price - cRvE.price) [american price - european price] (same model parameters; SR supplied parameters including DDivs; is zero for flex revcons)',\n    `strikePv` DOUBLE NOT NULL DEFAULT 0 COMMENT 'strikePv = strike * (1.0 - moneyRate * iYears) [moneyRate supplied above]',\n    `stockLendPv` DOUBLE NOT NULL DEFAULT 0 COMMENT 'stockLendPv = uPrc * stockRate * iYears [stockRate supplied above]',\n    `revConPrem` DOUBLE NOT NULL DEFAULT 0 COMMENT 'revConPrem = stockLendPv + strikePv + ddivPv + rcEExPrem (if any) [uPrc + pRv.price - cRv.price] [ddivPv supplied above]',\n    `effRevConLimit` DOUBLE NOT NULL DEFAULT 0 COMMENT 'effRevConLimit = refConPrem +/- transactFee [lend/borrow]',\n    `limitPrice` DOUBLE NOT NULL DEFAULT 0 COMMENT 'limitPrice = ROUND(effRevConLimit) [this is your response limit]',\n    `effStockLendPv` DOUBLE NOT NULL DEFAULT 0 COMMENT 'effStockLendPv = limitPrice - strikePv - ddivPv - rcEExPrem',\n    `effStockRate` DOUBLE NOT NULL DEFAULT 0 COMMENT 'effStockRate = effStockLendPv / (uPrc * iYears)',\n    `modifiedBy` VARCHAR(24) NOT NULL DEFAULT '' COMMENT 'user who last modified this record',\n    `modifiedIn` ENUM('None','Neptune','Pluto','V7_Stable','V7_Latest','Saturn','Venus','Mars','SysTest','V7_Current') NOT NULL DEFAULT 'None',\n    `timestamp` DATETIME(6) NOT NULL DEFAULT '1900-01-01 00:00:00.000000' COMMENT 'timestamp of last modification',\n    PRIMARY KEY USING HASH (`accnt`,`clientFirm`,`root_tk`,`root_at`,`root_ts`,`expiry`,`respSide`)\n) ENGINE=SRSE DEFAULT CHARSET=LATIN1 COMMENT='';\n\n"})})]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(L,{...e})}):L(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>N});var t=r(96540);const s={},i=t.createContext(s);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function N(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);