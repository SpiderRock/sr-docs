"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([["66496"],{88277:function(e,t,n){n.r(t),n.d(t,{default:()=>p,frontMatter:()=>a,metadata:()=>s,assets:()=>o,toc:()=>h,contentTitle:()=>c});var s=JSON.parse('{"id":"MessageSchemas/Schema/Topics/analytics/LiveImpliedQuoteAdj","title":"LiveImpliedQuoteAdj","description":"METADATA","source":"@site/versioned_docs/version-8.5.9.4/MessageSchemas/Schema/Topics/1000-analytics/LiveImpliedQuoteAdj.md","sourceDirName":"MessageSchemas/Schema/Topics/1000-analytics","slug":"/MessageSchemas/Schema/Topics/analytics/LiveImpliedQuoteAdj","permalink":"/docs/8.5.9.4/MessageSchemas/Schema/Topics/analytics/LiveImpliedQuoteAdj","draft":false,"unlisted":false,"tags":[],"version":"8.5.9.4","frontMatter":{"title":"LiveImpliedQuoteAdj"},"sidebar":"messageSchemasSidebar","previous":{"title":"LiveImpliedQuote","permalink":"/docs/8.5.9.4/MessageSchemas/Schema/Topics/analytics/LiveImpliedQuote"},"next":{"title":"LiveImpliedQuoteDisp","permalink":"/docs/8.5.9.4/MessageSchemas/Schema/Topics/analytics/LiveImpliedQuoteDisp"}}'),r=n("52676"),i=n("91503"),d=n("71386"),l=n("9641");let a={title:"LiveImpliedQuoteAdj"},c="Schema: LiveImpliedQuoteAdj (ID: 1020)",o={},h=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3}];function u(e){let t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsxs)(t.h1,{id:"schema-liveimpliedquoteadj-id-1020",children:["Schema: LiveImpliedQuoteAdj ",(0,r.jsx)("span",{className:"small-text",children:"(ID: 1020)"})]})}),"\n",(0,r.jsx)(t.h3,{id:"metadata",children:"METADATA"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Attribute"}),(0,r.jsx)(t.th,{children:"Value"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Topic"}),(0,r.jsx)(t.td,{children:"1000-analytics"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"MLink Token"}),(0,r.jsx)(t.td,{children:"OptAnalytics"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"SRSE Product"}),(0,r.jsx)(t.td,{children:"SRAnalytics"})]})]})]}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Note:"})," The symbol ",(0,r.jsx)(t.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"body",children:"BODY"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"#"}),(0,r.jsx)(t.th,{children:"Field"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Default Value"}),(0,r.jsx)(t.th,{children:"Comment"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"10="}),(0,r.jsx)(t.td,{children:"okey"}),(0,r.jsx)(t.td,{children:"OptionKey"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"100"}),(0,r.jsx)(t.td,{children:"ticker"}),(0,r.jsx)(t.td,{children:"TickerKey"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"103"}),(0,r.jsx)(t.td,{children:"uprc"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"underlier price (usually mid-market)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"106"}),(0,r.jsx)(t.td,{children:"years"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"years to expiration"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"109"}),(0,r.jsx)(t.td,{children:"rate"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"interest rate"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"112"}),(0,r.jsx)(t.td,{children:"sdiv"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"sdiv (stock dividend) rate"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"115"}),(0,r.jsx)(t.td,{children:"ddiv"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"cumulative discrete dividend values"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"118"}),(0,r.jsx)(t.td,{children:"obid"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"option bid price"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"121"}),(0,r.jsx)(t.td,{children:"oask"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"option ask price"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"124"}),(0,r.jsx)(t.td,{children:"obiv"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"volatility implied by option bid price"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"127"}),(0,r.jsx)(t.td,{children:"oaiv"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"volatility implied by option ask price"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"130"}),(0,r.jsx)(t.td,{children:"satm"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"option atm volatility (from SR surface)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"133"}),(0,r.jsx)(t.td,{children:"smny"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"option moneyness"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"136"}),(0,r.jsx)(t.td,{children:"svol"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"option surface volatility"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"139"}),(0,r.jsx)(t.td,{children:"sprc"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"option surface price"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"142"}),(0,r.jsx)(t.td,{children:"smrk"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"option surface price (w/bounding rules)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"145"}),(0,r.jsx)(t.td,{children:"veSlope"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"veSlope = dVol / dUprc (assuming vol @ xAxis = 0 remains constant);hedgeDelta = (de + ve * 100 * veSlope) if hedging with this assumption"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"148"}),(0,r.jsx)(t.td,{children:"de"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"option delta"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"151"}),(0,r.jsx)(t.td,{children:"ga"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"option gamma"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"154"}),(0,r.jsx)(t.td,{children:"th"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"option theta"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"157"}),(0,r.jsx)(t.td,{children:"ve"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"option vega"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"160"}),(0,r.jsx)(t.td,{children:"va"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"option vanna"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"163"}),(0,r.jsx)(t.td,{children:"vo"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"option volga"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"166"}),(0,r.jsx)(t.td,{children:"ro"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"option rho"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"169"}),(0,r.jsx)(t.td,{children:"ph"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"option phi"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"172"}),(0,r.jsx)(t.td,{children:"deDecay"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"option delta decay"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"175"}),(0,r.jsx)(t.td,{children:"up50"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"underlier up 50% slide"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"178"}),(0,r.jsx)(t.td,{children:"dn50"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"underlier dn 50% slide"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"181"}),(0,r.jsx)(t.td,{children:"up15"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"underlier up 15% slide"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"184"}),(0,r.jsx)(t.td,{children:"dn15"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"underlier dn 15% slide"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"187"}),(0,r.jsx)(t.td,{children:"up06"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"underlier up 6% slide"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"190"}),(0,r.jsx)(t.td,{children:"dn08"}),(0,r.jsx)(t.td,{children:"float"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"underlier dn 8% slide"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"193"}),(0,r.jsx)(t.td,{children:"synSpot"}),(0,r.jsx)(t.td,{children:"double"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"Synthetic spot price (market-derived spot when the underlying is not a traded instrument)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"196"}),(0,r.jsx)(t.td,{children:"priceType"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../../../Enums/CalcPriceType",children:"enum : CalcPriceType"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"Equity or Future (Black76) pricing framework;  if Future then uPrc is the forwardUPrc and sdiv = rate"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"199"}),(0,r.jsx)(t.td,{children:"calcErr"}),(0,r.jsx)(t.td,{children:"string(24)"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"option pricing error (if any)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"202"}),(0,r.jsx)(t.td,{children:"calcSource"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../../../Enums/CalcSource",children:"enum : CalcSource"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"205"}),(0,r.jsx)(t.td,{children:"uPrcAdjResult"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"../../../Enums/AdjResult",children:"enum : AdjResult"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"209"}),(0,r.jsx)(t.td,{children:"srcTimestamp"}),(0,r.jsx)(t.td,{children:"long"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"OPRA source timestamp (nanoseconds since epoch); will be zero if calcSource != Tick"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"210"}),(0,r.jsx)(t.td,{children:"netTimestamp"}),(0,r.jsx)(t.td,{children:"long"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"SR timestamp @ base data publish time"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"208"}),(0,r.jsx)(t.td,{children:"timestamp"}),(0,r.jsx)(t.td,{children:"DateTime"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"SR timestamp @ adj data computation time"})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,r.jsxs)(d.Z,{children:[(0,r.jsx)(l.Z,{value:"Python",label:"Python",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'LiveImpliedQuoteAdj'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n    # Required Parameters\n    \"apiKey\": API_KEY,\n    \"cmd\": 'getschema',\n    \"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,r.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=LiveImpliedQuoteAdj'\n\n"})})})]}),"\n",(0,r.jsx)(t.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,r.jsxs)(d.Z,{children:[(0,r.jsx)(l.Z,{value:"Python",label:"Python",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'LiveImpliedQuoteAdj\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'ticker|uprc|years|rate|sdiv|ddiv|obid|oask|obiv|oaiv|satm|smny|svol|sprc|smrk|veSlope|de|ga|th|ve|va|vo|ro|ph|deDecay|up50|dn50|up15|dn15|up06|dn08|synSpot|priceType|calcErr|calcSource|uPrcAdjResult|srcTimestamp|netTimestamp|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'calcErr:eq:ExampleString\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,r.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=LiveImpliedQuoteAdj' \\\n--data-urlencode 'view=ticker|uprc|years|rate|sdiv|ddiv|obid|oask|obiv|oaiv|satm|smny|svol|sprc|smrk|veSlope|de|ga|th|ve|va|vo|ro|ph|deDecay|up50|dn50|up15|dn15|up06|dn08|synSpot|priceType|calcErr|calcSource|uPrcAdjResult|srcTimestamp|netTimestamp|timestamp' \\\n--data-urlencode 'where=calcErr:eq:ExampleString'\n"})})})]}),"\n",(0,r.jsx)(t.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,r.jsxs)(d.Z,{children:[(0,r.jsx)(l.Z,{value:"Python",label:"Python",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'LiveImpliedQuoteAdj\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'ticker|uprc|years|rate|sdiv|ddiv|obid|oask|obiv|oaiv|satm|smny|svol|sprc|smrk|veSlope|de|ga|th|ve|va|vo|ro|ph|deDecay|up50|dn50|up15|dn15|up06|dn08|synSpot|priceType|calcErr|calcSource|uPrcAdjResult|srcTimestamp|netTimestamp|timestamp\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'calcErr:eq:ExampleString\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'ticker:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,r.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=LiveImpliedQuoteAdj' \\\n--data-urlencode 'view=ticker|uprc|years|rate|sdiv|ddiv|obid|oask|obiv|oaiv|satm|smny|svol|sprc|smrk|veSlope|de|ga|th|ve|va|vo|ro|ph|deDecay|up50|dn50|up15|dn15|up06|dn08|synSpot|priceType|calcErr|calcSource|uPrcAdjResult|srcTimestamp|netTimestamp|timestamp' \\\n--data-urlencode 'where=calcErr:eq:ExampleString' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=ticker:ASC'\n"})})})]}),"\n",(0,r.jsx)(t.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,r.jsxs)(d.Z,{children:[(0,r.jsx)(l.Z,{value:"Python",label:"Python",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'LiveImpliedQuoteAdj\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'ticker|uprc|years|rate|sdiv|ddiv|obid|oask|obiv|oaiv|satm|smny|svol|sprc|smrk|veSlope|de|ga|th|ve|va|vo|ro|ph|deDecay|up50|dn50|up15|dn15|up06|dn08|synSpot|priceType|calcErr|calcSource|uPrcAdjResult|srcTimestamp|netTimestamp|timestamp\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'priceType|calcSource|uPrcAdjResult\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'calcErr:eq:ExampleString\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getaggregate\',\n    "msgType": MSG_TYPE,\n    "measure": MEASURE,\n    "group": GROUP,\n    # Optional Parameters\n    "where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,r.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=LiveImpliedQuoteAdj' \\\n--data-urlencode 'measure=ticker|uprc|years|rate|sdiv|ddiv|obid|oask|obiv|oaiv|satm|smny|svol|sprc|smrk|veSlope|de|ga|th|ve|va|vo|ro|ph|deDecay|up50|dn50|up15|dn15|up06|dn08|synSpot|priceType|calcErr|calcSource|uPrcAdjResult|srcTimestamp|netTimestamp|timestamp' \\\n--data-urlencode 'group=priceType|calcSource|uPrcAdjResult' \\\n--data-urlencode 'where=calcErr:eq:ExampleString'\n"})})})]}),"\n",(0,r.jsx)(t.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,r.jsxs)(d.Z,{children:[(0,r.jsx)(l.Z,{value:"Python",label:"Python",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'LiveImpliedQuoteAdj\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'calcErr:eq:ExampleString\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,r.jsx)(l.Z,{value:"cUrl",label:"cUrl",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=LiveImpliedQuoteAdj' \\\n--data-urlencode 'where=calcErr:eq:ExampleString'\n"})})})]})]})}function p(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},9641:function(e,t,n){n.d(t,{Z:()=>i});var s=n("52676");n("75271");var r=n("54461");function i(e){let{children:t,hidden:n,className:i}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,r.Z)("tabItem_SSzl",i),hidden:n,children:t})}},71386:function(e,t,n){n.d(t,{Z:()=>g});var s=n("52676"),r=n("75271"),i=n("54461"),d=n("52289"),l=n("3225"),a=n("42834"),c=n("40578"),o=n("35834"),h=n("79616");function u(e){return r.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||r.isValidElement(e)&&function(e){let{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p(e){let{value:t,tabValues:n}=e;return n.some(e=>e.value===t)}var j=n("44537");function x(e){let{className:t,block:n,selectedValue:r,selectValue:l,tabValues:a}=e,c=[],{blockElementScrollPositionUntilNextRender:o}=(0,d.o5)(),h=e=>{let t=e.currentTarget,n=a[c.indexOf(t)].value;n!==r&&(o(t),l(n))},u=e=>{let t=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{let n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{let n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1]}}t?.focus()};return(0,s.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},t),children:a.map(e=>{let{value:t,label:n,attributes:d}=e;return(0,s.jsx)("li",{role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,ref:e=>c.push(e),onKeyDown:u,onClick:h,...d,className:(0,i.Z)("tabs__item","tabItem_aitt",d?.className,{"tabs__item--active":r===t}),children:n??t},t)})})}function m(e){let{lazy:t,children:n,selectedValue:d}=e,l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){let e=l.find(e=>e.props.value===d);return e?(0,r.cloneElement)(e,{className:(0,i.Z)("margin-top--md",e.props.className)}):null}return(0,s.jsx)("div",{className:"margin-top--md",children:l.map((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==d}))})}function v(e){let t=function(e){let{defaultValue:t,queryString:n=!1,groupId:s}=e,i=function(e){let{values:t,children:n}=e;return(0,r.useMemo)(()=>{let e=t??u(n).map(e=>{let{props:{value:t,label:n,attributes:s,default:r}}=e;return{value:t,label:n,attributes:s,default:r}});return!function(e){let t=(0,o.lx)(e,(e,t)=>e.value===t.value);if(t.length>0)throw Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[t,n])}(e),[d,j]=(0,r.useState)(()=>(function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}let s=n.find(e=>e.default)??n[0];if(!s)throw Error("Unexpected error: 0 tabValues");return s.value})({defaultValue:t,tabValues:i})),[x,m]=function(e){let{queryString:t=!1,groupId:n}=e,s=(0,l.k6)(),i=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,c._X)(i),(0,r.useCallback)(e=>{if(!i)return;let t=new URLSearchParams(s.location.search);t.set(i,e),s.replace({...s.location,search:t.toString()})},[i,s])]}({queryString:n,groupId:s}),[v,g]=function(e){let{groupId:t}=e,n=t?`docusaurus.tab.${t}`:null,[s,i]=(0,h.Nk)(n);return[s,(0,r.useCallback)(e=>{n&&i.set(e)},[n,i])]}({groupId:s}),y=(()=>{let e=x??v;return p({value:e,tabValues:i})?e:null})();return(0,a.Z)(()=>{y&&j(y)},[y]),{selectedValue:d,selectValue:(0,r.useCallback)(e=>{if(!p({value:e,tabValues:i}))throw Error(`Can't select invalid tab value=${e}`);j(e),m(e),g(e)},[m,g,i]),tabValues:i}}(e);return(0,s.jsxs)("div",{className:(0,i.Z)("tabs-container","tabList_ArS0"),children:[(0,s.jsx)(x,{...t,...e}),(0,s.jsx)(m,{...t,...e})]})}function g(e){let t=(0,j.Z)();return(0,s.jsx)(v,{...e,children:u(e.children)},String(t))}},91503:function(e,t,n){n.d(t,{Z:function(){return l},a:function(){return d}});var s=n(75271);let r={},i=s.createContext(r);function d(e){let t=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);