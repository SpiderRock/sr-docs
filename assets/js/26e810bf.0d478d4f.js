"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[38403],{33123:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>o,contentTitle:()=>d,default:()=>x,frontMatter:()=>a,metadata:()=>c,toc:()=>h});var s=t(74848),n=t(28453),i=t(11470),l=t(19365);const a={title:"RFQQuoteBroadcast"},d="Schema: RFQQuoteBroadcast (ID: 6225)",c={id:"MessageSchemas/Schema/Topics/tool-rows/RFQQuoteBroadcast",title:"RFQQuoteBroadcast",description:"Live spread quotes with SpiderRock markup details for equity and future option spreads.  Legs details are included in a packed field.  This table contains the most recent market for each spread.",source:"@site/docs/MessageSchemas/Schema/Topics/6120-tool-rows/RFQQuoteBroadcast.md",sourceDirName:"MessageSchemas/Schema/Topics/6120-tool-rows",slug:"/MessageSchemas/Schema/Topics/tool-rows/RFQQuoteBroadcast",permalink:"/docs/next/MessageSchemas/Schema/Topics/tool-rows/RFQQuoteBroadcast",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"RFQQuoteBroadcast"},sidebar:"messageSchemasSidebar",previous:{title:"6120-tool-rows",permalink:"/docs/next/MessageSchemas/Schema/Topics/tool-rows/"},next:{title:"6760-wts-trade-tool",permalink:"/docs/next/MessageSchemas/Schema/Topics/wts-trade-tool/"}},o={},h=[{value:"METADATA",id:"metadata",level:3},{value:"BODY",id:"body",level:3},{value:"REPEATING FIELDS",id:"repeating-fields",level:3},{value:"Get Schema API Call",id:"get-schema-api-call",level:3},{value:"Get Msg API Call",id:"get-msg-api-call",level:3},{value:"Get Msgs API Call",id:"get-msgs-api-call",level:3},{value:"Get Aggregate API Call",id:"get-aggregate-api-call",level:3},{value:"Get Count API Call",id:"get-count-api-call",level:3}];function u(e){const r={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.h1,{id:"schema-rfqquotebroadcast-id-6225",children:["Schema: RFQQuoteBroadcast ",(0,s.jsx)("span",{className:"small-text",children:"(ID: 6225)"})]}),"\n",(0,s.jsx)(r.p,{children:"Live spread quotes with SpiderRock markup details for equity and future option spreads.  Legs details are included in a packed field.  This table contains the most recent market for each spread."}),"\n",(0,s.jsx)(r.h3,{id:"metadata",children:"METADATA"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Attribute"}),(0,s.jsx)(r.th,{children:"Value"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Topic"}),(0,s.jsx)(r.td,{children:"6120-tool-rows"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"MLink Token"}),(0,s.jsx)(r.td,{children:"ClientLive"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SRSE Product"}),(0,s.jsx)(r.td,{children:"SRLive"})]})]})]}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Note:"})," The symbol ",(0,s.jsx)(r.code,{children:"="})," next to a field number indicates that it is a primary key."]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"body",children:"BODY"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"#"}),(0,s.jsx)(r.th,{children:"Field"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Comment"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"10="}),(0,s.jsx)(r.td,{children:"securityID"}),(0,s.jsx)(r.td,{children:"long"}),(0,s.jsx)(r.td,{children:"exchange spread ID (eg. CME ProductID or ISE SecurityID)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"11="}),(0,s.jsx)(r.td,{children:"exchSource"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/ExchSource",children:"enum : ExchSource"})}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"100"}),(0,s.jsx)(r.td,{children:"ticker"}),(0,s.jsx)(r.td,{children:"TickerKey"}),(0,s.jsx)(r.td,{children:"first ticker in leg list"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"103"}),(0,s.jsx)(r.td,{children:"securityDesc"}),(0,s.jsx)(r.td,{children:"text1"}),(0,s.jsx)(r.td,{children:"SR constructed;blank on broadcast (filled by tool or SRSE proxy)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"106"}),(0,s.jsx)(r.td,{children:"rfqSource"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/RFQSourceType",children:"flag : RFQSourceType"})}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"109"}),(0,s.jsx)(r.td,{children:"rfqStrategy"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/SpreadStrategy",children:"enum : SpreadStrategy"})}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"112"}),(0,s.jsx)(r.td,{children:"isCoveredStrategy"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"115"}),(0,s.jsx)(r.td,{children:"isTradeable"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/YesNo",children:"enum : YesNo"})}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"118"}),(0,s.jsx)(r.td,{children:"rfqBidPrice"}),(0,s.jsx)(r.td,{children:"double"}),(0,s.jsx)(r.td,{children:"best bid (buy) price for this RFQ/Spread book"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"121"}),(0,s.jsx)(r.td,{children:"rfqBidQuan"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"cumulative bid (buy) quantity"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"124"}),(0,s.jsx)(r.td,{children:"rfqAskPrice"}),(0,s.jsx)(r.td,{children:"double"}),(0,s.jsx)(r.td,{children:"best ask (sell) price for this RFQ/Spread book"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"127"}),(0,s.jsx)(r.td,{children:"rfqAskQuan"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"cumulative ask (sell) quantity"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"130"}),(0,s.jsx)(r.td,{children:"rfqPrtPrice"}),(0,s.jsx)(r.td,{children:"double"}),(0,s.jsx)(r.td,{children:"last print price for this RFQ/Spread"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"133"}),(0,s.jsx)(r.td,{children:"rfqPrtSize"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"last print size for this RFQ/Spread"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"136"}),(0,s.jsx)(r.td,{children:"rfqPrtVolume"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"total print volume (for session) for this RFQ/Spread"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"139"}),(0,s.jsx)(r.td,{children:"rfqPrtTime"}),(0,s.jsx)(r.td,{children:"long"}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"142"}),(0,s.jsx)(r.td,{children:"bidPrice"}),(0,s.jsx)(r.td,{children:"double"}),(0,s.jsx)(r.td,{children:"best bid (buy) price for this RFQ/Spread from individual legs"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"145"}),(0,s.jsx)(r.td,{children:"bidQuan"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"minimum bid (buy) quantity from individual legs"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"148"}),(0,s.jsx)(r.td,{children:"askPrice"}),(0,s.jsx)(r.td,{children:"double"}),(0,s.jsx)(r.td,{children:"best ask (sell) price for this RFQ/Spread from individual legs"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"151"}),(0,s.jsx)(r.td,{children:"askQuan"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"minimum ask (sell) quantity from individual legs"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"154"}),(0,s.jsx)(r.td,{children:"surfDelta"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"delta of all legs"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"157"}),(0,s.jsx)(r.td,{children:"surfVega"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"vega of all legs"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"160"}),(0,s.jsx)(r.td,{children:"surfPrice"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"surfPrice (SR mid-market) of all legs"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"163"}),(0,s.jsx)(r.td,{children:"theoPrice"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"theoPrice (if applicable) of all legs"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"166"}),(0,s.jsx)(r.td,{children:"theoPriceLo"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"theoPrice (if applicable) of all legs (best way)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"169"}),(0,s.jsx)(r.td,{children:"theoPriceHi"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"theoPrice (if applicable) of all legs (worst way)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"172"}),(0,s.jsx)(r.td,{children:"minUPrc"}),(0,s.jsx)(r.td,{children:"double"}),(0,s.jsx)(r.td,{children:"min uPrc of all option legs"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"175"}),(0,s.jsx)(r.td,{children:"maxUPrc"}),(0,s.jsx)(r.td,{children:"double"}),(0,s.jsx)(r.td,{children:"max uPrc of all option legs"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"178"}),(0,s.jsx)(r.td,{children:"minYears"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"min years of all option legs"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"181"}),(0,s.jsx)(r.td,{children:"maxYears"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{children:"max years of all option legs"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"184"}),(0,s.jsx)(r.td,{children:"legSecTypes"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/LegSecType",children:"flag : LegSecType"})}),(0,s.jsx)(r.td,{children:"multi value"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"187"}),(0,s.jsx)(r.td,{children:"exchange"}),(0,s.jsx)(r.td,{children:"string(8)"}),(0,s.jsx)(r.td,{children:"comma separated list"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"190"}),(0,s.jsx)(r.td,{children:"grpNum"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{children:"industry group number (equities only)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"193"}),(0,s.jsx)(r.td,{children:"sector"}),(0,s.jsx)(r.td,{children:"string(16)"}),(0,s.jsx)(r.td,{children:"user defined sector code (if any)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"196"}),(0,s.jsx)(r.td,{children:"riskClass"}),(0,s.jsx)(r.td,{children:"string(8)"}),(0,s.jsx)(r.td,{children:"risk class letter code"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"199"}),(0,s.jsx)(r.td,{children:"optStatus"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/OptStatus",children:"enum : OptStatus"})}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"202"}),(0,s.jsx)(r.td,{children:"posVega"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"205"}),(0,s.jsx)(r.td,{children:"posGamma"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"208"}),(0,s.jsx)(r.td,{children:"posTheta"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"211"}),(0,s.jsx)(r.td,{children:"posDelta"}),(0,s.jsx)(r.td,{children:"float"}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"214"}),(0,s.jsx)(r.td,{children:"netTimestamp"}),(0,s.jsx)(r.td,{children:"long"}),(0,s.jsx)(r.td,{children:"PTP timestamp of most recent message update"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"217"}),(0,s.jsx)(r.td,{children:"filterId"}),(0,s.jsx)(r.td,{children:"long"}),(0,s.jsx)(r.td,{children:"used by tool/toolServer session to multiplex filters"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"220"}),(0,s.jsx)(r.td,{children:"numLegs"}),(0,s.jsx)(r.td,{children:"int"}),(0,s.jsx)(r.td,{})]})]})]}),"\n",(0,s.jsx)(r.h3,{id:"repeating-fields",children:"REPEATING FIELDS"}),"\n",(0,s.jsx)(r.p,{children:"QuoteLegs"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Field"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Comment"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"226"}),(0,s.jsx)(r.td,{children:"legKey"}),(0,s.jsx)(r.td,{children:"OptionKey"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"229"}),(0,s.jsx)(r.td,{children:"legKeyType"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/LegKeyType",children:"enum : LegKeyType"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"232"}),(0,s.jsx)(r.td,{children:"legSecurityID"}),(0,s.jsx)(r.td,{children:"long"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"235"}),(0,s.jsx)(r.td,{children:"legParentSecID"}),(0,s.jsx)(r.td,{children:"long"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"238"}),(0,s.jsx)(r.td,{children:"legSecurityDesc"}),(0,s.jsx)(r.td,{children:"string(20)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"241"}),(0,s.jsx)(r.td,{children:"legRatio"}),(0,s.jsx)(r.td,{children:"ushort"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"244"}),(0,s.jsx)(r.td,{children:"legSide"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../../../Enums/BuySell",children:"enum : BuySell"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"247"}),(0,s.jsx)(r.td,{children:"legBidPrice"}),(0,s.jsx)(r.td,{children:"double"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"250"}),(0,s.jsx)(r.td,{children:"legBidSize"}),(0,s.jsx)(r.td,{children:"int"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"253"}),(0,s.jsx)(r.td,{children:"legAskPrice"}),(0,s.jsx)(r.td,{children:"double"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"256"}),(0,s.jsx)(r.td,{children:"legAskSize"}),(0,s.jsx)(r.td,{children:"int"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"259"}),(0,s.jsx)(r.td,{children:"legYears"}),(0,s.jsx)(r.td,{children:"float"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"262"}),(0,s.jsx)(r.td,{children:"legUPrc"}),(0,s.jsx)(r.td,{children:"double"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"265"}),(0,s.jsx)(r.td,{children:"legOptMult"}),(0,s.jsx)(r.td,{children:"float"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"268"}),(0,s.jsx)(r.td,{children:"legFutMult"}),(0,s.jsx)(r.td,{children:"float"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"271"}),(0,s.jsx)(r.td,{children:"legSurfVol"}),(0,s.jsx)(r.td,{children:"float"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"274"}),(0,s.jsx)(r.td,{children:"legSurfDe"}),(0,s.jsx)(r.td,{children:"float"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"277"}),(0,s.jsx)(r.td,{children:"legSurfVe"}),(0,s.jsx)(r.td,{children:"float"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"280"}),(0,s.jsx)(r.td,{children:"legSurfPrice"}),(0,s.jsx)(r.td,{children:"float"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"283"}),(0,s.jsx)(r.td,{children:"legTheoPrice"}),(0,s.jsx)(r.td,{children:"float"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"286"}),(0,s.jsx)(r.td,{children:"legTheoPrcB"}),(0,s.jsx)(r.td,{children:"float"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"289"}),(0,s.jsx)(r.td,{children:"legTheoPrcS"}),(0,s.jsx)(r.td,{children:"float"})]})]})]}),"\n",(0,s.jsx)(r.h3,{id:"get-schema-api-call",children:"Get Schema API Call"}),"\n",(0,s.jsxs)(i.A,{children:[(0,s.jsx)(l.A,{value:"Python",label:"Python",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:"import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json'\n\n# Replace with your MLINK API Key\nAPI_KEY = 'XXXX-XXXX-XXXX-XXXX'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = 'RFQQuoteBroadcast'\n\n# Request Parameters for Get Schema Of The MsgType\nparams = {\n    # Required Parameters\n    \"apiKey\": API_KEY,\n    \"cmd\": 'getschema',\n    \"msgType\": MSG_TYPE, \n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n"})})}),(0,s.jsx)(l.A,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"\ncurl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getschema' \\\n--data-urlencode 'msgType=RFQQuoteBroadcast'\n\n"})})})]}),"\n",(0,s.jsx)(r.h3,{id:"get-msg-api-call",children:"Get Msg API Call"}),"\n",(0,s.jsxs)(i.A,{children:[(0,s.jsx)(l.A,{value:"Python",label:"Python",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'RFQQuoteBroadcast\'\n\n# Replace with your pkey value for getting the specific message desired\nPKEY = \'ReplaceThisValueForTheQueryToWork\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned. \nVIEW = \'ticker|securityDesc|rfqSource|rfqStrategy|isCoveredStrategy|isTradeable|rfqBidPrice|rfqBidQuan|rfqAskPrice|rfqAskQuan|rfqPrtPrice|rfqPrtSize|rfqPrtVolume|rfqPrtTime|bidPrice|bidQuan|askPrice|askQuan|surfDelta|surfVega|surfPrice|theoPrice|theoPriceLo|theoPriceHi|minUPrc|maxUPrc|minYears|maxYears|legSecTypes|exchange|grpNum|sector|riskClass|optStatus|posVega|posGamma|posTheta|posDelta|netTimestamp|filterId|numLegs\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:valuse" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'exchange:eq:ExampleString\'\n\n# Request Parameters for getmsg Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsg\',\n    "pkey": PKEY,\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(l.A,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsg' \\\n--data-urlencode 'pkey=ReplaceThisValueForTheQueryToWork' \\\n--data-urlencode 'msgType=RFQQuoteBroadcast' \\\n--data-urlencode 'view=ticker|securityDesc|rfqSource|rfqStrategy|isCoveredStrategy|isTradeable|rfqBidPrice|rfqBidQuan|rfqAskPrice|rfqAskQuan|rfqPrtPrice|rfqPrtSize|rfqPrtVolume|rfqPrtTime|bidPrice|bidQuan|askPrice|askQuan|surfDelta|surfVega|surfPrice|theoPrice|theoPriceLo|theoPriceHi|minUPrc|maxUPrc|minYears|maxYears|legSecTypes|exchange|grpNum|sector|riskClass|optStatus|posVega|posGamma|posTheta|posDelta|netTimestamp|filterId|numLegs' \\\n--data-urlencode 'where=exchange:eq:ExampleString'\n"})})})]}),"\n",(0,s.jsx)(r.h3,{id:"get-msgs-api-call",children:"Get Msgs API Call"}),"\n",(0,s.jsxs)(i.A,{children:[(0,s.jsx)(l.A,{value:"Python",label:"Python",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'RFQQuoteBroadcast\'\n\n# Replace with your desired view. A "|" separated list of views can be provided\n# If no view is provided, all views will be returned\nVIEW = \'ticker|securityDesc|rfqSource|rfqStrategy|isCoveredStrategy|isTradeable|rfqBidPrice|rfqBidQuan|rfqAskPrice|rfqAskQuan|rfqPrtPrice|rfqPrtSize|rfqPrtVolume|rfqPrtTime|bidPrice|bidQuan|askPrice|askQuan|surfDelta|surfVega|surfPrice|theoPrice|theoPriceLo|theoPriceHi|minUPrc|maxUPrc|minYears|maxYears|legSecTypes|exchange|grpNum|sector|riskClass|optStatus|posVega|posGamma|posTheta|posDelta|netTimestamp|filterId|numLegs\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'exchange:eq:ExampleString\'\n\n# Replace with your desired limit of how many messages you receive. The default limit is 500\nLIMIT = 500\n\n# Order clause eg. "(field1:DESC | field1:ASC | field2:DESC:ABS | field2:ASC:ABS" (default is unordered; default is faster)\nORDER = \'ticker:ASC\'\n\n# Request Parameters for getmsgs Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getmsgs\',\n    "msgType": MSG_TYPE,\n    # Optional Parameters\n    "view": VIEW, \n    "where": WHERE,\n    "limit": LIMIT,\n    "order": ORDER\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(l.A,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getmsgs' \\\n--data-urlencode 'msgType=RFQQuoteBroadcast' \\\n--data-urlencode 'view=ticker|securityDesc|rfqSource|rfqStrategy|isCoveredStrategy|isTradeable|rfqBidPrice|rfqBidQuan|rfqAskPrice|rfqAskQuan|rfqPrtPrice|rfqPrtSize|rfqPrtVolume|rfqPrtTime|bidPrice|bidQuan|askPrice|askQuan|surfDelta|surfVega|surfPrice|theoPrice|theoPriceLo|theoPriceHi|minUPrc|maxUPrc|minYears|maxYears|legSecTypes|exchange|grpNum|sector|riskClass|optStatus|posVega|posGamma|posTheta|posDelta|netTimestamp|filterId|numLegs' \\\n--data-urlencode 'where=exchange:eq:ExampleString' \\\n--data-urlencode 'limit=500' \\\n--data-urlencode 'order=ticker:ASC'\n"})})})]}),"\n",(0,s.jsx)(r.h3,{id:"get-aggregate-api-call",children:"Get Aggregate API Call"}),"\n",(0,s.jsxs)(i.A,{children:[(0,s.jsx)(l.A,{value:"Python",label:"Python",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'RFQQuoteBroadcast\'\n\n# Replace with fields you want to see aggregate values for. A "|" separated list of measures should be provided\nMEASURE = \'ticker|securityDesc|rfqSource|rfqStrategy|isCoveredStrategy|isTradeable|rfqBidPrice|rfqBidQuan|rfqAskPrice|rfqAskQuan|rfqPrtPrice|rfqPrtSize|rfqPrtVolume|rfqPrtTime|bidPrice|bidQuan|askPrice|askQuan|surfDelta|surfVega|surfPrice|theoPrice|theoPriceLo|theoPriceHi|minUPrc|maxUPrc|minYears|maxYears|legSecTypes|exchange|grpNum|sector|riskClass|optStatus|posVega|posGamma|posTheta|posDelta|netTimestamp|filterId|numLegs\'\n\n# Replace with fields you want to see aggregated. A "|" separated list of fields should be provided\nGROUP = \'rfqStrategy|isCoveredStrategy|isTradeable|optStatus\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'exchange:eq:ExampleString\'\n\n# Request Parameters for getaggregate Of The MsgType\nparams = {\n    # Required Parameters\n    "apiKey": API_KEY,\n    "cmd": \'getaggregate\',\n    "msgType": MSG_TYPE,\n    "measure": MEASURE,\n    "group": GROUP,\n    # Optional Parameters\n    "where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(l.A,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getaggregate' \\\n--data-urlencode 'msgType=RFQQuoteBroadcast' \\\n--data-urlencode 'measure=ticker|securityDesc|rfqSource|rfqStrategy|isCoveredStrategy|isTradeable|rfqBidPrice|rfqBidQuan|rfqAskPrice|rfqAskQuan|rfqPrtPrice|rfqPrtSize|rfqPrtVolume|rfqPrtTime|bidPrice|bidQuan|askPrice|askQuan|surfDelta|surfVega|surfPrice|theoPrice|theoPriceLo|theoPriceHi|minUPrc|maxUPrc|minYears|maxYears|legSecTypes|exchange|grpNum|sector|riskClass|optStatus|posVega|posGamma|posTheta|posDelta|netTimestamp|filterId|numLegs' \\\n--data-urlencode 'group=rfqStrategy|isCoveredStrategy|isTradeable|optStatus' \\\n--data-urlencode 'where=exchange:eq:ExampleString'\n"})})})]}),"\n",(0,s.jsx)(r.h3,{id:"get-count-api-call",children:"Get Count API Call"}),"\n",(0,s.jsxs)(i.A,{children:[(0,s.jsx)(l.A,{value:"Python",label:"Python",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:'import requests \n\n# Replace with your desired MLINK URL \nMLINK_PROD_URL = \'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json\'\n\n# Replace with your MLINK API Key\nAPI_KEY = \'XXXX-XXXX-XXXX-XXXX\'\n\n# Replace with your desired MsgType.  \nMSG_TYPE = \'RFQQuoteBroadcast\'\n\n# Replace with your desired where clause.\n# a string in the form "field1:eq:value" or "(field1:ne:value1 & field1:ne:value2)\n# "WHERE" clauses can contain the following comparison symbols:\n# :gt: is greater than\n# :ge: is greater than or equal to\n# :lt: is less than\n# :le: is less than or equal to\n# :eq: is equal\n# :ne: is not equal\n# %26 is an AND statement\n# | is an OR statement\n# :sw: is starts with\n# :ew: is ends with\n# :cv: is contains values\n# :nv: is does not contain value\n# :cb: is contained between (two dates for instance) separated by \'$\'\nWHERE = \'exchange:eq:ExampleString\'\n\n# Request Parameters for getCount Of The MsgType\nparams = {\n# Required Parameters\n"apiKey": API_KEY,\n"cmd": \'getcount\',\n"msgType": MSG_TYPE,\n# Optional Parameters\n"where": WHERE,\n}\n\nresponse = requests.get(MLINK_PROD_URL, params=params)\n'})})}),(0,s.jsx)(l.A,{value:"cUrl",label:"cUrl",children:(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"curl -G 'https://mlink-live.nms.saturn.spiderrockconnect.com/rest/json' \\\n--data-urlencode 'apiKey=XXXX-XXXX-XXXX-XXXX' \\\n--data-urlencode 'cmd=getcount' \\\n--data-urlencode 'msgType=RFQQuoteBroadcast' \\\n--data-urlencode 'where=exchange:eq:ExampleString'\n"})})})]})]})}function x(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},19365:(e,r,t)=>{t.d(r,{A:()=>l});t(96540);var s=t(34164);const n={tabItem:"tabItem_Ymn6"};var i=t(74848);function l(e){let{children:r,hidden:t,className:l}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,s.A)(n.tabItem,l),hidden:t,children:r})}},11470:(e,r,t)=>{t.d(r,{A:()=>X});var s=t(96540),n=t(34164),i=t(23104),l=t(56347),a=t(205),d=t(57485),c=t(31682),o=t(70679);function h(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:r,children:t}=e;return(0,s.useMemo)((()=>{const e=r??function(e){return h(e).map((e=>{let{props:{value:r,label:t,attributes:s,default:n}}=e;return{value:r,label:t,attributes:s,default:n}}))}(t);return function(e){const r=(0,c.X)(e,((e,r)=>e.value===r.value));if(r.length>0)throw new Error(`Docusaurus error: Duplicate values "${r.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[r,t])}function x(e){let{value:r,tabValues:t}=e;return t.some((e=>e.value===r))}function j(e){let{queryString:r=!1,groupId:t}=e;const n=(0,l.W6)(),i=function(e){let{queryString:r=!1,groupId:t}=e;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:r,groupId:t});return[(0,d.aZ)(i),(0,s.useCallback)((e=>{if(!i)return;const r=new URLSearchParams(n.location.search);r.set(i,e),n.replace({...n.location,search:r.toString()})}),[i,n])]}function m(e){const{defaultValue:r,queryString:t=!1,groupId:n}=e,i=u(e),[l,d]=(0,s.useState)((()=>function(e){let{defaultValue:r,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!x({value:r,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${r}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return r}const s=t.find((e=>e.default))??t[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:r,tabValues:i}))),[c,h]=j({queryString:t,groupId:n}),[m,p]=function(e){let{groupId:r}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(r),[n,i]=(0,o.Dv)(t);return[n,(0,s.useCallback)((e=>{t&&i.set(e)}),[t,i])]}({groupId:n}),g=(()=>{const e=c??m;return x({value:e,tabValues:i})?e:null})();(0,a.A)((()=>{g&&d(g)}),[g]);return{selectedValue:l,selectValue:(0,s.useCallback)((e=>{if(!x({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);d(e),h(e),p(e)}),[h,p,i]),tabValues:i}}var p=t(92303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=t(74848);function P(e){let{className:r,block:t,selectedValue:s,selectValue:l,tabValues:a}=e;const d=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.a_)(),o=e=>{const r=e.currentTarget,t=d.indexOf(r),n=a[t].value;n!==s&&(c(r),l(n))},h=e=>{let r=null;switch(e.key){case"Enter":o(e);break;case"ArrowRight":{const t=d.indexOf(e.currentTarget)+1;r=d[t]??d[0];break}case"ArrowLeft":{const t=d.indexOf(e.currentTarget)-1;r=d[t]??d[d.length-1];break}}r?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.A)("tabs",{"tabs--block":t},r),children:a.map((e=>{let{value:r,label:t,attributes:i}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:s===r?0:-1,"aria-selected":s===r,ref:e=>d.push(e),onKeyDown:h,onClick:o,...i,className:(0,n.A)("tabs__item",g.tabItem,i?.className,{"tabs__item--active":s===r}),children:t??r},r)}))})}function y(e){let{lazy:r,children:t,selectedValue:n}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(r){const e=i.find((e=>e.props.value===n));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:i.map(((e,r)=>(0,s.cloneElement)(e,{key:r,hidden:e.props.value!==n})))})}function b(e){const r=m(e);return(0,f.jsxs)("div",{className:(0,n.A)("tabs-container",g.tabList),children:[(0,f.jsx)(P,{...r,...e}),(0,f.jsx)(y,{...r,...e})]})}function X(e){const r=(0,p.A)();return(0,f.jsx)(b,{...e,children:h(e.children)},String(r))}},28453:(e,r,t)=>{t.d(r,{R:()=>l,x:()=>a});var s=t(96540);const n={},i=s.createContext(n);function l(e){const r=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),s.createElement(i.Provider,{value:r},e.children)}}}]);